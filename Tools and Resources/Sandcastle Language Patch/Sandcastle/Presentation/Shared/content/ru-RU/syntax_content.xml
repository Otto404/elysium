<?xml version="1.0" encoding="utf-8"?>
<content xml:space="preserve">

  <!-- Language independent -->
  <item id="UnsupportedVarargs">не поддерживает методы, использующие аргументы переменной длины (varargs).
Компилятор автоматически перенаправляет вызовы этого метода в такой же метод, использующий массив параметров.</item>

  <!-- C# messages -->
  <item id="UnsupportedOperator_CSharp">C# не поддерживает этот оператор.</item>
  <item id="UnsupportedVarargs_CSharp">C# <include item="UnsupportedVarargs" /></item>

  <!-- C++ messages -->
  <item id="UnsupportedOperator_ManagedCPlusPlus">Visual C++ не поддерживает этот оператор.</item>

  <!-- F# messages -->
  <item id="UnsupportedUnsafe_FSharp">F# не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedOperator_FSharp">F# не поддерживает этот оператор.</item>
  <item id="UnsupportedCast_FSharp">F# не поддерживает объявление новых операторов приведения.</item>
  <item id="UnsupportedVarargs_FSharp">F# <include item="UnsupportedVarargs" /></item>

  <!-- VB messages -->
  <item id="UnsupportedUnsafe_VisualBasic">Visual Basic не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedOperator_VisualBasic">Visual Basic не поддерживает этот оператор.</item>
  <item id="UnsupportedStaticClass_VisualBasic">Visual Basic не поддерживает объявление статических классов.</item>
  <item id="UnsupportedVarargs_VisualBasic">Visual Basic <include item="UnsupportedVarargs" /></item>
  <item id="UnsupportedVarargs_VisualBasicUsage">Visual Basic <include item="UnsupportedVarargs" /></item>
  
  <!-- J# messages -->
  <item id="UnsupportedUnsafe_JSharp">J# не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedGeneric_JSharp">J# позволяет использовать универсальные шаблоны (generics), но не позволяет объявлять новые.</item>
  <item id="UnsupportedOperator_JSharp">J# не поддерживает перегрузку операторов.</item>
  <item id="UnsupportedStaticConstructor_JSharp">J# не поддерживает статические конструкторы.</item>
  <item id="UnsupportedExplicit_JSharp">J# позволяет использовать явные реализации интерфейсов, но не позволяет объявлять новые.</item>
  
  <!-- JScript messages -->
  <item id="UnsupportedUnsafe_JScript">JScript не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedGeneric_JScript">JScript не поддерживает универсальные шаблоны (generics) для типов и методов.</item>
  <item id="UnsupportedExplicit_Jscript">JScript не поддерживает явные реализации интерфесов.</item>
  <item id="UnsupportedOperator_JScript">JScript не поддерживает перегрузку операторов.</item>
  <item id="UnsupportedEvent_JScript">JScript не поддерживает события.</item>
  <item id="UnsupportedDelegate_JScript">JScript не поддерживает делегаты.</item>
  <item id="UnsupportedStructure_JScript">JScript позволяет использовать структуры, но не позволяет объявлять новые.</item>
  <item id="UnsupportedIndex_JScript">JScript не поддерживает индексированные свойства.</item>
  <item id="UnsupportedCast_JScript">JScript не поддерживает объявление новых операторов приведения.</item>
  <item id="UnsupportedStaticConstructor_JScript">JScript не поддерживает статические конструкторы.</item>
  <item id="UnsupportedVarargs_JScript">JScript <include item="UnsupportedVarargs" /></item>
  
  <!-- JavaScript(Script#) messages-->
  <item id="UnsupportedType_ScriptSharp">Этот тип относится к Script# инфраструктуре и не может быть использован непосредственно в JavaScript.</item>
  <item id="UnsupportedUnsafe_JavaScript">JavaScript не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedGeneric_JavaScript">JavaScript не поддерживает универсальные шаблоны (generics) для типов и методов.</item>
  <item id="UnsupportedExplicit_JavaScript">JavaScript не поддерживает явные реализации интерфесов.</item>
  <item id="UnsupportedOperator_JavaScript">JavaScript не поддерживает перегрузку операторов.</item>
  <item id="UnsupportedStructure_JavaScript">JavaScript позволяет использовать структуры, но не позволяет объявлять новые.</item>
  <item id="UnsupportedIndex_JavaScript">JavaScript не поддерживает индексированные свойства.</item>
  <item id="UnsupportedCast_JavaScript">JavaScript не поддерживает объявление новых операторов приведения.</item>
  <!-- VB usages message -->
  <item id="UnsupportedUnsafe_VisualBasicUsage">Visual Basic не поддерживает вызов кода, который принимает или возвращает небезопасные типы.</item>
  <item id="UnsupportedOperator_VisualBasicUsage">Visual Basic не поддерживает этот оператор.</item>
  <item id="UnsupportedStaticClass_VisualBasicUsage">Вам не нужно создавать экземпляр статического класса для доступа к его членам.</item>
 
      <!-- XAML Syntax Boilerplate -->
  <item id="classXamlSyntax_abstract">Этот класс является абстрактным; сведения о производных неабстрактных классах, используемых в языке XAML см. в <a href="#familyToggle" onclick="OpenSection(familyToggle)"><include item="familyTitle"/></a>.</item>
  <item id="classXamlSyntax_excludedSubClass">Этот управляемый класс обычно не используется в XAML.</item>
  <item id="classXamlSyntax_noDefaultCtor">Вы не можете непосредственно создать экземпляр этого класса в XAML.</item>
  <item id="classXamlSyntax_noDefaultCtorWithTypeConverter"></item>  <!-- this item intentionally empty, per spec -->

  <item id="structXamlSyntax_nonXaml">Вы не можете использовать эту управляемую структуру в XAML.</item>
  <item id="structXamlSyntax_attributeUsage"></item>  <!-- this item intentionally empty, per spec -->

  <item id="eventXamlSyntax_parentIsExcludedSubClass">Члены этого класса или обычно не используются в XAML, или не могут быть использованы в XAML.</item>
  <item id="eventXamlSyntax_noXamlSyntaxForInterfaceMembers">Вы не можете использовать это событие в XAML.</item>
  <item id="eventXamlSyntax_nonXamlParent">Вы не можете использовать это событие в XAML.</item>
  <item id="eventXamlSyntax_notPublic">Вы не можете использовать это событие в XAML.</item>
  <item id="eventXamlSyntax_abstract">Вы не можете использовать это событие в XAML.</item>
  <item id="eventXamlSyntax_nonXaml">Вы не можете использовать это событие в XAML.</item>  <!-- this id is not currently output by SyntaxBuilder -->

  <item id="propertyXamlSyntax_parentIsExcludedSubClass">Члены этого класса или обычно не используются в XAML, или не могут быть использованы в XAML.</item>
  <item id="propertyXamlSyntax_noXamlSyntaxForInterfaceMembers">Вы не можете установить значения для этого свойства в XAML.</item>
  <item id="propertyXamlSyntax_nonXamlParent">Вы не можете установить значения для этого свойства в XAML.</item>
  <item id="propertyXamlSyntax_notPublic">Вы не можете установить значения для этого свойства в XAML.</item>
  <item id="propertyXamlSyntax_abstract">Вы не можете установить значения для этого свойства в XAML.</item>
  <item id="propertyXamlSyntax_readOnly">Вы не можете установить значения для этого свойства в XAML.</item>
  <item id="propertyXamlSyntax_abstractType">Для получения информации об использовании в XAML см. тип {0}.</item>
  <item id="propertyXamlSyntax_nonXaml">Вы не можете установить значения для этого свойства в XAML.</item>

  <!-- syntax used with all enums in xaml assemblies -->
  <item id="enumerationOverviewXamlSyntax"><span>&lt;<i>свойство объекта</i>="<i>одно_из_значений_перечисления</i>" .../&gt;</span></item>

  <!-- boilerplate used with all method, field, etc. in xaml assemblies -->
  <item id="constructorOverviewXamlSyntax">Вы не можете использовать конструкторы в XAML.</item>
  <item id="methodOverviewXamlSyntax">Вы не можете использовать методы в XAML.</item>
  <item id="fieldOverviewXamlSyntax">Вы не можете использовать поля в XAML.</item>
  <item id="delegateOverviewXamlSyntax">В XAML, вы можете использовать существующие делегаты, но не можете объявлять новые.</item>
  <item id="interfaceOverviewXamlSyntax">Интерфейсы не могут быть непосредственно использованы в XAML; см. типы, реализующие этот интерфейс.</item>

  <!-- boilerplate used with all types and members in all non-xaml assemblies -->
  <item id="nonXamlAssemblyBoilerplate">Не применимо.</item>

  <!-- XAML Section Headings -->
  <item id="xamlAttributeUsageHeading">Использование атрибута в XAML</item>
  <item id="xamlObjectElementUsageHeading">Использование элемента объекта в XAML</item>
  <item id="xamlImplicitCollectionUsageHeading">Неявное использование коллекции в XAML</item>
  <item id="xamlPropertyElementUsageHeading">Использование элемента свойства в XAML</item>
  <item id="xamlContentElementUsageHeading">Использование элемента контента в XAML</item>
  <item id="xamlValuesSectionHeading">Значение в XAML</item>
  <item id="xamlSyntaxBoilerplateHeading">XAML</item>
  
</content>