<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Composition</name>
  </assembly>
  <members>
    <member name="T:System.Lazy`2">
      <summary>Предоставляет неактивную косвенную ссылку на объект и связанные с ним метаданные для использования на платформе Managed Extensibility Framework.</summary>
      <typeparam name="T">Тип объекта, на который дается ссылка.</typeparam>
      <typeparam name="TMetadata">Тип метаданных.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и потокобезопасным значением, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="isThreadSafe">Указывает, будет ли создаваемый объект <see cref="T:System.Lazy`2" /> потокобезопасным.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и режимом синхронизации потоков, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="mode">Режим синхронизации потоков</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и потокобезопасным значением.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="isThreadSafe">Указывает, будет ли создаваемый объект <see cref="T:System.Lazy`2" /> потокобезопасным.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и режимом синхронизации потоков.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="mode">Режим синхронизации потоков.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>Получает метаданные, связанные с объектом, на который существует ссылка.</summary>
      <returns>Метаданные, связанные с объектом, на который существует ссылка.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.AttributedModelServices">
      <summary>Содержит вспомогательные методы для использования помеченной атрибутами модели программирования с композицией.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
      <summary>Создает часть из заданного значения и добавляет ее в указанный пакет с указанным именем контракта.</summary>
      <returns>Новая часть.</returns>
      <param name="batch">Пакет, в который добавляется часть.</param>
      <param name="contractName">Имя контракта экспорта.</param>
      <param name="exportedValue">Добавляемое значение.</param>
      <typeparam name="T">Тип новой части.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
      <summary>Создает часть из заданного значения и добавляет ее в указанный пакет.</summary>
      <returns>Новая часть.</returns>
      <param name="batch">Пакет, в который добавляется часть.</param>
      <param name="exportedValue">Добавляемое значение.</param>
      <typeparam name="T">Тип новой части.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
      <summary>Создает часть с поддержкой композиции из заданного объекта, помеченного атрибутами, и добавляет ее в указанный пакет композиции.</summary>
      <returns>Новая часть.</returns>
      <param name="batch">Пакет, в который добавляется часть.</param>
      <param name="attributedPart">Добавляемый объект.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
      <summary>Создает часть из заданного объекта в рамках указанного имени контракта и выполняет ее композицию в указанном контейнере композиции.</summary>
      <param name="container">Контейнер композиции, в котором следует выполнить композицию.</param>
      <param name="contractName">Имя контракта, в рамках которого экспортируется часть.</param>
      <param name="exportedValue">Значение, для которого выполняется композиция.</param>
      <typeparam name="T">Тип новой части.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
      <summary>Создает часть из заданного значения и выполняет ее композицию в указанном контейнере композиции.</summary>
      <param name="container">Контейнер композиции, в котором следует выполнить композицию.</param>
      <param name="exportedValue">Значение, для которого выполняется композиция.</param>
      <typeparam name="T">Тип новой части.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
      <summary>Создает части с поддержкой композиции из массива помеченных атрибутами объектов и выполняет их композицию в указанном контейнере композиции.</summary>
      <param name="container">Контейнер композиции, в котором следует выполнить композицию.</param>
      <param name="attributedParts">Массив помеченных атрибутами объектов для композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)">
      <summary>Создает часть с поддержкой композиции из помеченного атрибутами объекта.</summary>
      <returns>Созданная часть.</returns>
      <param name="attributedPart">Помеченный атрибутами объект.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Создает определение части с указанным типом и источником.</summary>
      <returns>Определение новой части.</returns>
      <param name="type">Тип определения.</param>
      <param name="origin">Источник определения.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)">
      <summary>Создает определение части с указанным типом и источником.</summary>
      <returns>Определение новой части.</returns>
      <param name="type">Тип определения.</param>
      <param name="origin">Источник определения.</param>
      <param name="ensureIsDiscoverable">Значение, указывающее, должно ли быть обнаруживаемым новое определение.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)">
      <summary>Получает каноническое имя контракта для заданного типа.</summary>
      <returns>Имя контракта, созданное на основе заданного типа.</returns>
      <param name="type">Используемый тип.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Получает объект представления метаданных из словаря или свободных метаданных.</summary>
      <returns>Представление метаданных, содержащее заданные метаданные.</returns>
      <param name="metadata">Коллекция свободных метаданных.</param>
      <typeparam name="TMetadataView">Тип получаемого объекта представления метаданных.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)">
      <summary>Получает уникальный идентификатор заданного метода.</summary>
      <returns>Уникальный идентификатор метода.</returns>
      <param name="method">Изучаемый метод.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)">
      <summary>Получает уникальный идентификатор заданного типа.</summary>
      <returns>Уникальный идентификатор типа.</returns>
      <param name="type">Изучаемый тип.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
      <summary>Выполняет композицию заданной части, используя указанную службу композиции, с выключенной рекомпозицией.</summary>
      <returns>Часть, для которой выполнена композиция.</returns>
      <param name="compositionService">Используемая служба композиции.</param>
      <param name="attributedPart">Часть, для которой выполняется композиция.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.ChangeRejectedException">
      <summary>Исключение, указывающее, был ли компонент отклонен в процессе композиции.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ChangeRejectedException" /> системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ChangeRejectedException" /> с помощью списка ошибок композиции. </summary>
      <param name="errors">Коллекция ошибок, возникших при композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ChangeRejectedException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ChangeRejectedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ChangeRejectedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.ChangeRejectedException.Message">
      <summary>Получает или задает сведение, связанное с отклонением компонента.</summary>
      <returns>Сведение, связанное с отклонением компонента.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.CompositionContractMismatchException">
      <summary>Исключение, создаваемое в случае невозможности приведения базового экспортированного объекта либо метаданных объекта <see cref="T:System.Lazy`1" /> или <see cref="T:System.Lazy`2" /> к типу T или TMetadataView соответственно.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionContractMismatchException" /> системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionContractMismatchException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionContractMismatchException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionContractMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionContractMismatchException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.CompositionError">
      <summary>Представляет ошибку, которая происходит во время композиции в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String)">
      <summary>Инициализирует новый экземпляра класса <see cref="T:System.ComponentModel.Composition.CompositionError" /> с использованием указанного сообщения об ошибке.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null для задания пустой строки ("") свойству <see cref="P:System.ComponentModel.Composition.CompositionError.Description" />.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionError" /> с использованием указанного сообщения об ошибке и элемента композиции, который стал причиной ошибки композиции.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null для задания пустой строки ("") свойству <see cref="P:System.ComponentModel.Composition.CompositionError.Description" />.</param>
      <param name="element">Элемент композиции, который стал причиной ошибки <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.CompositionError.Element" /> значение null.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionError" /> с использованием указанного сообщения об ошибке, элемента композиции и исключения, которые стали причиной ошибки композиции.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null для задания пустой строки ("") свойству <see cref="P:System.ComponentModel.Composition.CompositionError.Description" />.</param>
      <param name="element">Элемент композиции, который стал причиной ошибки <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.CompositionError.Element" /> значение null.</param>
      <param name="exception">Исключение <see cref="P:System.ComponentModel.Composition.CompositionError.Exception" />, являющееся исходной причиной ошибки <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.CompositionError.Exception" /> значение null.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionError.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionError" /> с использованием указанного сообщения об ошибке и исключения, которое стало причиной ошибки композиции.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null для задания пустой строки ("") свойству <see cref="P:System.ComponentModel.Composition.CompositionError.Description" />.</param>
      <param name="exception">Исключение <see cref="P:System.ComponentModel.Composition.CompositionError.Exception" />, являющееся исходной причиной ошибки <see cref="T:System.ComponentModel.Composition.CompositionError" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.CompositionError.Exception" /> значение null.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.CompositionError.Description">
      <summary>Получает описание ошибки композиции.</summary>
      <returns>Сообщение, описывающее ошибку <see cref="T:System.ComponentModel.Composition.CompositionError" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.CompositionError.Element">
      <summary>Получает элемент композиции, являющийся причиной ошибки.</summary>
      <returns>Элемент композиции, который стал причиной ошибки <see cref="T:System.ComponentModel.Composition.CompositionError" />.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.CompositionError.Exception">
      <summary>Получает исключение, которое является базовой причиной ошибки композиции.</summary>
      <returns>Исключение, являющееся базовой причиной исключения <see cref="T:System.ComponentModel.Composition.CompositionError" />.Значение по умолчанию — null.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionError.ToString">
      <summary>Возвращает строковое представление ошибки композиции.</summary>
      <returns>Строка, которая содержит свойство <see cref="P:System.ComponentModel.Composition.CompositionError.Description" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.CompositionException">
      <summary>Представляет исключение, которое создается при возникновении одной или нескольких ошибок во время композиции объекта <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionException" /> с указанной коллекцией ошибок композиции.</summary>
      <param name="errors">Коллекция объектов <see cref="T:System.ComponentModel.Composition.CompositionError" />, представляющая ошибки, которые произошли при композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляра класса <see cref="T:System.ComponentModel.Composition.CompositionException" /> с использованием указанного сообщения об ошибке.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionException" />, или null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.CompositionException" /> с использованием указанного сообщения об ошибке и исключения, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение, которое описывает объект <see cref="T:System.ComponentModel.Composition.CompositionException" />, или null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
      <param name="innerException">Исключение, являющееся исходной причиной исключения <see cref="T:System.ComponentModel.Composition.CompositionException" />, или null, чтобы задать для свойства <see cref="P:System.Exception.InnerException" /> значение null.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.CompositionException.Errors">
      <summary>Получает или задает коллекцию объектов <see cref="T:System.ComponentModel.Composition.CompositionError" />, описывающих ошибки, связанные с исключением <see cref="T:System.ComponentModel.Composition.CompositionException" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.CompositionError" />, описывающих ошибки, связанные с исключением <see cref="T:System.ComponentModel.Composition.CompositionException" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.CompositionException.Message">
      <summary>Получает сообщение, описывающее исключение.</summary>
      <returns> Сообщение, описывающее ошибку <see cref="T:System.ComponentModel.Composition.CompositionException" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.CreationPolicy">
      <summary>Задает параметры, добавляемые в объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />, который управляет созданием объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> нового экземпляра этой части.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.CreationPolicy.Any">
      <summary>Указывает, что объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> будет использоваться наиболее подходящая политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для части с учетом текущего контекста.Это политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> по умолчанию.По умолчанию объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> используется значение политики <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />, если частью <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> или импортером не запрашивается значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.CreationPolicy.Shared">
      <summary>Указывает, что объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> будет создан один общий экземпляр связанной части <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />, который будет совместно использоваться всеми инициаторами запросов.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.CreationPolicy.NonShared">
      <summary>Указывает, что новый, не являющийся общим экземпляр связанной части <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> будет создан объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> для каждого инициатора запроса.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.ExportAttribute">
      <summary>Указывает, что типом, свойством, полем или методом предоставляется определенный экспорт.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, экспортирующего тип или член, помеченный данным атрибутом, в рамках имени контракта по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, экспортирующего тип или член, помеченный данным атрибутом, в рамках заданного имени контракта.</summary>
      <param name="contractName">Имя контракта, используемое для экспорта типа или члена, помеченного данным атрибутом, либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, экспортирующего указанный тип в рамках заданного имени контракта.</summary>
      <param name="contractName">Имя контракта, используемое для экспорта типа или члена, помеченного данным атрибутом, либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <param name="contractType">Экспортируемый тип.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, экспортирующего тип или член, помеченный данным атрибутом, в рамках имени контракта, производного от заданного типа.</summary>
      <param name="contractType">Тип, от которого наследуется имя контракта, используемое для экспорта типа или члена, помеченного данным атрибутом, или значение null для использования имени контракта по умолчанию.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.ExportAttribute.ContractName">
      <summary>Получает имя контракта, используемое для экспорта типа или члена, помеченного данным атрибутом.</summary>
      <returns>Имя контракта, используемое для экспорта типа или члена, помеченного данным атрибутом.Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ExportAttribute.ContractType">
      <summary>Получает тип контракта, экспортируемый членом, к которому прикреплен данный атрибут.</summary>
      <returns>Тип предоставляемого экспорта.Значение по умолчанию — null, означающее, что тип будет получен путем определения типа члена, к которому прикреплен данный экспорт.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.ExportMetadataAttribute">
      <summary>Задает метаданные для типа, свойства, поля или метода, имеющего пометку <see cref="T:System.ComponentModel.Composition.ExportAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ExportMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ExportMetadataAttribute" /> с помощью указанного имени и значения метаданных.</summary>
      <param name="name">Строка, содержащая имя и значение метаданных, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name" /> пустую строку ("").</param>
      <param name="value">Объект, содержащий значение метаданных.Может принимать значение null.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.IsMultiple">
      <summary>Получает или задает значение, показывающее, был ли элемент помечен этим атрибутом более одного раза.</summary>
      <returns>Значение true, если элемент помечен более одного раза; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name">
      <summary>Получает имя значения метаданных.</summary>
      <returns> Строка, содержащая имя значения метаданных.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value">
      <summary>Получает значение метаданных.</summary>
      <returns> Объект, содержащий значение метаданных.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.ICompositionService">
      <summary>Предоставляет методы для объединения объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> в объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Выполняет композицию заданной части с выключенными рекомпозицией и проверкой.</summary>
      <param name="part">Часть, для которой выполняется композиция.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.ImportAttribute">
      <summary>Указывает, что свойством, полем или параметром импортируется определенный экспорт.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, импортирующий экспорт с именем контракта по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, импортирующий экспорт с заданным именем контракта.</summary>
      <param name="contractName">Имя контракта импортируемого экспорта либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, импортирующий экспорт с заданными именем и типом контракта.</summary>
      <param name="contractName">Имя контракта импортируемого экспорта либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <param name="contractType">Тип импортируемого экспорта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, импортирующий экспорт с именем контракта, производным от заданного типа.</summary>
      <param name="contractType">Тип, от которого наследуется имя контракта экспорта, либо значение null для использования имени контракта по умолчанию.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
      <summary>Получает или задает значение, указывающее, будет ли для типа свойства, поля или параметра установлено значение по умолчанию, если в контейнере отсутствует экспорт с данным именем контракта.</summary>
      <returns>Значение true, если типу свойства, поля или параметра присваивается значение по умолчанию в случае отсутствия экспорта с именем <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> в контейнере <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
      <summary>Получает или задает значение, указывающее, будет ли выполняться рекомпозиция свойства или поля при изменении в контейнере экспорта с соответствующим контрактом.</summary>
      <returns>Значение true, если свойство или поле позволяет выполнять рекомпозицию в случае добавления экспортов с соответствующим именем <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> в контейнер <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> или удаления их из этого контейнера; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
      <summary>Получает имя контракта импортируемого экспорта.</summary>
      <returns>Имя контракта импортируемого экспорта.Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportAttribute.ContractType">
      <summary>Получает тип импортируемого экспорта.</summary>
      <returns>Тип импортируемого экспорта.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
      <summary>Получает или задает значение, указывающее, что импортеру требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для экспортов, используемых для удовлетворения данного импорта. </summary>
      <returns>Одно из следующих значений:Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, если импортеру не требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.Это значение по умолчанию.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />, если необходимо, чтобы все используемые экспорты совместно использовались всеми частями в контейнере.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />, если необходимо не предоставлять общий доступ ко всем используемым экспортам в контейнере.В этом случае каждая часть получает свой собственный экземпляр.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
      <summary>Исключение, создаваемое в случае несовпадения количества элементов объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> с количеством элементов доступных объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, содержащихся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" /> системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий данные сериализованных объектов, относящиеся к исключению <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />. </param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">В <paramref name="info" /> отсутствует обязательное значение.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="info" /> содержит значение, которое нельзя привести к правильному типу.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение, которое описывает исключение <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" />, или значение null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportCardinalityMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.ImportingConstructorAttribute">
      <summary>Задает конкретный конструктор, который следует использовать при создании части с атрибутом.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportingConstructorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.ImportManyAttribute">
      <summary>Указывает, что свойством, полем или параметром импортируется определенный набор экспортов.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />, импортирующий набор экспортов с именем контракта по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />, импортирующий набор экспортов с заданным именем контракта.</summary>
      <param name="contractName">Имя контракта импортируемых экспортов либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />, импортирующий набор экспортов с заданными именем и типом контракта.</summary>
      <param name="contractName">Имя контракта импортируемых экспортов либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <param name="contractType">Тип импортируемого экспорта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />, импортирующий набор экспортов с именем контракта, производным от заданного типа.</summary>
      <param name="contractType">Тип, от которого наследуется имя контракта импортируемых экспортов, либо значение nullдля использования имени контракта по умолчанию.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition">
      <summary>Получает или задает значение, указывающее, будет ли заново компоноваться декорированное свойство или поле при изменении экспортов, предоставляющих соответствующий контракт.</summary>
      <returns>Значение true, если свойство или поле позволяет выполнять рекомпозицию в случае добавления экспортов, предоставляющих то же имя <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />, в контейнер <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> или удаления их из этого контейнера; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName">
      <summary>Получает имя контракта импортируемых экспортов.</summary>
      <returns>Имя контракта импортируемых экспортов.Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType">
      <summary>Получает тип контракта импортируемого экспорта.</summary>
      <returns>Тип экспорта, ожидаемый данным импортом.Значение по умолчанию — null, означающее, что тип будет получен путем определения типа члена, к которому прикреплен данный импорт.Если для типа установлено значение <see cref="T:System.Object" />, импорт будет соответствовать любому экспортируемому типу.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy">
      <summary>Получает или задает значение, указывающее, что импортеру требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для экспортов, используемых для удовлетворения данного импорта. </summary>
      <returns>Одно из следующих значений:Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, если импортеру не требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.Это значение по умолчанию.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />, если необходимо, чтобы все используемые экспорты совместно использовались всеми частями в контейнере.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />, если необходимо не предоставлять общий доступ ко всем используемым экспортам в контейнере.В этом случае каждая часть получает свой собственный экземпляр.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.InheritedExportAttribute">
      <summary>Указывает, что тип предоставляет определенный экспорт и подклассы этого типа также предоставляют данный экспорт.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.InheritedExportAttribute" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.InheritedExportAttribute" /> указанным именем контракта.</summary>
      <param name="contractName">Имя контракта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.InheritedExportAttribute" /> указанным именем и типом контракта.</summary>
      <param name="contractName">Имя контракта.</param>
      <param name="contractType">Тип контракта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.InheritedExportAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.InheritedExportAttribute" /> указанным типом контракта.</summary>
      <param name="contractType">Тип контракта.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.IPartImportsSatisfiedNotification">
      <summary>Позволяет уведомлять средства реализации об удовлетворении импортов части.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.IPartImportsSatisfiedNotification.OnImportsSatisfied">
      <summary>Вызывается, если импорты части удовлетворены и использование части безопасно.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.MetadataAttributeAttribute">
      <summary>Задает атрибут, с помощью которого можно определить метаданные для типа, свойства, поля или метода, имеющего пометку <see cref="T:System.ComponentModel.Composition.ExportAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.MetadataAttributeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.MetadataAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.PartCreationPolicyAttribute">
      <summary>Задает политику <see cref="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy" /> для указанного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.PartCreationPolicyAttribute.#ctor(System.ComponentModel.Composition.CreationPolicy)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.PartCreationPolicyAttribute" /> с использованием указанной политики создания.</summary>
      <param name="creationPolicy">Используемая политика создания.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy">
      <summary>Получает или задает значение, указывающее политику создания помеченной атрибутами части.</summary>
      <returns>Одно из значений <see cref="P:System.ComponentModel.Composition.PartCreationPolicyAttribute.CreationPolicy" />, указывающее политику создания помеченной атрибутами части.Значение по умолчанию — <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.PartMetadataAttribute">
      <summary>Задает метаданные для типа, который должен использоваться в качестве <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> и <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.PartMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.PartMetadataAttribute" /> с помощью указанного имени и значения метаданных.</summary>
      <param name="name">Строка, содержащая имя и значение метаданных, или null, чтобы использовать пустую строку ("").</param>
      <param name="value">Объект, содержащий значение метаданных.Может принимать значение null.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.PartMetadataAttribute.Name">
      <summary>Получает имя значения метаданных.</summary>
      <returns> Строка, содержащая имя значения метаданных.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.PartMetadataAttribute.Value">
      <summary>Получает значение метаданных.</summary>
      <returns> Объект, содержащий значение метаданных.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute">
      <summary>Помечает тип, который не будет определяться как <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> в каталоге <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.PartNotDiscoverableAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.PartNotDiscoverableAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <summary>Каталог, содержащий изменяемую коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /> указанными каталогами.</summary>
      <param name="catalogs">Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />, или значение null для создания пустого объекта <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="catalogs" /> содержит элемент, равный null.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /> указанными каталогами.</summary>
      <param name="catalogs">Массив объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, которые необходимо добавить в объект <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="catalogs" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="catalogs" /> содержит элемент, равный null.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
      <summary>Получает базовые каталоги объекта <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, являющихся базовыми для объекта <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /> был освобожден.</exception>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed">
      <summary>Происходит в результате изменения содержимого объекта <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing">
      <summary>Происходит при изменении содержимого объекта <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает определения экспортов, которые соответствуют ограничению, выраженному указанным определением.</summary>
      <returns>Коллекция объектов <see cref="T:System.Tuple`2" />, содержащих объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> и связанные с ними объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> для объектов, соответствующих ограничению, заданному параметром <paramref name="definition" />.</returns>
      <param name="definition">Условия, при которых возвращаются объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />, содержащий данные события. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />, содержащий данные события. </param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Parts">
      <summary>Получает определения частей, содержащиеся в каталоге.</summary>
      <returns>Объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащиеся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /> был удален.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <summary>Объединяет экспортируемые элементы, предоставляемые коллекцией объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />.</summary>
      <param name="providers">Список поставщиков экспорта с распределением приоритетов.Поставщики опрашиваются в том порядке, в котором они предоставляются.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />.</summary>
      <param name="providers">Список поставщиков экспорта с распределением приоритетов.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" /> (при необходимости освобождает и управляемые ресурсы). </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Получает все элементы экспорта, которые соответствуют заданным параметрам импорта.</summary>
      <returns>Коллекция, которая содержит все элементы экспорта, соответствующие заданному условию.</returns>
      <param name="definition">Условия, при которых возвращаются объекты <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Транзакционный контейнер для композиции.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers">
      <summary>Получает коллекцию, содержащую поставщики, объединяемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, объединяемых объектом <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" /> был освобожден.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <summary>Неизменяемый объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, созданный из сборки управляемого кода.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)">
      <summary>Инициализирует указанный экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> заданной сборкой.</summary>
      <param name="assembly">Сборка, содержащая помеченные атрибутами объекты <see cref="T:System.Type" />, предназначенные для добавления в объект <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> имеет значение null;— или —<paramref name="assembly" /> была загружена в контекст только для отражения.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> указанной базой кода.</summary>
      <param name="codeBase">Стока, которая указывает базу кода сборки, содержащей помеченные атрибутами объекты <see cref="T:System.Type" />, предназначенные для добавления в объект <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</param>
      <exception cref="T:System.BadImageFormatException">Сборка, определенная параметром <paramref name="codeBase" />, является недопустимой. — или —В настоящий момент загружена версия 2.0 общеязыковой среды выполнения, а параметр <paramref name="codeBase" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий объект не имеет разрешения на обнаружение пути. </exception>
      <exception cref="T:System.IO.FileLoadException">
        <paramref name="codeBase" /> не может быть загружен.— или —<paramref name="codeBase" /> определяет каталог.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeBase" /> имеет значение null;</exception>
      <exception cref="T:System.IO.FileNotFoundException">Параметр <paramref name="codeBase" /> не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeBase" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина указанного пути, имени файла или обоих параметров превышает установленное в системе максимальное значение. </exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly">
      <summary>Получает сборку, помеченные атрибутами типы которой содержатся в каталоге сборки.</summary>
      <returns>Сборку, помеченные атрибутами объекты <see cref="T:System.Type" /> которой содержатся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает коллекцию экспортов, которые соответствуют условиям, заданным определением импорта.</summary>
      <returns>Коллекция экспортов, которые соответствуют условиям, заданным параметром <paramref name="definition" />.</returns>
      <param name="definition">Условия, которые определяют соответствующие экспорты.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts">
      <summary>Получает определения частей, содержащиеся в каталоге сборки.</summary>
      <returns>Объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащиеся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> был освобожден.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <summary>Получает отображаемое имя объекта <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</summary>
      <returns>Строка, представляющая тип и сборку данного объекта <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <summary>Получает элемент композиции, от которого происходит данный элемент.</summary>
      <returns>Всегда значение null.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString">
      <summary>Получает строковое представление каталога сборки.</summary>
      <returns>Строковое представление каталога сборки.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <summary>Представляет отдельную операцию композиции для транзакционной композиции.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> заданным родительским объектом <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />.</summary>
      <param name="outerAtomicComposition">Родительский объект данной операции композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)">
      <summary>Добавляет действие, которое должно выполняться после успешного завершения общей операции композиции.</summary>
      <param name="completeAction">Выполняемое действие.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)">
      <summary>Добавляет действие, которое должно выполняться в случае неудачного завершения общей операции композиции.</summary>
      <param name="revertAction">Выполняемое действие.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete">
      <summary>Помечает данную операцию композиции как завершенную.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром объекта <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> и помечает данную операцию композиции как неудачно завершенную.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
      <summary>Сохраняет пару "ключ-значение" в транзакции для отслеживания неопределенного состояния.</summary>
      <param name="key">Сохраняемый ключ.</param>
      <param name="value">Сохраняемое значение.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
      <summary>Получает значение, сохраненное методом <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />, с возможностью не выполнять поиск в родительских транзакциях.</summary>
      <returns>Значение true, если значение было успешно извлечено; в противном случае — значение false.</returns>
      <param name="key">Ключ, из которого выполняется извлечение.</param>
      <param name="localAtomicCompositionOnly">Значение true для исключения родительских транзакций; в противном случае — значение false.</param>
      <param name="value">Извлекаемое значение.</param>
      <typeparam name="T">Тип извлекаемого значения.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
      <summary>Получает значение, сохраненное методом <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />.</summary>
      <returns>Значение true, если значение было успешно извлечено; в противном случае — значение false.</returns>
      <param name="key">Ключ, из которого выполняется извлечение.</param>
      <param name="value">Извлекаемое значение.</param>
      <typeparam name="T">Тип извлекаемого значения.</typeparam>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <summary>Предоставляет доступ ко всем объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, объявленным заданным каталогом.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> указанным каталогом.</summary>
      <param name="catalog">Каталог <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, используемый объектом <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> для создания объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="catalog" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> заданным каталогом и, при необходимости, потокобезопасным режимом. </summary>
      <param name="catalog">Каталог <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, используемый объектом <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> для создания объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="isThreadSafe">Значение true, если объект должен быть потокобезопасным; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="catalog" /> имеет значение null;</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog">
      <summary>Получает каталог, используемый для предоставления экспортов.</summary>
      <returns>Каталог, используемый объектом <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> для создания объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Возвращает все экспорты, которые соответствуют заданным условиям импорта.</summary>
      <returns>Коллекция, которая содержит все элементы экспорта, соответствующие заданному условию.</returns>
      <param name="definition">Условия, при которых возвращаются объекты <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null для отключения транзакционной композиции.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider">
      <summary>Получает или задает поставщик экспортов, который предоставляет доступ к дополнительным экспортам.</summary>
      <returns>Поставщик экспортов, который предоставляет объекту <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> доступ к дополнительным объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.Значение по умолчанию — null.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> был удален.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение null;</exception>
      <exception cref="T:System.InvalidOperationException">Это свойство уже задано.— или —К методам объекта <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> уже был получен доступ.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" /> заданными изменениями.</summary>
      <param name="addedDefinitions">Определения частей, добавленные в каталог.</param>
      <param name="removedDefinitions">Определения частей, удаленные из каталога.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null для отключения транзакционной композиции.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions">
      <summary>Получает коллекцию определений, добавленных в каталог <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> в ходе данного изменения.</summary>
      <returns>Коллекция определений, добавленных в каталог.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition">
      <summary>Получает транзакцию композиции для данного изменения.</summary>
      <returns>Транзакция композиции для данного изменения.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions">
      <summary>Получает коллекцию определений, удаленных из каталога <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> в ходе данного изменения.</summary>
      <returns>Коллекция определений, удаленных из каталога в ходе данного изменения.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <summary>Обеспечивает доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, предоставленным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />, при необходимости в потокобезопасном режиме. </summary>
      <param name="isThreadSafe">Значение true, если объект <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" /> должен быть потокобезопасным; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <summary>Выполняет композицию для указанного пакета.</summary>
      <param name="batch">Пакет, для которого выполняется композиция.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Получает коллекцию всех экспортов данного поставщика, которые соответствуют условиям указанного импорта.</summary>
      <returns>Коллекция всех экспортов данного поставщика, которые соответствуют заданным условиям.</returns>
      <param name="definition">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null для отключения транзакционной композиции.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider">
      <summary>Получает или задает поставщик экспортов, который предоставляет доступ к дополнительным объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</summary>
      <returns>Поставщик, который предоставляет объекту <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />. Значение по умолчанию — null.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" /> был удален.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение null;</exception>
      <exception cref="T:System.InvalidOperationException">Это свойство уже задано.— или —К методам <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" /> уже был получен доступ.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <summary>Представляет набор объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />, добавляемых в контейнер или удаляемых из контейнера.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> указанными частями для добавления или удаления.</summary>
      <param name="partsToAdd">Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> для добавления.</param>
      <param name="partsToRemove">Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partsToAdd" /> имеет значение null;— или —<paramref name="partsToRemove" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)">
      <summary>Добавляет указанный экспорт в объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />.</summary>
      <returns>Добавляемая часть.</returns>
      <param name="export">Экспорт, добавляемый в объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="export" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Добавляет указанную часть в объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />.</summary>
      <param name="part">Добавляемая часть.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="part" /> имеет значение null;</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd">
      <summary>Получает коллекцию добавляемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
      <returns>Коллекция добавляемых частей.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove">
      <summary>Получает коллекцию удаляемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
      <returns>Коллекция удаляемых частей.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Помещает указанную часть в список частей для удаления.</summary>
      <param name="part">Часть, предназначенная для удаления.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="part" /> имеет значение null;</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <summary>Содержит статические ключи метаданных, используемые системой композиции.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName">
      <summary>Указывает ключ метаданных, созданный системой композиции для пометки части уникальным идентификатором.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName">
      <summary>Указывает ключ метаданных, созданный системой композиции для пометки части политикой создания.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <summary>Служит репозиторием для объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> и предоставляет методы для композиции.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> указанными поставщиками экспортов.</summary>
      <param name="providers">Массив объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, которые предоставляют объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> пустую коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="providers" /> содержит элемент, равный null.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> указанными каталогом, потокобезопасным режимом и поставщиками экспортов. </summary>
      <param name="catalog">Каталог, предоставляющий объекты <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</param>
      <param name="isThreadSafe">Значение true, если данный объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> должен быть потокобезопасным; в противном случае — значение false.</param>
      <param name="providers">Массив объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, которые предоставляют объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> пустую коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> указанными каталогом и поставщиками экспортов.</summary>
      <param name="catalog">Каталог, предоставляющий объекты <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</param>
      <param name="providers">Массив объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, которые предоставляют объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> пустую коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="providers" /> содержит элемент, равный null.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
      <summary>Получает объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, который предоставляет контейнеру доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</summary>
      <returns>Каталог, который предоставляет объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> доступ к экспортам, созданным объектами <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.Значение по умолчанию — null.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <summary>Добавляет в контейнер или удаляет из контейнера части, содержащиеся в указанном объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />, и выполняет композицию.</summary>
      <param name="batch">Изменения объекта <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />, которые должны быть включены в композицию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Возвращает коллекцию всех экспортов, которые соответствуют условиям в указанном объекте <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
      <returns>Коллекция всех объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> в данном объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />, которые соответствуют условиям, заданным параметром <paramref name="definition" />.</returns>
      <param name="definition">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null для отключения транзакционной композиции.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
      <summary>Получает поставщики экспортов, которые предоставляют контейнеру доступ к дополнительным объектам <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, которые предоставляют объекту <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> доступ к дополнительным объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.По умолчанию задана пустая коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
      <summary>Освобождает указанный объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> из объекта <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />. </summary>
      <param name="export">Объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, который необходимо освободить.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="export" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
      <summary>Удаляет указанный экспорт из композиции и освобождает занятые им ресурсы, если это возможно.</summary>
      <param name="export">Косвенная ссылка на удаляемый экспорт.</param>
      <typeparam name="T">Тип экспорта.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
      <summary>Освобождает набор объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> из объекта <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />. </summary>
      <param name="exports">Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, которые необходимо освободить.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exports" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="exports" /> содержит элемент, равный null.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
      <summary>Удаляет коллекцию экспортов из композиции и освобождает занятые ими ресурсы, если это возможно.</summary>
      <param name="exports">Коллекция косвенных ссылок на удаляемые экспорты.</param>
      <typeparam name="T">Тип экспортов.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
      <summary>Удаляет коллекцию экспортов из композиции и освобождает занятые ими ресурсы, если это возможно.</summary>
      <param name="exports">Коллекция косвенных ссылок на удаляемые экспорты и их метаданные.</param>
      <typeparam name="T">Тип экспортов.</typeparam>
      <typeparam name="TMetadataView">Тип представления метаданных экспортов.</typeparam>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Удовлетворяет импорты указанного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> без его регистрации для рекомпозиции.</summary>
      <param name="part">Часть, импорты которой удовлетворяются.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="part" /> имеет значение null;</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <summary>Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, представляющий содержимое каталога.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> объектами <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, основанными на всех DLL-файлах, расположенных по указанному пути к каталогу.</summary>
      <param name="path">Путь к каталогу, в котором выполняется поиск сборок, добавляемых в каталог.Необходимо указать абсолютный путь или путь относительно каталога <see cref="P:System.AppDomain.BaseDirectory" />.</param>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый <paramref name="path" />.Например, он располагается на несопоставленном диске.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение null;</exception>
      <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> является строкой нулевой длины, содержит только пробелы или содержит один или несколько недопустимых в данной реализации символов.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный параметр <paramref name="path" />, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой.Например, для компьютеров на основе Windows длина пути не должна превышать 248 символов, а имен файлов не более 260 символов.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> объектами <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, основанными на заданном шаблоне поиска в каталоге, расположенном по указанному пути.</summary>
      <param name="path">Путь к каталогу, в котором выполняется поиск сборок, добавляемых в каталог.Необходимо указать абсолютный путь или путь относительно каталога <see cref="P:System.AppDomain.BaseDirectory" />.</param>
      <param name="searchPattern">Шаблон поиска.Формат этого шаблона должен совпадать с форматом, указанным для метода <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" />.</param>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый <paramref name="path" />.Например, он располагается на несопоставленном диске.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="path" /> равно null или <paramref name="searchPattern" /> равно null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> является строкой нулевой длины, содержит только пробелы или содержит один или несколько недопустимых в данной реализации символов.— или —<paramref name="searchPattern" /> не содержит допустимого шаблона.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный параметр <paramref name="path" />, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой.Например, для компьютеров на основе Windows длина пути не должна превышать 248 символов, а имен файлов не более 260 символов.</exception>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed">
      <summary>Происходит в результате изменения содержимого каталога.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing">
      <summary>Происходит при изменении каталога.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath">
      <summary>Получает преобразованный абсолютный путь, используемый объектом <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</summary>
      <returns>Преобразованный абсолютный путь, используемый каталогом.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает определения экспортов, которые соответствуют ограничению, выраженному указанным определением.</summary>
      <returns>Коллекция объектов <see cref="T:System.Tuple`2" />, содержащих объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> и связанные с ними объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> для объектов, соответствующих ограничению, заданному параметром <paramref name="definition" />.</returns>
      <param name="definition">Условия, при которых возвращаются объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles">
      <summary>Получает коллекцию файлов, которые в настоящий момент загружены в каталог.</summary>
      <returns>Коллекция файлов, которые в настоящий момент загружены в каталог.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />, содержащий данные, относящиеся к событию. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />, содержащий данные, относящиеся к событию.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts">
      <summary>Получает определения частей, содержащиеся в каталоге каталогов.</summary>
      <returns>Объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащиеся в каталоге <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> был освобожден.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path">
      <summary>Получает путь, используемый каталогом <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</summary>
      <returns>Путь, используемый каталогом.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh">
      <summary>Обновляет объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> последними файлами из каталога, соответствующими шаблону поиска. </summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный <paramref name="path" /> удален.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern">
      <summary>Получает шаблон поиска, переданный конструктору <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</summary>
      <returns>Шаблон поиска, используемый каталогом для поиска файлов.Значение по умолчанию — "*.dll".</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <summary>Получает отображаемое имя каталога каталогов.</summary>
      <returns>Строка, содержащая доступное для чтения отображаемое имя каталога <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <summary>Получает элемент композиции, от которого происходит данный каталог каталогов.</summary>
      <returns>Всегда значение null.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString">
      <summary>Получает строковое представление каталога каталогов.</summary>
      <returns>Строковое представление каталога.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <summary>Определяет абстрактный базовый класс для поставщиков экспортов, которые предоставляют методы для извлечения объектов <see cref="T:System.Lazy`1" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged">
      <summary>Происходит при изменении экспортов в объекте <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging">
      <summary>Происходит при изменении предоставленных экспортов.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1">
      <summary>Возвращает экспорт с именем контракта, производным от указанного параметра типа.В случае отсутствия ровно одного соответствующего экспорта создается исключение.</summary>
      <returns>Экспорт с именем контракта, производным от указанного параметра типа.</returns>
      <typeparam name="T">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`1" />.Имя контракта также является производным от этого параметра типа.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые объекты <see cref="T:System.Lazy`1" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько объектов <see cref="T:System.Lazy`1" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2">
      <summary>Возвращает экспорт с именем контракта, производным от указанного параметра типа.В случае отсутствия ровно одного соответствующего экспорта создается исключение.</summary>
      <returns>System.Lazy`2</returns>
      <typeparam name="T">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`2" />.Имя контракта также является производным от этого параметра типа.</typeparam>
      <typeparam name="TMetadataView">Тип представления метаданных возвращаемого объекта <see cref="T:System.Lazy`2" />.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые объекты <see cref="T:System.Lazy`2" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько объектов <see cref="T:System.Lazy`2" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)">
      <summary>Возвращает экспорт с указанным именем контракта.В случае отсутствия ровно одного соответствующего экспорта создается исключение.</summary>
      <returns>Экспорт с указанным именем контракта.</returns>
      <param name="contractName">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`2" /> либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`2" />.</typeparam>
      <typeparam name="TMetadataView">Тип представления метаданных возвращаемого объекта <see cref="T:System.Lazy`2" />.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые объекты <see cref="T:System.Lazy`2" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько объектов <see cref="T:System.Lazy`2" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)">
      <summary>Возвращает экспорт с указанным именем контракта.В случае отсутствия ровно одного соответствующего экспорта создается исключение.</summary>
      <returns>Экспорт с указанным именем контракта.</returns>
      <param name="contractName">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`1" /> либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`1" />.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые объекты <see cref="T:System.Lazy`1" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько объектов <see cref="T:System.Lazy`1" /> с именем контракта, производным от <paramref name="T" /> в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1">
      <summary>Возвращает экспортированный объект с именем контракта, производным от указанного параметра типа.В случае отсутствия ровно одного соответствующего экспортированного объекта создается исключение.</summary>
      <returns>Экспортированный объект с именем контракта, производным от указанного параметра типа.</returns>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.Имя контракта также является производным от этого параметра типа.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые экспортируемые объекты с именем контракта, производным от в <paramref name="T" /> в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько экспортируемых объектов с названием контракта, производным от <paramref name="T" /> в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Базовый экспортируемый объект не может быть приведен к типу <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)">
      <summary>Возвращает экспортированный объект с указанным именем контракта.В случае отсутствия ровно одного соответствующего экспортированного объекта создается исключение.</summary>
      <returns>Экспортированный объект с указанным именем контракта.</returns>
      <param name="contractName">Имя контракта возвращаемого экспортированного объекта либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Имеются нулевые экспортируемые объекты с именем контракта, производным от в <paramref name="T" /> в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.— или —Существует несколько экспортируемых объектов с названием контракта, производным от <paramref name="T" /> в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Базовый экспортируемый объект не может быть приведен к типу <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1">
      <summary>Получает экспортированный объект с именем контракта, производным от указанного параметра типа, или значение по умолчанию для указанного типа. При наличии более одного соответствующего экспортированного объекта создается исключение.</summary>
      <returns>Экспортированный объект с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — значение по умолчанию для типа <paramref name="T" />.</returns>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.Имя контракта также является производным от этого параметра типа.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Существует несколько экспортируемых объектов с названием контракта, производным от <paramref name="T" /> в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Базовый экспортируемый объект не может быть приведен к типу <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)">
      <summary>Получает экспортированный объект с заданным именем контракта или значение по умолчанию для указанного типа. При наличии более одного соответствующего экспортированного объекта создается исключение.</summary>
      <returns>Экспортированный объект с указанным именем контракта, если оно найдено; в противном случае — значение по умолчанию для типа <paramref name="T" />.</returns>
      <param name="contractName">Имя контракта возвращаемого экспортированного объекта либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.</typeparam>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">Существует несколько экспортируемых объектов с названием контракта, указанным в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Базовый экспортируемый объект не может быть приведен к типу <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1">
      <summary>Получает экспортированные объекты с именем контракта, производным от указанного параметра типа.</summary>
      <returns>Экспортированные объекты с именем контракта, производным от указанного типа, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.Имя контракта также является производным от этого параметра типа.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Один или несколько базовых экспортируемых объектов не могут быть приведены к <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)">
      <summary>Получает экспортированные объекты с указанным именем контракта.</summary>
      <returns>Экспортированные объекты с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
      <param name="contractName">Имя контракта возвращаемых экспортированных объектов либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Тип возвращаемого экспортированного объекта.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Одно или несколько базовых экспортируемых значений не могут быть приведены к <paramref name="T" />.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2">
      <summary>Получает все экспорты с именем контракта, производным от указанного параметра типа.</summary>
      <returns>Объекты <see cref="T:System.Lazy`2" /> с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <typeparam name="T">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`2" />.Имя контракта также является производным от этого параметра типа.</typeparam>
      <typeparam name="TMetadataView">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1">
      <summary>Получает все экспорты с именем контракта, производным от указанного параметра типа.</summary>
      <returns>Объекты <see cref="T:System.Lazy`1" /> с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <typeparam name="T">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`1" />.Имя контракта также является производным от этого параметра типа.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает все экспорты, которые соответствуют условиям указанного определения импорта.</summary>
      <returns>Коллекция всех объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условию, определенному параметром <paramref name="definition" />.</returns>
      <param name="definition">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
        <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется ноль объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, которые соответствуют условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.— или —<see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется более одного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, который соответствует условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Получает все экспорты, которые соответствуют условиям указанного определения импорта и композиции.</summary>
      <returns>Коллекция всех объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условию, определенному параметрами <paramref name="definition" /> и <paramref name="atomicComposition" />.</returns>
      <param name="definition">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Транзакционный контейнер для композиции.</param>
      <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
        <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется ноль объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, которые соответствуют условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.— или —<see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется более одного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, который соответствует условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;— или —<paramref name="atomicComposition" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)">
      <summary>Получает экспорты с указанным именем контракта.</summary>
      <returns>Объекты <see cref="T:System.Lazy`1" /> с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="contractName">Имя контракта возвращаемых объектов <see cref="T:System.Lazy`1" /> либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`1" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)">
      <summary>Получает экспорты с указанным именем контракта.</summary>
      <returns>Объекты <see cref="T:System.Lazy`2" /> с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="contractName">Имя контракта возвращаемых объектов <see cref="T:System.Lazy`2" /> либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <typeparam name="T">Параметр типа возвращаемых объектов <see cref="T:System.Lazy2" />.Имя контракта также является производным от этого параметра типа.</typeparam>
      <typeparam name="TMetadataView">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)">
      <summary>Получает экспорты с указанным именем контракта.</summary>
      <returns>Коллекция всех объектов <see cref="T:System.Lazy`2" /> для контракта с именем <paramref name="contractName" />.</returns>
      <param name="type">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`2" />.</param>
      <param name="metadataViewType">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</param>
      <param name="contractName">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`2" /> либо значение null или пустая строка ("") для использования имени контракта по умолчанию.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="metadataViewType" /> не является допустимым типом представления метаданных.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Получает все экспорты, которые соответствуют ограничению, заданному указанным определением.</summary>
      <returns>Коллекция, которая содержит все элементы экспорта, соответствующие заданному условию.</returns>
      <param name="definition">Объект, определяющий условия возвращаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Транзакционный контейнер для композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <summary>Порождает событие <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)">
      <summary>Получает все элементы экспорта, которые соответствуют заданным параметрам импорта.</summary>
      <returns>trueЕсли для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> установлено значение <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> и отсутствуют объекты <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующие условиям указанного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; значение true, если для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> установлено значение <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и существует ровно один объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующий условиям указанного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; в остальных случаях — значение false.</returns>
      <param name="definition">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="atomicComposition">Транзакционный контейнер для композиции.</param>
      <param name="exports">При возвращении данного метода содержит коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условиям, определенным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, если эти объекты найдены; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> и <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />. </summary>
      <param name="addedExports">Добавленные события.</param>
      <param name="removedExports">Удаленные события.</param>
      <param name="atomicComposition">Транзакция композиции, содержащая изменение.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports">
      <summary>Получает экспорты, добавленные в ходе изменения.</summary>
      <returns>Коллекция добавленных экспортов.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition">
      <summary>Получает транзакцию композиции для изменения при ее наличии.</summary>
      <returns>Ссылка на транзакцию композиции, связанную с изменением, или значение null, если транзакции не используются.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames">
      <summary>Получает имена контрактов, модифицированные в ходе изменения.</summary>
      <returns>Коллекция измененных имен контрактов.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports">
      <summary>Получает экспорты, удаленные в ходе изменения.</summary>
      <returns>Коллекция удаленных экспортов.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <summary>Предоставляет методы для выполнения композиции определенной части или частей.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />. </summary>
      <param name="sourceProvider">Поставщик <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, который предоставляет объекту <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />, при необходимости в потокобезопасном режиме.</summary>
      <param name="sourceProvider">Поставщик <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />, который предоставляет объекту <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> доступ к объектам <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="isThreadSafe">Значение true, если требуется обеспечить потокобезопасность; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Выполняет предварительный просмотр всех требуемых импортов указанной части для проверки возможности их удовлетворения без фактического задания этих импортов.</summary>
      <param name="part">Часть, для которой предварительно просматриваются импорты.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null при отсутствии транзакций композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <summary>Освобождает все экспорты, используемые для удовлетворения импортов указанной части.</summary>
      <param name="part">Часть, для которой освобождаются импорты.</param>
      <param name="atomicComposition">Используемая транзакция композиции или значение null при отсутствии транзакций композиции.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Удовлетворяет импорты указанной части.</summary>
      <param name="part">Часть, импорты которой удовлетворяются.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <summary>Удовлетворяет импорты указанной части без их регистрации для рекомпозиции.</summary>
      <param name="part">Часть, импорты которой удовлетворяются.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <summary>Предоставляет уведомления при изменении каталога <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
      <summary>Происходит при изменении каталога <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
      <summary>Происходит при изменении объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <summary>Неизменяемый объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, созданный из массива типов или списка управляемых типов. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами.</summary>
      <param name="types">Коллекция помеченных атрибутами объектов <see cref="T:System.Type" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="types" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="types" /> содержит элемент, равный null.–либо–<paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами.</summary>
      <param name="types">Массив помеченных атрибутами объектов <see cref="T:System.Type" /> для добавления в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="types" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="types" /> содержит элемент, равный null.–либо–<paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает коллекцию экспортов, которые соответствуют условиям, заданным определением импорта.</summary>
      <returns>Коллекция экспортов, которые соответствуют условиям, заданным параметром <paramref name="definition" />.</returns>
      <param name="definition">Условия, которые определяют соответствующие экспорты.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts">
      <summary>Получает определения частей, содержащиеся в каталоге.</summary>
      <returns>Объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащиеся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> был освобожден.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <summary>Получает отображаемое имя каталога типов.</summary>
      <returns>Строка, содержащая доступное для чтения отображаемое имя каталога <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <summary>Получает элемент композиции, от которого происходит данный каталог типов.</summary>
      <returns>Всегда значение null. </returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
      <summary>Возвращает строковое представление каталога типов.</summary>
      <returns>Строковое представление каталога типов.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ComposablePart">
      <summary>Определяет абстрактный базовый класс для компонуемых частей, которые импортируют объекты и создают экспортированные объекты.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.Activate">
      <summary>Вызывается после того, как все импорты части заданы и экспорты могут быть извлечены.</summary>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions">
      <summary>Получает коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />, описывающих экспортированные объекты, предоставляемые частью.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />, описывающих экспортированные объекты, предоставляемые объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.GetExportedValue(System.ComponentModel.Composition.Primitives.ExportDefinition)">
      <summary>Получает экспортированный объект, который описывается заданным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</summary>
      <returns>Экспортированный объект, описываемый параметром <paramref name="definition" />.</returns>
      <param name="definition">Один из объектов <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> из свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions" />, описывающий экспортированный объект, который требуется вернуть.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;</exception>
      <exception cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException">Произошла ошибка при получении экспортированного объекта, который описывается <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="definition" /> поступило не из свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ExportDefinitions" /> класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Не был задан один или несколько необходимых импортов, указываемых свойством <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions">
      <summary>Получает коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, описывающих импортированные объекты, необходимые для части.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, описывающих импортированные объекты, необходимые для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> был освобожден.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePart.Metadata">
      <summary>Получает метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
      <returns>Метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.Значением по умолчанию является пустой доступный только для чтения объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> был освобожден.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePart.SetImport(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
      <summary>Задает импорт, который описывается указанным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, чтобы он соответствовал указанным экспортированным элементам.</summary>
      <param name="definition">Один из объектов свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions" />, определяющий задаваемый импорт.</param>
      <param name="exports">Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, для которых задается импорт, описываемый свойством <paramref name="definition" />.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null; — или — <paramref name="exports" /> имеет значение null;</exception>
      <exception cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException">Произошла ошибка при задании импорта, который описывается объектом <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="definition" /> поступило не из свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePart.ImportDefinitions" /> класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />. — или — <paramref name="exports" /> содержит элемент, равный null. — или — <paramref name="exports" /> пуст и <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равняется <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />. — или — <paramref name="exports" /> содержит несколько элементов, и свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.ComponentModel.Composition.Primitives.ComposablePart.SetImport(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" /> вызывался ранее, и свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable" /> равно false.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog">
      <summary>Представляет абстрактный базовый класс для каталогов частей с поддержкой композиции, которые собирают и возвращают объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает список определений экспортов, которые соответствуют ограничению, определенному указанным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Tuple`2" />, содержащих объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> и связанные с ними объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> для объектов, соответствующих ограничению, заданному параметром <paramref name="definition" />.</returns>
      <param name="definition">Условия, при которых возвращаются объекты <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> был освобожден.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="definition" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
      <summary>Получает определения частей, содержащиеся в каталоге.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащееся в объекте <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> был освобожден.</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition">
      <summary>Определяет абстрактный базовый класс для определений частей с поддержкой композиции, которые описывают и включают создание объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.CreatePart">
      <summary>Создает новый экземпляр части, описываемой объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
      <returns>Созданная часть.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ExportDefinitions">
      <summary>Получает коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />, которые описывают объекты, экспортированные частью, определенной данным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />, которые описывают экспортированные объекты, предоставленные объектами <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />, созданным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.ImportDefinitions">
      <summary>Получает коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, которые описывают импорты, необходимые для части, определенной данным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, которые описывают импорты, необходимые для объектов <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />, созданных объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartDefinition.Metadata">
      <summary>Получает коллекцию метаданных для этого объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.</summary>
      <returns>Коллекция метаданных для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />.Значением по умолчанию является пустой доступный только для чтения объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ComposablePartException">
      <summary>Исключение, которое создается в случае возникновения ошибки при вызове методов для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" /> заданными данными сериализации.</summary>
      <param name="info">Объект, содержащий данные сериализованных объектов для ошибки <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />.</param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">В <paramref name="info" /> отсутствует обязательное значение.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="info" /> содержит значение, которое нельзя привести к правильному типу.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" /> указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, которое описывает исключение <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" /> с использованием указанного сообщения об ошибке и элемента композиции, который стал причиной данного исключения.</summary>
      <param name="message">Сообщение, которое описывает исключение <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
      <param name="element">Элемент композиции, который стал причиной исключения <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element" /> значение null.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" /> с использованием указанного сообщения об ошибке, элемента композиции и исключения, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение, которое описывает исключение <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
      <param name="element">Элемент композиции, который стал причиной исключения <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element" /> значение null.</param>
      <param name="innerException">Исключение, являющееся исходной причиной исключения <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null, чтобы задать для свойства <see cref="P:System.Exception.InnerException" /> значение null.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" /> с использованием указанного сообщения об ошибке и исключения, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение, которое описывает исключение <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null для задания свойству <see cref="P:System.Exception.Message" /> значения по умолчанию.</param>
      <param name="innerException">Исключение, являющееся исходной причиной исключения <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />, или значение null, чтобы задать для свойства <see cref="P:System.Exception.InnerException" /> значение null.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ComposablePartException.Element">
      <summary>Получает элемент композиции, который стал причиной исключения.</summary>
      <returns>Элемент композиции, который стал причиной исключения <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />.Значение по умолчанию — null.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ComposablePartException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает данные сериализации для исключения.</summary>
      <param name="info">После вызова этого метода содержит сериализованные данные объекта, относящиеся к исключению <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartException" />.</param>
      <param name="context">После вызова этого метода содержит контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
      <summary>Представляет необходимый для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> импорт, который может указать и имя контракта, и метаданные.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />, используя заданные ограничение, имя контракта, требуемое удостоверение типа, требуемые метаданные, количество элементов, значение, указывающее, разрешает ли определение импорта рекомпозицию, значение, определяющее, является ли определение импорта обязательным предварительным условием, и значение, которое задает обязательную политику создания.</summary>
      <param name="contractName">Строка, содержащая имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимого для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</param>
      <param name="requiredTypeIdentity">Удостоверение ожидаемого типа экспорта.Для создания удостоверения заданного типа используется метод <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />.Если конкретный тип не требуется, используйте значение null.</param>
      <param name="requiredMetadata">Коллекция пар "ключ-значение", содержащая имена метаданных и типы, необходимые для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />; или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> пустую коллекцию <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="cardinality">Одно из значений <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />, указывающее количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</param>
      <param name="isRecomposable">Значение true, указывающее, что объект <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> может удовлетворяться несколько раз на протяжении времени существования объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; в противном случае — значение false.</param>
      <param name="isPrerequisite">Значение true, указывающее, что объект <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> должен удовлетворяться, прежде чем объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> сможет начать создание экспортированных объектов; в противном случае — значение false.</param>
      <param name="requiredCreationPolicy">Значение, указывающее, что импортеру требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для экспортов, используемых для удовлетворения данного импорта.Если конкретное значение политики <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> не требуется, используется значение по умолчанию <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contractName" /> является пустой строкой ("").— или —<paramref name="requiredMetadata" /> содержит элемент, равный null.— или —<paramref name="cardinality" /> не является одним из значений <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint">
      <summary>Получает выражение, которое определяет условия, которые должны удовлетворяться импортом, описанным данным определением импорта.</summary>
      <returns>Выражение, содержащее объект <see cref="T:System.Func`2" />, определяющий условия, которые должны соответствовать определению <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> для их удовлетворения объектом <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли экспорт, представленный заданным определением экспорта, ограничению, представленному данным объектом.</summary>
      <returns>Значение true, если ограничение удовлетворяется; в противном случае — значение false.</returns>
      <param name="exportDefinition">Проверяемое определение экспорта.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
      <summary>Получает или задает значение, указывающее, что импортеру требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для экспортов, используемых для удовлетворения данного импорта. </summary>
      <returns>Одно из следующих значений:Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, если импортеру не требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />, если необходимо, чтобы все используемые экспорты совместно использовались всеми импортерами в контейнере.Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />, если необходимо не предоставлять общий доступ ко всем используемым экспортам в контейнере.В этом случае каждый импортер получает отдельный экземпляр.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
      <summary>Получает имена метаданных экспорта, необходимого для определения импорта.</summary>
      <returns>Коллекция объектов <see cref="T:System.String" />, содержащих имена метаданных объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.По умолчанию используется пустая коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity">
      <summary>Получает ожидаемый тип экспорта, соответствующего данному объекту <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</summary>
      <returns>Строка, создаваемая путем вызова метода <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> для типа, ожидаемого данным импортом.Если значение равно null, импортами не ожидается определенный тип.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.Export">
      <summary>Представляет экспорт, который является типом, состоящим из экспортированного объекта с отложенным созданием и метаданных, описывающих этот объект.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Func{System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> заданными определением экспорта и методом получения экспортированного объекта.</summary>
      <param name="definition">Объект, описывающий контракт, которому удовлетворяет объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="exportedValueGetter">Метод, вызываемый для создания экспортированного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.При этом создание объекта откладывается до вызова метода <see cref="M:System.ComponentModel.Composition.Primitives.Export.Value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="definition" /> имеет значение null;— или —<paramref name="exportedObjectGetter" /> имеет значение null;</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> с помощью указанного имени контракта, метаданных и метода получения экспортированного значения.</summary>
      <param name="contractName">Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="metadata">Метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata" /> пустой объект <see cref="T:System.Collections.Generic.IDictionary`2" />, доступный только для чтения.</param>
      <param name="exportedValueGetter">Метод, вызываемый для создания экспортированного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.При этом создание объекта откладывается до вызова метода <see cref="M:System.ComponentModel.Composition.Primitives.Export.Value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> имеет значение null;— или —<paramref name="exportedObjectGetter" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contractName" /> является пустой строкой ("").</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Func{System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> с помощью указанного имени контракта и метода получения экспортированного значения.</summary>
      <param name="contractName">Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</param>
      <param name="exportedValueGetter">Метод, вызываемый для создания экспортированного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.При этом создание объекта откладывается до вызова метода <see cref="M:System.ComponentModel.Composition.Primitives.Export.Value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> имеет значение null;— или —<paramref name="exportedObjectGetter" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contractName" /> является пустой строкой ("").</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.Export.Definition">
      <summary>Получает определение, описывающее контракт, которому удовлетворяет экспорт.</summary>
      <returns>Определение, описывающее контракт, которому удовлетворяет объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</returns>
      <exception cref="T:System.NotImplementedException">Это свойство не было переопределено в производном классе.</exception>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore">
      <summary>Возвращает экспортированный объект, который предоставляется экспортом.</summary>
      <returns>Экспортированный объект, который предоставляется экспортом.</returns>
      <exception cref="T:System.NotImplementedException">Метод <see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore" /> в производном классе не переопределялся.</exception>
      <exception cref="T:System.ComponentModel.Composition.CompositionException">Возникла ошибка при композиции.<see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию ошибок.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.Export.Metadata">
      <summary>Получает метаданные для экспорта.</summary>
      <returns>Метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</returns>
      <exception cref="T:System.NotImplementedException">Свойство <see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition" /> в производном классе не переопределялся.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.Export.Value">
      <summary>Предоставляет объект, который представляет данный экспорт.</summary>
      <returns>Объект, который представляет данный экспорт.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ExportDefinition">
      <summary>Описывает контракт, которому удовлетворяет определенный объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> с помощью указанного имени контракта и метаданных.</summary>
      <param name="contractName">Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</param>
      <param name="metadata">Метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> или значение null, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata" /> пустой объект <see cref="T:System.Collections.Generic.IDictionary`2" />, доступный только для чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contractName" /> является пустой строкой ("").</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ExportDefinition.ContractName">
      <summary>Получает имя контракта.</summary>
      <returns>Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.</returns>
      <exception cref="T:System.NotImplementedException">Свойство в производном классе не переопределено.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata">
      <summary>Получает метаданные контракта.</summary>
      <returns>Метаданные объекта <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" />.Значением по умолчанию является пустой доступный только для чтения объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportDefinition.ToString">
      <summary>Возвращает строковое представление определения экспорта.</summary>
      <returns>Строковое представление определения экспорта.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ExportedDelegate">
      <summary>Представляет функцию, экспортированную объектом <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportedDelegate.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ExportedDelegate" />. </summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportedDelegate.#ctor(System.Object,System.Reflection.MethodInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ExportedDelegate" /> для заданных части и метода. </summary>
      <param name="instance">Часть, экспортирующая метод.</param>
      <param name="method">Экспортируемый метод.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ExportedDelegate.CreateDelegate(System.Type)">
      <summary>Получает делегат указанного типа.</summary>
      <returns>Делегат указанного типа или значение null, если делегат создать невозможно.</returns>
      <param name="delegateType">Тип возвращаемого делегата.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ICompositionElement">
      <summary>Представляет элемент, участвующий в композиции.</summary>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <summary>Получает отображаемое имя элемента композиции.</summary>
      <returns>Доступное для чтения отображаемое имя элемента <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <summary>Получает элемент композиции, от которого происходит текущий элемент композиции.</summary>
      <returns>Элемент композиции, от которого происходит текущий элемент <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement" />, или значение null, если элемент <see cref="T:System.ComponentModel.Composition.Primitives.ICompositionElement" /> является корневым элементом композиции.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ImportCardinality">
      <summary>Определяет количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne">
      <summary>Нуль или один объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> требуется для <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne">
      <summary>Ровно один объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> требуется для <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore">
      <summary>Нуль или несколько объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> требуется для <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Composition.Primitives.ImportDefinition">
      <summary>Представляет импорт, необходимый для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, используя заданные ограничение, имя контракта, количество элементов, значение, указывающее, разрешает ли определение импорта рекомпозицию, и значение, определяющее, является ли определение импорта обязательным предварительным условием.</summary>
      <param name="constraint">Выражение, содержащее объект <see cref="T:System.Func`2" />, определяющий условия, которые должны удовлетворяться объектом <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> для соответствия объекту <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</param>
      <param name="contractName">Имя контракта.</param>
      <param name="cardinality">Одно из значений перечисления, указывающее количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</param>
      <param name="isRecomposable">Значение true, указывающее, что объект <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> может удовлетворяться несколько раз на протяжении времени существования объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; в противном случае — значение false.</param>
      <param name="isPrerequisite">Значение true, указывающее, что объект <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> должен удовлетворяться, прежде чем объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> сможет начать создание экспортированных объектов; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="constraint" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cardinality" /> не равно ни одному из значений объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality">
      <summary>Получает количество элементов экспортов, необходимых для определения импорта.</summary>
      <returns>Одно из значений перечисления, указывающее количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.Значение по умолчанию — <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
      <summary>Получает выражение, которое определяет условия, которые должны удовлетворяться импортом для соответствия определению импорта.</summary>
      <returns>Выражение, содержащее объект <see cref="T:System.Func`2" />, определяющий условия, которые должны удовлетворяться объектом <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> для соответствия объекту <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</returns>
      <exception cref="T:System.NotImplementedException">Свойство в производном классе не переопределено.</exception>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName">
      <summary>Получает имя контракта.</summary>
      <returns>Имя контракта.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
      <summary>Получает значение, указывающее, удовлетворяет ли экспорт, представленный указанным определением, ограничениям данного определения импорта.</summary>
      <returns>Значение true, если ограничения удовлетворяются; в противном случае — значение false.</returns>
      <param name="exportDefinition">Проверяемое определение экспорта.</param>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite">
      <summary>Получает значение, указывающее, должно ли удовлетворяться определение импорта, прежде чем часть сможет начать создание экспортированных объектов.</summary>
      <returns>Значение true, если объект <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> должен удовлетворяться, прежде чем объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> сможет начать создание экспортированных объектов; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable">
      <summary>Получает значение, указывающее, может ли определение импорта удовлетворяться несколько раз.</summary>
      <returns>Значение true, если объект <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> может удовлетворяться несколько раз на протяжении времени существования объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.Primitives.ImportDefinition.ToString">
      <summary>Возвращает строковое представление определения импорта.</summary>
      <returns>Строковое представление определения импорта.</returns>
    </member>
    <member name="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <summary>Представляет объект <see cref="T:System.Reflection.MemberInfo" />, который загружает сборки и создает объекты только после получения запроса.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />, представляющий указанный член.</summary>
      <param name="member">Представляемый член.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> для члена указанного типа с заданными методами доступа.</summary>
      <param name="memberType">Тип представляемого члена.</param>
      <param name="accessorsCreator">Функция, возвращаемое значение которой является коллекцией методов доступа для представляемого члена.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> для члена указанного типа с заданными методами доступа.</summary>
      <param name="memberType">Тип представляемого члена.</param>
      <param name="accessors">Массив методов доступа для представляемого члена.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)">
      <param name="obj">Другой объект.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors">
      <summary>Получает массив методов доступа для представляемого члена.</summary>
      <returns>Массив методов доступа для представляемого члена.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode"></member>
    <member name="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType">
      <summary>Получает тип представляемого члена.</summary>
      <returns>Тип представляемого члена.</returns>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)">
      <summary>Определяет, равны ли два указанных объекта <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />.</summary>
      <returns>Значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="left">Первый проверяемый объект.</param>
      <param name="right">Второй проверяемый объект.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)">
      <summary>Определяет, различаются ли два указанных объекта <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />.</summary>
      <returns>Значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="left">Первый проверяемый объект.</param>
      <param name="right">Второй проверяемый объект.</param>
    </member>
    <member name="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
      <summary>Предоставляет методы расширения для создания и извлечения частей, основанных на отражении.</summary>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Создает определение экспорта из указанного члена, используя заданные имя контракта, метаданные и источник.</summary>
      <returns>Определение экспорта, созданное на основе заданных параметров.</returns>
      <param name="exportingMember">Экспортируемый член.</param>
      <param name="contractName">Имя контракта, используемого для экспорта.</param>
      <param name="metadata">Метаданные для экспорта.</param>
      <param name="origin">Объект, от которого происходит экспорт.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Создает определение импорта для указанного члена, используя заданные имя контракта, удостоверение типа, требуемые метаданные, количество элементов, политику рекомпозиции, политику создания и источник.</summary>
      <returns>Определение импорта, созданное на основе заданных параметров.</returns>
      <param name="importingMember">Член, в который выполняется импорт.</param>
      <param name="contractName">Имя контракта, используемого для импорта.</param>
      <param name="requiredTypeIdentity">Требуемое удостоверение типа для импорта.</param>
      <param name="requiredMetadata">Требуемые метаданные для импорта.</param>
      <param name="cardinality">Количество элементов импорта.</param>
      <param name="isRecomposable">Значение, указывающее, разрешает ли импорт рекомпозицию.</param>
      <param name="requiredCreationPolicy">Значение, указывающее политику создания импорта.</param>
      <param name="origin">Объект, в который выполняется импорт.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Создает определение импорта для указанного параметра, используя заданные имя контракта, удостоверение типа, требуемые метаданные, количество элементов, политику создания и источник.</summary>
      <returns>Определение импорта, созданное на основе заданных параметров.</returns>
      <param name="parameter">Импортируемый параметр.</param>
      <param name="contractName">Имя контракта, используемого для импорта.</param>
      <param name="requiredTypeIdentity">Требуемое удостоверение типа для импорта.</param>
      <param name="requiredMetadata">Требуемые метаданные для импорта.</param>
      <param name="cardinality">Количество элементов импорта.</param>
      <param name="requiredCreationPolicy">Значение, указывающее политику создания импорта.</param>
      <param name="origin">Объект, в который выполняется импорт.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <summary>Создает определение части, используя заданные тип части, импорты, экспорты, метаданные и источник.</summary>
      <returns>Определение части, созданное на основе заданных параметров.</returns>
      <param name="partType">Тип части.</param>
      <param name="isDisposalRequired">Значение true, если для части требуется ликвидация, в противном случае — значение false.</param>
      <param name="imports">Коллекция импортов части.</param>
      <param name="exports">Коллекция экспортов части.</param>
      <param name="metadata">Метаданные части.</param>
      <param name="origin">Источник части.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)">
      <summary>Получает экспортирующий член из заданного определения экспорта.</summary>
      <returns>Член, указанный в определении экспорта.</returns>
      <param name="exportDefinition">Проверяемое определение экспорта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает импортирующий член из заданного определения импорта.</summary>
      <returns>Член, указанный в определении импорта.</returns>
      <param name="importDefinition">Проверяемое определение импорта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Получает импортирующий параметр из заданного определения импорта.</summary>
      <returns>Параметр, указанный в определении импорта.</returns>
      <param name="importDefinition">Проверяемое определение импорта.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
      <summary>Получает тип части из указанного определения части.</summary>
      <returns>Тип определяемой части.</returns>
      <param name="partDefinition">Проверяемое определение части.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
      <summary>Определяет, требуется ли ликвидация для указанной части.</summary>
      <returns>Значение true, если для части требуется ликвидация, в противном случае — значение false.</returns>
      <param name="partDefinition">Проверяемая часть.</param>
    </member>
    <member name="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <summary>Определяет, какой элемент представляет определение импорта: член или параметр.</summary>
      <returns>Значение true, если определение импорта представляет параметр; в противном случае — определение false.</returns>
      <param name="importDefinition">Проверяемое определение импорта.</param>
    </member>
  </members>
</doc>