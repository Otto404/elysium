<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>Описывает уровень проверки подлинности, который необходимо использовать для подключения к WMI.Используется для подключения COM к WMI.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>Стандартный уровень проверки подлинности COM.В WMI используются стандартные параметры проверки подлинности Windows.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>Проверка подлинности COM не используется.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>Проверка подлинности COM на уровне подключения.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>Проверка подлинности COM на уровне вызова.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>Проверка подлинности COM на уровне пакета.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>Проверка подлинности COM на уровне целостности пакета.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>Проверка подлинности COM на уровне конфиденциальности пакета.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>Сохраняется уровень проверки подлинности, установленный ранее.</summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>Описывает возможные типы CIM для свойств, квалификаторов и параметров методов.          </summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>Пустое значение.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>8-разрядное целое число со знаком.This value maps to the <see cref="T:System.SByte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>An unsigned 8-bit integer.This value maps to the <see cref="T:System.Byte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>A signed 16-bit integer.This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>An unsigned 16-bit integer.This value maps to the <see cref="T:System.UInt16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>A signed 32-bit integer.This value maps to the <see cref="T:System.Int32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>An unsigned 32-bit integer.This value maps to the <see cref="T:System.UInt32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>A signed 64-bit integer.This value maps to the <see cref="T:System.Int64" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>An unsigned 64-bit integer.Это значение соответствует типу <see cref="T:System.UInt64" />.</summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>32-разрядное число с плавающей запятой.Это значение соответствует типу <see cref="T:System.Single" />.</summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>64-разрядное число с плавающей запятой.This value maps to the <see cref="T:System.Double" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>Логическое значение (типа Boolean).This value maps to the <see cref="T:System.Boolean" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>Строка.This value maps to the <see cref="T:System.String" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>Значение даты или времени, представленное в виде строки в формате даты/времени DMTF: yyyymmddHHMMSS.mmmmmmsUUU, где yyyymmdd дата в формате год/месяц/день; HHMMSS время в формате часы/минуты/секунды; mmmmmm количество микросекунд в виде 6-значного числа; и sUUU знак (+ или -) и 3-значное число, выражающее разницу с универсальным временем.Это значение соответствует типу <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>Ссылка на другой объект.Представляет собой строку, содержащую путь к объекту, на который указывает ссылка.This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>16-разрядный символ.Это значение соответствует типу <see cref="T:System.Char" />.</summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>Внедренный объект.Обратите внимание, что внедренные объекты отличаются от ссылок тем, что внедренный объект не имеет пути и период его существования равен периоду существования объекта, в котором он находится.Это значение соответствует типу <see cref="T:System.Object" />.</summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>Определяет языки, поддерживаемые генератором кода.          </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>Значение для создания кода C#.             </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>Значение для создания кода JScript.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>Значение для создания кода Visual Basic.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>Значение для создания кода Visual J#.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>Значение для создания управляемого кода C++.             </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>Описывает режимы сравнения объектов, которые можно использовать в сочетании с методом <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />.Обратите внимание, что эти значения можно объединять.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>В этом режиме сравниваются все элементы сравниваемых объектов.Значение: 0</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>В этом режиме сравниваются все элементы за исключением квалификаторов.Значение: 1.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>В этом режиме сравнения игнорируются источники объектов, а именно, сервер и пространство имен, из которых они происходят.Значение: 2.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>В этом режиме сравнения игнорируются значения свойств по умолчанию.Это значение применяется только при сравнении классов.Значение: 4.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>Этот режим предполагает, что сравниваемые объекты являются экземплярами одного класса.Следовательно, это значение обеспечивает только сравнение данных, связанных с экземпляром.Этот флаг позволяет оптимизировать производительность.Если объекты не являются экземплярами одного класса, результаты будут неопределенными.Значение: 8.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>Режим сравнения строковых значений без учета регистра.Применяется к строкам и значениям квалификаторов.Имена свойств и квалификаторов всегда сравниваются без учета регистра, независимо от того, установлен данный флаг или нет.Значение: 16.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>В этом режиме игнорируются флаги квалификаторов.Этот флаг позволяет учитывать значения квалификаторов, но при этом игнорируются такие свойства флага, как правила распространения и ограничения на перезапись.Значение: 32.</summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementOperationObserver.Completed" />.          </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>Получает статус завершения операции.          </summary>
      <returns>Возвращает значение перечисления <see cref="T:System.Management.ManagementStatus" />.</returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>Получает дополнительные сведения о состоянии в пределах WMI-объекта.Может содержать пустое значение.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержатся сведения о состоянии завершения операции.</returns>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementOperationObserver.Completed" />.     </summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.CompletedEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>Задает все параметры, обязательные для установки WMI-подключения.</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ConnectionOptions" /> для операции подключения с помощью стандартных значений.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Создает новый объект ConnectionOption.</summary>
      <param name="locale">Язык, который необходимо использовать для подключения.</param>
      <param name="username">Имя пользователя, которое необходимо использовать для подключения.Если оставлено пустое значение, используются данные пользователя, который в данный момент находится в системе.</param>
      <param name="password">Пароль для заданного имени пользователя.Если для имени пользователя оставлено пустое значение, используются данные пользователя, который в данный момент находится в системе.</param>
      <param name="authority">Полномочия, которые необходимо использовать для проверки подлинности заданного пользователя.</param>
      <param name="impersonation">Уровень олицетворения COM, который необходимо использовать для подключения.</param>
      <param name="authentication">Уровень проверки подлинности COM, который необходимо использовать для подключения.  </param>
      <param name="enablePrivileges">Чтобы включить особые пользовательские привилегии, необходимо установить значение true; в противном случае необходимо установить значение false.Этот параметр должен использоваться только при выполнении операций, которые требуют особых привилегий для пользователя Windows NT.</param>
      <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику.</param>
      <param name="timeout">Зарезервировано для дальнейшего использования.</param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ConnectionOptions" /> для WMI-подключения с помощью заданных значений.</summary>
      <param name="locale">Язык, который необходимо использовать для подключения.</param>
      <param name="username">Имя пользователя, которое необходимо использовать для подключения.Если оставлено пустое значение, используются данные пользователя, который в данный момент находится в системе.</param>
      <param name="password">Пароль для заданного имени пользователя.Если для имени пользователя оставлено пустое значение, используются данные пользователя, который в данный момент находится в системе.</param>
      <param name="authority">Полномочия, которые необходимо использовать для проверки подлинности заданного пользователя. </param>
      <param name="impersonation">Уровень олицетворения COM, который необходимо использовать для подключения. </param>
      <param name="authentication">Уровень проверки подлинности COM, который необходимо использовать для подключения.  </param>
      <param name="enablePrivileges">Чтобы включить особые пользовательские привилегии, необходимо установить значение true; в противном случае необходимо установить значение false.Этот параметр должен использоваться только при выполнении операций, которые требуют особых привилегий для пользователя Windows NT.</param>
      <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику. </param>
      <param name="timeout">Зарезервировано для дальнейшего использования. </param>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>Возвращает или задает уровень проверки подлинности COM, который необходимо использовать для операций данного подключения.</summary>
      <returns>Возвращает значение перечисления <see cref="T:System.Management.AuthenticationLevel" />, которое указывает, какой уровень проверки подлинности COM используется для подключения к локальному или удаленному компьютеру. </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>Возвращает или задает полномочия, которые необходимо использовать для проверки подлинности указанного пользователя.          </summary>
      <returns>Возвращает <see cref="T:System.String" />, определяющую полномочия, которые необходимо использовать для проверки подлинности указанного пользователя.</returns>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>Возвращает копию объекта.</summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>Возвращает или задает значение, указывающее, нужно ли активировать права доступа пользователя для операции подключения.Это свойство должно использоваться, только если выполняемая операция требует включения определенных привилегий пользователя (например, операция перезагрузки компьютера).</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, нужно ли активировать права доступа пользователя для операции подключения.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>Возвращает или задает уровень олицетворения COM, который необходимо использовать для операций данного подключения.</summary>
      <returns>Возвращает значение перечисления <see cref="T:System.Management.ImpersonationLevel" />, описывающее уровень олицетворения, используемый для подключения к WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>Возвращает или задает язык, который необходимо использовать для операции подключения.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />, которое обозначает язык при подключении к WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>Задает пароль для заданного пользователя.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />, которое используется в качестве пароля при подключении к WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>Задает пароль для заданного пользователя.</summary>
      <returns>Возвращает значение SecureString, которое используется в качестве пароля при подключении к WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>Возвращает или задает имя пользователя, которое необходимо использовать для операции подключения.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />, которое используется в качестве имени пользователя при подключении к WMI.</returns>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>Задает параметры для удаления управляющего объекта.          </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.DeleteOptions" /> для операции удаления с помощью значений, используемых по умолчанию.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.DeleteOptions" /> для операции удаления с помощью заданных значений.          </summary>
      <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику. </param>
      <param name="timeout">Период, в течение которого операция может выполняться до завершения времени ожидания.Значением по умолчанию является <see cref="F:System.TimeSpan.MaxValue" />.Установка этого параметра вызовет операцию в полусинхронном режиме.</param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>Предоставляет базовый класс для параметрических объектов, связанных с запросами и перечислениями.          </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EnumerationOptions" /> с заданными по умолчанию значениями (описание значений по умолчанию см. в описаниях отдельных свойств).Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EnumerationOptions" />, который можно использовать для запросов и перечислений, предоставляя пользователю возможность задавать значения для различных параметров.          </summary>
      <param name="context">Контекстный параметрический объект содержит сведения о поставщике, которые можно передать этому поставщику.</param>
      <param name="timeout">Значение периода ожидания для перечисления результатов.</param>
      <param name="blockSize">Количество элементов, которое можно извлечь за один раз из WMI.</param>
      <param name="rewindable">Значение true позволяет указать, что набор результатов можно перемотать назад (т. е. разрешается многократное прохождение набора), в противном случае — значение false.</param>
      <param name="returnImmediatley">Значение true позволяет указать, что возврат из операции осуществляется немедленно (полусинхронно), или что операцию необходимо блокировать до тех пор, пока не будут получены все результаты; в противном случае — значение false.</param>
      <param name="useAmendedQualifiers">Значение true позволяет указать, что возвращаемые объекты должны содержать исправленные (с учетом локальных данных) квалификаторы; в противном случае — значение false.</param>
      <param name="ensureLocatable">Значение true позволяет обеспечить допустимые пути для всех возвращаемых объектов; в противном случае — значение false.</param>
      <param name="prototypeOnly">Значение true возвращает прототип набора результатов вместо фактических результатов; в противном случае — значение false.</param>
      <param name="directRead">Значение true позволяет извлекать объекты только заданного класса или же объекты производных классов; в противном случае — значение false.</param>
      <param name="enumerateDeep">Значение true позволяет использовать рекурсивное перечисление в подклассах; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>Получает или задает размер блока для блочных операций.Когда производится перечисление коллекции, WMI возвращает результаты группами заданного размера.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, которое определяет размер блока в блочных операциях.</returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>Получает или задает значение, указывающее на запрос прямого доступа к поставщику WMI для заданного класса без учета его суперкласса и производных классов.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, осуществляется ли запрос прямого доступа к поставщику WMI для заданного класса.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>Получает или задает значение, указывающее, что возвращаемые объекты должны содержать доступные сведения.Это позволяет обеспечить, что для таких свойств системы, как __PATH, __RELPATH и __SERVER, будут заданы непустые значения.Этот флаг можно использовать только в запросах, в перечислениях он не обрабатывается.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что возвращаемые объекты должны содержать доступные сведения.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>Получает или задает значение, указывающее, запрашивается ли рекурсивное перечисление во всех производных классах заданного суперкласса.Если false, то возвращаются только члены ближайшего производного класса.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, которое указывает, запрашивается ли рекурсивное перечисление во всех производных классах заданного суперкласса.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>Получает или задает значение, указывающее, должен ли запрос возвращать прототип набора результатов вместо фактических результатов.Этот флаг используется для создания прототипов.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, должен ли запрос возвращать прототип набора результатов вместо фактических результатов.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>Получает или задает значение, определяющее выполнение вызванной операции в синхронном или полусинхронном режиме.Если для этого свойства задано значение true, то вызывается перечисление и сразу же происходит возврат вызова.Фактически результаты будут извлекаться при прохождении по результирующей коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, определяющее выполнение вызванной операции в синхронном или полусинхронном режиме.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>Получает или задает значение, определяющее, допускается ли перемотка назад для многократного прохождения коллекции.Если true, то объекты коллекции будут доступны для многократного перечисления.Если false, то перечисление коллекции может быть выполнено только один раз.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, которое определяет, допускается ли перемотка назад для многократного прохождения коллекции.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>Получает или задает значение, указывающее, что возвращаемые из WMI объекты должны включать измененные сведения.Как правило, измененные сведения — это локализуемые сведения, связанные с объектом WMI, например, описания объектов или свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что возвращаемые из WMI объекты должны включать измененные сведения.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          </summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>Получает событие WMI, которое было доставлено.      </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержится доставленное событие WMI.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          </summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.EventArrivedEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>Представляет запрос события WMI.          </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EventQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EventQuery" /> для заданного запроса.          </summary>
      <param name="query">Текстовое представление запроса события.</param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EventQuery" /> для заданного языка и запроса.           </summary>
      <param name="language">Язык, на котором задана строка запроса. </param>
      <param name="query">Строковое представление запроса.</param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.             </returns>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>Задает параметры наблюдения за событиями управления.          </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EventWatcherOptions" /> с помощью значений по умолчанию для наблюдения за событиями.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.EventWatcherOptions" /> с заданными значениями.          </summary>
      <param name="context">Контекстный параметрический объект, содержащий сведения о поставщике, которые необходимо передать этому поставщику. </param>
      <param name="timeout">Время ожидания следующих событий.</param>
      <param name="blockSize">Количество событий, ожидаемых в каждом блоке.  </param>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>Получает или задает размер блока для блочных операций.В процессе ожидания событий это значение указывает, сколько событий ожидать перед возвратом.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, которое указывает размер блока операций.</returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>Описывает уровень олицетворения, который необходимо использовать для подключения к WMI.          </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>Олицетворение по умолчанию.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>Анонимный уровень олицетворения COM, который скрывает удостоверение вызывающей стороны.При этом уровне олицетворения во время вызовов, адресованных WMI, возможны сбои.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>Олицетворение COM на уровне удостоверения позволяет объектам запрашивать реквизиты вызывающей стороны.При этом уровне олицетворения во время вызовов, адресованных WMI, возможны сбои.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>Олицетворение COM на уровне олицетворения позволяет объектам использовать реквизиты вызывающей процедуры.Это уровень олицетворения рекомендуется для передачи вызовов, адресованных WMI.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>Олицетворение COM на уровне делегата позволяет объектам разрешать другим объектам использовать реквизиты вызывающей стороны.Этот уровень работает с WMI-вызовами, но может обусловливать ненужные риски для безопасности. Поддерживается только в Windows 2000.</summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>Задает параметры для вызова управляющего метода.          </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.InvokeMethodOptions" /> для работы метода <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> с использованием стандартных значений.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.InvokeMethodOptions" /> для операции вызова с помощью заданных значений.          </summary>
      <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику.</param>
      <param name="timeout">Период, в течение которого операция может выполняться до завершения времени ожидания.Значением по умолчанию является <see cref="F:System.TimeSpan.MaxValue" />.Установка этого параметра вызовет операцию в полусинхронном режиме.</param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>Содержит базовые элементы управляющего объекта.Служит в качестве базового класса для других классов управляющих объектов.</summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementBaseObject" />, поддерживающего сериализацию.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который необходимо заполнить данными.</param>
      <param name="context">Целевое местоположение сериализации (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>Получает путь к классу управляющего объекта.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementPath" />, который содержит путь к классу управляющего объекта.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>Возвращает копию объекта.</summary>
      <returns>Новый клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>Сравнивает данный объект с другим на основании заданных параметров.</summary>
      <returns>Значение true, если объекты, сравниваемые по заданным параметрам, равны; в противном случае — значение false.</returns>
      <param name="otherObject">Объект, с которым должен сравниваться данный объект. </param>
      <param name="settings">Параметры сравнения объектов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose"></member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>Сравнивает два управляющих объекта.</summary>
      <returns>Значение true, если объект является экземпляром класса <see cref="T:System.Management.ManagementBaseObject" /> и представляет такой же объект, что и данный экземпляр; в противном случае — значение false.             </returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>Служит в качестве хэш-функции для конкретного типа, который можно использовать в алгоритмах хэширования и структурах данных, подобных хэш-таблице.</summary>
      <returns>Хэш-код для текущего объекта.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые необходимы для десериализации поля, представленного данным экземпляром.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который необходимо заполнить данными.</param>
      <param name="context">Целевое местоположение сериализации (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>Возвращает значение квалификатора заданного свойства.</summary>
      <returns>Значение заданного квалификатора.</returns>
      <param name="propertyName">Имя свойства, которому принадлежит квалификатор. </param>
      <param name="qualifierName">Имя затребованного квалификатора свойства. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>Получает эквивалентный метод доступа к значению свойства.</summary>
      <returns>Значение заданного свойства.</returns>
      <param name="propertyName">Имя затребованного свойства. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>Получает значение заданного квалификатора.          </summary>
      <returns>Значение заданного квалификатора.</returns>
      <param name="qualifierName">Имя затребованного квалификатора. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>Возвращает текстовое представление объекта в заданном формате.          </summary>
      <returns>Текстовое представление объекта в заданном формате.</returns>
      <param name="format">Запрошенный текстовый формат. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>Получает доступ к значениям свойства с помощью нотации [].Это свойство является индексатором класса <see cref="T:System.Management.ManagementBaseObject" />.Можно использовать определяемые типом индексированные свойства по умолчанию, но явно задать собственные свойства нельзя.Однако, если задать атрибут expando для класса, то автоматически будет предоставляться стандартное индексированное свойство типа "объект" с индексом типа "строка".</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, которое содержит управляющий объект свойства определенного класса.</returns>
      <param name="propertyName">Имя затребованного свойства. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>Предоставляет внутренний WMI-объект, представленный как <see cref="T:System.Management.ManagementObject" />.  </summary>
      <returns>
        <see cref="T:System.IntPtr" /> представляет внутренний WMI-объект.  </returns>
      <param name="managementObject">
        <see cref="T:System.Management.ManagementBaseObject" /> ссылается на запрошенный WMI-объект.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Management.PropertyData" />, описывающих свойства управляющего объекта.</summary>
      <returns>Возвращает <see cref="T:System.Management.PropertyDataCollection" />, в которой содержатся свойства для управляющего объекта.</returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>Получает коллекцию объектов <see cref="T:System.Management.QualifierData" />, которые определяются в управляющем объекте.В каждом элементе коллекции содержатся такие сведения, как имя, значение и флагквалификатора.</summary>
      <returns>Возвращает <see cref="T:System.Management.QualifierDataCollection" />, в которой содержатся квалификаторы для управляющего объекта.</returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>Задает значение квалификатора заданного свойства.</summary>
      <param name="propertyName">Имя свойства, которому принадлежит квалификатор.</param>
      <param name="qualifierName">Имя затребованного квалификатора свойства.</param>
      <param name="qualifierValue">Новое значение квалификатора.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>Задает значение именованного свойства.</summary>
      <param name="propertyName">Имя свойства, которое необходимо изменить.</param>
      <param name="propertyValue">Новое значение этого свойства.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>Задает значение именованного квалификатора.</summary>
      <param name="qualifierName">Имя квалификатора, которое необходимо задать.Этот параметр не может быть пустым.</param>
      <param name="qualifierValue">Значение, которое необходимо задать.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Management.ManagementBaseObject" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> содержит сведения, которые требуются для сериализации <see cref="T:System.Management.ManagementBaseObject" /></param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> содержит исходный объект и объект назначения для сериализованного потока, связанного с <see cref="T:System.Management.ManagementBaseObject" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>Получает коллекцию системных свойств WMI управляющего объекта (например, имя класса, сервер и пространство имен).Имена системных свойств WMI начинаются с "__".</summary>
      <returns>Возвращает <see cref="T:System.Management.PropertyDataCollection" />, в которой содержатся системные свойства для управляющего объекта.</returns>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>Представляет класс управления CIM.Класс управления — это класс WMI, например, такой как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Элементы этого класса позволяют осуществлять доступ к данным WMI с помощью определенного пути WMI.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> задает WMI-класс, к которому необходимо установить привязку.Параметр должен задавать путь к классу WMI.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по пути данного класса WMI с использованием заданных параметров.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="path">Экземпляр <see cref="T:System.Management.ManagementPath" /> представляет путь к классу WMI.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении этого класса. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" /> для заданного класса WMI в заданной области и с заданными параметрами.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> задает область (сервер и пространство имен), в которой располагается класс WMI. </param>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> представляет путь к классу WMI в заданной области.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" /> из числа заданных экземпляров классов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" /> содержит сведения, необходимые для сериализации нового <see cref="T:System.Management.ManagementClass" />.</param>
      <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" /> содержит источник сериализованного потока, связанного с новым <see cref="T:System.Management.ManagementClass" />.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по данному пути.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="path">Путь к классу WMI.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по пути данного класса WMI с использованием заданных параметров.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="path">Путь к классу WMI.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" /> для заданного класса WMI в заданной области и с заданными параметрами.Этот класс представляет класс управления CIM — один из таких классов WMI, как Win32_LogicalDisk, который может представлять дисковый накопитель, или Win32_Process, который может представлять процесс, например Notepad.exe.Дополнительные сведения см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
      <param name="scope">Область, в которой располагается класс WMI. </param>
      <param name="path">Путь к классу WMI в пределах заданной области.Класс представляет класс управления CIM из числа классов WMI.Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д.Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI. </param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>Возвращает копию объекта.</summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>Выполняет инициализацию нового экземпляра класса WMI.</summary>
      <returns>
        <see cref="T:System.Management.ManagementObject" /> представляет новый экземпляр класса WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>Получает массив, содержащий все классы WMI в иерархии наследования, начиная с этого класса до самого верхнего класса иерархии.</summary>
      <returns>Коллекция строк, в которой содержатся имена всех классов WMI в иерархии наследования этого класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>Создает производный класс для данного класса.</summary>
      <returns>Новый <see cref="T:System.Management.ManagementClass" />, который представляет новый класс WMI, производный от исходного класса.</returns>
      <param name="newClassName">Имя нового производного класса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>Возвращает коллекцию всех экземпляров класса.</summary>
      <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих экземпляры класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>Возвращает коллекцию всех экземпляров класса в соответствии с заданными параметрами.</summary>
      <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих экземпляры класса в соответствии с заданными параметрами.</returns>
      <param name="options">Дополнительные параметры операции. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>Возвращает коллекцию всех экземпляров класса в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Возвращает коллекцию всех экземпляров класса в соответствии с заданными параметрами в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <param name="options">Заданные дополнительные параметры получения экземпляров. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые необходимы для десериализации поля, представленного данным экземпляром.          </summary>
      <param name="info">Объект, который будет заполнен сведениями о сериализации.</param>
      <param name="context">Местоположение, где будут храниться и откуда будут извлекаться сериализованные данные.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>Извлекает классы, связанные с классом WMI.</summary>
      <returns>Коллекция объектов <see cref="T:System.Management.ManagementClass" /> или <see cref="T:System.Management.ManagementObject" />, представляющая классы WMI или экземпляры, связанные с классом WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>Извлекает классы, связанные с классом WMI, в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Извлекает классы, связанные с классом WMI, по имени связанного класса в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <param name="relatedClass">Имя связанного класса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Извлекает классы, связанные с WMI-классом, в асинхронном режиме в соответствии с заданными параметрами.</summary>
      <param name="watcher">Обработчик процесса и результатов асинхронной операции. </param>
      <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы. </param>
      <param name="relationshipClass">Тип отношения, который необходимо установить между результирующими классами и исходным классом. </param>
      <param name="relationshipQualifier">Этот квалификатор должен присутствовать в отношении. </param>
      <param name="relatedQualifier">Этот квалификатор должен присутствовать в результирующих классах. </param>
      <param name="relatedRole">Результирующие классы должны играть эту роль в отношении. </param>
      <param name="thisRole">Исходный класс должен играть эту роль в отношении. </param>
      <param name="options">Параметры извлечения результирующих классов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>Извлекает классы, связанные с классом WMI.</summary>
      <returns>Коллекция классов, связанных с данным классом.</returns>
      <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Извлекает классы, связанные с классом WMI, в соответствии с заданными параметрами.</summary>
      <returns>Коллекция классов, связанных с данным классом.</returns>
      <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы. </param>
      <param name="relationshipClass">Тип отношения, который необходимо установить между результирующими классами и исходным классом. </param>
      <param name="relationshipQualifier">Этот квалификатор должен присутствовать в отношении. </param>
      <param name="relatedQualifier">Этот квалификатор должен присутствовать в результирующих классах. </param>
      <param name="relatedRole">Результирующие классы должны играть эту роль в отношении. </param>
      <param name="thisRole">Исходный класс должен играть эту роль в отношении. </param>
      <param name="options">Параметры извлечения результирующих классов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>Извлекает классы отношений, которые связывают данный класс с другими.</summary>
      <returns>Коллекция классов сопоставлений, которые связывают данный класс с каким-либо другим классом.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>Извлекает классы отношений, которые связывают данный класс с другими, в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Извлекает классы отношений, которые связывают данный класс с указанным WMI-классом, в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <param name="relationshipClass">Класс WMI, на который должны указывать все возвращенные отношения. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Извлекает классы отношений, которые связывают данный класс в соответствии с заданными параметрами, в асинхронном режиме.</summary>
      <param name="watcher">Обработчик процесса и результатов асинхронной операции. </param>
      <param name="relationshipClass">Класс, на основе которого необходимо создать все производные результирующие классы отношений. </param>
      <param name="relationshipQualifier">Квалификатор, который должен присутствовать в результирующих классах отношений. </param>
      <param name="thisRole">Роль, которую исходный класс должен играть в результирующих классах отношений. </param>
      <param name="options">Параметры извлечения результатов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>Извлекает классы отношений, которые связывают данный класс с другими, в случае, если заданный класс является конечным классом.</summary>
      <returns>Коллекция классов сопоставлений, которые связывают данный класс с другим заданным классом.Дополнительные сведения о классах отношений см. в разделе "Инструкция ASSOCIATORS OF" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">Конечный класс для всех возвращенных классов отношений. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Извлекает классы отношений, которые связывают данный класс с другими, в соответствии с заданными параметрами, в асинхронном режиме.</summary>
      <returns>Коллекция классов сопоставлений, которые связывают данный класс с другими в соответствии с заданными параметрами.Дополнительные сведения о классах отношений см. в разделе "Инструкция ASSOCIATORS OF" в документации Windows Management Instrumentation в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">Все производные результирующие классы отношений должны создаваться на основе этого класса. </param>
      <param name="relationshipQualifier">Результирующие классы отношений должны содержать этот квалификатор. </param>
      <param name="thisRole">Исходный класс должен играть эту роль в результирующих классах отношений. </param>
      <param name="options">Задает параметры извлечения результатов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>Создает строго типизированный класс для заданного класса WMI.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" />, представляет объявление для строго типизированного класса.</returns>
      <param name="includeSystemClassInClassDef">Чтобы включить класс для управления системными свойствами, установите значение true; в противном случае установите значение false. </param>
      <param name="systemPropertyClass">Чтобы создаваемый класс управлял системными свойствами, установите значение true; в противном случае установите значение false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>Создает строго типизированный класс для заданного класса WMI.В зависимости от входных параметров эта функция создает программный код для Visual Basic, C#, JScript, J# или С++.</summary>
      <returns>Значение true, если метод выполнен успешно; в противном случае — значение false.</returns>
      <param name="lang">Язык создаваемого программного кода.Язык кода извлекается из перечисления <see cref="T:System.Management.CodeLanguage" />.</param>
      <param name="filePath">Путь для записи файла кода. </param>
      <param name="classNamespace">Пространство имен .NET, в котором необходимо создать класс.Если этот параметр оставить пустым, пространство имен будет создано из пространства имен WMI.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>Возвращает коллекцию всех подклассов данного класса.</summary>
      <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих подклассы класса WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>Извлекает подклассы класса в соответствии с заданными параметрами.</summary>
      <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих подклассы класса WMI в соответствии с заданными параметрами.</returns>
      <param name="options">Заданные дополнительные параметры извлечения подклассов класса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>Возвращает коллекцию всех производных классов, созданных на основе данного класса, в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Извлекает все производные классы, созданные на основе данного класса, в асинхронном режиме в соответствии с заданными параметрами.</summary>
      <param name="watcher">Объект, предназначенный для управления асинхронной операцией. </param>
      <param name="options">Заданные дополнительные параметры для извлечения производных классов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>Получает или задает коллекцию объектов <see cref="T:System.Management.MethodData" />, представляющих методы, определенные в классе WMI.</summary>
      <returns>
        <see cref="T:System.Management.MethodDataCollection" /> представляет методы, определенные в классе WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>Получает или задает путь класса WMI, к которому привязан объект <see cref="T:System.Management.ManagementClass" />.</summary>
      <returns>Путь к классу объекта.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>Обеспечивает методы преобразования интервалов даты/времени и времени из формата DMTF в совместимые со средой CLR форматы <see cref="T:System.DateTime" /> и <see cref="T:System.TimeSpan" /> и наоборот.                           </summary>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>Преобразует данные дату/время в формате DMTF в формат <see cref="T:System.DateTime" />.Возвращаются <see cref="T:System.DateTime" />, которые соответствуют текущему часовому поясу системы.</summary>
      <returns>
        <see cref="T:System.DateTime" /> представляет данные дату/время в формате DMTF.</returns>
      <param name="dmtfDate">Строка, представляющая дату/время в формате DMTF.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>Преобразует данные <see cref="T:System.DateTime" /> в формат даты/времени DMTF.          </summary>
      <returns>Строка, представляющая дату/время в формате DMTF для данного <see cref="T:System.DateTime" />.</returns>
      <param name="date">
        <see cref="T:System.DateTime" /> представляет дату/время, которые необходимо преобразовать в дату/время в формате DMTF.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>Преобразует данные <see cref="T:System.TimeSpan" /> в интервал времени в формате DMTF.          </summary>
      <returns>Строка, представляющая интервал времени в формате DMTF для данного <see cref="T:System.TimeSpan" />.</returns>
      <param name="timespan">
        <see cref="T:System.TimeSpan" /> представляет дату/время, которые необходимо преобразовать в интервал времени в формате DMTF.             </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>Преобразует данный интервал времени в формате DMTF в <see cref="T:System.TimeSpan" />.          </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> представляет заданный интервал времени в формате DMTF.</returns>
      <param name="dmtfTimespan">Строковое представление интервала времени в формате DMTF.</param>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>Представляет виртуальный базовый класс, предназначенный для хранения данных событий WMI.          </summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>Получает контекст операции, возвращаемый операцией, которая вызвала событие.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" /> для контекста операции.</returns>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>Осуществляет подписку на временные уведомления о событиях в соответствии с заданным запросом событий.          </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEventWatcher" />.Для дальнейшей инициализации следует задать свойства объекта.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEventWatcher" /> при наличии запроса WMI-события.          </summary>
      <param name="query">
        <see cref="T:System.Management.EventQuery" /> представляет запрос WMI-событий, который определяет события, прослушиваемые наблюдателем.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>Выполняет инициализацию нового экземпляра <see cref="T:System.Management.ManagementEventWatcher" />, который прослушивает события, удовлетворяющие данному запросу WMI-событий.          </summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> представляет область (пространство имен), в котором наблюдатель должен прослушивать события.</param>
      <param name="query">
        <see cref="T:System.Management.EventQuery" /> представляет запрос WMI-событий, который определяет события, прослушиваемые наблюдателем.  </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEventWatcher" />, который прослушивает события, удовлетворяющие данному запросу WMI-событий в соответствии с заданными параметрами.Для этого варианта запрос и область представляют собой настраиваемые объекты.Параметрический объект может задавать такие параметры, как время ожидания и контекст.</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> представляет область (пространство имен), в котором наблюдатель должен прослушивать события.</param>
      <param name="query">
        <see cref="T:System.Management.EventQuery" /> представляет запрос WMI-событий, который определяет события, прослушиваемые наблюдателем. </param>
      <param name="options">
        <see cref="T:System.Management.EventWatcherOptions" /> представляет дополнительные параметры отслеживания событий. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEventWatcher" />, если данный запрос WMI-событий представлен в виде строки.          </summary>
      <param name="query"> Запрос WMI-событий, определяющий события, которые должен прослушивать наблюдатель.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра <see cref="T:System.Management.ManagementEventWatcher" />, который прослушивает события, удовлетворяющие данному запросу WMI-событий.Для этого варианта запрос и область задаются в виде строк.</summary>
      <param name="scope">Область управления (пространство имен), в которой наблюдатель должен прослушивать события.</param>
      <param name="query">Запрос, определяющий события, которые должен прослушивать наблюдатель. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEventWatcher" />, который прослушивает события, удовлетворяющие данному запросу WMI-событий в соответствии с заданными параметрами.Для этого варианта запрос и область задаются в виде строк.Параметрический объект может задавать такие параметры, как время ожидания и контекст.</summary>
      <param name="scope">Область управления (пространство имен), в которой наблюдатель должен прослушивать события.</param>
      <param name="query">Запрос, определяющий события, которые должен прослушивать наблюдатель.  </param>
      <param name="options">
        <see cref="T:System.Management.EventWatcherOptions" /> представляет дополнительные параметры отслеживания событий. </param>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>Происходит, когда возникает новое событие.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>Обеспечивает очистку всех незавершенных вызовов.Это деструктор объекта.В C# для выражения методов завершения используется синтаксис деструктора.</summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>Получает или задает параметры отслеживания событий. </summary>
      <returns>Возвращает <see cref="T:System.Management.EventWatcherOptions" />, в котором содержатся параметры события, используемые для отслеживания событий.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>Получает или задает критерии, которым должны отвечать события.      </summary>
      <returns>Возвращает <see cref="T:System.Management.EventQuery" />, содержащий запрос, которому должны соответствовать события.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>Получает или задает область (или пространство имен), в которой необходимо отслеживать события.      </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementScope" />, содержащую область, в которой необходимо отслеживать события.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>Осуществляет подписку на события, удовлетворяющие данному запросу, и доставляет их в асинхронном режиме с помощью события <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>Отменяет подписку, независимо от того, является ли она синхронной или асинхронной.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>Происходит, когда отменяется подписка.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>Ожидает следующего события, которое удовлетворяет заданному запросу, а затем возвращает это событие.          </summary>
      <returns>
        <see cref="T:System.Management.ManagementBaseObject" /> представляет новое возникшее событие.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>Представляет исключения управления.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementException" />.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class that is serializable.          </summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который необходимо заполнить данными.</param>
      <param name="context">Целевой <see cref="T:System.Runtime.Serialization.StreamingContext" /> для этой сериализации.</param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementException" /> с заданным сообщением об ошибке.          </summary>
      <param name="message">Сообщение, описывающее ошибку. </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>Initializes an empty new instance of the <see cref="T:System.Management.ManagementException" /> class.Если для параметра <paramref name="innerException" /> не задано значение null, текущее исключение генерируется в блоке Catch, который обрабатывает внутреннее исключение.</summary>
      <param name="message">Сообщение, описывающее ошибку. </param>
      <param name="innerException">Исключение, послужившее причиной текущего исключения.</param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>Получает из WMI код ошибки, вызвавшей данное исключение.          </summary>
      <returns>Возвращает значение <see cref="T:System.Management.ManagementStatus" />, перечисления, в котором содержится код ошибки.</returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>Получает из WMI расширенный объект ошибки.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержатся расширенные сведения об ошибке.</returns>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые требуются для сериализации объекта <see cref="T:System.Management.ManagementException" />.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">Целевой <see cref="T:System.Runtime.Serialization.StreamingContext" /> для этой сериализации.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>Представляет коллекцию именованных значений, которые можно использовать в качестве контекстных данных для операций WMI.Имена не чувствительны к регистру.</summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>Выполняет инициализацию нового пустого экземпляра класса <see cref="T:System.Management.ManagementNamedValueCollection" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementNamedValueCollection" />, который поддерживает сериализацию и использует заданные <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.          </summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который необходимо заполнить данными.</param>
      <param name="context">Целевое местоположение сериализации (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>Добавляет в коллекцию значение с одним именем.          </summary>
      <param name="name">Имя нового значения.</param>
      <param name="value">Значение, которое необходимо связать с данным именем.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>Создает клон коллекции.Клонируются отдельные значения.Если значение не поддерживает клонирование, генерируется <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Новая копия коллекции.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>Получает значение, связанное с заданным именем из этой коллекции.В C# это свойство является индексатором класса <see cref="T:System.Management.ManagementNamedValueCollection" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, связанное с заданным именем из этой коллекции.</returns>
      <param name="name">Имя возвращаемого значения. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>Удаляет из коллекции значение с одним именем.Если в коллекции нет элементов с заданным именем, коллекция остается неизменной и исключения не генерируются.</summary>
      <param name="name">Имя значения, которое необходимо удалить. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>Удаляет из коллекции все вхождения.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>Представляет экземпляр WMI. </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementObject" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" /> для заданного пути к WMI-объекту.Путь предоставляется в виде <see cref="T:System.Management.ManagementPath" />.</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> содержит путь к WMI-объекту. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" />, привязанного к заданному пути WMI, с использованием заданных дополнительных параметров.</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> содержит путь WMI. </param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> содержит дополнительные параметры для привязки к WMI-объекту.Этот параметр может быть пустым. В этом случае используются стандартные установки.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" />, привязанного к заданному WMI-пути, с использованием заданных параметров.</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> представляет область, в которой располагается WMI-объект.В этой версии областью может быть только пространство имен WMI.</param>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> представляет WMI-путь к управляемому объекту. </param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> задает дополнительные параметры для получения объекта. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" />, поддерживающего сериализацию.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который необходимо заполнить данными. </param>
      <param name="context">Целевое местоположение сериализации (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />). </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" /> для заданного пути к WMI-объекту.Путь предоставляется в виде строки.</summary>
      <param name="path">Путь WMI. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" />, привязанного к заданному пути WMI, с использованием заданных дополнительных параметров.В данном случае путь может быть задан в виде строки.</summary>
      <param name="path">Путь WMI к объекту. </param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет параметры для получения заданного WMI-объекта. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObject" />, привязанного к заданному пути WMI, и включает заданные параметры.Область и путь задаются в виде строк.</summary>
      <param name="scopeString">Область для WMI-объекта. </param>
      <param name="pathString">Путь WMI-объекта. </param>
      <param name="options">
        <see cref="T:System.Management.ObjectGetOptions" /> представляет дополнительные параметры для получения WMI-объекта. </param>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>Возвращает или задает путь к классу объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementPath" /> представляет путь к классу объекта.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>Создает копию объекта.</summary>
      <returns>Копируемый объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>Копирует объект в другое местоположение в асинхронном режиме.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> задает путь, по которому должен быть скопирован объект. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Копирует объект в другое местоположение в асинхронном режиме.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="path">Путь, по которому будет скопирован объект. </param>
      <param name="options">Параметры размещения объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>Копирует объект в другое местоположение в асинхронном режиме.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="path">Путь, по которому будет скопирован объект. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>Копирует объект в другое местоположение в асинхронном режиме.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="path">Путь, по которому будет скопирован объект. </param>
      <param name="options">Параметры размещения объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>Копирует объект в другое местоположение.</summary>
      <returns>Новый путь скопированного объекта.</returns>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" />, по которому необходимо скопировать данный объект. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Копирует объект в другое местоположение.</summary>
      <returns>Новый путь скопированного объекта.</returns>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" />, по которому необходимо скопировать данный объект. </param>
      <param name="options">Параметры размещения объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>Копирует объект в другое местоположение.</summary>
      <returns>Новый путь скопированного объекта.</returns>
      <param name="path">Путь, по которому будет скопирован объект. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>Копирует объект в другое местоположение.</summary>
      <returns>Новый путь скопированного объекта.</returns>
      <param name="path">Путь, по которому будет скопирован объект. </param>
      <param name="options">Параметры размещения объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>Удаляет объект.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>Удаляет объект.</summary>
      <param name="options">Параметры удаления объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>Удаляет объект.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>Удаляет объект.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="options">Параметры удаления объекта. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>Освобождает все ресурсы, используемые компонентом.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>Привязывает сведения класс WMI к управляющему объекту.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>Устанавливает привязку к управляющему объекту в асинхронном режиме.</summary>
      <param name="watcher">Объект, предназначенный для получения результатов операции в виде событий. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, представляющий список входных параметров метода.</summary>
      <returns>
        <see cref="T:System.Management.ManagementBaseObject" /> содержит входные параметры метода.</returns>
      <param name="methodName">Имя метода. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые необходимы для десериализации поля, представленного данным экземпляром.          </summary>
      <param name="info">Объект, который будет заполнен сведениями о сериализации.</param>
      <param name="context">Местоположение, где будут храниться и откуда будут извлекаться сериализованные данные.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>Получает коллекцию объектов, связанных с объектом (соединители).</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" /> содержит связанные объекты.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>Возвращает коллекцию объектов, связанных с объектом (соединители) в асинхронном режиме.Этот вызов немедленно возвращает результат и, в случае доступности результатов, вызывается делегат.</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>Получает коллекцию объектов, связанных с объектом (соединители).</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <param name="relatedClass">Класс связанных объектов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Получает коллекцию объектов, связанных с объектом (соединители).</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <param name="relatedClass">Класс связанных объектов. </param>
      <param name="relationshipClass">Затребованный класс отношений. </param>
      <param name="relationshipQualifier">Квалификатор, который должен присутствовать в классе отношений. </param>
      <param name="relatedQualifier">Квалификатор, который должен присутствовать в связанном классе. </param>
      <param name="relatedRole">Роль, которую связанный класс должен играть в отношении. </param>
      <param name="thisRole">Роль, которую данный класс играет в отношении. </param>
      <param name="classDefinitionsOnly">Возвращает только определения классов для экземпляров, которые удовлетворяют условиям запроса. </param>
      <param name="options">Расширенные параметры выполнения запроса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>Получает коллекцию объектов, связанных с объектом (соединители).</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" /> содержит связанные объекты.</returns>
      <param name="relatedClass">Класс связанных объектов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Получает коллекцию объектов, связанных с объектом (соединители).</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" /> содержит связанные объекты.</returns>
      <param name="relatedClass">Класс связанных объектов. </param>
      <param name="relationshipClass">Затребованный класс отношений. </param>
      <param name="relationshipQualifier">Квалификатор, который должен присутствовать в классе отношений. </param>
      <param name="relatedQualifier">Квалификатор, который должен присутствовать в связанном классе. </param>
      <param name="relatedRole">Роль, которую связанный класс должен играть в отношении. </param>
      <param name="thisRole">Роль, которую данный класс играет в отношении. </param>
      <param name="classDefinitionsOnly">Когда данный метод возвращает результат, он содержит только определения классов для экземпляров, которые удовлетворяют условиям запроса. </param>
      <param name="options">Расширенные параметры выполнения запроса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" />, в которой содержатся объекты ассоциаций.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <param name="relationshipClass">Ассоциации, которые необходимо включить. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <param name="watcher">Объект, используемый для возвращения результатов. </param>
      <param name="relationshipClass">Тип затребованного отношения. </param>
      <param name="relationshipQualifier">Данный квалификатор должен присутствовать в отношении. </param>
      <param name="thisRole">Роль, которую данный объект играет в отношении. </param>
      <param name="classDefinitionsOnly">Когда данный метод возвращает результат, он содержит только определения классов для набора результатов. </param>
      <param name="options">Расширенные параметры выполнения запроса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" />, в которой содержатся объекты ассоциаций.</returns>
      <param name="relationshipClass">Ассоциации, которые необходимо включить. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Получает коллекцию ассоциаций объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" />, в которой содержатся объекты ассоциаций.</returns>
      <param name="relationshipClass">Тип затребованного отношения. </param>
      <param name="relationshipQualifier">Данный квалификатор должен присутствовать в отношении. </param>
      <param name="thisRole">Роль, которую данный объект играет в отношении. </param>
      <param name="classDefinitionsOnly">Когда данный метод возвращает результат, он содержит только определения классов для набора результатов. </param>
      <param name="options">Расширенные параметры выполнения запроса. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Вызывает метод для обработки объекта в асинхронном режиме.</summary>
      <param name="watcher">
        <see cref="T:System.Management.ManagementOperationObserver" /> позволяет управлять асинхронной операцией и обрабатывать ее результаты. </param>
      <param name="methodName">Имя выполняемого метода. </param>
      <param name="inParameters">
        <see cref="T:System.Management.ManagementBaseObject" /> содержит входные параметры метода. </param>
      <param name="options">
        <see cref="T:System.Management.InvokeMethodOptions" /> содержит дополнительные параметры выполнения метода. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>Вызывает метод для обработки объекта в асинхронном режиме.</summary>
      <param name="watcher">Объект, принимающий результаты операции. </param>
      <param name="methodName">Имя метода, который необходимо выполнить. </param>
      <param name="args">Массив, в котором содержатся значения параметров. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Вызывает метод для обработки WMI-объекта.Входные и выходные параметры представлены в виде объектов <see cref="T:System.Management.ManagementBaseObject" />.</summary>
      <returns>
        <see cref="T:System.Management.ManagementBaseObject" /> содержит выходные параметры и возвращаемое значение выполняемого метода.</returns>
      <param name="methodName">Имя метода, который необходимо выполнить. </param>
      <param name="inParameters">
        <see cref="T:System.Management.ManagementBaseObject" /> содержит входные параметры метода. </param>
      <param name="options">
        <see cref="T:System.Management.InvokeMethodOptions" /> содержит дополнительные параметры выполнения метода. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>Вызывает метод для обработки объекта.</summary>
      <returns>Значение объекта, возвращенное методом.</returns>
      <param name="methodName">Имя метода, который необходимо выполнить. </param>
      <param name="args">Массив, в котором содержатся значения параметров. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>Возвращает или задает дополнительные сведения, которые необходимо использовать при извлечении объекта.</summary>
      <returns>
        <see cref="T:System.Management.ObjectGetOptions" /> используется при извлечении объекта.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>Возвращает или задает путь WMI к объекту.</summary>
      <returns>
        <see cref="T:System.Management.ManagementPath" /> представляет путь к объекту.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>Фиксирует изменения объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementPath" /> содержит путь к фиксируемому объекту.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>Фиксирует изменения объекта в асинхронном режиме.</summary>
      <param name="watcher">
        <see cref="T:System.Management.ManagementOperationObserver" /> позволяет управлять асинхронной операцией и обрабатывать ее результаты. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>Фиксирует изменения объекта в асинхронном режиме с использованием заданных параметров.</summary>
      <param name="watcher">
        <see cref="T:System.Management.ManagementOperationObserver" /> позволяет управлять асинхронной операцией и обрабатывать ее результаты. </param>
      <param name="options">
        <see cref="T:System.Management.PutOptions" /> позволяет задать дополнительные параметры для операции фиксации. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>Фиксирует изменения объекта.</summary>
      <returns>
        <see cref="T:System.Management.ManagementPath" /> содержит путь к фиксируемому объекту.</returns>
      <param name="options">Параметры фиксации изменений. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>Возвращает или задает область, в которой располагается данный объект.</summary>
      <returns>Объект <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>Возвращает полный путь к объекту.Это значение переопределяет стандартную реализацию объекта.</summary>
      <returns>Полный путь к объекту.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>Представляет различные коллекции управляющих объектов, извлекаемых с помощью WMI.Объекты в этой коллекции относятся к типам, производным от <see cref="T:System.Management.ManagementBaseObject" />, в том числе <see cref="T:System.Management.ManagementObject" /> и <see cref="T:System.Management.ManagementClass" />.Коллекция может представлять собой результат WMI-запроса, выполненного с помощью <see cref="T:System.Management.ManagementObjectSearcher" />, или же перечисление управляющих объектов заданного типа, извлекаемых с помощью <see cref="T:System.Management.ManagementClass" />, представляющего этот тип.Кроме того, это может быть коллекция управляющих объектов, привязанных заданным способом к определенному управляющему объекту. В этом случае коллекция извлекается с помощью такого метода, как <see cref="M:System.Management.ManagementObject.GetRelated" />.Для прохождения по коллекции можно использовать <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" />, а объекты, которые содержатся в коллекции можно, в свою очередь, просматривать, а также управлять ими при выполнении различных задач управления.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует коллекцию в массив.          </summary>
      <param name="array">Массив, в который необходимо скопировать коллекцию. </param>
      <param name="index">Индекс, с которого должна начаться операция. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>Копирует элементы коллекции в массив <see cref="T:System.Management.ManagementBaseObject" />.          </summary>
      <param name="objectCollection">The target array.</param>
      <param name="index">Индекс, с которого должна начаться операция. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>Получает значение, указывающее количество объектов в коллекции.          </summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, указывающее количество объектов в коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>Освобождает ресурсы, связанные с данным объектом.После вызова этого метода попытка использовать этот объект приведет к созданию исключения <see cref="T:System.ObjectDisposedException" />.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>Удаляет ресурсы, которые удерживал объект.Это деструктор объекта.Для выражения методов завершения используется синтаксис деструктора.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>Возвращает перечислитель коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> можно использовать для перебора элементов коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли объект синхронизированным.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли объект синхронизированным.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>Получает объект, который необходимо использовать для синхронизации.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, представляющее объект, который необходимо использовать для синхронизации.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</returns>
    </member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>Представляет перечислитель коллекции. </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>Получает текущий <see cref="T:System.Management.ManagementBaseObject" />, на который указывает перечислитель.</summary>
      <returns>Текущий объект перечисления.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>Освобождает ресурсы, связанные с данным объектом.После вызова этого метода попытка использовать этот объект приведет к созданию исключения <see cref="T:System.ObjectDisposedException" />.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>Удаляет ресурсы, которые удерживал объект.Это деструктор объекта.Для выражения методов завершения используется синтаксис деструктора.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>Указывает, переместилась ли позиция перечислителя к следующему объекту перечисления.</summary>
      <returns>Значение true, если перечислитель успешно переместился к следующему элементу; значение false, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>Устанавливает перечислитель на начало коллекции.</summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект в коллекции.</summary>
      <returns>Возвращает текущий элемент коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>Извлекает коллекцию управляющих объектов в соответствии с заданным запросом.Этот класс является одной из наиболее часто используемых исходных точек входа для извлечения сведений об управлении.Например, его можно использовать для перечисления всех дисководов, сетевых адаптеров, процессов и прочих управляющих объектов в системе, либо для запроса всех работающих сетевых подключений, приостановленных служб и т. д.When instantiated, an instance of this class takes as input a WMI query represented in an <see cref="T:System.Management.ObjectQuery" /> or its derivatives, and optionally a <see cref="T:System.Management.ManagementScope" /> representing the WMI namespace to execute the query in.It can also take additional advanced options in an <see cref="T:System.Management.EnumerationOptions" />.При вызове метода <see cref="M:System.Management.ManagementObjectSearcher.Get" /> для этого объекта <see cref="T:System.Management.ManagementObjectSearcher" /> выполняет данный запрос в заданной области и возвращает коллекцию управляющих объектов, которые удовлетворяют запросу, в <see cref="T:System.Management.ManagementObjectCollection" />.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />.Если для этого объекта задать некоторые свойства, его можно будет использовать для вызова запроса сведений об управлении.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, используемого для вызова заданного запроса в заданной области.          </summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> представляет область, в которой необходимо вызвать запрос.</param>
      <param name="query">
        <see cref="T:System.Management.ObjectQuery" /> представляет запрос, который необходимо вызвать. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, используемого для вызова заданного запроса в заданной области в соответствии с заданными параметрами.          </summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" /> задает область для запроса.</param>
      <param name="query">
        <see cref="T:System.Management.ObjectQuery" /> задает вызываемый запрос. </param>
      <param name="options">
        <see cref="T:System.Management.EnumerationOptions" /> задает дополнительные параметры запроса. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, который позволяет вызывать заданный запрос сведений об управлении.          </summary>
      <param name="query">
        <see cref="T:System.Management.ObjectQuery" /> представляет запрос, который будет вызван модулем поиска.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, который позволяет вызывать заданный запрос сведений об управлении.          </summary>
      <param name="queryString">WMI-запрос, вызываемый объектом.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, используемого для вызова заданного запроса в заданной области.          </summary>
      <param name="scope">Область, в которой необходимо выполнить запрос.</param>
      <param name="queryString">Вызываемый запрос.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementObjectSearcher" />, который позволяет вызвать заданный запрос в заданной области в соответствии с заданными параметрами.          </summary>
      <param name="scope">Область, в которой необходимо вызвать запрос.</param>
      <param name="queryString">Вызываемый запрос. </param>
      <param name="options">
        <see cref="T:System.Management.EnumerationOptions" /> задает дополнительные параметры запроса.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>Вызывает заданный WMI-запрос и возвращает результирующую коллекцию.          </summary>
      <returns>
        <see cref="T:System.Management.ManagementObjectCollection" /> содержит объекты, удовлетворяющие заданному запросу.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>Взывает WMI-запрос в асинхронном режиме и устанавливает привязку к наблюдателю, который должен поставлять результаты.          </summary>
      <param name="watcher">Наблюдатель, который возвращает события, вызванные операцией. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>Получает или задает параметры поиска объектов.          </summary>
      <returns>Возвращает <see cref="T:System.Management.EnumerationOptions" />, в котором содержатся параметры поиска объектов WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>Получает или задает запрос, который должен быть вызван модулем поиска (то есть, критерии, которые нужно применить при поиске управляющих объектов).          </summary>
      <returns>Возвращает <see cref="T:System.Management.ObjectQuery" />, содержащий запрос, который должен быть вызван в модуле поиска.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>Получает или задает область, в которой необходимо искать объекты (область представляет собой пространство имен WMI).          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementScope" />, содержащее область (пространство имен), в которой необходимо искать объекты WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>Управляет асинхронными операциями и обрабатывает сведения об управлении и события, получаемые асинхронно.          </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementOperationObserver" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>Отменяет все незавершенные операции.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>Происходит при завершении операции.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>Происходит при успешной фиксации объекта.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>Происходит, когда становится доступен новый объект.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>Происходит для отображения хода текущей операции.</summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>Обеспечивает абстрактный базовый класс для всех параметрических объектов.</summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>Получает или задает контекстный объект WMI.Это список пар имя/значение, который необходимо передать поставщику WMI, поддерживающему контекстные сведения для настраиваемой операции.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementNamedValueCollection" />, в которой содержатся контекстные сведения о WMI. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>Указывает, что отсчет времени ожидания не производится.</summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>Получает или задает время ожидания для операции.Обратите внимание, что для операций, возвращающих коллекции, это время ожидания применяется к перечислению, которое выполняется в результирующей коллекции, а не к самой операции (к операции применяется свойство <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />).Это свойство позволяет указать, что операция должна быть выполнена в полусинхронном режиме.</summary>
      <returns>Возвращает <see cref="T:System.TimeSpan" />, которое определяет время ожидания, применяемое к операции.</returns>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>Обеспечивает оболочку для анализа и построения WMI-объектов.          </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>Выполняет инициализацию нового пустого экземпляра класса <see cref="T:System.Management.ManagementPath" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementPath" /> для заданного пути.          </summary>
      <param name="path"> Путь к объекту. </param>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>Получает или задает часть пути, которая определяет класс.                       </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится часть пути, определяющая класс.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>Возвращает копию <see cref="T:System.Management.ManagementPath" />.          </summary>
      <returns>Клонированный объект.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>Получает или задает стандартный путь области в случаях, когда область не указана.The default scope is \\.\root\cimv2, and can be changed by setting this property.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementPath" />, который содержит стандартную область (пространство имен), используемые в случаях, когда область не указана.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>Получает или задает значение, указывающее, является ли это значение путем к классу.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли это значение путем к классу.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>Получает или задает значение, указывающее, является ли это значение путем к экземпляру.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли это значение путем к экземпляру.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>Получает или задает значение, указывающее, является ли это значение путем к одноэлементному экземпляру.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли это значение путем к одноэлементному экземпляру.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>Получает или задает часть пути, определяющую пространство имен.Обратите внимание, что сюда не входит имя сервера, которое может извлекаться отдельно.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится часть пути, определяющая пространство имен.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>Получает или задает строковое представление полного пути в объекте.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится полный путь.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>Получает или задает относительный путь: только имя класса и ключи.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится относительный путь.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>Получает или задает серверную часть пути.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя сервера.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>Задает путь в качестве пути к новому классу.Это означает, что путь должен содержать имя класса, но не значения ключей.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>Задает путь в качестве пути к новому одноэлементному объекту.Это означает, что путь к экземпляру не содержит значений ключей.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.  </summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>Возвращает строковое представление полного пути к объекту.          </summary>
      <returns>Строка, содержащая полный путь, представленный этим объектом.Это значение эквивалентно значению свойства <see cref="P:System.Management.ManagementPath.Path" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>Обеспечивает абстрактный базовый класс для всех управляющих объектов-запросов.           </summary>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.             </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>Анализирует строку запроса и задает соответствующие значения свойств.Если запрос действителен, то будут проанализированы свойство имени класса и свойство условия, связанные с этим запросом.</summary>
      <param name="query">Строка запроса, которую необходимо проанализировать.</param>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>Получает или задает язык запросов, который необходимо использовать в строке запроса, чтобы определить формат строки запроса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится формат строки запроса.</returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>Получает или задает запрос в текстовом формате.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится запрос.</returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>Представляет область (пространство имен) для управляющих операций.           </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementScope" /> со стандартными значениями.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementScope" />, который представляет заданный путь к области.          </summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> содержит путь к серверу и пространству имен для <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementScope" />, который представляет путь к заданной области в соответствии с заданными параметрами.          </summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" /> содержит путь к серверу и пространству имен для <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">
        <see cref="T:System.Management.ConnectionOptions" /> содержит параметры подключения. </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementScope" />, который представляет заданный путь к области.          </summary>
      <param name="path">Путь к серверу и пространству имен для <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementScope" />, который представляет путь к заданной области в соответствии с заданными параметрами.          </summary>
      <param name="path">Сервер и пространство имен для <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">
        <see cref="T:System.Management.ConnectionOptions" /> содержит параметры подключения. </param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Новая копия <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>Подключает эту область <see cref="T:System.Management.ManagementScope" /> к фактической области WMI.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>Получает значение, указывающее, привязана ли в данный момент <see cref="T:System.Management.ManagementScope" /> к WMI-серверу и пространству имен.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, привязана ли в данный момент область к WMI-серверу и пространству имен.</returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>Получает или задает параметры для установки подключения к WMI.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ConnectionOptions" />, в котором содержатся параметры подключения к WMI.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>Получает или задает путь к <see cref="T:System.Management.ManagementScope" />.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementPath" />, в котором содержится путь к области (пространству имен).</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.  </summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>Описывает перечисление всех определенных на данный момент кодов ошибок WMI. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>Операция выполнена успешно. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>Это значение возвращается, если больше нет доступных объектов, а также если количество возвращенных объектов меньше запрошенного числа или если достигнут конец перечисления.Также оно возвращается, когда вызывается метод со значением параметра равным нулю.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>Удалено переопределенное свойство.Это значение возвращается для того, чтобы сообщить, что в результате удаления было восстановлено исходное (непереопределенное) значение.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>Сравниваемые элементы (например, объекты и классы) не идентичны.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>Время ожидания вызова истекло.Это не ошибочное условие, следовательно, некоторые результаты могут быть возвращены.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>В перечислении больше нет доступных данных; пользователь должен завершить перечисление. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>Операция отменена.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>Запрос все еще выполняется, однако результаты еще не доступны.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>В результирующем наборе перечисления обнаружено несколько копий одного объекта. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>Пользователь не получил все запрошенные объекты, так как ресурсы недоступны (эта причина не связана с нарушениями безопасности).</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>Вызов не выполнен.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>Объект не найден. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>Текущий пользователь не имеет разрешения на выполнение данного действия. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>Сбой поставщика после инициализации. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>Обнаружено несоответствие типов. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>Недостаточно памяти для выполнения операции. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>Недопустимый контекстный объект.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>Один из параметров вызова указан неправильно. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>Ресурс (обычно удаленный сервер) в данный момент недоступен. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>Произошла внутренняя, критическая, неожиданная ошибка.Отправьте отчет об этой ошибке в службу технической поддержки корпорации Майкрософт.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>В течение удаленного сеанса поврежден один или несколько сетевых пакетов.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>Эта функция или операция не поддерживается. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>Задан недопустимый суперкласс. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>Заданное пространство имен не найдено. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>Задан недопустимый экземпляр. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>Задан недопустимый класс. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>Поставщик, на которого ссылается схема, не имеет соответствующей регистрации. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>Поставщик, на которого ссылается схема, имеет неверную или неполную регистрацию. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>COM не может найти поставщика, на которого ссылается схема. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>Инициализация компонента, например поставщика, не выполнена по внутренним причинам. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary> Произошла сетевая ошибка, которая делает невозможной нормальную работу. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>Запрошенная операция недопустима.Эта ошибка обычно является ответом на недопустимые попытки удалить классы или свойства.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>Синтаксически недопустимый запрос. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>Запрошенный язык запросов не поддерживается.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>В операции Put был указан флаг wbemChangeFlagCreateOnly, но экземпляр уже существует.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>Операция Add для квалификатора не может быть выполнена, так как объект-владелец не разрешает переопределения.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>Пользователь попытался удалить квалификатор без владельца.Квалификатор был унаследован от класса-родителя.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>Пользователь попытался удалить свойство без владельца.Свойство было унаследовано от класса-родителя.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>Клиент ввел неожиданную и недопустимую последовательность вызовов. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>Пользователь запросил недопустимую операцию, например порождение класса от экземпляра.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>Предпринята недопустимая попытка указать ключевой квалификатор для свойства, которое не может быть ключом.Ключи указываются в определении класса объекта и не могут быть изменены для каждого отдельного экземпляра.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>Текущий объект не является допустимым определением класса.Определение либо неполно, либо не было зарегистрировано в WMI с помощью <see cref="M:System.Management.ManagementObject.Put" /> ().</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>Зарезервировано для дальнейшего использования. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>Попытка изменить свойство, доступное в режиме "только чтение".</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>Поставщик не может выполнить запрошенную операцию, например вызов слишком сложного запроса, извлечения экземпляра, создания или обновления класса, удаления класса или перечисления класса. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>Предпринята попытка провести изменение, в результате которого производный класс станет недопустимым.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>Предпринята попытка удалить или изменить класс, который имеет экземпляры. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>Зарезервировано для дальнейшего использования. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>Пустое значения было задано для свойства, которое не может быть пустым, например, для свойства, помеченного таким квалификатором как Key, Indexed или Not_Null.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>Введенное значение квалификатора не является допустимым типом квалификатора.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>Для свойства задан недопустимый CIM-тип. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>Запрос выполнен за пределами допустимого интервала значений или же запрос несовместим с типом. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>Предпринята недопустимая попытка создать класс одноэлементным, хотя данный класс является производным от неодноэлементного класса.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>Задан недопустимый CIM-тип. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>Запрошенный метод недоступен. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>Предоставленные параметры метода недопустимы. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>Предпринята попытка получить квалификаторы для системного свойства. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>Тип свойства не распознан. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>Асинхронный процесс отменен системой или пользователем.Обратите внимание, что ввиду проблем синхронизации и асинхронного характера операции ее отмена могла быть выполнена неправильно.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>Пользователь запросил операцию, в то время как WMI закрывался.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>Предпринята попытка повторно использовать существующее имя метода из суперкласса, но подписи при этом не совпали. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>Одно или несколько значений параметров, например, текст запроса, являются слишком сложными или не поддерживаются.В WMI отправлен запрос на повторение операции с более простыми параметрами.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>В вызове метода отсутствует параметр. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>Параметр метода имеет недопустимый идентифицирующий квалификатор. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>Один или несколько параметров метода имеют идентифицирующие квалификаторы, которые не принадлежат последовательности. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>Возвращаемое значение метода имеет идентифицирующий квалификатор. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>Задан недопустимый путь к объекту. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>Недостаточно свободного места на диске для продолжения операции. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>Размер предоставленного буфера не позволяет разместить все объекты перечислителя или выполнить чтение строкового свойства. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>Поставщик не поддерживает запрошенную операцию Put. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>В ходе маршалинга обнаружен объект с неверным типом или версией. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>В ходе маршалинга обнаружен пакет с неверным типом или версией. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>Пакет имеет неподдерживаемую версию. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>Пакет поврежден.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>Предпринята попытка неправильного использования квалификатора, например, применения описателя [ManagementKey] к объекту, вместо свойства. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>В CIM-методе объявлен дублированный параметр. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>Доставка события не выполнена.Поставщик может вызвать событие повторно.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>Задан недопустимый флаг. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>Предпринята попытка создать циклическую ссылку (например, создание производного класса от самого себя). </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>Заданный класс не поддерживается. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>Предпринята попытка изменить ключ, в то время как он использовался экземплярами или производными классами. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>Предпринята попытка изменить индекс, в то время как он использовался экземплярами или производными классами. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>Предпринята попытка создать большее количество свойств, чем поддерживает текущая версия класса. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>Свойство было переопределено в производном классе с конфликтным типом. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>Предпринята попытка переопределить непереопределяемый квалификатор в производном классе. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>Метод был повторно объявлен в производном классе с конфликтной сигнатурой. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>Предпринята попытка выполнить метод, не помеченный как [implemented], в любом соответствующем классе. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>Предпринята попытка выполнить метод, помеченный как [disabled]. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>Обновитель занят другой операцией. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>Неправильный синтаксис запроса на выборку. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>Предложение FROM запроса на выборку ссылается на класс, который не является классом событий. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>Предложение GROUP BY использовано без соответствующего предложения GROUP WITHIN. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>Использовано предложение GROUP BY.Статистическая обработка всех свойств не поддерживается.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>Точечная нотация использована для свойства, которое не является внедренным объектом. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>Предложение GROUP BY ссылается на свойство, которое является внедренным объектом, без использования точечной нотации. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>В запросе регистрации поставщика событий (__EventProviderRegistration) не заданы классы, для которых предоставлены события. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>Запрос на резервное копирование или восстановление хранилища ресурсов был создан, в то время как хранилище использовалось программой WinMgmt.exe. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>Очередь асинхронной доставки переполнена из-за слишком медленной работы объекта-получателя событий. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>Операция не выполнена, так как клиент не имеет необходимых привилегий безопасности. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>Для свойства этого типа данный оператор недопустим.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>Пользователь задал имя пользователя, пароль или полномочия для локального подключения.Следует использовать пустые имя пользователя и пароль и применять стандартный уровень безопасности.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>Данный класс создан как абстрактный, в то время как его суперкласс не является абстрактным. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>В операции Put использован измененный объект без заданного флага WBEM_FLAG_USE_AMENDED_QUALIFIERS. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>Клиент недостаточно быстро извлекал объекты из перечисления. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>Регистрация поставщика перекрывает домен системных событий. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>Предложение WITHIN в этом запросе не использовалось. </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>Содержит сведения о методе WMI.          </summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>Получает входные параметры метода.Каждый параметр описывается в виде свойства объекта.Если параметр является одновременно входным и выходным, он содержится как в свойстве <see cref="P:System.Management.MethodData.InParameters" />, так и в свойстве <see cref="P:System.Management.MethodData.OutParameters" />.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержатся все входные параметры метода.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>Получает имя метода.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя метода.</returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>Получает имя управляющего класса, в котором метод был первоначально представлен в иерархии наследования классов.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее имя управляющего класса, в котором метод был первоначально представлен в иерархии наследования классов.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>Получает выходные параметры метода.Каждый параметр описывается в виде свойства объекта.Если параметр является одновременно входным и выходным, он содержится как в свойстве <see cref="P:System.Management.MethodData.InParameters" />, так и в свойстве <see cref="P:System.Management.MethodData.OutParameters" />.</summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержатся все выходные параметры метода.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>Получает коллекцию квалификаторов, определенных в методе.Каждый элемент имеет тип <see cref="T:System.Management.QualifierData" /> и содержит такие данные, как имя, значение и флагквалификатора.</summary>
      <returns>Возвращает <see cref="T:System.Management.QualifierDataCollection" />, в которой содержатся квалификаторы метода.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>Представляет набор методов, доступных в коллекции.          </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>Добавляет <see cref="T:System.Management.MethodData" /> в <see cref="T:System.Management.MethodDataCollection" />.Эта перегрузка добавляет в коллекцию новый метод без параметров.</summary>
      <param name="methodName">Имя добавляемого метода.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.Эта перегрузка добавляет в коллекцию новый метод с заданными объектами параметров.</summary>
      <param name="methodName">Имя добавляемого метода.</param>
      <param name="inParameters">
        <see cref="T:System.Management.ManagementBaseObject" /> содержит входные параметры метода. </param>
      <param name="outParameters">
        <see cref="T:System.Management.ManagementBaseObject" /> содержит выходные параметры метода. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует <see cref="T:System.Management.MethodDataCollection" /> в массив.          </summary>
      <param name="array">Массив, в который необходимо скопировать коллекцию. </param>
      <param name="index">Индекс, с которого должно начаться копирование. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>Копирует <see cref="T:System.Management.MethodDataCollection" /> в специализированный массив <see cref="T:System.Management.MethodData" />.          </summary>
      <param name="methodArray">Массив назначения, в который необходимо скопировать объекты <see cref="T:System.Management.MethodData" />.</param>
      <param name="index">Индекс в массиве назначения, с которого должно начаться копирование.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>Получает количество объектов <see cref="T:System.Management.MethodDataCollection" /> в коллекции.         </summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, представляющее количество объектов в коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>Возвращает перечислитель для коллекции <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />, предназначенный для перечисления коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>Получает значение, указывающее, синхронизирован ли объект.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли объект синхронизированным.</returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>Получает заданный <see cref="T:System.Management.MethodData" /> из <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>Возвращает <see cref="T:System.Management.MethodData" />, в котором содержатся данные метода для заданного метода из коллекции.</returns>
      <param name="methodName">Имя запрошенного метода.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>Удаляет <see cref="T:System.Management.MethodData" /> из <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <param name="methodName">Имя метода, который необходимо удалить из коллекции.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>Получает объект, который необходимо использовать для синхронизации.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, представляющее объект, который необходимо использовать для синхронизации.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, который выполняет перечисление всех элементов коллекции <see cref="T:System.Management.MethodDataCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Management.MethodDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>Представляет перечислитель для объектов <see cref="T:System.Management.MethodData" /> в <see cref="T:System.Management.MethodDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>Возвращает текущий <see cref="T:System.Management.MethodData" /> в перечислении <see cref="T:System.Management.MethodDataCollection" />.</summary>
      <returns>Текущий элемент <see cref="T:System.Management.MethodData" /> в коллекции.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>Переходит к следующему элементу перечисления <see cref="T:System.Management.MethodDataCollection" />.</summary>
      <returns>Значение true, если перечислитель успешно перемещен к следующему методу; и значение false, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>Устанавливает перечислитель на начало перечисления <see cref="T:System.Management.MethodDataCollection" />.</summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект в коллекции.</summary>
      <returns>Возвращает текущий элемент коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>Задает параметры для получения управляющего объекта.          </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectGetOptions" /> для получения объекта WMI с помощью стандартных значений.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectGetOptions" /> для получения объекта WMI с помощью заданного контекста, зависящего от поставщика.          </summary>
      <param name="context">Зависящий от поставщика контекстный объект пар имя/значение, который необходимо передать этому поставщику.</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectGetOptions" /> для получения объекта WMI с помощью данных значений параметров.          </summary>
      <param name="context">Зависящий от поставщика контекстный объект пар имя/значение, который необходимо передать этому поставщику.</param>
      <param name="timeout">Период, в течение которого операция может выполняться до завершения времени ожидания.Значением по умолчанию является <see cref="F:System.TimeSpan.MaxValue" />.</param>
      <param name="useAmendedQualifiers">Значение true, если возвращаемые объекты должны содержать измененные (в соответствии с языком региона) квалификаторы; в противном случае — значение false. </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>Получает или задает значение, указывающее, что возвращаемые из WMI объекты должны включать измененные сведения.Как правило, измененные сведения — это локализуемые сведения, связанные с объектом WMI, например, описания объектов или свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что возвращаемые из WMI объекты должны включать измененные сведения.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementOperationObserver.ObjectPut" />.          </summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>Получает удостоверение размещенного объекта.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementPath" />, в котором содержится путь к размещенному объекту.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" />.  </summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.ObjectPutEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>Представляет управляющий запрос, который возвращает экземпляры или классы.          </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectQuery" /> без инициализированных значений.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectQuery" /> для заданной строки запроса.          </summary>
      <param name="query">Строковое представление запроса.</param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ObjectQuery" /> для заданной строки запроса и языка.          </summary>
      <param name="language">Язык запросов, на котором задан этот запрос.</param>
      <param name="query">Строковое представление запроса. </param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.             </returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementOperationObserver.ObjectReady" />.          </summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>Получает новый возвращенный объект.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementBaseObject" />, в котором содержится новый возвращенный объект.</returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" />.</summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.ObjectReadyEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementOperationObserver.Progress" />.          </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>Получает текущий объем работы, выполненный операцией.Это значение всегда меньше или равно <see cref="P:System.Management.ProgressEventArgs.UpperBound" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, представляющее текущий объем работы, который уже выполнен операцией.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>Получает или задает необязательные дополнительные сведения о ходе операции.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержатся дополнительные сведения о ходе операции.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>Получает общий объем работы, который должен быть выполнен операцией.          </summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, представляющее общий объем работы, который должен быть выполнен операцией.</returns>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementOperationObserver.Progress" />.</summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.ProgressEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>Представляет сведения о свойстве WMI.          </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>Получает значение, указывающее, является ли свойство массивом.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли свойство массивом.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>Получает значение, указывающее, было ли свойство определено в текущем WMI-классе.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, было ли свойство определено в текущем WMI-классе.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>Получает имя свойства.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя свойства.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>Получает имя WMI-класса в иерархии, в которую было включено данное свойство.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее имя WMI-класса в иерархии, в которую было включено данное свойство.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>Получает набор квалификаторов, определенных в свойстве.          </summary>
      <returns>Возвращает <see cref="T:System.Management.QualifierDataCollection" />, в которой содержится набор квалификаторов, определенных в свойстве.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>Получает тип CIM данного свойства.          </summary>
      <returns>Возвращает значение <see cref="T:System.Management.CimType" />, которое представляет тип CIM данного свойства.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>Получает или задает текущее значение свойства.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, которое представляет значение свойства.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>Представляет набор свойств WMI-объекта.</summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>Добавляет новый <see cref="T:System.Management.PropertyData" /> без присвоенного значения.          </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="propertyType">CIM-тип свойства.</param>
      <param name="isArray">Чтобы указать, что свойство относится к типу "массив", установите значение true; в противном случае установите значение false.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>Добавляет новый <see cref="T:System.Management.PropertyData" /> с заданным значением.Значение не может быть пустым и должно быть приводимым к CIM-типу.</summary>
      <param name="propertyName">Имя нового свойства.</param>
      <param name="propertyValue">Значение свойства (не может быть пустым).</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>Добавляет новый <see cref="T:System.Management.PropertyData" /> с заданным значением и CIM-типом.          </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="propertyValue">Значение свойства (может быть пустым).</param>
      <param name="propertyType">CIM-тип свойства.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует <see cref="T:System.Management.PropertyDataCollection" /> в массив.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />. </param>
      <param name="index">Индекс, с которого необходимо начать копирование. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>Копирует <see cref="T:System.Management.PropertyDataCollection" /> в специализированный массив объектов <see cref="T:System.Management.PropertyData" />.          </summary>
      <param name="propertyArray">Массив назначения, в котором будет содержаться скопированная коллекция <see cref="T:System.Management.PropertyDataCollection" />.</param>
      <param name="index">Индекс массива назначения, с которого начнется копирование. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>Получает количество объектов в коллекции <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, представляющее количество объектов в коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>Возвращает перечислитель для данной коллекции <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для перебора элементов коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли объект синхронизированным.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли объект синхронизированным.</returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>Получает заданное свойство из коллекции <see cref="T:System.Management.PropertyDataCollection" /> с помощью синтаксиса [].Это свойство является индексатором класса <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>Возвращает <see cref="T:System.Management.PropertyData" />, в котором содержатся данные заданного свойства в коллекции.</returns>
      <param name="propertyName">Имя свойства, которое необходимо извлечь.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>Удаляет <see cref="T:System.Management.PropertyData" /> из <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <param name="propertyName">Имя свойства, которое необходимо удалить.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>Получает объект, который необходимо использовать для синхронизации.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, содержащее объект, который необходимо использовать для синхронизации.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, который выполняет перечисление всех элементов коллекции <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>Представляет перечислитель для объектов <see cref="T:System.Management.PropertyData" /> в <see cref="T:System.Management.PropertyDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>Получает текущие <see cref="T:System.Management.PropertyData" /> в перечислении <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>Текущий элемент <see cref="T:System.Management.PropertyData" /> в коллекции.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>Переходит к следующему элементу перечисления <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>Значение true, если перечислитель был успешно перемещен к следующему элементу; значение false, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>Устанавливает перечислитель на начало перечисления <see cref="T:System.Management.PropertyDataCollection" />.</summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект в коллекции.</summary>
      <returns>Возвращает текущий элемент коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>Задает параметры фиксации изменений управляющего объекта.          </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.PutOptions" /> для операции Put с использованием стандартных значений.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.PutOptions" /> для фиксации объекта WMI с помощью заданного контекста, зависящего от поставщика.          </summary>
      <param name="context">Зависящий от поставщика контекстный объект пар имя/значение, который необходимо передать этому поставщику.</param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.PutOptions" /> для фиксации объекта WMI с помощью заданных значений параметров.          </summary>
      <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику. </param>
      <param name="timeout">Период, в течение которого операция может выполняться до завершения времени ожидания.Значением по умолчанию является <see cref="F:System.TimeSpan.MaxValue" />.</param>
      <param name="useAmendedQualifiers">Значение true, если возвращаемые объекты должны содержать измененные (в соответствии с языком региона) квалификаторы; в противном случае — значение false. </param>
      <param name="putType">Тип выполняемой фиксации (обновление или создание). </param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>Возвращает копию объекта.          </summary>
      <returns>Клонированный объект.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>Получает или задает тип фиксации, которую необходимо выполнить для объекта.          </summary>
      <returns>Возвращает значение перечисления <see cref="T:System.Management.PutType" />, представляющее тип фиксации, которую необходимо выполнить для данного объекта.</returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>Получает или задает значение, указывающее, что возвращаемые из WMI объекты должны включать измененные данные.Как правило, измененные сведения — это локализуемые сведения, связанные с объектом WMI, например, описания объектов или свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что возвращаемые из WMI объекты должны включать измененные сведения.</returns>
    </member>
    <member name="T:System.Management.PutType">
      <summary>Описывает возможные результаты сохранения объекта в WMI с помощью <see cref="M:System.Management.ManagementObject.Put" />.          </summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>Без изменений.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>Обновляет существующий объект; новый объект не создается.</summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>Создает объект; существующий объект не обновляется.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>Сохраняет объект после обновления существующего объекта или создания нового объекта.</summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>Содержит сведения о квалификаторе WMI.          </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>Получает или задает значение, указывающее, был ли квалификатор изменен.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, был ли изменен квалификатор.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>Получает значение, указывающее, был ли квалификатор определен локально в этом классе или был унаследован из базового класса.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, был ли квалификатор определен локально в этом классе или был унаследован из базового класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>Получает или задает значение, указывающее, может ли значение квалификатора быть переопределено при наследовании.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, может ли значение квалификатора быть переопределено при наследовании.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>Представляет имя квалификатора.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее имя квалификатора.</returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>Получает или задает значение, указывающее, должен ли квалификатор быть унаследован в экземпляры класса.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, должен ли квалификатор быть унаследован в экземпляры класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>Получает или задает значение, указывающее, должен ли квалификатор быть унаследован в подклассы класса.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, должен ли квалификатор быть унаследован в подклассы класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>Получает или задает значение описателя.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, содержащее значение квалификатора.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Management.QualifierData" />.          </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>Добавляет <see cref="T:System.Management.QualifierData" /> в <see cref="T:System.Management.QualifierDataCollection" />.Эта перегрузка позволяет задать имя и значение квалификатора.</summary>
      <param name="qualifierName">Имя <see cref="T:System.Management.QualifierData" /> добавлено в <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="qualifierValue">Значение нового квалификатора. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.Эта перегрузка позволяет задать значения всех свойств <see cref="T:System.Management.QualifierData" />.</summary>
      <param name="qualifierName">Имя квалификатора. </param>
      <param name="qualifierValue">Значение квалификатора. </param>
      <param name="isAmended">Значение true указывает, что данный квалификатор изменен (флаг); в противном случае — значение false. </param>
      <param name="propagatesToInstance">Установите значение true, чтобы скопировать квалификатор в экземпляры; в противном случае установите значение false. </param>
      <param name="propagatesToSubclass">Установите значение true, чтобы данный квалификатор наследовался подклассами; в противном случае установите значение false. </param>
      <param name="isOverridable">Установите значение true, чтобы указать, что данный квалификатор может быть переопределен в экземплярах подклассов; в противном случае установите значение false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует <see cref="T:System.Management.QualifierDataCollection" /> в массив.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="index">Индекс, с которого необходимо начать копирование. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>Копирует <see cref="T:System.Management.QualifierDataCollection" /> в специализированный массив <see cref="T:System.Management.QualifierData" />.          </summary>
      <param name="qualifierArray">Специализированный массив объектов <see cref="T:System.Management.QualifierData" />, в который необходимо скопировать <see cref="T:System.Management.QualifierDataCollection" />.</param>
      <param name="index">Индекс, с которого необходимо начать копирование. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>Получает количество объектов <see cref="T:System.Management.QualifierData" /> в коллекции <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />, представляющее количество объектов в коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>Возвращает перечислитель для коллекции <see cref="T:System.Management.QualifierDataCollection" />.Этот метод является строго типизированным.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> можно использовать для перебора элементов коллекции.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли объект синхронизированным.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли объект синхронизированным.</returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>Получает заданный <see cref="T:System.Management.QualifierData" /> из <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Возвращает <see cref="T:System.Management.QualifierData" />, в котором содержатся данные заданного квалификатора в коллекции.</returns>
      <param name="qualifierName">Имя <see cref="T:System.Management.QualifierData" /> в коллекции <see cref="T:System.Management.QualifierDataCollection" />, к которому необходимо получить доступ. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>Удаляет <see cref="T:System.Management.QualifierData" /> из коллекции <see cref="T:System.Management.QualifierDataCollection" /> по заданному имени.          </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to remove. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>Получает объект, который необходимо использовать для синхронизации.          </summary>
      <returns>Возвращает значение <see cref="T:System.Object" />, которое необходимо использовать для синхронизации.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, который выполняет перечисление всех элементов коллекции <see cref="T:System.Management.QualifierDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>Представляет перечислитель для объектов <see cref="T:System.Management.QualifierData" /> в <see cref="T:System.Management.QualifierDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>Получает или задает текущий объект <see cref="T:System.Management.QualifierData" /> перечисления <see cref="T:System.Management.QualifierDataCollection" />.</summary>
      <returns>Текущий элемент <see cref="T:System.Management.QualifierData" /> в коллекции.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>Переходит к следующему элементу перечисления <see cref="T:System.Management.QualifierDataCollection" />.</summary>
      <returns>Значение true, если перечислитель был успешно перемещен к следующему элементу; значение false, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>Устанавливает перечислитель на начало перечисления <see cref="T:System.Management.QualifierDataCollection" />.</summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект в коллекции.</summary>
      <returns>Возвращает текущий элемент коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>Представляет WQL-запрос данных типа ASSOCIATORS OF.Может использоваться как для запросов экземпляров, так и для запросов схем.</summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.RelatedObjectQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for a schema query using the given set of parameters.Этот конструктор используется только для запросов схем: для первого параметра должно быть установлено значение true.</summary>
      <param name="isSchemaQuery">Значение true указывает, что данный запрос является запросом схемы; в противном случае — значение false.</param>
      <param name="sourceObject">Путь к классу-источнику.</param>
      <param name="relatedClass">Обязательный базовый класс связанных объектов.</param>
      <param name="relationshipClass">Тип отношения.</param>
      <param name="relatedQualifier">Обязательный квалификатор для связанных объектов.</param>
      <param name="relationshipQualifier">Обязательный квалификатор отношений.</param>
      <param name="relatedRole">Роль, которую связанные объекты должны играть в отношении.</param>
      <param name="thisRole">Роль, которую класс-источник должен играть в отношении.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.RelatedObjectQuery" />.Если заданную строку можно успешно проанализировать как запрос WQL, она рассматривается в качестве строки запроса; в противном случае она рассматривается в качестве пути к объекту-источнику запроса.В этом случае предполагается, что данный запрос является запросом экземпляра.</summary>
      <param name="queryOrSourceObject">Строка запроса или путь к объекту-источнику.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.RelatedObjectQuery" /> для заданного объекта-источника и связанного класса.Предполагается, что данный запрос является запросом экземпляра (в отличие от запроса схемы).</summary>
      <param name="sourceObject">Путь к объекту-источнику данного запроса.</param>
      <param name="relatedClass">Класс связанных объектов.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Выполняется инициализация нового экземпляра класса <see cref="T:System.Management.RelatedObjectQuery" /> для данного набора параметров.Предполагается, что данный запрос является запросом экземпляра (в отличие от запроса схемы).</summary>
      <param name="sourceObject">Путь к объекту-источнику.</param>
      <param name="relatedClass">Обязательный класс связанных объектов.</param>
      <param name="relationshipClass">Тип отношения.</param>
      <param name="relatedQualifier">Обязательный квалификатор для связанных объектов.</param>
      <param name="relationshipQualifier">Обязательный квалификатор отношений.</param>
      <param name="relatedRole">Роль, которую связанные объекты должны играть в отношении.</param>
      <param name="thisRole">Роль, которую объект-источник должен играть в отношении.</param>
      <param name="classDefinitionsOnly">Чтобы возвращались только определения классов связанных объектов, необходимо установить значение true; в противном случае — необходимо установить значение ЛОЖЬ.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>Формирует строку запроса согласно текущим значениям свойств.                       </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>Получает или задает значение, указывающее, что для всех экземпляров, которые удовлетворяют критериям запроса, должны возвращаться только определения их класса.Этот параметр применяется только для запросов экземпляров.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что для всех экземпляров, которые удовлетворяют критериям запроса, должны возвращаться только определения их класса.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>Создает копию объекта.          </summary>
      <returns>Копируемый объект.             </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>Получает или задает значение, указывающее, является ли этот запрос запросом схемы или запросом экземпляра.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли этот запрос запросом схемы.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>Анализирует строку запроса и задает соответствующие значения свойств.                       </summary>
      <param name="query">Строка запроса, которую необходимо проанализировать.</param>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>Получает или задает класс объектов конечной точки (связанный класс).          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя связанного класса.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>Получает или задает обязательный квалификатор, определяемый в связанных объектах.          </summary>
      <returns>Возвращает строку <see cref="T:System.String" />, которая содержит имя квалификатора, обязательного для связанного объекта.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>Получает или задает роль, которую возвращаемые связанные объекты должны играть в отношении.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится роль связанных объектов.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>Получает или задает тип отношения (ассоциация).          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя класса отношений. </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>Получает или задает обязательный квалификатор для объектов отношений.          </summary>
      <returns>Возвращает строку <see cref="T:System.String" />, которая содержит имя квалификатора, обязательного для объектов отношений.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>Получает или задает объект-источник, который необходимо использовать в запросе.Для запросов экземпляров обычно это путь к экземпляру.Для запросов схем обычно это имя класса.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее путь к объекту, который необходимо использовать в запросе.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>Получает или задает роль, которую объект-источник должен играть в отношении.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится роль данного объекта.</returns>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>Представляет WQL-запрос данных типа REFERENCES OF.           </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.RelationshipQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for a schema query using the given set of parameters.Этот конструктор используется только для запросов схем, поэтому для первого параметра должно быть задано значение ИСТИНА.</summary>
      <param name="isSchemaQuery">Значение true указывает, что данный запрос является запросом схемы; в противном случае — значение false.</param>
      <param name="sourceObject">Путь к классу-источнику данного запроса.</param>
      <param name="relationshipClass">Тип запрашиваемого отношения.</param>
      <param name="relationshipQualifier">Квалификатор, который должен присутствовать в классе отношений.</param>
      <param name="thisRole">Роль, которую класс-источник должен играть в отношении.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.RelationshipQuery" />.Если заданную строку можно успешно проанализировать как запрос WQL, она рассматривается в качестве строки запроса; в противном случае она рассматривается в качестве пути к объекту-источнику запроса.В этом случае принимается, что данный запрос является запросом экземпляров.</summary>
      <param name="queryOrSourceObject">Строка запроса или имя класса для этого запроса.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>Выполняется инициализация нового экземпляра класса <see cref="T:System.Management.RelationshipQuery" /> для данного объекта-источника и класса отношений.Предполагается, что данный запрос является запросом экземпляра (в отличие от запроса схемы).</summary>
      <param name="sourceObject"> Путь к объекту-источнику данного запроса.</param>
      <param name="relationshipClass"> Тип запрашиваемого отношения.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Выполняется инициализация нового экземпляра класса <see cref="T:System.Management.RelationshipQuery" /> для данного набора параметров.Предполагается, что данный запрос является запросом экземпляра (в отличие от запроса схемы).</summary>
      <param name="sourceObject">Путь к объекту-источнику данного запроса.</param>
      <param name="relationshipClass">Тип запрашиваемого отношения.</param>
      <param name="relationshipQualifier">Квалификатор, который должен присутствовать в объекте отношений.</param>
      <param name="thisRole">Роль, которую объект-источник должен играть в отношении.</param>
      <param name="classDefinitionsOnly">Когда данный метод возвращает управление, он содержит логическое значение, указывающее, что для результирующих объектов возвращаются только определения классов.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>Формирует строку запроса согласно текущим значениям свойств.                       </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>Получает или задает значение, указывающее, что для соответствующих объектов отношений должны быть возвращены только определения классов.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, что для соответствующих объектов отношений должны быть возвращены только определения классов.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>Создает копию объекта.          </summary>
      <returns>Копируемый объект.             </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>Получает или задает значение, указывающее, является ли этот запрос запросом схемы или запросом экземпляра.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли этот запрос запросом схемы.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>Анализирует строку запроса и задает соответствующие значения свойств.                       </summary>
      <param name="query">Строка запроса, которую необходимо проанализировать.</param>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>Получает или задает класс объектов отношения, отбираемых в запросе.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя класса отношений.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>Получает или задает квалификатор, обязательный для объектов отношений.          </summary>
      <returns>Возвращает строку <see cref="T:System.String" />, которая содержит имя квалификатора, обязательного для объектов отношений.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>Получает или задает объект-источник данного запроса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее путь к объекту, который необходимо использовать в запросе.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>Получает или задает роль, которую объект-источник должен играть в отношении.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится роль данного объекта.</returns>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>Представляет WQL-запрос данных типа SELECT.          </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.SelectQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.SelectQuery" /> для запроса схемы, задавая при необходимости условие.          </summary>
      <param name="isSchemaQuery">Значение true указывает, что данный запрос является запросом схемы; в противном случае — значение false.В этом конструкторе значение false не допустимо.</param>
      <param name="condition">Условие, которое необходимо использовать для формирования результирующего набора классов. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.SelectQuery" /> для заданного запроса или заданного имени класса.          </summary>
      <param name="queryOrClassName">Полный запрос или имя класса, который необходимо использовать в запросе.Средство анализа пытается анализировать данную строку в этом классе как допустимый WQL-запрос типа SELECT.Если анализ заканчивается неудачно, средство анализа предполагает, что данная строка является именем класса.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.SelectQuery" /> с заданным именем класса и условием.          </summary>
      <param name="className">Имя класса, который необходимо отобрать в запросе.</param>
      <param name="condition">Условие, которое необходимо использовать в запросе. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.SelectQuery" /> с заданным именем класса и условием для отбора только заданных свойств.          </summary>
      <param name="className">Имя класса, из которого необходимо отбирать данные.</param>
      <param name="condition">Условие, которому должны соответствовать экземпляры выбранного класса. </param>
      <param name="selectedProperties">Массив имен свойств, который должен быть возвращен в результатах запроса. </param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>Формирует строку запроса согласно текущим значениям свойств.                       </summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>Получает или задает имя класса, в котором запрос должен осуществлять отбор.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя класса из запроса.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>Создает копию объекта.          </summary>
      <returns>Копируемый объект.             </returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>Получает или задает условие, которое необходимо использовать в запросе SELECT.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее условие, которое необходимо использовать в запросе типа SELECT.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>Получает или задает значение, указывающее, является ли этот запрос запросом схемы или запросом экземпляров.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, является ли данный запрос запросом схемы.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>Анализирует строку запроса и задает соответствующие значения свойств.                       </summary>
      <param name="query">Строка запроса, которую необходимо проанализировать.</param>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>Получает или задает запрос в объекте <see cref="T:System.Management.SelectQuery" /> в строковой форме.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится запрос.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>Получает или задает массив имен свойств, который должен быть отобран запросом.          </summary>
      <returns>Возвращает коллекцию <see cref="T:System.Collections.Specialized.StringCollection" />, в которой содержатся имена свойств, отбираемых запросом.</returns>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>Содержит данные события для события<see cref="E:System.Management.ManagementEventWatcher.Stopped" />.          </summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>Получает статус завершения операции.          </summary>
      <returns>Возвращает <see cref="T:System.Management.ManagementStatus" />, в котором содержится состояние операции.</returns>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Management.ManagementEventWatcher.Stopped" />.</summary>
      <param name="sender">Экземпляр объекта, для которого вызывается данный метод.</param>
      <param name="e">
        <see cref="T:System.Management.StoppedEventArgs" /> указывает причину для вызова события.</param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>Описывает возможные текстовые форматы, которые можно использовать в сочетании с методом <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" />.          </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>Формат управляемого объекта</summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>Описание XML DTD, соответствующее спецификации CIM DTD версии 2.0.             </summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>XML WMI DTD that corresponds to CIM DTD version 2.0.Using this value enables a few WMI-specific extensions, like embedded objects.</summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>Представляет запрос WMI-событий в формате WQL.          </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> на основе заданной строки запроса или указанного имени класса событий.          </summary>
      <param name="queryOrEventClassName">Строка, представляющая полный запрос событий или имя класса событий, в котором должен быть выполнен запрос.Объект попытается проанализировать данную строку как допустимый запрос событий.Если анализ будет выполнен неудачно, средство анализа предполагает, что данная строка представляет собой имя класса событий.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> для указанного имени класса событий и с заданным условием.          </summary>
      <param name="eventClassName">Запрашиваемое имя класса событий.</param>
      <param name="condition">Условие, применяемое к событиям указанного класса. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> с указанным именем класса событий, условием и интервалом группировки.          </summary>
      <param name="eventClassName">Запрашиваемое имя класса событий. </param>
      <param name="condition">Условие, применяемое к событиям указанного класса.</param>
      <param name="groupWithinInterval">Заданный интервал, через который WMI отправляет одно совокупное событие, вместо многих событий. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> с указанным именем класса событий, условием, интервалом группировки и свойствами группировки.          </summary>
      <param name="eventClassName">Запрашиваемое имя класса событий. </param>
      <param name="condition">Условие, применяемое к событиям указанного класса.</param>
      <param name="groupWithinInterval">Заданный интервал, через который WMI отправляет одно совокупное событие, вместо многих событий.</param>
      <param name="groupByPropertyList">Свойства в классе событий, по которым события должны быть сгруппированы.  </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> для указанного класса событий и с заданным временем задержки.          </summary>
      <param name="eventClassName">Запрашиваемое имя класса событий.</param>
      <param name="withinInterval">Значение <see cref="T:System.TimeSpan" />, определяющее время задержки, приемлемое для получения данного события.Это значение используется, если отсутствует явный поставщик событий для запроса, а для проверки соответствия условию требуются средства WMI.Этот интервал представляет собой максимальный интервал времени, которое может пройти до доставки уведомления о событии.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> с указанным именем класса событий, интервалом опроса событий и условием.          </summary>
      <param name="eventClassName">Запрашиваемое имя класса событий. </param>
      <param name="withinInterval">Значение <see cref="T:System.TimeSpan" />, определяющее время задержки, приемлемое для получения данного события.Это значение используется, если отсутствует явный поставщик событий для запроса, а для проверки соответствия условию требуются средства WMI.Этот интервал представляет собой максимальный интервал времени, которое может пройти до доставки уведомления о событии.</param>
      <param name="condition">Условие, применяемое к событиям указанного класса. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlEventQuery" /> с указанным именем класса событий, условием, интервалом группировки, свойствами группировки и заданным количеством событий.          </summary>
      <param name="eventClassName">Имя запрашиваемого класса событий.</param>
      <param name="withinInterval">Значение <see cref="T:System.TimeSpan" />, определяющее время задержки, приемлемое для получения данного события.Это значение используется, если отсутствует явный поставщик событий для запроса, а для проверки соответствия условию требуются средства WMI.Этот интервал представляет собой максимальный интервал времени, которое может пройти до доставки уведомления о событии.</param>
      <param name="condition">Условие, применяемое к событиям указанного класса. </param>
      <param name="groupWithinInterval">Заданный интервал, через который WMI отправляет одно совокупное событие, вместо многих событий. </param>
      <param name="groupByPropertyList">Свойства в классе событий, по которым события должны быть сгруппированы. </param>
      <param name="havingCondition">Условие, применяемое к количеству событий. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>Формирует строку запроса согласно текущим значениям свойств.                       </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>Создает копию объекта.          </summary>
      <returns>Копируемый объект.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>Получает или задает условие, которое необходимо применить к событиям заданного класса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее одно или несколько условий в запросе события.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>Получает или задает запрашиваемый класс событий.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится имя класса событий из запроса события.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>Получает или задает свойства события, которые необходимо использовать для группировки однотипных событий.          </summary>
      <returns>Возвращает <see cref="T:System.Collections.Specialized.StringCollection" />, содержащую свойства события, которые необходимо использовать для группировки однотипных событий.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>Получает или задает интервал, который необходимо использовать при группировке однотипных событий.          </summary>
      <returns>Возвращает значение <see cref="T:System.TimeSpan" />, которое содержит интервал, используемый для группировки однотипных событий.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>Получает или задает условие, которое необходимо применять к объединению событий в соответствии с количеством полученных событий.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее условие, которое необходимо применять к объединению событий в соответствии с количеством полученных событий.</returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>Анализирует строку запроса и задает соответствующие значения свойств.                       </summary>
      <param name="query">Строка запроса, которую необходимо проанализировать.</param>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>Получает язык запроса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее язык, на котором написан запрос.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>Получает или задает строку, представляющую запрос.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится запрос.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>Получает или задает интервал опроса событий, который необходимо использовать в запросе.          </summary>
      <returns>Возвращает значение <see cref="T:System.TimeSpan" />, в котором содержится интервал опроса событий, используемый в запросе события.</returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>Представляет запрос данных WMI в формате WQL.          </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlObjectQuery" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WqlObjectQuery" />, инициализированного для заданного запроса.          </summary>
      <param name="query"> Представление запроса данных.</param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>Создает копию объекта.          </summary>
      <returns>Копируемый объект.             </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>Получает язык запроса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, в котором содержится язык запроса.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>Представляет производные от классов <see cref="T:System.Management.Instrumentation.BaseEvent" />, которые являются классами управляющих событий.Эти производные классы наследуют реализацию <see cref="T:System.Management.Instrumentation.IEvent" />, которая позволяет вызывать события с помощью метода <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" />.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.BaseEvent" />.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>Вызывает событие управления.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>Устанавливает инструментированную сборку.Чтобы использовать этот стандартный установщик проекта, достаточно извлечь класс из <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> внутри сборки.Переопределять какие-либо методы не требуется.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>Указывает источник события инструментария управления.Объекты, реализующие этот интерфейс, являются источниками событий инструментария управления.Classes that do not derive from <see cref="T:System.Management.Instrumentation.BaseEvent" /> should implement this interface instead.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>Вызывает событие управления.          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>Позволяет инструментарию управления игнорировать конкретный элемент инструментированного класса.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" />.          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>Указывает источник экземпляра инструментария управления.Объекты, реализующие этот интерфейс, являются источниками экземпляров инструментария управления.Классам, которые не наследуют от <see cref="T:System.Management.Instrumentation.Instance" />, нужно взамен реализовать данный интерфейс.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>Возвращает или устанавливает значение, указывающее, видимы ли экземпляры классов, реализующие этот интерфейс, через инструментарий управления.                       </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, видимы ли экземпляры классов, реализующие этот интерфейс, через инструментарий управления.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>Представляет производные классы, которые, как известно, являются экземплярами классов инструментария управления.Данные производные классы наследуют реализацию <see cref="T:System.Management.Instrumentation.IInstance" />, которая позволяет публиковать экземпляры через свойство <see cref="P:System.Management.Instrumentation.IInstance.Published" />.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.Instance" />.            </summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>Возвращает или устанавливает значение, указывающее, видимы ли экземпляры классов, реализующие этот интерфейс, через инструментарий управления.          </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, указывающее, видимы ли экземпляры классов, реализующие этот интерфейс, через инструментарий управления.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>Предоставляет вспомогательные функции, представляющие события и данные для управления.Для каждого домена приложения существует один экземпляр этого класса.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.Instrumentation" />.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>Вызывает событие управления.          </summary>
      <param name="eventData">Объект, определяющий класс, свойства и значения события.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>Определяет, была ли схема инструментария указанной сборки правильно зарегистрирована в инструментарии WMI.          </summary>
      <returns>Значение true, если схема инструментария в указанной сборке зарегистрирована в инструментарии WMI; в противном случае — false.</returns>
      <param name="assemblyToRegister">Сборка <see cref="T:System.Reflection.Assembly" />, содержащая типы экземпляров инструментария или типы событий.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>Делает экземпляр видимым через инструментарий управления.          </summary>
      <param name="instanceData">Объект, который должен быть видимым через инструментарий управления.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Регистрирует в инструментарии WMI классы экземпляров управления или классы событий в указанной сборке.Это обеспечивает доступность схемы инструментария для клиентских приложений <see cref="N:System.Management" />.</summary>
      <param name="assemblyToRegister">Сборка <see cref="T:System.Reflection.Assembly" />, содержащая типы экземпляров инструментария или типы событий.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>Делает экземпляр, который опубликованный ранее с помощью метода <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />, невидимым через инструментарий управления.          </summary>
      <param name="instanceData">Объект, который будет невидимым для инструментария управления.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>Определяет максимальное число объектов указанного типа, которые могут быть предоставлены одновременно.                       </summary>
      <param name="instrumentationClass">Класс, для которого устанавливается размер пакета.</param>
      <param name="batchSize">Максимальное число объектов, которые могут быть предоставлены одновременно.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>Определяет, что класс предоставляет инструментарий события или экземпляра.                       </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" />, который используется, если этот тип класса является производным от другого типа класса, имеющего атрибут <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" />, или если этот тип является классом инструментария верхнего уровня (например, экземпляр или абстрактный класс                без базового класса или событие, наследуемое от __ExtrinsicEvent).          </summary>
      <param name="instrumentationType">Тип инструментария, предоставляемого данным классом.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" />, который использует схему для существующего базового класса.Класс должен содержать соответствующие определения элементов для свойств существующего базового класса WMI.</summary>
      <param name="instrumentationType">Тип инструментария, предоставляемого данным классом.</param>
      <param name="managedBaseClassName">Имя базового класса.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>Возвращает или устанавливает тип инструментария, предоставляемый данным классом.          </summary>
      <returns>Возвращает значение перечисления <see cref="T:System.Management.Instrumentation.InstrumentationType" />, в котором содержится тип инструментария, предоставляемый данным классом.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>Возвращает или устанавливает имя базового класса для данного класса инструментария.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее имя базового класса этого класса инструментария.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>Определяет тип инструментария, предоставляемого данным классом.           </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>Класс предоставляет экземпляры для инструментария управления.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>Класс предоставляет события для инструментария управления.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>Класс определяет абстрактный класс для инструментария управления.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>Указывает, что данная сборка предоставляет инструментарий управления.Этот атрибут должен появляться один раз для каждой сборки.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" />, который устанавливается для корневого или используемого по умолчанию пространства имен.Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" />, который устанавливается на указанное пространство имен для инструментария в этой сборке.          </summary>
      <param name="namespaceName">Пространство имен для экземпляров и событий инструментария.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" />, для которого настраивается указанное пространство имен и параметры безопасности для инструментария в этой сборке.          </summary>
      <param name="namespaceName">Пространство имен для экземпляров и событий инструментария.</param>
      <param name="securityDescriptor"> Дескриптор безопасности, который разрешает выполнять приложения, предоставляющие инструментарий, поддерживаемый этой сборкой, только указанным пользователям или группам.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>Возвращает или устанавливает пространство имен для экземпляров и событий инструментария в этой сборке.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, указывающее имя пространства имен для экземпляров и событий инструментария в этой сборке.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>Возвращает или устанавливает дескриптор безопасности, который разрешает выполнять приложения, предоставляющие инструментарий, поддерживаемый этой сборкой, только указанным пользователям или группам.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее дескриптор безопасности, который разрешает выполнять приложения, предоставляющие инструментарий, поддерживаемый этой сборкой, только указанным пользователям или группам.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>Предоставляет возможность инструментированному классу или элементу инструментированного класса давать альтернативное имя через инструментарий управления.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" />, позволяющий указывать альтернативное имя для типа, поля, свойства, метода или параметра, к которому применяется этот атрибут.          </summary>
      <param name="name">Альтернативное имя типа, поля, свойства, метода или параметра, к которому применяется этот атрибут.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>Возвращает имя управляемой сущности.          </summary>
      <returns>Возвращает значение T:System.String, содержащее имя управляемой сущности.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>Устанавливает инструментированные сборки.Включает экземпляр данного класса установщика в установщик проекта для сборки, содержащей инструментарий.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.ManagementInstaller" />.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>Фиксирует сборку для операции.          </summary>
      <param name="savedState">Состояние данной сборки.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>Возвращает или устанавливает параметры установщика для данного класса.          </summary>
      <returns>Возвращает значение <see cref="T:System.String" />, содержащее параметры установщика для данного класса.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>Устанавливает сборку.          </summary>
      <param name="savedState">Состояние данной сборки.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Выполняет откат состояния сборки.          </summary>
      <param name="savedState">Состояние данной сборки.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Удаляет сборку.          </summary>
      <param name="savedState">Состояние данной сборки.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
  </members>
</doc>