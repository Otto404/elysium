<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IdentityModel</name>
  </assembly>
  <members>
    <member name="T:System.IdentityModel.Claims.Claim">
      <summary>Представляет утверждение, связанное с сущностью. </summary>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.#ctor(System.String,System.Object,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.Claim" /> с заданным типом, ресурсом и правом.</summary>
      <param name="claimType">Универсальный код ресурса (URI), представляющий тип утверждения. </param>
      <param name="resource">Объект, с которым связано новое утверждение.</param>
      <param name="right">URI права, связанного с утверждением.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claimType" /> равно null.— или —Значение параметра <paramref name="right" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="claimType" /> имеет нулевую длину.— или —Параметр <paramref name="right" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.ClaimType">
      <summary>Возвращает тип утверждения. </summary>
      <returns>Универсальный код ресурса (URI), представляющий тип утверждения.</returns>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateDenyOnlyWindowsSidClaim(System.Security.Principal.SecurityIdentifier)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный идентификатор безопасности (SID) "только запрет".</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий идентификатор SID, заданный параметром <paramref name="sid" />.</returns>
      <param name="sid">Объект <see cref="T:System.Security.Principal.SecurityIdentifier" />, представляющий идентификатор SID «только запрет».</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sid" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateDnsClaim(System.String)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное имя службы доменных имен (DNS-имя).</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="dns">DNS-имя сущности, связанной с утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dnskey" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateHashClaim(System.Byte[])">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное значение хэша.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="hash">Массив байтовых значений, указывающий значение хэша.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hash" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateMailAddressClaim(System.Net.Mail.MailAddress)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный адрес электронной почты.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="mailAddress">Объект <see cref="T:System.Net.Mail.MailAddress" />, указывающий адрес электронной почты, представляемый данным утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="mailAddress" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateNameClaim(System.String)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное имя.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="name">Имя сущности, связанной с утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateRsaClaim(System.Security.Cryptography.RSA)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный ключ RSA.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, представляющий ключ шифрования RSA.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rsa" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateSpnClaim(System.String)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное имя участника-службы (SPN).</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="spn">SPN сущности, связанной с этим утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="spn" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateThumbprintClaim(System.Byte[])">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный отпечаток.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="thumbprint">Массив байтовых значений, указывающий отпечаток сущности, связанной с утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="thumbprint" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateUpnClaim(System.String)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное имя участника-пользователя (UPN).</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="upn">UPN сущности, связанной с этим утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="upn" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateUriClaim(System.Uri)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный URL-адрес.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="uri">Объект <see cref="T:System.Uri" />, представляющий URL-адрес сущности, связанной с этим утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateWindowsSidClaim(System.Security.Principal.SecurityIdentifier)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанный идентификатор безопасности (SID).</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий идентификатор SID, заданный параметром <paramref name="sid" />.</returns>
      <param name="sid">Объект <see cref="T:System.Security.Principal.SecurityIdentifier" />, представляющий идентификатор SID.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sid" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateX500DistinguishedNameClaim(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
      <summary>Создает объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий указанное различающееся имя X.500.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, создаваемый с помощью данного метода.</returns>
      <param name="x500DistinguishedName">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, который задает различающееся имя X.500 сущности, связанной с этим утверждением.Этот параметр не должен иметь значение null.Если этот параметр имеет значение null, данный метод формирует исключение <see cref="T:System.ArgumentNullException" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="x500DistinguishedName" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.DefaultComparer">
      <summary>Возвращает объект, с помощью которого можно проверить равенство двух объектов <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>Реализация интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> для сравнения двух объектов <see cref="T:System.IdentityModel.Claims.Claim" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.Equals(System.Object)">
      <summary>Определяет, представляет ли указанный объект то же утверждение, что и текущий объект <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>Значение true, если объект <paramref name="obj" /> представляет то же утверждение, что и текущий объект <see cref="T:System.IdentityModel.Claims.Claim" />; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.GetHashCode">
      <summary>Возвращает хэш-код для текущего утверждения.</summary>
      <returns>Хэш-код для утверждения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.Resource">
      <summary>Возвращает ресурс, с которым связан этот объект <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>Ресурс, с которым связан этот объект <see cref="T:System.IdentityModel.Claims.Claim" />. </returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.Right">
      <summary>Строка, представляющая универсальный код ресурса (URI), указывающий право, связанное с этим объектом <see cref="T:System.IdentityModel.Claims.Claim" />.Заранее определенные права доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.Rights" />.</summary>
      <returns>URI, указывающий право, связанное с этим объектом <see cref="T:System.IdentityModel.Claims.Claim" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.System">
      <summary>Заранее определенное утверждение, представляющее системную сущность.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />, представляющий системную сущность.Значения свойств этого объекта <see cref="T:System.IdentityModel.Claims.Claim" /> указаны в следующей таблице.СвойствоЗначение<see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /><see cref="P:System.IdentityModel.Claims.ClaimTypes.System" /><see cref="P:System.IdentityModel.Claims.Claim.Resource" />System<see cref="P:System.IdentityModel.Claims.Claim.Right" /><see cref="P:System.IdentityModel.Claims.Rights.Identity" /></returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.ToString">
      <summary>Возвращает строковое представление этого объекта <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.ClaimSet">
      <summary>Представляет коллекцию утверждений, связанных с сущностью.</summary>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)">
      <summary>Определяет, содержит ли объект <see cref="T:System.IdentityModel.Claims.ClaimSet" /> указанное утверждение <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.IdentityModel.Claims.ClaimSet" /> содержит указанное утверждение; в противном случае — значение false.</returns>
      <param name="claim">Объект <see cref="T:System.IdentityModel.Claims.Claim" />, который требуется найти.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Определяет, содержит ли объект <see cref="T:System.IdentityModel.Claims.ClaimSet" /> указанное утверждение <see cref="T:System.IdentityModel.Claims.Claim" />, с помощью указанного объекта <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.IdentityModel.Claims.ClaimSet" /> содержит указанное утверждение; в противном случае — значение false.</returns>
      <param name="claim">Объект <see cref="T:System.IdentityModel.Claims.Claim" />, который требуется найти.</param>
      <param name="comparer">Объект <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Count">
      <summary>При переопределении в производном классе возвращает количество утверждений в наборе утверждений.</summary>
      <returns>Количество утверждений в этом наборе <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)">
      <summary>При переопределении в производном классе выполняет поиск объекта <see cref="T:System.IdentityModel.Claims.Claim" />, соответствующего указанному типу утверждения и правам в <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.IdentityModel.Claims.Claim" />, позволяющий перечислить утверждения, соответствующие указанным критериям.</returns>
      <param name="claimType">Универсальный код ресурса (URI) типа утверждения.Несколько типов утверждений доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.ClaimTypes" />.</param>
      <param name="right">URI права, связанного с новым утверждением.Несколько прав доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.Rights" />.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.GetEnumerator">
      <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объект <see cref="T:System.IdentityModel.Claims.Claim" /> в объекте <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Элемент <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объект <see cref="T:System.IdentityModel.Claims.Claim" /> в объекте <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Issuer">
      <summary>В случае переопределения в производном классе возвращает сущность, выдавшую этот набор <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, выдавший этот объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Item(System.Int32)">
      <summary>При переопределении в производном класса возвращает объект <see cref="T:System.IdentityModel.Claims.Claim" /> с заданным индексом.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" /> по заданному индексу.</returns>
      <param name="index">Индекс извлекаемого утверждения.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.System">
      <summary>Возвращает объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий доверенного издателя приложения.</summary>
      <returns>Системный объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объекты <see cref="T:System.IdentityModel.Claims.Claim" /> в коллекции <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Элемент <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объект <see cref="T:System.IdentityModel.Claims.Claim" /> в объекте <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Windows">
      <summary>Возвращает набор утверждений, содержащий идентификаторы безопасности Windows. </summary>
      <returns>Класс <see cref="T:System.IdentityModel.Claims.ClaimSet" />, содержащий как минимум одно утверждение типа <see cref="P:System.IdentityModel.Claims.ClaimTypes.Sid" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.ClaimTypes">
      <summary>Представляет заранее определенные типы утверждений, которые может предъявить сущность.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Anonymous">
      <summary>Возвращает URI для утверждения с указанием анонимного пользователя.</summary>
      <returns>URI для утверждения с указанием анонимного пользователя.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Authentication">
      <summary>Возвращает URI для утверждения с указанием о том, прошла ли сущность проверку подлинности.</summary>
      <returns>URI для утверждения с указанием о том, прошла ли сущность проверку подлинности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.AuthorizationDecision">
      <summary>Возвращает URI для утверждения с указанием решения об авторизации сущности.</summary>
      <returns>URI для утверждения с указанием решения об авторизации сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Country">
      <summary>Возвращает URI для утверждения с указанием страны или региона, где находится сущность.</summary>
      <returns>URI для утверждения с указанием страны или региона, где находится сущность.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.DateOfBirth">
      <summary>Возвращает URI для утверждения с указанием даты рождения сущности.</summary>
      <returns>URI для утверждения с указанием даты рождения сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.DenyOnlySid">
      <summary>Возвращает URI для утверждения с указанием идентификатора безопасности (SID) "только запрет" для сущности.</summary>
      <returns>URI для утверждения с указанием SID "только запрет" для сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Dns">
      <summary>Возвращает URI для утверждения с указанием DNS-имени, связанного с именем компьютера или с альтернативным именем субъекта или издателя сертификата X.509.</summary>
      <returns>URI для утверждения с указанием DNS-имени, связанного с именем компьютера или с альтернативным именем субъекта или издателя сертификата X.509.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Email">
      <summary>Возвращает URI для утверждения с указанием адреса электронной почты сущности.</summary>
      <returns>URI для утверждения с указанием адреса электронной почты сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Gender">
      <summary>Возвращает URI для утверждения с указанием пола сущности.</summary>
      <returns>URI для утверждения с указанием пола сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.GivenName">
      <summary>Возвращает URI для утверждения с указанием имени сущности.</summary>
      <returns>URI для утверждения с указанием имени сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Hash">
      <summary>Возвращает URI для утверждения с указанием значения хэша.</summary>
      <returns>URI для утверждения с указанием значения хэша.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.HomePhone">
      <summary>Возвращает URI для утверждения с указанием номера домашнего телефона сущности.</summary>
      <returns>URI для утверждения с указанием номера домашнего телефона сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Locality">
      <summary>Возвращает URI для утверждения с указанием языкового стандарта по месту нахождения сущности.</summary>
      <returns>URI для утверждения с указанием языкового стандарта по месту нахождения сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.MobilePhone">
      <summary>Возвращает URI для утверждения с указанием номера мобильного телефона сущности.</summary>
      <returns>URI для утверждения с указанием номера мобильного телефона сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Name">
      <summary>Возвращает URI для утверждения с указанием имени сущности.</summary>
      <returns>URI для утверждения с указанием имени сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.NameIdentifier">
      <summary>Возвращает URI для утверждения с указанием имени сущности.</summary>
      <returns>URI для утверждения с указанием имени сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.OtherPhone">
      <summary>Возвращает URI для утверждения с указанием альтернативного номера телефона сущности.</summary>
      <returns>URI для утверждения с указанием альтернативного номера телефона сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.PostalCode">
      <summary>Возвращает URI для утверждения с указанием почтового индекса сущности.</summary>
      <returns>URI для утверждения с указанием почтового индекса сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.PPID">
      <summary>Возвращает URI для утверждения с указанием частного личного идентификатора (PPI) сущности.</summary>
      <returns>URI для утверждения с указанием частного личного идентификатора (PPI) сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Rsa">
      <summary>Возвращает URI для утверждения с указанием ключа RSA.</summary>
      <returns>URI для утверждения с указанием ключа RSA.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Sid">
      <summary>Возвращает URI для утверждения с указанием идентификатора безопасности (SID).</summary>
      <returns>URI для утверждения с указанием идентификатора безопасности (SID).</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Spn">
      <summary>Возвращает URI для утверждения с указанием имени участника-службы (SPN).</summary>
      <returns>URI для утверждения с указанием имени участника-службы (SPN).</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.StateOrProvince">
      <summary>Возвращает URI для утверждения с указанием штата или провинции, где находится сущность.</summary>
      <returns>URI для утверждения с указанием штата или провинции, где находится сущность.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.StreetAddress">
      <summary>Возвращает URI для утверждения с указанием почтового адреса сущности.</summary>
      <returns>URI для утверждения с указанием почтового адреса сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Surname">
      <summary>Возвращает URI для утверждения с указанием фамилии сущности.</summary>
      <returns>URI для утверждения с указанием фамилии сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.System">
      <summary>Возвращает URI для утверждения с указанием системной сущности.</summary>
      <returns>URI для утверждения с указанием системной сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Thumbprint">
      <summary>Возвращает URI для утверждения с указанием отпечатка.</summary>
      <returns>URI для утверждения с указанием отпечатка.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Upn">
      <summary>Возвращает URI для утверждения с указанием имени участника-пользователя (UPN).</summary>
      <returns>URI для утверждения с указанием UPN.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Uri">
      <summary>Возвращает URI для утверждения с указанием URI.</summary>
      <returns>URI для утверждения с указанием URI.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Webpage">
      <summary>Возвращает URI для утверждения с указанием веб-страницы сущности.</summary>
      <returns>URI для утверждения с указанием веб-страницы сущности.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.X500DistinguishedName">
      <summary>Возвращает строку, содержащую URI для утверждения с различающимся именем сертификата X.509.</summary>
      <returns>URI для утверждения с различающимся именем сертификата X.509.</returns>
    </member>
    <member name="T:System.IdentityModel.Claims.DefaultClaimSet">
      <summary>Предоставляет реализацию по умолчанию для класса <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />, используя указанные утверждения.</summary>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащий утверждения, добавляемые к этому набору утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.Claim[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />, используя указанные утверждения.</summary>
      <param name="claims">Массив утверждений <see cref="T:System.IdentityModel.Claims.Claim" />, добавляемых в набор утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.ClaimSet,System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />, используя указанные утверждения.</summary>
      <param name="issuer">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, указывающий издателя набора утверждений <see cref="T:System.IdentityModel.Claims.ClaimSet" />, заданного параметром <paramref name="claims" />.</param>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащий утверждения, добавляемые к этому набору утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.— или —Значение параметра <paramref name="issuer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Claims.Claim[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />, используя указанные утверждения.</summary>
      <param name="issuer">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, указывающий издателя набора утверждений <see cref="T:System.IdentityModel.Claims.ClaimSet" />, заданного параметром <paramref name="claims" />.</param>
      <param name="claims">Массив утверждений <see cref="T:System.IdentityModel.Claims.Claim" />, добавляемых в набор утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.— или —Значение параметра <paramref name="issuer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)">
      <summary>Определяет, присутствует ли указанное утверждение в этом наборе утверждений.</summary>
      <returns>Значение true, если утверждение содержится в этом наборе утверждений. В противном случае — значение false.</returns>
      <param name="claim">Элемент <see cref="T:System.IdentityModel.Claims.Claim" />, наличие которого в этой коллекции требуется проверить.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claim" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Count">
      <summary>Возвращает количество объектов <see cref="T:System.IdentityModel.Claims.Claim" /> в этом наборе утверждений.</summary>
      <returns>Количество объектов <see cref="T:System.IdentityModel.Claims.Claim" /> в этом наборе утверждений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.FindClaims(System.String,System.String)">
      <summary>Выполняет поиск объекта <see cref="T:System.IdentityModel.Claims.Claim" />, соответствующего указанному типу утверждения и правам в <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.IdentityModel.Claims.Claim" />, позволяющий перечислить утверждения, соответствующие указанным критериям.</returns>
      <param name="claimType">Универсальный код ресурса (URI) типа утверждения.Несколько типов утверждений доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.ClaimTypes" />.</param>
      <param name="right">URI права, связанного с новым утверждением.Несколько прав доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.Rights" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объекты <see cref="T:System.IdentityModel.Claims.Claim" /> в коллекции <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</summary>
      <returns>Элемент <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить объект <see cref="T:System.IdentityModel.Claims.Claim" /> в наборе <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.Initialize(System.IdentityModel.Claims.ClaimSet,System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />, используя указанные утверждения.</summary>
      <param name="issuer">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, выдавший набор <see cref="T:System.IdentityModel.Claims.ClaimSet" />, указанный параметром <paramref name="claims" />.</param>
      <param name="claims">Набор объектов <see cref="T:System.IdentityModel.Claims.Claim" />, включаемых в этот набор утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.— или —Значение параметра <paramref name="issuer" /> равно null.</exception>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Issuer">
      <summary>Возвращает объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, выдавший этот набор утверждений.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, выдавший этот набор утверждений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Item(System.Int32)">
      <summary>Возвращает утверждение <see cref="T:System.IdentityModel.Claims.Claim" /> с указанным индексом.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.Claim" /> с указанным индексом.</returns>
      <param name="index">Индекс извлекаемого утверждения.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.ToString">
      <summary>Возвращает этот объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.Rights">
      <summary>Определяет заранее определенные типы прав, которые могут быть связаны с объектом <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
    </member>
    <member name="P:System.IdentityModel.Claims.Rights.Identity">
      <summary>Возвращает строку, указывающую, что право представляет собой удостоверение.</summary>
      <returns>Право, представляющее удостоверение.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Rights.PossessProperty">
      <summary>Возвращает строку, указывающую, что право представляет собой свойство, которым обладает сущность, связанная с утверждением.</summary>
      <returns>Право, представляющее собой свойство, которым обладает сущность, связанная с объектом <see cref="T:System.IdentityModel.Claims.Claim" />.</returns>
    </member>
    <member name="T:System.IdentityModel.Claims.WindowsClaimSet">
      <summary>Представляет коллекцию утверждений Windows, связанных с сущностью.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />, используя удостоверение пользователя Windows, заданное объектом <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, задающий удостоверение пользователя Windows.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />, используя удостоверение пользователя Windows, заданное объектом <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, задающий удостоверение пользователя Windows.</param>
      <param name="includeWindowsGroups">Значение true, если требуется включить утверждения, представляющие группы Windows, к которым принадлежит этот пользователь; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.Boolean,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />, используя удостоверение пользователя Windows, заданное объектом <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, задающий удостоверение пользователя Windows.</param>
      <param name="includeWindowsGroups">Значение true, если требуется включить группы Windows, к которым принадлежит пользователь; в противном случае — значение false.</param>
      <param name="expirationTime">Объект <see cref="T:System.DateTime" />, задающий срок действия набора утверждений.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />, используя удостоверение пользователя Windows, заданное объектом <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, задающий удостоверение пользователя Windows.</param>
      <param name="expirationTime">Объект <see cref="T:System.DateTime" />, задающий срок действия набора утверждений.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.Boolean,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />, используя удостоверение пользователя Windows, заданное объектом <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, задающий удостоверение пользователя Windows.</param>
      <param name="authenticationType">Тип проверки подлинности для удостоверения Windows.</param>
      <param name="includeWindowsGroups">Значение true, если требуется включить группы Windows, к которым принадлежит пользователь; в противном случае — значение false.</param>
      <param name="expirationTime">Объект <see cref="T:System.DateTime" />, задающий срок действия набора утверждений.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Count">
      <summary>Возвращает количество утверждений в этой коллекции.</summary>
      <returns>Количество утверждений в этой коллекции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.ExpirationTime">
      <summary>Возвращает срок действия для этого объекта <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.DateTime" />, задающий срок действия объекта <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.FindClaims(System.String,System.String)">
      <summary>Выполняет поиск утверждения, соответствующего указанному типу утверждения и правам в объекте <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>Объект System.Collections.Generic.IEnumerable&lt;Claim&gt;, позволяющий перечислять утверждения, соответствующие указанным критериям.</returns>
      <param name="claimType">Универсальный код ресурса (URI) типа утверждения.</param>
      <param name="right">URI права, связанного с новым утверждением.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить утверждения Windows в объекте <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить утверждения Windows в объекте <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Issuer">
      <summary>Возвращает издателя этого объекта <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий издателя этого набора утверждений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Item(System.Int32)">
      <summary>Возвращает утверждение с указанным индексом.</summary>
      <returns>Утверждение с указанным индексом.</returns>
      <param name="index">Индекс извлекаемого утверждения Windows.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.ToString">
      <summary>Возвращает этот объект <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.WindowsIdentity">
      <summary>Возвращает удостоверение Windows для набора утверждений.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.WindowsIdentity" /> для этого набора утверждений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.X509CertificateClaimSet">
      <summary>Представляет коллекцию утверждений, извлеченных из сертификата X.509, связанного с сущностью.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />, используя указанный сертификат X.509.</summary>
      <param name="certificate">Сертификат X.509, добавляемый к набору утверждений.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Count">
      <summary>Возвращает количество утверждений сертификата X.509 в этом объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Количество утверждений сертификата X.509 в этом объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.ExpirationTime">
      <summary>Возвращает срок действия для этого объекта <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Срок действия для этого объекта <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.FindClaims(System.String,System.String)">
      <summary>Выполняет поиск утверждения, соответствующего указанному типу утверждения и правам в объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Объект System.Collections.Generic.IEnumerable&lt;Claim&gt;, позволяющий перечислять утверждения, соответствующие указанным критериям.</returns>
      <param name="claimType">Универсальный код ресурса (URI) типа утверждения.</param>
      <param name="right">URI права, связанного с новым утверждением.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить утверждения Windows в объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, с помощью которого можно перечислить утверждения Windows в объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Issuer">
      <summary>Возвращает издателя этого объекта <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Издатель этого объекта <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Item(System.Int32)">
      <summary>Возвращает утверждение с указанным индексом.</summary>
      <returns>Утверждение с указанным индексом.</returns>
      <param name="index">Индекс извлекаемого утверждения.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.ToString">
      <summary>Возвращает количество утверждений сертификата X.509 в этом объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>Количество утверждений сертификата X.509 в этом объекте <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.X509Certificate">
      <summary>Возвращает сертификат X.509, связанный с этим набором утверждений.</summary>
      <returns>Сертификат X.509, связанный с этим набором утверждений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.AuthorizationContext">
      <summary>Результаты оценки всех политик авторизации, получаемые из маркеров в отправленном сообщении или путем вызова метода <see cref="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />.</summary>
    </member>
    <member name="M:System.IdentityModel.Policy.AuthorizationContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />. </summary>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets">
      <summary>Возвращает набор утверждений, связанных с политикой авторизации.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Claims.ClaimSet" />, содержащий набор утверждений. </returns>
    </member>
    <member name="M:System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Оценивает все указанные политики авторизации и создает объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий результат оценки всех указанных политик авторизации.</returns>
      <param name="authorizationPolicies">Список <see cref="T:System.Collections.Generic.IList`1" /> объектов <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащий набор политик авторизации.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.ExpirationTime">
      <summary>Возвращает дату и время окончания действия этого объекта <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, указывающее дату и время окончания действия этого объекта <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.Id">
      <summary>Возвращает уникальный идентификатор для этого объекта <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.Properties">
      <summary>Возвращает коллекцию свойств, не являющихся утверждениями, связанных с этим объектом <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, указывающий коллекцию свойств, не являющихся утверждениями.</returns>
    </member>
    <member name="T:System.IdentityModel.Policy.EvaluationContext">
      <summary>При переопределении в производном классе обозначает результаты политик авторизации, по которым выполнена оценка. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Policy.EvaluationContext" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)">
      <summary>Добавляет набор утверждений в контекст оценки.</summary>
      <param name="policy">Объект <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, представляющий политику авторизации, добавляющую утверждения в контекст оценки.</param>
      <param name="claimSet">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, содержащий набор утверждений.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.ClaimSets">
      <summary>Возвращает доступную только для чтения коллекцию объектов <see cref="T:System.IdentityModel.Claims.ClaimSet" />, объекты которой содержат утверждения, добавленные политиками авторизации, для которых выполнена оценка.</summary>
      <returns>Объекты <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащие утверждения, добавленные политиками авторизации, для которых выполнена оценка.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.Generation">
      <summary>Возвращает или задает количество выполненных процедур добавления утверждений в контекст оценки.</summary>
      <returns>Количество выполненных процедур добавления утверждений в контекст оценки.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.Properties">
      <summary>Возвращает коллекцию свойств, не являющихся утверждениями, связанных с этим объектом <see cref="T:System.IdentityModel.Policy.EvaluationContext" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, указывающий коллекцию свойств, не являющихся утверждениями.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)">
      <summary>Задает дату и время окончания действия этого объекта <see cref="T:System.IdentityModel.Policy.EvaluationContext" />. </summary>
      <param name="expirationTime">Значение <see cref="T:System.DateTime" />, указывающее дату и время окончания действия этого объекта <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.IAuthorizationComponent">
      <summary>Представляет компонент, используемый для авторизации пользователей.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.IAuthorizationComponent.Id">
      <summary>Возвращает строку, определяющую этот компонент авторизации. </summary>
      <returns>Строка, определяющая этот компонент авторизации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.IAuthorizationPolicy">
      <summary>Определяет набор правил авторизации пользователя, используя набор утверждений.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)">
      <summary>Определяет, соответствует ли пользователь требованиям этой политики авторизации.</summary>
      <returns>Значение false, если метод <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> этой политики авторизации необходимо вызывать при добавлении утверждений в объект <paramref name="evaluationContext" /> другими политиками авторизации. В противном случае — значение true, указывающее, что эта политика авторизации не требует дополнительной проверки. </returns>
      <param name="evaluationContext">Объект <see cref="T:System.IdentityModel.Policy.EvaluationContext" />, содержащий набор утверждений, оцениваемый политикой авторизации.</param>
      <param name="state">Передаваемый по ссылке объект <see cref="T:System.Object" />, представляющий пользовательское состояние для этой политики авторизации. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer">
      <summary>Возвращает объект, представляющий издателя политики авторизации. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий издателя политики авторизации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.AudienceUriMode">
      <summary>Указывает, должно ли проверяться свойство <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.Never">
      <summary>Никогда.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.Always">
      <summary>Всегда.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly">
      <summary>Только когда ключ маркера безопасности принадлежит к типу BearerKey и когда отсутствует ключи доказательства владения в маркере безопасности.</summary>
    </member>
    <member name="T:System.IdentityModel.Selectors.AudienceUriModeValidationHelper">
      <summary>Вспомогательный класс для класса <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, который проверяет, что свойству <see cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode" /> задано допустимое значение.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.AudienceUriModeValidationHelper.IsDefined(System.IdentityModel.Selectors.AudienceUriMode)">
      <summary>Возвращает значение, которое определяет, имеет ли указанное свойство <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> допустимое значение. </summary>
      <returns>Значение true, если параметр <paramref name="validationMode" /> является <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.Always" />, <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly" /> или <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.Never" />; в противном случае применяется значение false. </returns>
      <param name="validationMode">Свойство <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" />, допустимость значения которого требуется проверить.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> с использованием пользовательской схемы проверки подлинности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator" />, используя указанный проверяющий элемент управления. </summary>
      <param name="validator">Объект <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />, который выполняет проверку подлинности имени пользователя и пароля с использованием пользовательской схемы проверки подлинности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>Проверяет подлинность заданного имени пользователя и пароля и возвращает набор политик авторизации для маркеров безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="userName">Имя пользователя, связанное с маркером безопасности.</param>
      <param name="password">Пароль, связанный с маркером безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="userName" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">Недопустимая комбинация параметров <paramref name="userName" /> и <paramref name="password" />.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator" />, указывая, определяются ли группы, к которым принадлежит пользователь Windows, при проверке подлинности пользователя. </summary>
      <param name="includeWindowsGroups">Значение true, чтобы возвратить группы, к которым принадлежит пользователь Windows; в противном случае — значение false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>Значение true, если параметр <paramref name="token" /> является маркером безопасности <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />; в противном случае — значение false.</returns>
      <param name="token">Маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, подлинность которого требуется проверить.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider">
      <summary>Представляет поставщик маркеров безопасности, который предоставляет маркеры безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> для отправителя сообщения SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" />, используя заданное имя участника-службы. </summary>
      <param name="servicePrincipalName">Имя участника-службы, для которого получается маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="servicePrincipalName" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> на основании заданного имени участника-службы и сведений о том, разрешает ли клиент получателю маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> олицетворять учетные данные клиента. </summary>
      <param name="servicePrincipalName">Имя участника-службы, для которого получается маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <param name="tokenImpersonationLevel">Объект <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, который определяет степень, до которой получатель маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> может действовать от имени клиента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> не является Identification или Impersonation.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="servicePrincipalName" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> на основании заданного имени участника-службы, удостоверения клиента и сведений о том, разрешает ли клиент получателю маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> олицетворять учетные данные клиента. </summary>
      <param name="servicePrincipalName">Имя участника-службы, для которого получается маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <param name="tokenImpersonationLevel">Объект <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, который определяет степень, до которой получатель маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> может действовать от имени клиентского процесса.</param>
      <param name="networkCredential">Объект <see cref="T:System.Net.NetworkCredential" />, представляющий удостоверение <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> не является Identification или Impersonation.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="servicePrincipalName" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Возвращает маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий получаемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential">
      <summary>Возвращает удостоверение маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" />, представляющий удостоверение <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName">
      <summary>Возвращает имя участника-службы возвращаемого маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
      <returns>Имя участника-службы возвращаемого маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel">
      <summary>Возвращает значение, которое определяет степень, до которой получатель маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> может действовать от имени клиента.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, который определяет степень, до которой получатель маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> может действовать от имени клиента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>Значение true, если параметр <paramref name="token" /> является маркером безопасности <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" />; в противном случае — значение false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, используя указанный набор структур проверки подлинности. </summary>
      <param name="supportingAuthenticators">Коллекция <see cref="T:System.Collections.Generic.IList`1" /> объектов <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />, содержащая структуры проверки подлинности для проверки подлинности маркеров безопасности <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> издателя.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> с использованием указанного набора структур проверки подлинности и максимально допустимой разницы во времени между часами отправителя и получателя. </summary>
      <param name="supportingAuthenticators">Коллекция <see cref="T:System.Collections.Generic.IList`1" /> объектов <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />, содержащая структуры проверки подлинности для проверки подлинности маркеров безопасности <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> издателя.</param>
      <param name="maxClockSkew">Объект <see cref="T:System.TimeSpan" />, представляющий максимально допустимую разницу во времени между часами отправителя и получателя. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris">
      <summary>Возвращает набор целевых универсальных кодов ресурса (URI), для которых может быть предназначен маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, чтобы считаться допустимым в этом экземпляре <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> типа <see cref="T:System.String" />, содержащий целевые универсальные коды ресурса (URI), для которых может быть предназначен маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, чтобы считаться допустимым в этой структуре проверки подлинности маркера безопасности.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode">
      <summary>Возвращает или задает объект <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" />, который определяет, следует ли проверять в маркере безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> свойство <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" />, который определяет, следует ли проверять в маркере безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> свойство <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>true, если параметр <paramref name="token" /> является объектом <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />; в противном случае — false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Разрешает удостоверение, связанное с заданным идентификатором ключа, с использованием структур проверки подлинности поддерживающих маркеров безопасности, предоставленных во время создания экземпляра <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, и возвращает удостоверение в виде <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий удостоверение заданного идентификатора ключа.</returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, возвращающий удостоверение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Разрешает удостоверение, связанное с заданным маркером безопасности, с использованием структур проверки подлинности поддерживающих маркеров безопасности, предоставленных во время создания экземпляра <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, и возвращает удостоверение в виде <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий удостоверение заданного маркера безопасности.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, возвращающий удостоверение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Разрешает удостоверение, связанное с заданным идентификатором ключа, с использованием структур проверки подлинности поддерживающих маркеров безопасности, предоставленных во время создания экземпляра <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, и возвращает удостоверение в виде <see cref="T:System.Security.Principal.IIdentity" />.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.IIdentity" />, представляющий удостоверение заданного идентификатора ключа.</returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, возвращающий удостоверение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Разрешает удостоверение, связанное с заданным маркером безопасности, с использованием структур проверки подлинности поддерживающих маркеров безопасности, предоставленных во время создания экземпляра <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, и возвращает удостоверение в виде <see cref="T:System.Security.Principal.IIdentity" />.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.IIdentity" />, представляющий удостоверение заданного маркера безопасности.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, возвращающий удостоверение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
      <summary>Проверяет, что маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> предназначен для этой веб-службы.</summary>
      <returns>Значение true, если свойство <see cref="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" /> параметра <paramref name="audienceRestrictionCondition" /> входит в коллекцию <see cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris" />; в противном случае — значение false. </returns>
      <param name="audienceRestrictionCondition">Объект <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />, указывающий набор целевых веб-служб, для которых предназначен маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, создаваемых в результате проверки подлинности маркера безопасности.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности. </summary>
      <returns>Значение true, если можно выполнить проверку маркера; в противном случае — значение false. </returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>При переопределении в производном классе возвращает значение, указывающее, можно ли проверить указанный маркер безопасности с помощью этой структуры проверки подлинности маркеров безопасности. </summary>
      <returns>Значение true, если можно проверить <paramref name="token" />; в противном случае — значение false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">Невозможно проверить подлинность параметра <paramref name="token" /> с помощью этой структуры проверки подлинности маркеров безопасности.— или —Параметр <paramref name="token" /> не прошел проверку подлинности.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>При переопределении в производном классе проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности. </summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenManager">
      <summary>Представляет диспетчер маркеров безопасности, определяющий способ предоставления, проверки подлинности и сериализации маркеров безопасности. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Возвращает структуру проверки подлинности маркеров безопасности, соответствующую заданным требованиям к маркеру безопасности. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />, который проверяет подлинность маркеров безопасности во входящих сообщениях SOAP, отвечающих указанным требованиям.</returns>
      <param name="tokenRequirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />, определяющий требования к маркеру безопасности.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, соответствующий заданным требованиям к маркеру безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Возвращает поставщик маркеров безопасности, отвечающий заданным требованиям к маркеру безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />, который предоставляет маркеры безопасности, отвечающие указанным требованиям, для исходящих сообщений SOAP.</returns>
      <param name="tokenRequirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />, определяющий требования к маркеру безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Возвращает XML-сериализатор, который может сериализовать маркеры безопасности в указанной версии спецификации WS-*.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> для сериализации маркеров безопасности.</returns>
      <param name="version">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />, который указывает версии спецификации WS-*, которым соответствуют маркеры безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenProvider">
      <summary>Представляет поставщик маркеров безопасности, который обрабатывает маркеры безопасности для отправителя сообщения SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию отмены маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию отмены.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, отменяющего маркер безопасности.</param>
      <param name="token">Отменяемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию отмены маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию отмены.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, отменяющего маркер безопасности.</param>
      <param name="token">Отменяемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию обновления маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, обновляющего маркер безопасности.</param>
      <param name="tokenToBeRenewed">Обновляемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию обновления маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, обновляющего маркер безопасности.</param>
      <param name="tokenToBeRenewed">Обновляемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Отменяет маркер безопасности.</summary>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, отменяющего маркер безопасности.</param>
      <param name="token">Отменяемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Отменяет маркер безопасности.</summary>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, отменяющего маркер безопасности.</param>
      <param name="token">Отменяемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию отмены маркера безопасности.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию отмены маркера безопасности.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию получения маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер безопасности.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию получения маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер безопасности.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию обновления маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий обновляемый маркер безопасности.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию обновления маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий обновляемый маркер безопасности.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)">
      <summary>Возвращает маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий получаемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Возвращает маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий получаемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Обновляет маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий обновляемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, обновляющего маркер безопасности.</param>
      <param name="tokenToBeRenewed">Обновляемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Обновляет маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий обновляемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, обновляющего маркер безопасности.</param>
      <param name="tokenToBeRenewed">Обновляемый маркер <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation">
      <summary>Возвращает значение, указывающее, можно ли отменить маркер безопасности. </summary>
      <returns>Значение true, если маркер безопасности можно отменить; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal">
      <summary>Возвращает значение, указывающее, является ли маркер безопасности обновляемым. </summary>
      <returns>Значение true, если маркер безопасности можно обновить; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult">
      <summary>Инкапсулирует результаты асинхронной операции на делегате.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.#ctor(System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult" />.</summary>
      <param name="token">Маркер безопасности, с которым создается экземпляр <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult" />.</param>
      <param name="callback">Метод обратного вызова, который должен вызываться при завершении асинхронной операции.</param>
      <param name="state">Объект, предоставленный как последний параметр асинхронного вызова метода.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.AsyncState">
      <summary>Возвращает объект, переданный в качестве последнего параметра асинхронного вызова метода.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.AsyncWaitHandle">
      <summary>Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, инкапсулирующий дескрипторы синхронизации Win32.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.WaitHandle" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.CompletedSynchronously">
      <summary>Возвращает значение true, если вызов завершается асинхронно; в противном случае используется значение false.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.End(System.IAsyncResult)">
      <summary>Завершить асинхронную операцию с указанным результатом.</summary>
      <returns>Возвращает значение <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="result">Результат асинхронной операции.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.IsCompleted">
      <summary>Возвращает значение true, если асинхронный вызов завершается; в противном случае используется значение false.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenRequirement">
      <summary>Задает требования к маркеру безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)">
      <summary>Возвращает заданное свойство текущего экземпляра <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>Значение возвращаемого свойства.</returns>
      <param name="propertyName">Имя возвращаемого свойства.</param>
      <typeparam name="TValue">Тип возвращаемого свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize">
      <summary>Возвращает или задает требуемый размер ключа, связанного с маркером безопасности.</summary>
      <returns>Размер ключа в битах, связанного с маркером безопасности.Значение по умолчанию — 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" /> присвоено значение меньше 0.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty">
      <summary>Возвращает значение, определяющее имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" />.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType">
      <summary>Возвращает или задает тип ключа (асимметричный или симметричный), связанного с маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />, который задает тип ключа (асимметричный или симметричный), связанного с маркером безопасности.Значение по умолчанию — SymmetricKey.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty">
      <summary>Возвращает значение, определяющее имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType" />.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage">
      <summary>Возвращает или задает значение, указывающее способ использования ключа, связанного с маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyUsage" />, указывающий способ использования ключа, связанного с маркером безопасности.Значение по умолчанию — <see cref="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty">
      <summary>Возвращает значение, определяющее имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage" />.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode">
      <summary>Возвращает имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства, которое задает метод одноранговой проверки подлинности.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства, которое задает метод одноранговой проверки подлинности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties">
      <summary>Возвращает коллекцию нестатических свойств текущего экземпляра <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий коллекцию нестатических свойств текущего экземпляра <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken">
      <summary>Возвращает или задает значение, определяющее, должен ли маркер безопасности поддерживать выполнение криптографических операций, например шифрование.</summary>
      <returns>Значение true, если маркер безопасности должен поддерживать выполнение криптографических операций; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty">
      <summary>Возвращает имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken" />.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType">
      <summary>Возвращает или задает требуемый тип маркера безопасности.</summary>
      <returns>Требуемый тип маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty">
      <summary>Возвращает значение, определяющее имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType" />.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)">
      <summary>Возвращает заданное свойство текущего экземпляра <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>Значение true, если свойство <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> содержит значение свойства, указанного в свойстве <paramref name="propertyName" />; в противном случае — значение false.</returns>
      <param name="propertyName">Имя возвращаемого свойства.</param>
      <param name="result">Значение свойства, указанного в свойстве <paramref name="propertyName" />.</param>
      <typeparam name="TValue">Тип свойства, возвращаемого в параметре <paramref name="result" />.</typeparam>
      <exception cref="T:System.ArgumentException">Свойство с именем, заданным в параметре <paramref name="propertyName" />, существует, но его тип отличен от типа, заданного в параметре <paramref name="TValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenResolver">
      <summary>Представляет служебный класс, который может извлекать маркеры безопасности или ключи при наличии идентификатора ключа или предложения идентификатора ключа.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)">
      <summary>Создает арбитр маркеров безопасности по умолчанию для указанных маркеров безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, который разрешает идентификаторы ключей и предложения, соответствующие маркерам безопасности, указанным в параметре <paramref name="tokens" />. </returns>
      <param name="tokens">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, содержащая набор маркеров безопасности, для которых данный арбитр маркеров безопасности может разрешить идентификаторы ключей и предложения идентификаторов ключей.</param>
      <param name="canMatchLocalId">Значение true включает разрешение предложений идентификатора ключа &lt;SecurityTokenReference&gt;, ссылающихся на ключ безопасности, находящийся в каком-либо другом расположении в сообщении SOAP; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Получает ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
      <returns>Ключ <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, на который имеется ссылка в указанном предложении идентификатора ключа.</returns>
      <param name="keyIdentifierClause">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого извлекается ключ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удалось извлечь ключ для предложения идентификатора ключа, заданного в параметре <paramref name="keyIdentifierClause" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Извлекает маркер безопасности, соответствующий одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа.</returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается маркер безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifier" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается создать маркер безопасности для заданного идентификатора ключа.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Извлекает маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается маркер безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Пытается извлечь ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
      <returns>Значение true, если можно извлечь ключ для указанного предложения идентификатора ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifierClause">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого извлекается ключ.</param>
      <param name="key">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащий ключ, на который имеется ссылка в указанном предложении идентификатора ключа.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifierClause" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Пытается извлечь ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
      <returns>Значение true, если можно извлечь ключ для указанного предложения идентификатора ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifierClause">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого извлекается ключ.</param>
      <param name="key">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащий ключ, на который имеется ссылка в указанном предложении идентификатора ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Пытается извлечь маркер безопасности, соответствующий одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
      <returns>Значение true, если можно извлечь маркер безопасности для указанного идентификатора ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается маркер безопасности.</param>
      <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifier" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Пытается извлечь маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
      <returns>Значение true, если можно извлечь маркер безопасности для указанного предложения идентификатора ключа; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается маркер безопасности.</param>
      <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifierClause" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>При переопределении в производном классе пытается извлечь маркер безопасности, соответствующий по крайней мере одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
      <returns>Значение true, если можно извлечь маркер безопасности для указанного идентификатора ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается маркер безопасности.</param>
      <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>При переопределении в производном классе пытается разрешить маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
      <returns>Значение true, если можно извлечь маркер безопасности для указанного предложения идентификатора ключа; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается маркер безопасности.</param>
      <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenSerializer">
      <summary>Представляет класс, который может считывать и записывать идентификаторы ключей, конструкции идентификаторов ключей и маркеры безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать элемент &lt;KeyIdentifier&gt;, на который ссылается указанное средство чтения XML. </summary>
      <returns>Значение true, если можно считать указанный элемент XML &lt;KeyIdentifier&gt;; в противном случае — значение false. </returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать конструкцию в элементе &lt;KeyIdentifier&gt;, на который ссылается указанное средство чтения XML. </summary>
      <returns>Значение true, если можно считать указанную конструкцию идентификатора ключа; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения конструкции идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать элемент &lt;KeyIdentifier&gt;, на который ссылается указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Значение true, если можно считать указанный элемент &lt;KeyIdentifier&gt;; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения конструкции идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать элемент &lt;KeyIdentifier&gt;, на который ссылается указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Значение true, если можно считать указанную конструкцию идентификатора ключа; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать маркер безопасности, на который ссылается указанное средство чтения XML.</summary>
      <returns>Значение true, если маркер безопасности можно считать; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>Определяет, может ли данный сериализатор считывать маркер безопасности, на который ссылается указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Значение true, если маркер безопасности можно считать; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Определяет, может ли данный сериализатор записывать указанный идентификатор ключа. </summary>
      <returns>Значение true, если данный сериализатор может записывать указанный идентификатор ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий записываемый идентификатор ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Определяет, может ли данный сериализатор записывать указанную конструкцию идентификатора ключа.</summary>
      <returns>Значение true, если данный сериализатор может записывать указанную конструкцию идентификатора ключа; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий записываемую конструкцию идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Определяет, может ли данный сериализатор записывать указанную конструкцию идентификатора ключа.Вызывается базовым классом.</summary>
      <returns>Значение true, если данный сериализатор может записывать указанную конструкцию идентификатора ключа; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий записываемую конструкцию идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Определяет, может ли данный сериализатор записывать указанный идентификатор ключа.Вызывается базовым классом.</summary>
      <returns>Значение true, если данный сериализатор может записывать указанный идентификатор ключа; в противном случае — значение false. </returns>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий записываемый идентификатор ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Определяет, может ли данный сериализатор записывать указанный маркер безопасности в формате XML.</summary>
      <returns>Значение true, если маркер безопасности можно записать; в противном случае — значение false.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, преобразуемый в формат XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Определяет, может ли данный сериализатор записывать указанный маркер безопасности в формате XML.Вызывается базовым классом.</summary>
      <returns>Значение true, если маркер безопасности можно записать; в противном случае — значение false.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, преобразуемый в формат XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)">
      <summary>Считывает идентификатор ключа, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий считываемый идентификатор ключа.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <summary>Считывает конструкцию идентификатора ключа, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий считываемый идентификатор ключа.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Считывает конструкцию идентификатора ключа, используя указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий считываемый идентификатор ключа.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Считывает конструкцию идентификатора ключа, используя указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий считываемый идентификатор ключа.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает маркер безопасности, на который ссылается указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий считываемый маркер безопасности.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения маркера безопасности.</param>
      <param name="tokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий тип маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.— или —<paramref name="tokenResolver" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает маркер безопасности, на который ссылается указанное средство чтения XML.Вызывается базовым классом.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий считываемый маркер безопасности.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" /> для чтения маркера безопасности.</param>
      <param name="tokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий тип маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.— или —<paramref name="tokenResolver" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Записывает указанный идентификатор ключа с помощью заданного модуля записи XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи идентификатора ключа.</param>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий записываемый идентификатор ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Записывает указанную конструкцию идентификатора ключа с помощью заданного модуля записи XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи конструкции идентификатора ключа.</param>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий записываемую конструкцию идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Записывает указанную конструкцию идентификатора ключа с помощью заданного модуля записи XML.Вызывается базовым классом.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи конструкции идентификатора ключа.</param>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий записываемую конструкцию идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Записывает указанный идентификатор ключа с помощью заданного модуля записи XML.Вызывается базовым классом.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи идентификатора ключа.</param>
      <param name="keyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий записываемый идентификатор ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Записывает указанный маркер безопасности с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи маркера безопасности.</param>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий записываемый маркер безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Записывает указанный маркер безопасности с помощью заданного модуля записи XML.Вызывается базовым классом.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи маркера безопасности.</param>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий записываемый маркер безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.— или —<paramref name="writer" /> равен null.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenVersion">
      <summary>Представляет спецификации, например спецификации WS-*, в которых определены маркеры безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenVersion.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications">
      <summary>Возвращает коллекцию поддерживаемых спецификаций безопасности.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.String" />, содержащий набор поддерживаемых спецификаций безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNamePasswordValidator">
      <summary>Проверяет имя пользователя и пароль.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)">
      <summary>Возвращает экземпляр класса <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />, который проверяет имя пользователя и пароль с помощью указанного поставщика членства.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />, который проверяет имя пользователя и пароль с использованием поставщика <paramref name="provider" />. </returns>
      <param name="provider">Объект <see cref="T:System.Web.Security.MembershipProvider" /> для проверки имени пользователя и пароля.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.UserNamePasswordValidator.None">
      <summary>Возвращает проверяющий элемент управления, который не проверяет имя пользователя и пароль.В результате имя пользователя и пароль всегда считаются допустимыми.</summary>
      <returns>Проверяющий элемент управления <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />, который не проверяет имя пользователя и пароль.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)">
      <summary>В случае переопределения в производном классе проверяет указанное имя пользователя и пароль.</summary>
      <param name="userName">Проверяемое имя пользователя.</param>
      <param name="password">Проверяемый пароль.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
      <summary>Выполняет проверку подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>Значение true, если параметр <paramref name="token" /> является маркером безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />; в противном случае — значение false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>При переопределении в производном классе проверяет подлинность заданного имени пользователя и пароля и возвращает набор политик авторизации для маркеров безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />. </summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="userName">Имя пользователя, связанное с маркером безопасности.</param>
      <param name="password">Пароль, связанный с маркером безопасности.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider">
      <summary>Представляет поставщик маркеров безопасности, который предоставляет маркеры безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> для отправителя сообщения SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider" />, используя указанные имя пользователя и пароль. </summary>
      <param name="userName">Имя пользователя, для которого требуется получить маркер безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</param>
      <param name="password">Пароль пользователя, для которого требуется получить маркер безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Возвращает маркер безопасности на основании имени пользователя и пароля, указанного в конструкторе.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий получаемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator">
      <summary>Использует проверку подлинности Windows для проверки подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator" />, указывая, добавляются ли группы, к которым принадлежит пользователь Windows, в свойство <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> при проверке подлинности пользователя. </summary>
      <param name="includeWindowsGroups">Значение true, чтобы возвратить группы, к которым принадлежит пользователь Windows; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>Значение true, если параметр <paramref name="token" /> является маркером безопасности <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />; в противном случае — значение false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator">
      <summary>Использует проверку подлинности Windows для проверки подлинности имени пользователя и пароля в маркере безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" />, указывая, добавляются ли при проверке подлинности пользователя утверждения, идентифицирующие группы Windows, к которым принадлежит пользователь, в свойство <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" />. </summary>
      <param name="includeWindowsGroups">Значение true, чтобы возвратить группы, к которым принадлежит пользователь Windows; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>Проверяет подлинность заданного имени пользователя и пароля и возвращает набор политик авторизации для маркеров безопасности <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="userName">Имя пользователя, связанное с маркером безопасности.</param>
      <param name="password">Пароль, связанный с маркером безопасности.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="userName" /> содержит несколько знаков обратной косой черты (\).</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509CertificateValidator">
      <summary>Проверяет сертификат X.509.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />. </summary>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust">
      <summary>Возвращает проверяющий элемент управления, который проверяет сертификаты X.509, используя цепь доверия. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, который проверяет сертификаты X.509, используя цепь доверия.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Возвращает проверяющий элемент управления, проверяющий сертификат X.509 с помощью контекста и политики цепочки, используемой для создания и проверки цепи доверия. </summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, который проверяет сертификаты X.509, используя цепь доверия.</returns>
      <param name="useMachineContext">Значение true для использования контекста компьютера; значение false для использования контекста текущего пользователя.</param>
      <param name="chainPolicy">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />, который задает политику, используемую для создания и проверки цепи доверия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Возвращает проверяющий элемент управления, который проверяет, что сертификат находится в хранилище сертификатов TrustedPeople, или задает контекст и политику цепочки, используемую для создания цепи доверия.Сертификат является доверенным, если он прошел проверку любым из методов проверки.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, который проверяет, находится ли сертификат в хранилище сертификатов TrustedPeople, или строит цепочку доверия сертификатов.</returns>
      <param name="useMachineContext">Значение true для использования контекста компьютера; значение false для использования контекста текущего пользователя.</param>
      <param name="chainPolicy">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />, который задает политику, используемую для создания цепи доверия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.None">
      <summary>Возвращает проверяющий элемент управления, который не проверяет сертификат X.509.В результате сертификат X.509 всегда считается действительным.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, который не проверяет сертификат X.509.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust">
      <summary>Возвращает проверяющий элемент управления, который проверяет, находится ли этот сертификат в хранилище сертификатов TrustedPeople, или создает цепь доверия сертификатов.Сертификат является доверенным, если он прошел проверку любым из методов проверки.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, который проверяет, находится ли сертификат в хранилище сертификатов TrustedPeople, или строит цепочку доверия сертификатов.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust">
      <summary>Возвращает проверяющий элемент управления, который проверяет, что сертификат находится в хранилище сертификатов TrustedPeople.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, проверяющий элемент управления, который проверяет, что сертификат находится в хранилище сертификатов TrustedPeople.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>При переопределении в производном классе проверяет сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, представляющий проверяемый сертификат X.509.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
      <summary>Проверяет подлинность маркера <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />, используя указанный проверяющий элемент управления для сертификата. </summary>
      <param name="validator">Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, проверяющий действительность сертификата.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />, используя заданный метод проверки сертификатов, и указывает, сопоставляется ли удостоверение сертификата с удостоверением Windows.</summary>
      <param name="validator">Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, проверяющий действительность сертификата.</param>
      <param name="mapToWindows">Значение true для сопоставления сертификата с удостоверением Windows; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />, используя заданный метод проверки сертификатов, и указывает, сопоставляется ли удостоверение сертификата с удостоверением Windows и с группами Windows, к которым принадлежит пользователь.</summary>
      <param name="validator">Объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, проверяющий действительность сертификата.</param>
      <param name="mapToWindows">Значение true для сопоставления сертификата с удостоверением Windows; в противном случае — значение false. </param>
      <param name="includeWindowsGroups">Значение true, чтобы включать группы, к которым принадлежит пользователь Windows, в свойство <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" />, создаваемое в процессе проверки подлинности; в противном случае — значение false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли проверить указанный маркер безопасности с помощью данной структуры проверки подлинности маркеров безопасности.</summary>
      <returns>Значение true, если параметр <paramref name="token" /> является маркером безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> или экземпляром класса, производного от класса <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; в противном случае — значение false.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
      <summary>Возвращает значение, указывающее, сопоставляется ли сертификат X.509 с учетной записью Windows.</summary>
      <returns>Значение true для сопоставления сертификата X.509 с учетной записью Windows; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для данного маркера безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая набор политик авторизации, действующих для данного приложения.</returns>
      <param name="token">Проверяемый объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenProvider">
      <summary>Представляет поставщик маркеров безопасности, который предоставляет маркеры безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> для отправителя сообщения SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />, получая сертификат X.509 с использованием указанных условий хранилища сертификатов. </summary>
      <param name="storeLocation">Одно из значений <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющих местоположение хранилища сертификатов.</param>
      <param name="storeName">Одно из значений <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, определяющих имя хранилища сертификатов.</param>
      <param name="findType">Одно из значений <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, определяющих способ поиска хранилища сертификатов.</param>
      <param name="findValue">Значение, используемое для поиска сертификата X.509 в хранилище сертификатов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> равен null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Отсутствуют сертификаты, отвечающие заданным условиям.— или —Несколько сертификатов отвечают заданным условиям.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, для которого требуется получить маркер безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate">
      <summary>Возвращает сертификат X.509, связанный с маркером безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, представляющий сертификат X.509 маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Возвращает маркер безопасности с использованием сертификата X.509, заданного в конструкторе.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий получаемый маркер безопасности.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает время ожидания для сообщения, получающего маркер безопасности.</param>
    </member>
    <member name="T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <summary>Базовый класс для асимметричных ключей.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>При переопределении в производном классе этот метод возвращает указанный асимметричный алгоритм шифрования. </summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, представляющий указанный алгоритм асимметричного шифрования.Как правило, в качестве параметра <paramref name="privateKey" /> передается значение true, так как для шифрования обычно требуется закрытый ключ.</returns>
      <param name="algorithm">Создаваемый асимметричный алгоритм.</param>
      <param name="privateKey">Значение true, если для создания алгоритма требуется закрытый ключ; в противном случае — значение false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Если этот метод переопределен в производном классе, он возвращает алгоритм шифрования, создающий хэш для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.HashAlgorithm" />, создающий хэши для цифровых сигнатур.</returns>
      <param name="algorithm">Хэш-алгоритм.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Если этот метод переопределен в производном классе, он возвращает алгоритм модуля удаления формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, представляющий алгоритм модуля удаления формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля удаления формата для цифровой сигнатуры.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Если этот метод переопределен в производном классе, он возвращает алгоритм модуля создания формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />, представляющий алгоритм модуля создания формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля создания формата для цифровой сигнатуры.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
      <summary>При переопределении в производном классе возвращает значение, указывающее, доступен ли закрытый ключ.</summary>
      <returns>Значение true, если закрытый ключ доступен; в противном случае — значение false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <summary>Представляет базовый класс для конструкций идентификатора ключа, основанных на двоичных данных.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />, используя указанный тип конструкции идентификатора ключа, двоичные данные и значение, указывающее на необходимость клонирования двоичных данных. </summary>
      <param name="clauseType">Тип конструкции идентификатора ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
      <param name="identificationData">Массив <see cref="T:System.Byte" />, который содержит двоичные данные, представляющие идентификатор ключа.</param>
      <param name="cloneBuffer">true для клонирования массива, передаваемого в параметре <paramref name="identificationData" />; в противном случае — false. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="identificationData" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="identificationData" /> имеет нулевую длину.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />, используя указанный тип конструкции идентификатора ключа, двоичные данные, значение, указывающее на необходимость клонирования двоичных данных, специальное слово и длину ключа.</summary>
      <param name="clauseType">Тип конструкции идентификатора ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
      <param name="identificationData">Массив <see cref="T:System.Byte" />, который содержит двоичные данные, представляющие идентификатор ключа.Задает двоичные данные, возвращаемые методом <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />.</param>
      <param name="cloneBuffer">true для клонирования массива, передаваемого в параметре <paramref name="identificationData" />; в противном случае — false. </param>
      <param name="derivationNonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.Задает значение, возвращаемое методом <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</param>
      <param name="derivationLength">Размер производного ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identificationData" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="identificationData" /> имеет нулевую длину.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
      <summary>Возвращает двоичные данные, представляющие идентификатор ключа.</summary>
      <returns>Массив <see cref="T:System.Byte" />, который содержит двоичные данные, представляющие идентификатор ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
      <summary>Возвращает двоичные данные, представляющие идентификатор ключа.</summary>
      <returns>Массив <see cref="T:System.Byte" />, который содержит двоичные данные, представляющие идентификатор ключа.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
      <summary>Возвращает значение, указывающее, соответствуют ли двоичные данные для текущего экземпляра указанным двоичным данным.</summary>
      <returns>Значение true, если параметр <paramref name="data " />эквивалентен двоичным данным, возвращаемым методом <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />; в противном случае — значение false.</returns>
      <param name="data">Массив <see cref="T:System.Byte" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
      <summary>Возвращает значение, указывающее, эквивалентны ли двоичные данные для текущего экземпляра указанным двоичным данным в заданном смещении.</summary>
      <returns>Значение true, если двоичные данные параметра <paramref name="data " />, начиная с индекса, указанного в параметре <paramref name="offset" />, эквивалентны двоичным данным, возвращаемым методом <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> (начиная с нулевого индекса); в противном случае — значение false.</returns>
      <param name="data">Массив <see cref="T:System.Byte" /> для сравнения.</param>
      <param name="offset">Индекс массива, с которого начинается сравнение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанной конструкции идентификатора ключа.</summary>
      <returns>Значение true, если параметр <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />, а двоичные данные, возвращаемые методом <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />, одинаковы для параметра <paramref name="keyIdentifierClause" /> и текущего экземпляра; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <summary>Представляет предложение идентификатора ключа, идентифицирующее зашифрованный ключ.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> с помощью указанного зашифрованного ключа и алгоритма, используемого для его шифрования.</summary>
      <param name="encryptedKey">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.Задает значение, возвращаемое из метода <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</param>
      <param name="encryptionMethod">Алгоритм шифрования, используемый для шифрования ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encryptionMethod" /> равно null.— или —Значение параметра <paramref name="encryptedKey" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="encryptedKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> с помощью указанного зашифрованного ключа, алгоритма, используемого для его шифрования, а также идентификатора для ключа шифрования.</summary>
      <param name="encryptedKey">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.Задает значение, возвращаемое из метода <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</param>
      <param name="encryptionMethod">Алгоритм шифрования, используемый для шифрования ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</param>
      <param name="encryptingKeyIdentifier">
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> — идентификатор для ключа шифрования, заданного в параметре <paramref name="encryptedKey" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encryptionMethod" /> равно null.— или —Значение параметра <paramref name="encryptedKey" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="encryptedKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> с помощью указанного зашифрованного ключа, алгоритма, используемого для его шифрования, идентификатора для ключа шифрования, а также имени, доступного для чтения пользователю.</summary>
      <param name="encryptedKey">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.Задает значение, возвращаемое из метода <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</param>
      <param name="encryptionMethod">Алгоритм шифрования, используемый для шифрования ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</param>
      <param name="encryptingKeyIdentifier">
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> — идентификатор для ключа шифрования, заданного в параметре <paramref name="encryptedKey" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />.</param>
      <param name="carriedKeyName">Имя, доступное для чтения пользователю, которое связано с ключом, заданным в параметре <paramref name="encryptedKey" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encryptionMethod" /> равно null.— или —Значение параметра <paramref name="encryptedKey" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="encryptedKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> с помощью указанного зашифрованного ключа, алгоритма, используемого для его шифрования, идентификатора для ключа, а также имени, доступного для чтения пользователю.</summary>
      <param name="encryptedKey">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.Задает значение, возвращаемое из метода <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</param>
      <param name="encryptionMethod">Алгоритм шифрования, используемый для шифрования ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</param>
      <param name="encryptingKeyIdentifier">
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> — идентификатор для ключа, заданного в параметре <paramref name="encryptedKey" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />.</param>
      <param name="carriedKeyName">Имя, доступное для чтения пользователю, которое связано с ключом, заданным в параметре <paramref name="encryptedKey" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</param>
      <param name="derivationNonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.Задает значение, возвращаемое методом <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</param>
      <param name="derivationLength">Размер производного ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encryptionMethod" /> равно null.— или —Значение параметра <paramref name="encryptedKey" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="encryptedKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
      <summary>Возвращает имя, доступное для чтения пользователю, связанное с зашифрованным ключом.</summary>
      <returns>Имя, доступное для чтения пользователю, которое связано с зашифрованным ключом.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
      <summary>Возвращает идентификатор для ключа шифрования.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> — это идентификатор для ключа шифрования.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
      <summary>Возвращает алгоритм шифрования, используемый для шифрования ключа.</summary>
      <returns>Алгоритм шифрования, используемый для шифрования ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
      <summary>Возвращает зашифрованный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному зашифрованному ключу, методу шифрования и имени, доступному для чтения пользователю.</summary>
      <returns>Значение true, если параметры <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> и <paramref name="carriedKeyName" /> имеют одинаковые значения, возвращаемые методом <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> и свойствами <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> и <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> соответственно; в противном случае — значение false.</returns>
      <param name="encryptedKey">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</param>
      <param name="encryptionMethod">Алгоритм шифрования, используемый для шифрования ключа. </param>
      <param name="carriedKeyName">Имя, доступное для чтения пользователю, которое связано с зашифрованным ключом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному предложению идентификатора ключа.</summary>
      <returns>Значение true, если предложение идентификатора <paramref name="keyIdentifierClause" /> имеет тип <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> и использует тот же зашифрованный ключ, метод шифрования и имя, понятное пользователю, что и текущий экземпляр; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifierClause" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <summary>Представляет маркер безопасности, основанный на XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />. </summary>
      <param name="tokenXml">Объект <see cref="T:System.Xml.XmlElement" />, представляющий XML, связанный с маркером безопасности.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" />.</param>
      <param name="proofToken">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер проверки для маркера безопасности.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" />.</param>
      <param name="effectiveTime">Значение <see cref="T:System.DateTime" />, соответствующее первому моменту времени, когда данный маркер безопасности становится действительным.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />.</param>
      <param name="expirationTime">Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />.</param>
      <param name="internalTokenReference">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий ссылку на данный маркер безопасности при его включении в сообщение SOAP с ссылкой на него.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" />.</param>
      <param name="externalTokenReference">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий ссылку на данный маркер безопасности, если он не включен в сообщение SOAP с ссылкой на него.Задает свойство <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />.</param>
      <param name="authorizationPolicies">Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащему набор политик авторизации для этого маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="tokenXml" /> равно null.— или —Значение параметра <paramref name="proofToken" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies">
      <summary>Возвращает коллекцию политик авторизации для данного маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащему набор политик авторизации для этого маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанное предложение идентификатора ключа.</summary>
      <returns>Значение true, если параметр <paramref name="T" /> не равен null и принадлежит к такому же типу, что и значения свойства <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> или <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />; в противном случае — значение false.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает предложение заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Параметр <paramref name="T" /> не равен null и не принадлежит к такому же типу, что и значения свойства <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> или <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference">
      <summary>Возвращает предложение идентификатора ключа безопасности с ссылкой на маркер безопасности, не включенный в сообщение SOAP с ссылкой на него.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий ссылку на данный маркер безопасности, если он не включен в сообщение SOAP с ссылкой на него.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference">
      <summary>Возвращает предложение идентификатора ключа безопасности с ссылкой на маркер безопасности, включенный в сообщение SOAP с ссылкой на него.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий ссылку на данный маркер безопасности при его включении в сообщение SOAP с ссылкой на него.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, равен ли идентификатор ключа данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, когда параметр <paramref name="keyIdentifierClause" /> не равен null и соответствует значениям свойства <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> или <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken">
      <summary>Возвращает маркер проверки для маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер проверки для маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером проверки.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который содержит набор ключей, связанных с маркером проверки.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml">
      <summary>Возвращает XML, связанный с маркером безопасности. </summary>
      <returns>Объект <see cref="T:System.Xml.XmlElement" />, представляющий XML, связанный с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString">
      <summary>Возвращает текущий объект.</summary>
      <returns>Текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее первому моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <summary>Представляет ключи, которые создаются с помощью симметричных алгоритмов и хранятся только в ОЗУ локального компьютера.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />, используя указанный симметричный ключ. </summary>
      <param name="symmetricKey">Массив <see cref="T:System.Byte" />, содержащий симметричный ключ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="symmetricKey" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="symmetricKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />, используя указанный симметричный ключ и значение, указывающее, необходимо ли клонировать двоичные данные. </summary>
      <param name="symmetricKey">Массив <see cref="T:System.Byte" />, содержащий симметричный ключ.</param>
      <param name="cloneBuffer">true для клонирования массива, передаваемого в параметре <paramref name="symmetricKey" />; в противном случае — false. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="symmetricKey" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="symmetricKey" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Расшифровывает указанный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий расшифрованный ключ.</returns>
      <param name="algorithm">Алгоритм шифрования, который использовался для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Шифрует указанный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</returns>
      <param name="algorithm">Алгоритм для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий ключ.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>Создает производный класс, используя указанный алгоритм шифрования и параметры для текущего ключа.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий производный ключ.</returns>
      <param name="algorithm">Универсальный код ресурса (URI), представляющий алгоритм шифрования, который используется для создания производного ключа.</param>
      <param name="label">Массив <see cref="T:System.Byte" />, содержащий параметр метки для алгоритма шифрования.</param>
      <param name="nonce">Массив <see cref="T:System.Byte" />, содержащий специальное слово, которое используется для создания производного ключа.</param>
      <param name="derivedKeyLength">Размер производного ключа.</param>
      <param name="offset">Позиция, в которой расположен производный ключ в массиве байтов, возвращаемом из этого метода.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>Возвращает преобразование, расшифровывающее текст с помощью указанного алгоритма шифрования.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование расшифровки.</returns>
      <param name="algorithm">Алгоритм шифрования, который расшифровывает текст, например зашифрованный текст XML.</param>
      <param name="iv">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (IV) для указанного алгоритма.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>Возвращает преобразование, шифрующее XML с помощью указанного алгоритма шифрования.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование шифрования.</returns>
      <param name="algorithm">Алгоритм для шифрования XML.</param>
      <param name="iv">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (IV) для указанного алгоритма.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
      <summary>Возвращает размер в битах вектора инициализации (IV), который требуется для указанного алгоритма шифрования.</summary>
      <returns>Размер в битах вектора инициализации (IV), который требуется для алгоритма шифрования, указанного в параметре <paramref name="algorithm" />.</returns>
      <param name="algorithm">Алгоритм шифрования, которому требуется получение размера вектора инициализации (IV).</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>Возвращает экземпляр указанного хэш-алгоритма с ключом.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, представляющий хэш-алгоритм с ключом.</returns>
      <param name="algorithm">Хэш-алгоритм с ключом, используемый для получения экземпляра.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>Возвращает экземпляр указанного симметричного алгоритма.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />, представляющий симметричный алгоритм.</returns>
      <param name="algorithm">Симметричный алгоритм для получения экземпляра.</param>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
      <summary>Возвращает байты, представляющие симметричный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий симметричный ключ.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм асимметричные ключи.</summary>
      <returns>Значение true, если указанный алгоритм использует асимметричные ключи; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, поддерживается ли указанный алгоритм данным классом.</summary>
      <returns>Значение true, если данный класс поддерживает указанный алгоритм; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм симметричные ключи.</summary>
      <returns>Значение true, если указанный алгоритм использует симметричные ключи; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
      <summary>Возвращает размер ключа в битах.</summary>
      <returns>Размер ключа в битах.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <summary>Представляет маркер безопасности, который основан на билете Kerberos, полученном в сообщении SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />, используя указанный билет Kerberos. </summary>
      <param name="request">Массив <see cref="T:System.Byte" />, содержащий билет Kerberos.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />, используя указанный билет Kerberos и уникальный идентификатор.</summary>
      <param name="request">Массив <see cref="T:System.Byte" />, содержащий билет Kerberos.</param>
      <param name="id">Уникальный идентификатор маркера безопасности.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />.</summary>
      <param name="request">Массив байт, содержащий билет Kerberos.</param>
      <param name="id">Уникальный идентификатор для маркера безопасности.</param>
      <param name="valueTypeUri">Выражение URI, описывающее тип значения.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
      <returns>Значение true, если объект <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; в противном случае — значение false.</returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий тип создаваемого идентификатора ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает конструкцию заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся конструкцией идентификатора ключа для маркера безопасности.</returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий тип создаваемого идентификатора ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest">
      <summary>Возвращает билет Kerberos.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий билет Kerberos.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, если объект <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />, а билеты Kerberos совпадают; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey">
      <summary>Возвращает симметричный ключ сеанса для билета Kerberos, связанного с данным маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />, содержащий симметричный ключ сеанса для билета Kerberos, связанного с данным маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности становится действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri">
      <summary>Возвращает выражение URI, описывающее тип значения.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity">
      <summary>Возвращает пользователя Windows, связанного с маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <summary>Представляет маркер безопасности, который основан на билете Kerberos, отправляемом в запросе SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> с помощью службы, связанной с указанным именем участника-службы. </summary>
      <param name="servicePrincipalName">Имя участника-службы для маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="servicePrincipalName" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Для текущего пользователя невозможно получить билет Kerberos.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />. </summary>
      <param name="servicePrincipalName">Имя участника-службы для маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />.</param>
      <param name="tokenImpersonationLevel">Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, в котором задается, как клиент разрешает олицетворение маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <param name="networkCredential">Объект <see cref="T:System.Net.NetworkCredential" />, указывающий пользователя, для которого получается маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />. </param>
      <param name="id">Уникальный идентификатор маркера безопасности.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="servicePrincipalName" /> равно null.— или —Значение параметра <paramref name="id" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="networkCredential" /> не равно null и не равно <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" />, а свойство <see cref="P:System.Net.NetworkCredential.UserName" /> является пустым или равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Для указанного пользователя невозможно получить билет Kerberos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> не является Impersonation или Identity.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
      <returns>Значение true, если параметр <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; в противном случае — значение false.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает предложение заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest">
      <summary>Возвращает запрос билета Kerberos.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий результат запроса билета Kerberos.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, если предложение <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />, а результаты запроса билета Kerberos соответствуют; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey">
      <summary>Возвращает симметричный ключ сеанса для билета Kerberos, связанного с данным маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />, содержащий симметричный ключ сеанса для билета Kerberos, связанного с данным маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName">
      <summary>Возвращает имя участника-службы для маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
      <returns>Имя участника-службы для маркера безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <summary>Представляет предложение идентификатора ключа, определяющее маркер безопасности <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> или <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />, используя указанный хэш SHA-1 билета службы Kerberos. </summary>
      <param name="ticketHash">Массив <see cref="T:System.Byte" />, содержащий хэш SHA-1 билета службы Kerberos.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="ticketHash" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />, используя указанный билет Kerberos, специальное слово и длину ключа.</summary>
      <param name="ticketHash">Массив <see cref="T:System.Byte" />, содержащий хэш SHA-1 билета службы Kerberos.</param>
      <param name="derivationNonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.</param>
      <param name="derivationLength">Размер производного ключа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="ticketHash" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="ticketHash" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash">
      <summary>Возвращает хэш SHA-1 билета службы Kerberos.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий хэш SHA-1 билета службы Kerberos.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString">
      <summary>Возвращает текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <summary>Представляет предложение идентификатора, определяющее маркеры безопасности, указанные в заголовке безопасности сообщения SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />, используя указанный идентификатор и массив типов. </summary>
      <param name="localId">Значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localId" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="localId" /> пуст.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />, используя указанный идентификатор, специальное слово, длину производного ключа и тип маркера безопасности владельца.</summary>
      <param name="localId">Значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />.</param>
      <param name="derivationNonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.Задает значение, возвращаемое методом <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</param>
      <param name="derivationLength">Размер производного ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</param>
      <param name="ownerType">Объект <see cref="T:System.Type" /> — тип маркера безопасности, на который ссылается параметр <paramref name="localId" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localId" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="localId" /> пуст.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />, используя указанный идентификатор и тип маркера безопасности владельца. </summary>
      <param name="localId">Значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />.</param>
      <param name="ownerType">Объект <see cref="T:System.Type" /> — тип маркера безопасности, на который ссылается параметр <paramref name="localId" />.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localId" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="localId" /> пуст.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId">
      <summary>Возвращает значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP.</summary>
      <returns>Значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному предложению идентификатора ключа.</summary>
      <returns>Значение true, если параметр <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />, а значения свойств <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> и <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> соответствуют текущему экземпляру; в противном случае — значение false.Дополнительные сведения см. в разделе «Заметки».</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанной ссылке и типу.</summary>
      <returns>Значение true, если параметры <paramref name="localId" /> и <paramref name="ownerType" /> соответствуют значениям свойств <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> и <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />; в противном случае — значение false.Дополнительные сведения см. в разделе «Заметки».</returns>
      <param name="localId">Значение атрибута wsu:Id для элемента XML в текущем сообщении SOAP. </param>
      <param name="ownerType">Объект <see cref="T:System.Type" /> — тип маркера безопасности, на который ссылается параметр <paramref name="localId" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType">
      <summary>Возвращает тип маркера безопасности, на который ссылается свойство <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />.</summary>
      <returns>Объект <see cref="T:System.Type" />, содержащий тип маркера безопасности, на который ссылается свойство <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <summary>Представляет предложение идентификатора ключа, определяющее маркер безопасности <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />, используя указанный алгоритм RSA. </summary>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, представляющий алгоритм RSA.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rsa" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey">
      <summary>Возвращает значение, определяющее, можно ли создать ключ из предложения идентификатора ключа.</summary>
      <returns>Значение true во всех случаях.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey">
      <summary>Создает ключ с помощью алгоритма RSA.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" /> — это ключ, созданный с помощью алгоритма RSA, указанного в конструкторе.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent">
      <summary>Возвращает параметр Exponent для алгоритма RSA.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий параметр Exponent для алгоритма RSA.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus">
      <summary>Возвращает параметр Modulus для алгоритма RSA.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий параметр Modulus для алгоритма RSA.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному предложению идентификатора ключа.</summary>
      <returns>Значение true, если параметр <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />, и совпадают массивы, возвращаемые методами <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> и <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> для параметра <paramref name="keyIdentifierClause" />; в противном случае — false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному алгоритму RSA.</summary>
      <returns>Значение true, если поля <see cref="F:System.Security.Cryptography.RSAParameters.Exponent" /> и <see cref="F:System.Security.Cryptography.RSAParameters.Modulus" /> параметра <paramref name="rsa" /> соответствуют значениям, возвращаемым методами <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> и <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> для текущего экземпляра; в противном случае — значение false.</returns>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, представляющий алгоритм RSA.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa">
      <summary>Возвращает алгоритм RSA, связанный с предложением идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.RSA" />, представляющий алгоритм RSA.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)">
      <summary>Записывает параметр Exponent алгоритма RSA в кодировке Base64 в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи параметра Exponent алгоритма RSA в кодировке Base64.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)">
      <summary>Записывает параметр Modulus алгоритма RSA в кодировке Base64 в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" /> для записи параметра Modulus алгоритма RSA в кодировке Base64.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityKey">
      <summary>Представляет маркер безопасности, созданный с помощью алгоритма RSA.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" />, используя указанный алгоритм RSA. </summary>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, представляющий алгоритм RSA.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rsa" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Расшифровывает указанный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий расшифрованный ключ.</returns>
      <param name="algorithm">Алгоритм шифрования, который использовался для шифрования ключа.Поддерживаются алгоритмы <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyData" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Шифрует заданный ключ с помощью указанного алгоритма.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</returns>
      <param name="algorithm">Алгоритм для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий ключ.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyData" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Возвращает указанный алгоритм асимметричного шифрования.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, представляющий указанный алгоритм асимметричного шифрования.</returns>
      <param name="algorithm">Создаваемый асимметричный алгоритм.</param>
      <param name="requiresPrivateKey">Значение true, если для создания алгоритма требуется закрытый ключ; в противном случае — значение false. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр <paramref name="requiresPrivateKey " />имеет значение true, и закрытый ключ не доступен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Возвращает алгоритм шифрования, создающий хэш для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.HashAlgorithm" />, создающий хэши для цифровых сигнатур.</returns>
      <param name="algorithm">Хэш-алгоритм.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Тип <paramref name="algorithm " />не поддерживается.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Возвращает алгоритм модуля удаления формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, представляющий алгоритм модуля удаления формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля удаления формата для получения экземпляра для цифровой сигнатуры.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Тип <paramref name="algorithm " />не поддерживается.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Возвращает алгоритм модуля создания формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, представляющий алгоритм модуля создания формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля создания формата для получения экземпляра для цифровой сигнатуры.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Тип <paramref name="algorithm " />не поддерживается.Поддерживается алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey">
      <summary>Возвращает значение, указывающее, доступен ли закрытый ключ.</summary>
      <returns>Значение true, если закрытый ключ доступен; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм асимметричные ключи.</summary>
      <returns>Значение true, если указанный алгоритм использует асимметричные ключи; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, поддерживается ли указанный алгоритм данным классом.</summary>
      <returns>Значение true, если указан алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм симметричные ключи.</summary>
      <returns>Значение true, если указанный алгоритм использует симметричные ключи; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize">
      <summary>Возвращает размер ключа в битах.</summary>
      <returns>Размер ключа в битах.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityToken">
      <summary>Представляет маркер безопасности, который основан на ключе, созданном с помощью алгоритма RSA.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" />, используя указанный алгоритм RSA. </summary>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, который представляет алгоритм RSA, способный создать асимметричный ключ.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rsa" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" />, используя указанный алгоритм RSA и уникальный идентификатор.</summary>
      <param name="rsa">Объект <see cref="T:System.Security.Cryptography.RSA" />, который представляет алгоритм RSA, способный создать асимметричный ключ.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />.</param>
      <param name="id">Уникальный идентификатор маркера безопасности.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rsa" /> равно null.— или —Значение параметра <paramref name="id" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
      <returns>Значение true, если объект <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />; в противном случае — значение false.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее тип создаваемого идентификатора ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает предложение заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize">
      <summary>Позволяет объекту <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> освободить ресурсы, прежде чем он будет уничтожен сборщиком мусора.</summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, если <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />, а ключи совпадают; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa">
      <summary>Возвращает алгоритм RSA, способный создать асимметричный ключ.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.RSA" />, который представляет алгоритм RSA, способный создать асимметричный ключ.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности становится действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo">
      <summary>Возвращает момент времени, когда данный маркер безопасности становится недействительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAccessDecision">
      <summary>Указывает, предоставляется ли субъекту маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> доступ к данному ресурсу.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit">
      <summary>Указывает, что доступ к ресурсу разрешен.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny">
      <summary>Указывает, что доступ к ресурсу запрещен.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate">
      <summary>Указывает, что в службе маркеров безопасности, выдавшей маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, отсутствуют необходимые сведения для определения прав доступа к определенному ресурсу.Получателю маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> необходимо использовать другие средства для определения разрешения на доступ пользователя.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAction">
      <summary>Представляет элемент &lt;saml:Action&gt; в утверждении SAML, содержащий действие в указанном ресурсе.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAction" />, используя указанное действие. </summary>
      <param name="action">Действие, которое субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> пытается выполнить с указанным ресурсом.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="action" /> равно null.— или —Параметр <paramref name="action" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAction" />, используя указанное действие.</summary>
      <param name="action">Действие, которое субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> пытается выполнить с указанным ресурсом.</param>
      <param name="ns">Пространство имен XML, в котором определен параметр <paramref name="action" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="action" /> равно null.— или —Параметр <paramref name="action" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Action">
      <summary>Возвращает или задает действие, которое субъект <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> может выполнить с указанным ресурсом.</summary>
      <returns>Возвращает или задает действие, которое субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> пытается выполнить с указанным ресурсом.</returns>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> имеет значение null.— или —Свойству <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> задано значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> имеет значение true, и задано свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Namespace">
      <summary>Возвращает или задает пространство имен XML, в котором определяется свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" />.</summary>
      <returns>Пространство имен XML, в котором определено свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> имеет значение true, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAction.Namespace" /> установлено.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;saml:Action&gt;, используя указанное средство чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания XML-элемента &lt;saml:Action&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в утверждении SAML, заданные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, который может читать предложение KeyInfo.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру для утверждений SAML, на который ссылается XML-элемент &lt;saml:Advice&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает объект <see cref="T:System.IdentityModel.Tokens.SamlAction" /> в указанное средство записи XML в качестве элемента &lt;saml:Action&gt;.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;saml:Action&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать элемент &lt;saml:Action&gt;, а также его дочерние элементы и атрибуты, определенные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAdvice">
      <summary>Представляет элемент &lt;saml:Advice&gt; в утверждении SAML, который содержит дополнительные сведения, предоставленные центром SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />, используя указанную коллекцию утверждений SAML. </summary>
      <param name="assertions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит утверждения SAML, обеспечивающие дополнительные сведения об утверждении SAML.</param>
      <exception cref="T:System.ArgumentException">Коллекция <paramref name="assertions" /> содержит элемент null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />. </summary>
      <param name="references">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит коллекцию ссылок на утверждения SAML, предоставляющие дополнительные сведения об утверждении SAML.</param>
      <exception cref="T:System.ArgumentException">Коллекция <paramref name="references" /> содержит элемент null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />, используя указанные коллекции утверждений SAML и ссылки на них. </summary>
      <param name="references">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит коллекцию ссылок на утверждения SAML, предоставляющие дополнительные сведения об утверждении SAML.</param>
      <param name="assertions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит утверждения SAML, предоставляющие дополнительные сведения об утверждении SAML.</param>
      <exception cref="T:System.ArgumentException">Коллекция <paramref name="references" /> содержит элемент null.— или —Коллекция <paramref name="assertions" /> содержит элемент null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences">
      <summary>Возвращает коллекцию ссылок на утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит коллекцию ссылок на утверждения SAML, предоставляющие дополнительные сведения об утверждении SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.Assertions">
      <summary>Возвращает коллекцию утверждений SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит утверждения SAML, обеспечивающие дополнительные сведения об утверждении SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает XML-элемент &lt;saml:Advice&gt;, используя указанное средство чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания XML-элемента &lt;saml:Advice&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в утверждении SAML, заданные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, который может читать конструкцию KeyInfo.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, который определяет маркер безопасности, создавший цифровую сигнатуру для утверждений SAML. Эти утверждения содержат данный XML-элемент &lt;saml:Advice&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Элемент &lt;saml:Advice&gt; не соответствует схеме XML для элемента &lt;saml:Advice&gt;.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает класс <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> в средство записи XML в качестве элемента &lt;saml:Advice&gt;.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;saml:Advice&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать элемент &lt;saml:Advice&gt;, а также его дочерние элементы и атрибуты, определенные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertion">
      <summary>Представляет утверждение SAML 1.1.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, используя указанный идентификатор утверждения SAML, издателя утверждения, дату и время выдачи утверждения, набор условий обработки, дополнительные сведения, а также коллекцию утверждений SAML.</summary>
      <param name="assertionId">Идентификатор утверждения.</param>
      <param name="issuer">Центр SAML, выдавший данное утверждение SAML.</param>
      <param name="issueInstant">Объект <see cref="T:System.DateTime" />, указывающий, когда было выдано утверждение SAML.</param>
      <param name="samlConditions">Объект <see cref="T:System.IdentityModel.Tokens.SamlConditions" />, указывающий набор условий, которые могут приниматься во внимание при оценке действительности утверждения SAML.</param>
      <param name="samlAdvice">Объект <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />, указывающий дополнительные сведения, предоставленные центром SAML, которые могут помочь в обработке утверждения SAML.</param>
      <param name="samlStatements">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlStatement" />, содержащему операторы SAML.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionId" /> равно null— или —<paramref name="assertionId" /> равно <see cref="F:System.String.Empty" />— или —<paramref name="assertionId" /> не начитается с буквы или символа «_».— или —Значение параметра <paramref name="issuer" /> равно null— или —<paramref name="issuer" /> равно <see cref="F:System.String.Empty" />— или —Значение параметра <paramref name="samlStatements" /> равно null— или —<paramref name="samlStatements" /> не содержит элементов— или —Коллекция <paramref name="samlStatements" /> содержит элемент null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Advice">
      <summary>Возвращает или задает дополнительные сведения о маркере безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, предоставленные центром SAML, которые могут помочь в обработке утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />, указывающий дополнительные сведения, предоставленные центром SAML, которые могут помочь в обработке утверждения SAML.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Advice" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> имеет значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId">
      <summary>Возвращает или задает идентификатор для данного утверждения.</summary>
      <returns>Идентификатор для данного утверждения.</returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> равно true, и выполнена попытка задать свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />.</exception>
      <exception cref="T:System.ArgumentException">Выполнена попытка присвоить свойству <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> значение null или пустую строку.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Conditions">
      <summary>Возвращает или задает набор условий, которые могут приниматься во внимание при оценке действительности утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlConditions" />, указывающий набор условий, которые могут приниматься во внимание при оценке действительности утверждения SAML.</returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> равно true, и выполнена попытка задать свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения. </summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant">
      <summary>Возвращает или задает дату и время, когда было выдано утверждение SAML.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, выраженное в формате UTC, указывает, когда было выдано утверждение SAML. </returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> равно true, и выполнена попытка задать свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Issuer">
      <summary>Возвращает или задает имя центра SAML, выдавшего утверждение SAML.</summary>
      <returns>Центр SAML, выдавший данное утверждение SAML.</returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> равно true, и выполнена попытка задать свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />.</exception>
      <exception cref="T:System.ArgumentException">Выполнена попытка присвоить свойству <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> значение null или пустую строку.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion">
      <summary>Возвращает основной номер версии спецификации SAML, которой соответствует утверждение SAML.</summary>
      <returns>Основной номер версии спецификации SAML, которой соответствует утверждение SAML.Значением по умолчанию является значение свойства <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion">
      <summary>Возвращает дополнительный номер версии спецификации SAML, которой соответствует утверждение SAML.</summary>
      <returns>Дополнительный номер версии спецификации SAML, которой соответствует утверждение SAML.Значением по умолчанию является значение свойства <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)">
      <summary>Считывает цифровую сигнатуру утверждения SAML из средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, считывающий цифровую сигнатуру.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> способный считывать XML-элементы, определенные в спецификации SAML.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null— или —цифровая сигнатура еще не считана из утверждения SAML.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает утверждение SAML из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания утверждения SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в утверждении SAML, заданные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.InvalidOperationException">метод <see cref="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" /> был вызван, а утверждение SAML подписано цифровой сигнатурой.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">параметр <paramref name="reader" /> не ссылается на утверждение SAML, соответствующее спецификации SAML 1.1.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials">
      <summary>Возвращает или задает учетные данные безопасности, используемые для цифровой сигнатуры утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />, используемый для цифровой сигнатуры утверждения SAML.</returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> равно true, и выполнена попытка задать свойство <see cref="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken">
      <summary>Возвращает маркер безопасности, который содержит или на который ссылается утверждение SAML с цифровой сигнатурой.</summary>
      <returns>Маркер безопасности <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, который содержит или на который ссылается утверждение SAML с цифровой сигнатурой.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Statements">
      <summary>Возвращает или задает операторы SAML, связанные с утверждением SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Tokens.SamlStatement" />, который содержит операторы SAML, связанные с утверждением SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает утверждение SAML в указанное средство записи XML в качестве элемента &lt;saml:Assertion&gt;.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи утверждения SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать объекты в утверждении <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> в формат XML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">утверждение <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> настроено так, что его сериализация в формат XML приведет к несоответствию спецификации SAML v1.1.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <summary>Представляет элемент &lt;KeyIndentifier&gt;, ссылающийся на элемент &lt;saml:Assertion&gt; в сообщении SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />, используя указанный идентификатор утверждения SAML. </summary>
      <param name="assertionId">Идентификатор утверждения <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, содержащий идентификатор ключа</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assertionId" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />, используя указанный идентификатор утверждения SAML, специальное слово и длину ключа. </summary>
      <param name="assertionId">Идентификатор утверждения <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, содержащий идентификатор ключа.</param>
      <param name="derivationNonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа. </param>
      <param name="derivationLength">Размер производного ключа. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assertionId" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId">
      <summary>Возвращает идентификатор для утверждения <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, содержащий идентификатор ключа.</summary>
      <returns>Идентификатор для утверждения <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, содержащий идентификатор ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Определяет, совпадает ли указанный идентификатор ключа с текущим экземпляром.</summary>
      <returns>Значение true, если указанный идентификатор ключа совпадает с текущим экземпляром; в противном случае — значение false. </returns>
      <param name="keyIdentifierClause">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)">
      <summary>Определяет, совпадает ли указанный идентификатор утверждения SAML с текущим экземпляром.</summary>
      <returns>Значение true, если параметр <paramref name="assertionId" /> совпадает со значением свойства <see cref="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" /> текущего экземпляра; в противном случае — значение false. </returns>
      <param name="assertionId">Идентификатор утверждения SAML для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который содержит идентификатор утверждения SAML, представляющий текущее предложение идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.String" />, который содержит идентификатор утверждения SAML, представляющий текущий экземпляр <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttribute">
      <summary>Представляет атрибут, связанный с субъектом оператора <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />, используя указанное утверждение. </summary>
      <param name="claim">Объект <see cref="T:System.IdentityModel.Claims.Claim" /> представляет атрибут субъекта для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claim" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> параметра <paramref name="claim" /> не принадлежит к типу <see cref="T:System.String" />.— или —Свойство <see cref="P:System.IdentityModel.Claims.Claim.Right" /> параметра <paramref name="claim" /> не равно <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.— или —В свойстве <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> параметра <paramref name="claim" /> отсутствует символ "/" или он расположен в первой или последней позиции индекса. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />, используя указанное имя атрибута, пространство имен XML и значения атрибута. </summary>
      <param name="attributeNamespace">Пространство имен XML, в котором определен параметр <paramref name="attributeName" />.</param>
      <param name="attributeName">Имя атрибута SAML.</param>
      <param name="attributeValues">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий значения атрибута SAML.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attributeNamespace" /> равно null.— или — Значение параметра <paramref name="attributeName" /> равно null.— или —Значение параметра <paramref name="attributeValues" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> параметра <paramref name="claim" /> не принадлежит к типу <see cref="T:System.String" />.— или —Свойство <see cref="P:System.IdentityModel.Claims.Claim.Right" /> параметра <paramref name="claim" /> не равно <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.— или —В свойстве <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> параметра <paramref name="claim" /> отсутствует символ "/" или он расположен в первой или последней позиции индекса. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues">
      <summary>Возвращает коллекцию значений для атрибута SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" />, содержащий набор значений для атрибута SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims">
      <summary>Возвращает коллекцию утверждений, которые представляет данный атрибут SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащему набор утверждений, которые представляет данный атрибут SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Name">
      <summary>Возвращает или задает имя атрибута SAML.</summary>
      <returns>Имя атрибута SAML.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" /> имеет значение true.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Namespace">
      <summary>Возвращает или задает пространство имен XML, в котором определяется атрибут SAML.</summary>
      <returns>Пространство имен XML, в котором определяется имя атрибута SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает атрибут SAML из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания атрибута SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Объект <paramref name="reader" /> ссылается на XML-элемент, не имеющий атрибутов AttributeName и AttributeNamespace. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает атрибут SAML в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи атрибута SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <summary>Содержит набор атрибутов, связанных с определенным субъектом <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />, используя указанный субъект и набор атрибутов, связанных с данным субъектом.</summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, указывающий субъект утверждения.</param>
      <param name="attributes">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />, содержащий набор атрибутов, связанных с субъектом.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="samlSubject" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="attributes" /> содержит элемент, имеющий значение null.— или —Параметр <paramref name="attributes" /> содержит нулевые члены. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Добавляет указанный набор утверждений в данный оператор SAML в качестве атрибутов.</summary>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Claims.Claim" />, который содержит набор утверждений, добавляемых в оператор SAML.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes">
      <summary>Возвращает коллекцию атрибутов, связанных с субъектом утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />, содержащему набор атрибутов, связанных с субъектом.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает инструкцию атрибута SAML из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания оператора атрибута SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции атрибута SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Объект <paramref name="reader" /> ссылается на XML-элемент, не содержащий элемент &lt;saml:Subject&gt;— или —Объект <paramref name="reader" /> ссылается на XML-элемент, который содержит элемент &lt;saml:Attribute&gt;, не имеющий значения атрибута. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает оператор атрибута SAML в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи оператора атрибута SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <summary>Указывает, что утверждение SAML адресовано конкретной аудитории.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> с заданным набором аудиторий, для которых предназначено утверждение SAML. </summary>
      <param name="audiences">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.Uri" />, содержащий набор предполагаемых аудиторий.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="audiences" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences">
      <summary>Возвращает набор аудиторий, для которых предназначено утверждение SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.Uri" />, содержащему набор предполагаемых аудиторий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;AudienceRestrictionCondition&gt; из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания элемента &lt;AudienceRestrictionCondition&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в утверждении SAML, заданные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Элемент &lt;AudienceRestrictionCondition&gt; имеет дочерний элемент &lt;Audience&gt;, не имеющий значения.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает элемент &lt;AudienceRestrictionCondition&gt; в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;AudienceRestrictionCondition&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждении SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <summary>Представляет тип ресурса для утверждения, созданного из класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> с помощью заданного момента времени, метода проверки подлинности, DNS-имени домена и IP-адреса. </summary>
      <param name="authenticationInstant">Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.</param>
      <param name="authenticationMethod">Ссылка URI, задающая способ проверки подлинности субъекта.</param>
      <param name="dnsAddress">DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</param>
      <param name="ipAddress">IP-адрес компьютера, который проверил подлинность субъекта.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> с помощью заданного момента времени, метода проверки подлинности, DNS-имени домена, IP-адреса и ссылку на дополнительные сведения.</summary>
      <param name="authenticationInstant">Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.</param>
      <param name="authenticationMethod">Ссылка URI, задающая способ проверки подлинности субъекта.</param>
      <param name="dnsAddress">DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</param>
      <param name="ipAddress">IP-адрес компьютера, который проверил подлинность субъекта.</param>
      <param name="authorityBindings">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, содержащий дополнительные сведения о субъекте.</param>
      <exception cref="T:System.ArgumentException">Коллекция <paramref name="authorityBindings" /> содержит элемент, имеющий значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> с помощью заданного момента времени, метода проверки подлинности, DNS-имени домена, IP-адреса и ссылку на дополнительные сведения.</summary>
      <param name="authenticationInstant">Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.</param>
      <param name="authenticationMethod">Ссылка URI, задающая способ проверки подлинности субъекта.</param>
      <param name="dnsAddress">DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</param>
      <param name="ipAddress">IP-адрес компьютера, который проверил подлинность субъекта.</param>
      <param name="authorityBindings">Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, содержащий дополнительные сведения о субъекте.</param>
      <exception cref="T:System.ArgumentException">Коллекция <paramref name="authorityBindings" /> содержит элемент, имеющий значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant">
      <summary>Возвращает момент времени, когда была выполнена проверка подлинности субъекта.</summary>
      <returns>Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod">
      <summary>Возвращает или задает метод, используемый для проверки подлинности субъекта.</summary>
      <returns>Метод, который использовался для проверки подлинности субъекта. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings">
      <summary>Возвращает дополнительные сведения о субъекте.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, содержащий дополнительные сведения о субъекте.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress">
      <summary>Возвращает DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</summary>
      <returns>DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту.</summary>
      <returns>Значение true, если объект <paramref name="obj" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> и содержит то же значение, что и данный экземпляр; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode">
      <summary>Возвращает хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</summary>
      <returns>Хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress">
      <summary>Возвращает или задает IP-адрес компьютера, который проверил подлинность субъекта.</summary>
      <returns>IP-адрес компьютера, который проверил подлинность субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <summary>Представляет утверждение для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> о том, что проверка подлинности субъекта выполнена определенным средством на определенный момент времени.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />, используя указанные сведения проверки подлинности. </summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, представляющий субъект утверждения.</param>
      <param name="authenticationMethod">Ссылка URI, задающая способ проверки подлинности субъекта.</param>
      <param name="authenticationInstant">Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.</param>
      <param name="dnsAddress">DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</param>
      <param name="ipAddress">IP-адрес компьютера, который проверил подлинность субъекта.</param>
      <param name="authorityBindings">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, содержащий дополнительные сведения о субъекте.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="authorityBindings" /> содержит элемент, имеющий значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Добавляет утверждение, основанное на свойствах данного экземпляра, в указанную коллекцию утверждений.</summary>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащему набор добавляемых утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant">
      <summary>Возвращает или задает момент времени, когда была выполнена проверка подлинности субъекта.</summary>
      <returns>Объект <see cref="T:System.DateTime" /> задает момент времени, когда была выполнена проверка подлинности субъекта.Тип исключенияУсловие<see cref="T:System.InvalidOperationException" />Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> имеет значение true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod">
      <summary>Возвращает или задает метод, используемый для проверки подлинности субъекта.</summary>
      <returns>Метод, используемый для проверки подлинности субъекта.Значение по умолчанию равно urn:oasis:names:tc:SAML:1.0:am:unspecified.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> имеет значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings">
      <summary>Возвращает дополнительные сведения о субъекте.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> типа <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, содержащий дополнительные сведения о субъекте.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType">
      <summary>Возвращает тип утверждения безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimTypes" />, указывающий тип утверждения безопасности.Всегда http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthentication.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress">
      <summary>Возвращает или задает DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</summary>
      <returns>DNS-имя домена, в котором расположен компьютер, выполнивший проверку подлинности субъекта.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> имеет значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress">
      <summary>Возвращает или задает IP-адрес компьютера, который проверил подлинность субъекта.</summary>
      <returns>IP-адрес компьютера, который проверил подлинность субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает инструкцию проверки подлинности SAML из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания оператора проверки подлинности SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в инструкции проверки подлинности SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Объект <paramref name="reader" /> ссылается на элемент XML, не содержащий атрибутов AuthenticationInstant и AuthenticationMethod.— или —Объект <paramref name="reader" /> ссылается на XML-элемент, не имеющий дочернего элемента &lt;saml:Subject&gt;. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает инструкцию проверки подлинности SAML в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи оператора проверки подлинности SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <summary>Указывает способ получения дополнительной информации о субъекте маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />, используя указанные типы запросов, привязку протокола и расположение центра SAML.</summary>
      <param name="authorityKind">Объект <see cref="T:System.Xml.XmlQualifiedName" /> представляет тип запросов, на которые реагирует центр SAML, имеющий дополнительную информацию о субъекте.</param>
      <param name="binding">Ссылка универсального кода ресурса (URI), определяющая протокол привязки SAML, который используется для связи с центром SAML, имеющим дополнительную информацию о субъекте.</param>
      <param name="location">Ссылка универсального кода ресурса (URI) описывает, как найти и установить связь с центром SAML, имеющим дополнительную информацию о субъекте.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind">
      <summary>Возвращает или задает тип запросов, на которые реагирует центр SAML, имеющий дополнительную информацию о субъекте.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" /> представляет тип запросов, на которые реагирует центр SAML, имеющий дополнительную информацию о субъекте.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> имеет значение true.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding">
      <summary>Возвращает или задает привязку протокола SAML, которая используется для связи с центром SAML, имеющим дополнительную информацию о субъекте.</summary>
      <returns>Ссылка универсального кода ресурса (URI), определяющая протокол привязки SAML, который используется для связи с центром SAML, имеющим дополнительную информацию о субъекте.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> имеет значение true.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location">
      <summary>Возвращает или задает способы поиска и взаимодействия с центром SAML, имеющим дополнительную информацию о субъекте.</summary>
      <returns>Ссылка универсального кода ресурса (URI) описывает, как найти и установить связь с центром SAML, имеющим дополнительную информацию о субъекте.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> имеет значение true.</exception>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> установлено равным null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;AuthorityBinding&gt; из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания элемента &lt;AuthorityBinding&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в утверждении SAML, заданные в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Параметр <paramref name="reader" /> не ссылается на утверждение SAML</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Элемент &lt;AuthorityBinding&gt; не имеет ни одного из атрибутов AuthorityKind, Location или Binding.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает элемент &lt;AuthorityBinding&gt; в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;AuthorityBinding&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждении SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <summary>Представляет утверждение для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, который подтверждает решение об авторизации для доступа к определенному ресурсу.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />, с помощью указанного ресурса, к которому пытается получить доступ субъект, решения об авторизации в отношении ресурса, необходимого действия в ресурсе, а также пространства имен XML, в котором определено действие. </summary>
      <param name="resource">Ресурс, к которому пытается получить доступ субъект.</param>
      <param name="accessDecision">Решение центра SAML об авторизации доступа субъекта к ресурсу.</param>
      <param name="actionNamespace">Пространство имен XML, в котором определено действие, указанное в параметре <paramref name="action" />.</param>
      <param name="actionName">Действие, которое необходимо выполнить субъекту в ресурсе, указано в параметре <paramref name="resource" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="resource" /> равно null.— или —Значение параметра <paramref name="actionName" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision">
      <summary>Возвращает решение центра SAML об авторизации доступа субъекта к ресурсу.</summary>
      <returns>Решение центра SAML об авторизации доступа субъекта к ресурсу.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName">
      <summary>Возвращает действие, которое необходимо выполнить субъекту в ресурсе, указанном в свойстве <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />.</summary>
      <returns>Действие, которое необходимо выполнить субъекту в ресурсе, указанном в свойстве <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace">
      <summary>Возвращает пространство имен XML, в котором определено действие, указанное в свойстве <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />.</summary>
      <returns>Пространство имен XML, в котором определено действие, указанное в свойстве <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту.</summary>
      <returns>Значение true, если объект <paramref name="obj" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" /> и содержит то же значение, что и данный экземпляр; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode">
      <summary>Возвращает хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</summary>
      <returns>Хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource">
      <summary>Возвращает ресурс, к которому пытается получить доступ субъект.</summary>
      <returns>Универсальный код ресурса (URI), представляющий ресурс, к которому пытается получить доступ субъект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <summary>Представляет утверждение для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, который подтверждает принятие решения об авторизации для доступа субъекта к определенному ресурсу.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />., используя указанные тему, ресурс, решение по авторизации и действия, искомые темой в ресурсе.</summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, представляющий субъект утверждения.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</param>
      <param name="resource">Ссылка универсального кода ресурса (URI), определяющая ресурс, к которому необходим доступ.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />.</param>
      <param name="accessDecision">Объект <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" />, указывающий решение об авторизации, принятое центром SAML относительно доступа субъекта к определенному ресурсу.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />.</param>
      <param name="samlActions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAction" />, указывающему набор действий, которые субъект имеет право выполнять с ресурсом.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="samlActions" /> равно null.— или —Параметр <paramref name="samlActions" /> содержит элемент, имеющий значение null.— или —Значение параметра <paramref name="samlSubject" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="authorityBindings" /> содержит элемент, имеющий значение null.— или —Параметр <paramref name="resource" /> имеет значение null или пуст.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />.используя указанную тему, ресурс, решение по авторизации и действия, искомые этой темой в ресурсе.</summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, представляющий субъект утверждения.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</param>
      <param name="resource">Ссылка универсального кода ресурса (URI), определяющая ресурс, к которому необходим доступ.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />.</param>
      <param name="accessDecision">Объект <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" />, указывающий решение об авторизации, принятое центром SAML относительно доступа субъекта к определенному ресурсу.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />.</param>
      <param name="samlActions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAction" />, указывающему набор действий, которые субъект имеет право выполнять с ресурсом.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />.</param>
      <param name="samlEvidence">Объект <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />, содержащий набор утверждений SAML, используемых центром SAML при принятии решения об авторизации.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision">
      <summary>Возвращает или задает решение об авторизации, принятое центром SAML относительно доступа субъекта к определенному ресурсу.</summary>
      <returns>Одно из значений <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" />, указывающих решение об авторизации, принятое центром SAML относительно доступа субъекта к определенному ресурсу.Тип исключенияУсловие<see cref="T:System.InvalidOperationException" />Свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" /> имеет значение true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Добавляет утверждения, основанные на свойствах данного экземпляра, в указанную коллекцию утверждений.</summary>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащему набор добавляемых утверждений.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="claims" /> равно null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType">
      <summary>Возвращает тип утверждения безопасности.</summary>
      <returns>Тип утверждения безопасности.Всегда http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence">
      <summary>Возвращает или задает свидетельство, использованное центром SAML при принятии решения об авторизации.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />, содержащий набор утверждений SAML, используемых центром SAML при принятии решения об авторизации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает инструкцию авторизации SAML из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания оператора авторизации SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции авторизации SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Объект <paramref name="reader" /> ссылается на элемент XML, не содержащий атрибутов Resource и Decision.— или —Объект <paramref name="reader" /> ссылается на XML элемент, не имеющий дочерних элементов &lt;saml:Subject&gt;, &lt;saml:Evidence&gt; и &lt;saml:Action&gt;. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource">
      <summary>Ресурс, к которому требуется получить доступ субъекту маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <returns>Ссылка универсального кода ресурса (URI), определяющая ресурс, к которому необходим доступ. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions">
      <summary>Возвращает или задает действия, которые субъект имеет право выполнять с ресурсом.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAction" />, указывающему набор действий, которые субъект имеет право выполнять с ресурсом.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает инструкцию авторизации SAML в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи оператора авторизации SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlCondition">
      <summary>Представляет условие, которое необходимо принимать во внимание при оценке действительности утверждений SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlCondition" />. </summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
      <summary>При переопределении в производном классе возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
      <summary>При переопределении в производном классе делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Чтение условия из указанного средства чтения XML (при переопределении в производном классе).</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для чтения условия.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции авторизации SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Запись условия в указанный сериализатор XML (при переопределении в производном классе).</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи условия.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConditions">
      <summary>Представляет набор условий, которые необходимо принимать во внимание при оценке действительности утверждений SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlConditions" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> с использованием указанного промежутка времени, в течение которого утверждение SAML является действительным.</summary>
      <param name="notBefore">Объект <see cref="T:System.DateTime" /> задает самый ранний момент времени, когда утверждение SAML является действительным.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />.</param>
      <param name="notOnOrAfter">Объект <see cref="T:System.DateTime" /> задает момент времени, когда истекает срок действия утверждения SAML.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> с использованием указанного промежутка времени и условий, при которых утверждение SAML является действительным.</summary>
      <param name="notBefore">Объект <see cref="T:System.DateTime" /> задает самый ранний момент времени, когда утверждение SAML является действительным.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />.</param>
      <param name="notOnOrAfter">Объект <see cref="T:System.DateTime" /> задает момент времени, когда истекает срок действия утверждения SAML.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />.</param>
      <param name="conditions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlCondition" />, указывающему набор условий, которые получатель утверждения SAML должен принимать во внимание при оценке действительности утверждения.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="conditions" /> содержит член, имеющий значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.Conditions">
      <summary>Возвращает набор условий, которые необходимо учитывать при оценке действительности утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlCondition" />, указывающему набор условий, которые получатель утверждения SAML должен принимать во внимание при оценке действительности утверждения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotBefore">
      <summary>Возвращает самый ранний момент времени, когда утверждение SAML является действительным. </summary>
      <returns>Объект <see cref="T:System.DateTime" /> задает самый ранний момент времени, когда утверждение SAML является действительным. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter">
      <summary>Возвращает момент времени, когда истекает срок действия утверждения SAML.</summary>
      <returns>Объект <see cref="T:System.DateTime" /> задает момент времени, когда истекает срок действия утверждения SAML. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;saml:Conditions&gt; из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания элемента &lt;saml:Conditions&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции авторизации SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает элемент &lt;saml:Conditions&gt; в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;saml:Conditions&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConstants">
      <summary>Представляет набор констант, используемых для установки свойств маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailName">
      <summary>Возвращает имя атрибута, указывающего, что субъект утверждения SAML задан в виде адреса электронной почты.Это поле является константой.</summary>
      <returns>Имя атрибута, указывающего, что субъект утверждения SAML задан в виде адреса электронной почты.Это поле является константой.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace">
      <summary>Возвращает универсальный код ресурса (URI), который устанавливает, что субъект утверждения SAML задан в виде адреса электронной почты.Это поле является константой.</summary>
      <returns>Универсальный код ресурса (URI), который устанавливает, что субъект утверждения SAML задан в виде адреса электронной почты.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey">
      <summary>Возвращает универсальный код ресурса (URI), указывающий, что получатель маркера безопасности должен использовать элемент &lt;ds:KeyInfo&gt; для подтверждения отправки сообщения SOAP субъектом утверждения SAML.Это поле является константой.</summary>
      <returns>Универсальный код ресурса (URI), указывающий, что получатель маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> должен использовать элемент &lt;ds:KeyInfo&gt; для подтверждения отправки сообщения SOAP субъектом утверждения SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue">
      <summary>Возвращает основной номер версии спецификации SAML, которой соответствуют маркеры безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Это поле является константой.</summary>
      <returns>Основной номер версии спецификации SAML, которой соответствуют маркеры безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Всегда 1.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue">
      <summary>Возвращает дополнительный номер версии спецификации SAML, используемой маркерами безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Это поле является константой.</summary>
      <returns>Дополнительная версия спецификации SAML.Всегда 1.Комбинация свойств <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> и <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> содержит версию спецификации SAML, которой соответствуют маркеры безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.Namespace">
      <summary>Возвращает пространство имен XML, в котором определены утверждения SAML.Это поле является константой.</summary>
      <returns>Пространство имен XML, в котором определены утверждения SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches">
      <summary>Возвращает универсальный код ресурса (URI), который указывает, что отсутствуют дополнительные сведения для получателя маркера безопасности SAML для подтверждения того, что сообщение SOAP было отправлено субъектом утверждения SAML.Это поле является константой.</summary>
      <returns>Универсальный код ресурса (URI), который указывает, что отсутствуют дополнительные сведения для получателя маркера безопасности SAML для подтверждения того, что сообщение SOAP было отправлено субъектом утверждения SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserName">
      <summary>Возвращает имя атрибута, указывающего, что субъект утверждения SAML задан в виде учетной записи домена Windows.Это поле является константой.</summary>
      <returns>Имя атрибута, указывающего, что субъект утверждения SAML задан в виде учетной записи домена Windows.Это поле является константой.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace">
      <summary>Возвращает универсальный код ресурса (URI), который подтверждает, что субъект утверждения SAML задан с помощью учетной записи домена Windows.Это поле является константой.</summary>
      <returns>Универсальный код ресурса (URI), который подтверждает, что субъект утверждения SAML задан с помощью учетной записи домена Windows.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <summary>Представляет условие, которое необходимо принимать во внимание при оценке действительности утверждений SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;saml:DoNotCacheCondition&gt; из указанного средства чтения XML.</summary>
      <param name="reader">Объект<see cref="T:System.Xml.XmlDictionaryReader" /> для считывания элемента &lt;saml:DoNotCacheCondition&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции авторизации SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Объект <paramref name="reader" /> не указывает на элемент &lt;saml:DoNotCacheCondition&gt;.  </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает элемент &lt;saml:DoNotCacheCondition&gt; в указанный сериализатор XML.</summary>
      <param name="writer">Объект<see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;saml:DoNotCacheCondition&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —Значение параметра <paramref name="samlSerializer" /> равно null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlEvidence">
      <summary>Представляет свидетельство, используемое для принятия решения об авторизации для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />, используя указанный набор утверждений SAML. </summary>
      <param name="assertions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит свидетельство, использованное центром SAML при принятии решения об авторизации.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="assertions" /> содержит член, имеющий значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />, используя указанный набор ссылок на утверждения SAML. </summary>
      <param name="assertionIdReferences">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит идентификатор для утверждения SAML, указывающий свидетельство, использованное центром SAML при принятии решения об авторизации.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="assertionIdReferences" /> содержит элемент, который имеет значение null или пуст.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />, используя утверждения SAML и набор ссылок на них. </summary>
      <param name="assertionIdReferences">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит идентификатор для утверждения SAML, указывающий свидетельство, использованное центром SAML при принятии решения об авторизации.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />.</param>
      <param name="assertions">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит свидетельство, использованное центром SAML при принятии решения об авторизации.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="assertionIdReferences" /> содержит элемент, который имеет значение null или пуст.— или —Параметр <paramref name="assertions" /> содержит член, имеющий значение null.— или —Оба параметра <paramref name="assertionIdReferences" /> и <paramref name="assertions" /> имеют значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences">
      <summary>Возвращает коллекцию идентификаторов для утверждений SAML, указывающих свидетельство, использованное центром SAML при принятии решения об авторизации.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.String" />, который содержит идентификаторы для утверждений SAML, указывающих свидетельство, использованное центром SAML при принятии решения об авторизации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.Assertions">
      <summary>Возвращает коллекцию утверждений SAML, составляющих свидетельство, использованное центром SAML при принятии решения об авторизации.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, который содержит свидетельство, использованное центром SAML при принятии решения об авторизации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает свидетельство из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания свидетельства.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в инструкции авторизации SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Параметр <paramref name="reader" /> ссылается на элемент XML, который не имеет ни одного дочернего элемента &lt;saml:AssertionIDReference&gt; или &lt;saml:Assertion&gt;. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает свидетельство в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи свидетельства.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <summary>Представляет утверждение для маркера безопасности SAML, который подтверждает имя субъекта.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />, используя указанное имя, формат имени и домен, в котором находится имя.</summary>
      <param name="name">Имя субъекта.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" />.</param>
      <param name="nameQualifier">Домен, в котором расположен параметр <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" />.</param>
      <param name="format">Ссылка URI, представляющая формат параметра <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null или <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту.</summary>
      <returns>Значение true, если объект <paramref name="obj" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" /> и содержит то же значение, что и данный экземпляр; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format">
      <summary>Возвращает ссылку универсального кода ресурса (URI), представляющую формат имени субъекта для маркера безопасности SAML.</summary>
      <returns>Ссылка универсального кода ресурса (URI), представляющая формат имени субъекта для маркера безопасности SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode">
      <summary>Возвращает хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</summary>
      <returns>Хэш-код для <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name">
      <summary>Возвращает имя субъекта для маркера безопасности SAML.</summary>
      <returns>Имя субъекта для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier">
      <summary>Возвращает домен, в котором находится имя субъекта для маркера безопасности SAML.</summary>
      <returns>Домен, в котором находится имя субъекта для маркера безопасности SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSecurityToken">
      <summary>Представляет маркер безопасности, основанный на утверждении SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, используя указанное утверждение SAML.</summary>
      <param name="assertion">
        <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> представляет утверждение SAML для данного маркера безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion">
      <summary>Возвращает утверждение SAML для данного маркера безопасности.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> представляет утверждение SAML для данного маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа. </summary>
      <returns>Значение true, если объект <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />; в противном случае — значение false. </returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает предложение заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности SAML.</returns>
      <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="T" /> не является экземпляром типа <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности. </summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Инициализирует свойства класса <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, используя указанное утверждение SAML.</summary>
      <param name="assertion">
        <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> представляет утверждение SAML для данного маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assertion" /> равно null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, равен ли идентификатор ключа данного экземпляра указанному идентификатору ключа. </summary>
      <returns>Значение true, если объект <paramref name="keyIdentifierClause" /> имеет тип <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> и тот же уникальный идентификатор, что и свойство <see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" />; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее первому моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSerializer">
      <summary>Сериализует и десериализует объекты <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> в XML-документы и из них. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает дополнительные сведения, предоставленные центром SAML в элементе &lt;saml:Advice&gt; утверждения SAML, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />, который содержит дополнительные сведения, предоставленные центром SAML в элементе &lt;saml:Advice&gt; утверждения SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания дополнительных сведений, предоставленных центром SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает утверждение SAML из указанного средства чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />, представляющий утверждение SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания утверждения SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает атрибут субъекта маркера безопасности SAML, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />, представляющий утверждение, которое является субъектом маркера безопасности SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания атрибутов.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает условие, которое необходимо принимать во внимание при оценке действительности утверждений SAML, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlCondition" />, указывающий условие, которое необходимо принимать во внимание при оценке действительности утверждения SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания условия SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает набор условий, которые необходимо принимать во внимание при оценке действительности утверждений SAML, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlConditions" />, указывающий набор условий, которые необходимо принимать во внимание при оценке действительности утверждения SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания условий SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает инструкцию SAML, используя указанное средство чтения XML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlStatement" />, представляющая инструкция SAML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания инструкции SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)">
      <summary>Заменяет набор XML-элементов и атрибутов по умолчанию, распознанных данным сериализатором, указанным словарем элементов и атрибутов. </summary>
      <param name="dictionary">Объект <see cref="T:System.Xml.IXmlDictionary" />, содержащий набор XML-элементов и атрибутов.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает маркер безопасности SAML из указанного средства чтения XML.</summary>
      <returns>Маркер безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий конструкцию KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null</exception>
      <exception cref="T:System.Security.SecurityException">Параметр <paramref name="reader" /> ссылается на XML-элемент без цифровой сигнатуры. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает указанный маркер безопасности SAML в указанный XML-сериализатор.</summary>
      <param name="token">Документ <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> для записи.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи инструкции авторизации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать конструкции KeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null— или —<paramref name="token" /> равен null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlStatement">
      <summary>Представляет утверждение для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlStatement" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Создает политику авторизации для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, представляющий политику авторизации для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <param name="issuer">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий издателя маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <param name="samlAuthenticator">Объект <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> для проверки подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
      <summary>При переопределении в производном классе возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Чтение оператора SAML из указанного средства чтения XML (при переопределении в производном классе).</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания оператора SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать XML-элементы в операторе SAML, заданном в спецификации SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает оператор SAML в указанный XML-сериализатор.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи оператора SAML.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubject">
      <summary>Представляет субъект маркера безопасности SAML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSubject" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, используя указанное имя, формат имени и домен, в котором находится имя.</summary>
      <param name="nameFormat">Ссылка URI, представляющая формат параметра <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />.</param>
      <param name="nameQualifier">Домен, в котором расположен параметр <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />.</param>
      <param name="name">Имя субъекта.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null или <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> с помощью заданного имени, домена, в котором находится имя, формата имени, протоколов проверки подлинности, дополнительных сведений для проверки подлинности и идентификатора ключа.</summary>
      <param name="nameFormat">Ссылка URI, представляющая формат параметра <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />.</param>
      <param name="nameQualifier">Домен, в котором расположен параметр <paramref name="name" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />.</param>
      <param name="name">Имя субъекта.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" />.</param>
      <param name="confirmations">Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.String" />, содержащая ссылки URI, определяющие протоколы, используемые для проверки подлинности субъекта.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" />.</param>
      <param name="confirmationData">Дополнительные сведения для проверки подлинности, которые могут использоваться протоколами проверки подлинности.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" />.</param>
      <param name="securityKeyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, предоставляющий доступ к ключу шифрования, хранящемуся в субъекте маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null или <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="confirmations" /> содержит значение null или элемент <see cref="F:System.String.Empty" />.— или —Параметр <paramref name="confirmations" /> не содержит элементов, а параметр <paramref name="name" /> имеет значение null или <see cref="F:System.String.Empty" />.— или —Параметр <paramref name="confirmations" /> не содержит элементов, а параметр <paramref name="confirmationData" /> или <paramref name="securityKeyIdentifier" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods">
      <summary>Возвращает набор ссылок URI, определяющих протоколы, которые должны использоваться для проверки подлинности субъекта.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.IList`1" /> типа <see cref="T:System.String" />, содержащая набор ссылок URI, определяющих протоколы, которые должны использоваться для проверки подлинности субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Crypto">
      <summary>Возвращает или задает ключ шифрования, используемый для проверки цифровой сигнатуры, определяемой данным оператором субъекта SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который содержит ключ шифрования, используемый для проверки цифровой сигнатуры для маркера безопасности SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims">
      <summary>Возвращает набор утверждений с помощью свойств этого класса.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Claims.Claim" />, содержащая набор утверждений, представленных данным экземпляром <see cref="T:System.IdentityModel.Tokens.SamlSubject" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Возвращает набор утверждений с помощью свойств данного класса и заданной структуры проверки подлинности маркера безопасности SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, содержащий набор утверждений, представленный данным экземпляром класса <see cref="T:System.IdentityModel.Tokens.SamlSubject" />.</returns>
      <param name="samlAuthenticator">Объект <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, который выполняет проверку подлинности части маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />, соответствующую элементу &lt;saml:Subject&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="samlAuthenticator" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier">
      <summary>Возвращает или задает идентификатор ключа, предоставляющий доступ к ключу шифрования, хранящемуся в субъекте маркера безопасности SAML.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, предоставляющий доступ к ключу шифрования, хранящемуся в субъекте маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Name">
      <summary>Возвращает или задает имя субъекта для маркера безопасности SAML.</summary>
      <returns>Имя субъекта для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType">
      <summary>Возвращает тип утверждения, используемого для представления имени субъекта для маркера безопасности SAML. </summary>
      <returns>Тип утверждения, используемого для представления имени субъекта для маркера безопасности SAML (<see cref="P:System.IdentityModel.Claims.ClaimTypes.NameIdentifier" />).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameFormat">
      <summary>Возвращает или задает ссылку универсального кода ресурса (URI), представляющую формат имени субъекта для маркера безопасности SAML.</summary>
      <returns>Ссылка универсального кода ресурса (URI), представляющая формат имени субъекта для маркера безопасности SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier">
      <summary>Возвращает или задает домен, в котором находится имя субъекта для маркера безопасности SAML.</summary>
      <returns>Домен, в котором находится имя субъекта для маркера безопасности SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает элемент &lt;saml:Subject&gt; из указанного средства чтения XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для считывания элемента &lt;saml:Subject&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в утверждении SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение KeyInfo цифровой сигнатуры.</param>
      <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.— или —Значение параметра <paramref name="samlSerializer" /> равно null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Параметр <paramref name="reader" /> относится к элементу XML, для которого выполняется одно из следующих условий.Содержит элемент &lt;saml:NameIdentifier&gt;, не имеющий значения.— или —Содержит элемент &lt;saml:ConfirmationMehtod&gt;, не имеющий значения.— или —Содержит элемент &lt;saml:SubjectConfirmation&gt;, не имеющий ни одного дочернего элемента &lt;saml:ConfirmationMethod&gt;.— или —Не содержит ни одного элемента &lt;saml:ConfirmationMethod&gt; или &lt;saml:NameIdentifier&gt;. </exception>
      <exception cref="T:System.Security.SecurityException">Параметр <paramref name="reader" /> ссылается на XML-элемент, содержащий элемент &lt;ds:KeyInfo&gt;, не имеющий извлекаемого ключа.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData">
      <summary>Возвращает или задает дополнительные сведения для проверки подлинности, которые могут использоваться протоколами проверки подлинности. </summary>
      <returns>Дополнительные сведения для проверки подлинности, которые могут использоваться протоколами проверки подлинности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Записывает элемент &lt;saml:Subject&gt; в указанный сериализатор XML.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи элемента &lt;saml:Subject&gt;.</param>
      <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
      <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения KeyInfo.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <summary>Представляет утверждение для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" />, используя указанный субъект. </summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, определяющий субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.Задает свойство <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Добавляет утверждение, основанное на свойствах данного экземпляра, в указанную коллекцию утверждений.</summary>
      <param name="claims">Объект <see cref="T:System.Collections.Generic.IList`1" /> принадлежит к типу <see cref="T:System.IdentityModel.Claims.Claim" />, содержащему набор добавляемых утверждений.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> равен null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Создает политику авторизации для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, представляющий политику авторизации для маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <param name="issuer">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий издателя маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <param name="samlAuthenticator">Объект <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> для проверки подлинности маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject">
      <summary>Возвращает или задает субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, определяющий субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> установлено, а свойство <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" /> имеет значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Задает субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
      <param name="samlSubject">Объект <see cref="T:System.IdentityModel.Tokens.SamlSubject" />, определяющий субъект маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlSubject" /> равен null.</exception>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <summary>Определяет константы для уникальных кодов ресурса (URI), представляющих алгоритмы шифрования. Данные алгоритмы используются для шифрования XML и вычисления цифровых сигнатур для сообщений SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 128-разрядный алгоритм шифрования AES для шифрования XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 128-разрядный алгоритм шифрования AES для шифрования и расшифровки симметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 192-разрядный алгоритм шифрования AES для шифрования XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 192-разрядный алгоритм шифрования AES для шифрования и расшифровки симметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 256-разрядный алгоритм шифрования AES для шифрования XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 256-разрядный алгоритм шифрования AES для шифрования и расшифровки симметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования DES для шифрования XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования DSA для цифровой подписи XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n">
      <summary>Представляет исключительный алгоритм канонизации XML без комментариев.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments">
      <summary>Представляет исключительный алгоритм канонизации XML с комментариями.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования HMAC для цифровой подписи XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 256-разрядный алгоритм шифрования HMAC для цифровой подписи XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation">
      <summary>Представляет алгоритм создания ключа P-SHA1.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005">
      <summary>Представляет алгоритм создания ключа P-SHA1 версии декабря 2007 года.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest">
      <summary>Определяет универсальный код ресурса (URI), указывающий на дайджест-алгоритм шифрования RIPEMD-160.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования RSAES-OAEP-ENCRYPT для шифрования и расшифровки асимметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования RSA-SHA1 для цифровой подписи XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования RSA-SHA256 для цифровой подписи XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования RSAES-PKCS1-v1_5 для шифрования и расшифровки асимметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 160-разрядный дайджест-алгоритм SHA-1.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 256-разрядный дайджест-алгоритм SHA-256.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest">
      <summary>Определяет универсальный код ресурса (URI), указывающий на 512-разрядный дайджест-алгоритм SHA-512.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм протокола TLS для шифрования и расшифровки симметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования Triple DES для шифрования XML.Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования Triple DES для шифрования и расшифровки симметричных ключей (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap">
      <summary>Определяет универсальный код ресурса (URI), указывающий на алгоритм шифрования GSS-API для шифрования и расшифровки ключей сеанса билета Kerberos (key wrap).Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKey">
      <summary>Базовый класс для ключей безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityKey" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>При переопределении в производном классе расшифровывает указанный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий расшифрованный ключ.</returns>
      <param name="algorithm">Алгоритм шифрования, который использовался для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>При переопределении в производном классе выполняет шифрование указанного ключа.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</returns>
      <param name="algorithm">Алгоритм для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий ключ.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>При переопределении в производном классе возвращает значение, определяющее, использует ли указанный алгоритм асимметричные ключи. </summary>
      <returns>Значение true, если указанный алгоритм использует асимметричные ключи; в противном случае — значение false. </returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>При переопределении в производном классе возвращает значение, определяющее, поддерживает ли данный класс указанный алгоритм.</summary>
      <returns>Значение true, если данный класс поддерживает указанный алгоритм; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>При переопределении в производном классе возвращает значение, определяющее, использует ли указанный алгоритм симметричные ключи.</summary>
      <returns>Значение true, если указанный алгоритм использует симметричные ключи; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
      <summary>При переопределении в производном классе возвращает размер ключа в битах.</summary>
      <returns>Размер ключа в битах.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <summary>Представляет идентификатор ключа.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, используя указанные конструкции идентификатора ключа. </summary>
      <param name="clauses">Массив <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, содержащий конструкции идентификатора ключа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clauses" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Добавляет конструкцию идентификатора ключа в конец списка.</summary>
      <param name="clause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, добавляемый в конец списка.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clause" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" /> равно true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey">
      <summary>Возвращает значение, определяющее, можно ли создать ключ хотя бы для одной из конструкций идентификатора ключа. </summary>
      <returns>Значение true, если ключ можно создать хотя бы для одной из конструкций идентификатора ключа; в противном случае — значение false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count">
      <summary>Возвращает количество конструкций идентификатора ключа.</summary>
      <returns>Количество конструкций идентификатора ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey">
      <summary>Создает ключ для одной из конструкций идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, представляющий созданный ключ.</returns>
      <exception cref="T:System.InvalidOperationException">Невозможно создать ключ для любой из конструкций идентификатора ключа.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1">
      <summary>Выполняет поиск конструкции идентификатора ключа указанного типа и возвращает первое вхождение во всей коллекции. </summary>
      <returns>Первый объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> в коллекции, принадлежащий к типу, указанному в параметре <paramref name="TClause" />.</returns>
      <typeparam name="TClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий тип конструкции идентификатора ключа для поиска в коллекции.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="TClause" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">В коллекции отсутствует конструкция идентификатора ключа, принадлежащая к типу, указанному в параметре <paramref name="TClause" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции конструкций идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.List`1.Enumerator" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для коллекции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly">
      <summary>Возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
      <returns>Значение true, если свойства этого экземпляра доступны только для чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)">
      <summary>Возвращает конструкцию идентификатора ключа по указанному индексу.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> по указанному индексу.</returns>
      <param name="index">Отсчитываемый от нуля индекс конструкции идентификатора ключа в коллекции конструкций идентификатора ключа.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше 0.— или —Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly">
      <summary>Делает этот экземпляр доступным только для чтения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции конструкций идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для выполнения итерации по коллекции.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString">
      <summary>Возвращает текущий объект.</summary>
      <returns>Текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)">
      <summary>Выполняет поиск конструкции идентификатора ключа указанного типа и возвращает значение, указывающее, можно ли найти данный тип конструкции.Найденный тип возвращается в параметре out.</summary>
      <returns>Значение true, если в коллекции существует конструкция идентификатора ключа, принадлежащая к типу, указанному в параметре <paramref name="TClause" />; в противном случае — значение false. </returns>
      <param name="clause">При возврате данного метода он содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, который принадлежит к типу, указанному в параметре <paramref name="TClause" />, когда конструкция этого типа не найдена в коллекции.Этот параметр передается неинициализированным.</param>
      <typeparam name="TClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, представляющий тип конструкции идентификатора ключа для поиска в коллекции.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <summary>Представляет абстрактный базовый класс для предложения идентификатора ключа.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, используя указанный тип конструкции идентификатора ключа. </summary>
      <param name="clauseType">Тип конструкции идентификатора ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, используя указанный тип конструкции идентификатора ключа, специальное слово и длину производного ключа. </summary>
      <param name="clauseType">Тип конструкции идентификатора ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</param>
      <param name="nonce">Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.Задает значение, возвращаемое методом <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</param>
      <param name="length">Размер производного ключа.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
      <summary>Возвращает значение, определяющее, можно ли создать ключ. </summary>
      <returns>Значение true, если можно создать ключ; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
      <summary>Возвращает тип конструкции идентификатора ключа.</summary>
      <returns>Тип конструкции идентификатора ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
      <summary>Создает ключ, который основан на параметрах, передаваемых в конструктор.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащий созданный ключ.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
      <summary>Возвращает размер производного ключа.</summary>
      <returns>Размер производного ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
      <summary>Возвращает специальное слово, использованное для создания производного ключа.</summary>
      <returns>Массив <see cref="T:System.Byte" />, который содержит специальное слово, использованное для создания производного ключа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному предложению идентификатора ключа.</summary>
      <returns>Значение true, если экземпляр <paramref name="keyIdentifierClause" /> совпадает с текущим экземпляром; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="keyIdentifierClause" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyType">
      <summary>Задает тип ключа, связанного с маркером безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
      <summary>Указывает, что ключ является симметричным.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
      <summary>Указывает, что ключ является асимметричным.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
      <summary>Указывает, что маркер безопасности не содержит ключ доказательства владения. </summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyUsage">
      <summary>Указывает способ использования ключа, связанного с маркером безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange">
      <summary>Указывает, что ключ можно использовать для обмена ключами между отправителем и получателем.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature">
      <summary>Указывает, что ключ можно использовать для создания цифровой сигнатуры.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityToken">
      <summary>Представляет базовый класс, используемый для реализации всех маркеров безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа. </summary>
      <returns>true, если параметр <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; в противном случае — false. </returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает конструкцию заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся конструкцией идентификатора ключа для маркера безопасности.</returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, можно ли идентификатор ключа данного экземпляра разрешить в определенный идентификатор ключа.</summary>
      <returns>true, если объект <paramref name="keyIdentifierClause" /> имеет тип <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> и содержит тот же уникальный идентификатор, что и свойство <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />; в противном случае — false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает ключ для указанной конструкции идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который представляет ключ.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого получается ключ.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности становиться действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenException">
      <summary>Исключение, которое создается при возникновении ошибки в ходе обработки маркера безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" />, используя указанные данные сериализации XML и контекстные данные об источнике и месте назначения потока сериализации.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий значения, которые используются во время сериализации и десериализации.</param>
      <param name="context">Метод <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" />, содержащий данные об источнике и месте назначения потока сериализации.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" />, используя указанное сообщение об ошибке. </summary>
      <param name="message">Сообщение, идентифицирующее причину происшедшего исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" />, используя указанные сообщение об ошибке и основную причину ошибки. </summary>
      <param name="message">Сообщение, идентифицирующее причину происшедшего исключения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, представляющийся основную причину исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <summary>Содержит набор статических свойств, который возвращает строки, представляющие типы маркера безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos">
      <summary>Возвращает строку, которая представляет маркер безопасности, основанный на билете Kerberos.</summary>
      <returns>Строка, которая представляет маркер безопасности, основанный на билете Kerberos.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa">
      <summary>Возвращает строку, которая представляет маркер безопасности, основанный на ключе RSA.</summary>
      <returns>Строка, которая представляет маркер безопасности, основанный на ключе RSA.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml">
      <summary>Возвращает строку, которая представляет маркер безопасности, основанный на утверждении SAML.</summary>
      <returns>Строка, которая представляет маркер безопасности, основанный на утверждении SAML.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName">
      <summary>Возвращает строку, которая представляет маркер безопасности, основанный на имени пользователя и пароле.</summary>
      <returns>Строка, которая представляет маркер безопасности, основанный на имени пользователя и пароле.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate">
      <summary>Возвращает строку, которая представляет маркер безопасности, основанный на сертификате X.509.</summary>
      <returns>Строка, которая представляет маркер безопасности, основанный на сертификате X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <summary>Исключение, которое возникает, когда полученный маркер безопасности является недопустимым. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />, используя указанные данные сериализации XML и контекстные данные об источнике и месте назначения потока сериализации. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий значения, которые используются во время сериализации и десериализации.</param>
      <param name="context">Метод <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />, содержащий данные об источнике и месте назначения потока сериализации.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />, используя указанное сообщение об ошибке. </summary>
      <param name="message">Сообщение, идентифицирующее причину происшедшего исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />, используя указанные сообщение об ошибке и основную причину ошибки. </summary>
      <param name="message">Сообщение, идентифицирующее причину происшедшего исключения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, представляющийся основную причину исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SigningCredentials">
      <summary>Представляет ключ шифрования и алгоритмы безопасности, используемые для создания цифровой сигнатуры.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />. </summary>
      <param name="signingKey">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который содержит ключ шифрования, используемый для создания цифровой сигнатуры. </param>
      <param name="signatureAlgorithm">Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для создания цифровой сигнатуры.</param>
      <param name="digestAlgorithm">Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для вычисления дайджеста части сообщения SOAP с цифровой подписью.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</summary>
      <param name="signingKey">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который содержит ключ шифрования, используемый для создания цифровой сигнатуры.</param>
      <param name="signatureAlgorithm">Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для создания цифровой сигнатуры.</param>
      <param name="digestAlgorithm">Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для вычисления дайджеста части сообщения SOAP с цифровой сигнатурой.</param>
      <param name="signingKeyIdentifier">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> указывает идентификатор, который представляет ключ, используемый для создания цифровой сигнатуры.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm">
      <summary>Возвращает алгоритм шифрования, используемый для вычисления дайджеста части сообщения с цифровой сигнатурой.</summary>
      <returns>Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для вычисления дайджеста части сообщения SOAP с цифровой сигнатурой.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm">
      <summary>Возвращает алгоритм шифрования, используемый для создания цифровой сигнатуры.</summary>
      <returns>Универсальный код ресурса (URI), который представляет алгоритм шифрования, используемый для создания цифровой сигнатуры.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey">
      <summary>Возвращает ключ шифрования, используемый для создания цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который содержит ключ шифрования, используемый для создания цифровой сигнатуры.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier">
      <summary>Возвращает идентификатор, который представляет ключ, используемый для создания цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> указывает идентификатор, который представляет ключ, используемый для создания цифровой сигнатуры.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <summary>Представляет базовый класс для всех ключей, созданных с помощью симметричных алгоритмов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе создается производный ключ с помощью указанного алгоритма шифрования и параметров для текущего ключа. </summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий производный ключ.</returns>
      <param name="algorithm">Универсальный код ресурса (URI), представляющий алгоритм шифрования, который используется для создания производного ключа.</param>
      <param name="label">Массив <see cref="T:System.Byte" />, содержащий параметр метки для алгоритма шифрования.</param>
      <param name="nonce">Массив <see cref="T:System.Byte" />, содержащий специальное слово, которое используется для создания производного ключа.</param>
      <param name="derivedKeyLength">Размер производного ключа.</param>
      <param name="offset">Позиция, в которой расположен производный ключ в массиве байтов, возвращаемом из этого метода.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>При переопределении в производном классе возвращает преобразование, которое расшифровывает текст с помощью указанного алгоритма шифрования. </summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование расшифровки.</returns>
      <param name="algorithm">Алгоритм шифрования, который расшифровывает текст, например зашифрованный текст XML.</param>
      <param name="iv">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (IV) для указанного алгоритма.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>При переопределении в производном классе возвращает преобразование, которое шифрует XML с помощью указанного алгоритма шифрования. </summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование шифрования.</returns>
      <param name="algorithm">Алгоритм для шифрования XML.</param>
      <param name="iv">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (IV) для указанного алгоритма.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
      <summary>При переопределении в производном классе возвращает размер в битах вектора инициализации (IV), который требуется для указанного алгоритма шифрования. </summary>
      <returns>Размер в битах вектора инициализации (IV), который требуется для алгоритма шифрования, указанного в параметре <paramref name="algorithm" />.</returns>
      <param name="algorithm">Алгоритм шифрования, которому требуется получение размера вектора инициализации (IV).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>При переопределении в производном классе возвращает экземпляр указанного хэш-алгоритма с ключом.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, представляющий хэш-алгоритм с ключом.</returns>
      <param name="algorithm">Хэш-алгоритм с ключом, используемый для получения экземпляра.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>При переопределении в производном классе возвращает экземпляр указанного симметричного алгоритма.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />, представляющий симметричный алгоритм.</returns>
      <param name="algorithm">Симметричный алгоритм для получения экземпляра.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
      <summary>При переопределении в производном классе возвращает байты, представляющие симметричный ключ.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий симметричный ключ.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <summary>Представляет маркер безопасности, основанный на имени пользователя и пароле.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />, используя указанные имя пользователя и пароль. </summary>
      <param name="userName">Имя пользователя.Задает свойство <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />.</param>
      <param name="password">Пароль для имени пользователя.Задает свойство <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="userName" /> равно null.— или —Значение параметра <paramref name="password" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />, используя указанное имя пользователя и пароль, пароль и уникальный идентификатор.</summary>
      <param name="userName">Имя пользователя.Задает свойство <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />.</param>
      <param name="password">Пароль для имени пользователя.Задает свойство <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />.</param>
      <param name="id">Уникальный идентификатор маркера безопасности.Задает свойство <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="userName" /> равно null.— или —Значение параметра <paramref name="password" /> равно null.— или —Значение параметра <paramref name="id" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password">
      <summary>Возвращает пароль для имени пользователя, связанного с маркером безопасности.</summary>
      <returns>Пароль для имени пользователя, связанного с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName">
      <summary>Возвращает имя пользователя, связанное с маркером безопасности.</summary>
      <returns>Имя пользователя, связанное с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <summary>Представляет маркер безопасности, основанный на удостоверении домена Windows или учетной записи пользователя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> с помощью пользователя Windows. </summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> с помощью пользователя Windows. </summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.</param>
      <param name="id">Уникальный идентификатор для маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> равен null.— или —<paramref name="id" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />.</summary>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.</param>
      <param name="id">Уникальный идентификатор для маркера безопасности.</param>
      <param name="authenticationType">Тип проверки подлинности маркера безопасности.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType">
      <summary>Возвращает тип проверки подлинности маркера.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id">
      <summary>Возвращает уникальный идентификатор для маркера безопасности.</summary>
      <returns>Уникальный идентификатор для маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />, используя указанный уникальный идентификатор, пользователя Windows и первый и последний моменты времени, когда маркер безопасности является действительным.</summary>
      <param name="id">Уникальный идентификатор для маркера безопасности.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />.</param>
      <param name="effectiveTime">Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.Задайте значение свойства <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" />.</param>
      <param name="expirationTime">Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" />.</param>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />.</param>
      <param name="clone">true, если создается объект <see cref="T:System.Security.Principal.WindowsIdentity" />, идентичный объекту <paramref name="windowsIdentity" />, и присваивается свойству <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />; в противном случае свойству <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> присваивается значение параметра <paramref name="windowsIdentity" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="windowsIdentity" /> равно null.— или —Значение параметра <paramref name="id" /> равно null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />.</summary>
      <param name="id">Уникальный идентификатор для маркера безопасности.</param>
      <param name="authenticationType">Тип проверки подлинности маркера безопасности.</param>
      <param name="effectiveTime">Значение типа <see cref="System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</param>
      <param name="expirationTime">Значение типа <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</param>
      <param name="windowsIdentity">Представляет пользователя Windows.</param>
      <param name="clone">true, если создается объект <see cref="T:System.Security.Principal.WindowsIdentity" />, идентичный объекту <paramref name="windowsIdentity" />, и присваивается свойству <paramref name="WindowsIdentity" />; в противном случае свойству <paramref name="WindowsIdentity" /> присваивается значение параметра <paramref name="windowsIdentity" />.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed">
      <summary>Если для этого экземпляра вызывается метод <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />, формируется исключение.</summary>
      <exception cref="T:System.ObjectDisposedException">Метод <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" /> был вызван для текущего экземпляра.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
      <summary>Возвращает пользователя Windows, связанного с маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя Windows.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <summary>Представляет асимметричный ключ для сертификатов X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, представляющий сертификат X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Расшифровывает указанный ключ с помощью заданного алгоритма шифрования.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий расшифрованный ключ.</returns>
      <param name="algorithm">Алгоритм шифрования для расшифровки ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</param>
      <exception cref="T:System.NotSupportedException">В сертификате X.509, указанном в конструкторе, отсутствует закрытый ключ.— или —В сертификате X.509 имеется закрытый ключ, но для его создания не использовался алгоритм <see cref="T:System.Security.Cryptography.RSA" />.— или —В сертификате X.509 имеется закрытый ключ, созданный с помощью алгоритма <see cref="T:System.Security.Cryptography.RSA" />, но свойство <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> имеет значение null.— или —Параметр <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> и <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Шифрует указанный ключ с помощью заданного алгоритма шифрования.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий зашифрованный ключ.</returns>
      <param name="algorithm">Алгоритм шифрования для шифрования ключа.</param>
      <param name="keyData">Массив <see cref="T:System.Byte" />, содержащий ключ для шифрования.</param>
      <exception cref="T:System.NotSupportedException">В сертификате X.509, указанном в конструкторе, имеется закрытый ключ, для создания которого не использовался алгоритм <see cref="T:System.Security.Cryptography.RSA" />.— или —Параметр <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> и <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Возвращает указанный алгоритм асимметричного шифрования.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, представляющий указанный алгоритм асимметричного шифрования.</returns>
      <param name="algorithm">Создаваемый асимметричный алгоритм.</param>
      <param name="privateKey">Значение true, если для создания алгоритма требуется закрытый ключ; в противном случае — значение false. </param>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="privateKey" /> имеет значение true, а в сертификате X.509, указанном в конструкторе, отсутствует закрытый ключ.— или —Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> и открытый или закрытый ключ для сертификата X.509, указанный в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.DSA" />. — или —Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> и открытый или закрытый ключ для сертификата X.509, указанный в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.RSA" />. — или —Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Возвращает алгоритм шифрования, создающий хэш для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.HashAlgorithm" />, создающий хэши для цифровых сигнатур.</returns>
      <param name="algorithm">Хэш-алгоритм.</param>
      <exception cref="T:System.NotSupportedException">Тип <paramref name="algorithm" /> не поддерживается.Поддерживаются алгоритмы: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Возвращает алгоритм модуля удаления формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, представляющий алгоритм модуля удаления формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля удаления формата для получения экземпляра для цифровой сигнатуры.</param>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> и открытый ключ для сертификата X.509, указанный в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.DSA" />.— или —Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> и открытый ключ для сертификата X.509, указанного в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.RSA" />.— или —Тип <paramref name="algorithm" /> не поддерживается.Поддерживается алгоритмы: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Возвращает алгоритм модуля создания формата для цифровой сигнатуры.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, представляющий алгоритм модуля создания формата для цифровой сигнатуры.</returns>
      <param name="algorithm">Алгоритм модуля создания формата для получения экземпляра для цифровой сигнатуры.</param>
      <exception cref="T:System.NotSupportedException">В сертификате X.509, указанном в конструкторе, отсутствует закрытый ключ.— или —Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> и закрытый ключ для сертификата X.509, указанный в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.DSA" />.— или —Параметр <paramref name="algorithm" /> имеет значение <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, а закрытый ключ для сертификата X.509, указанного в конструкторе, не принадлежит к типу <see cref="T:System.Security.Cryptography.RSA" />.— или —Тип <paramref name="algorithm" /> не поддерживается.Поддерживается алгоритмы: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> и <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
      <summary>Возвращает значение, указывающее, доступен ли закрытый ключ. </summary>
      <returns>Значение true, если закрытый ключ доступен; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм асимметричные ключи.</summary>
      <returns>Значение true, если указан алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, поддерживается ли указанный алгоритм данным классом.</summary>
      <returns>Значение true, если указан алгоритм <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, а открытый ключ имеет правильный тип; в противном случае — значение false.См. сведения в разделе «Заметки».</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Возвращает значение, определяющее, использует ли указанный алгоритм симметричные ключи.</summary>
      <returns>Значение true, если указан алгоритм <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /> или <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />; в противном случае — значение false.</returns>
      <param name="algorithm">Алгоритм шифрования.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
      <summary>Возвращает размер в битах для открытого ключа, связанного с сертификатом X.509.</summary>
      <returns>Размер в битах для открытого ключа, связанного с сертификатом X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <summary>Представляет предложение идентификатора ключа, которое определяет маркеры безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> с помощью различающегося имени издателя сертификата и серийного номера сертификата X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> с помощью указанного различающегося имени издателя сертификата и серийного номера X.509. </summary>
      <param name="issuerName">Различающееся имя центра сертификации, выдавшего сертификат X.509.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" />.</param>
      <param name="issuerSerialNumber">Серийный номер сертификата X.509.Задает значение свойства <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuerName" /> равно null.— или —Значение параметра <paramref name="issuerSerialNumber" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName">
      <summary>Возвращает различающееся имя центра сертификации, выдавшего сертификат X.509.</summary>
      <returns>Различающееся имя центра сертификации, выдавшего сертификат X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber">
      <summary>Возвращает серийный номер сертификата X.509.</summary>
      <returns>Серийный номер сертификата X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, если параметр <paramref name="keyIdentifierClause" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, а предложения идентификатора ключа совпадают; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Возвращает значение, указывающее, соответствует ли идентификатор ключа для данного экземпляра указанному сертификату X.509.</summary>
      <returns>Значение true, если параметр <paramref name="certificate" /> использует такие же имя и серийный номер издателя, что и текущий экземпляр; в противном случае — значение false.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509 для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному имени и серийному номеру издателя.</summary>
      <returns>Значение true, если параметры <paramref name="issuerName " />и <paramref name="issuerSerialNumber" /> соответствуют свойствам <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" /> и <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />; в противном случае — значение false.</returns>
      <param name="issuerName">Различающееся имя центра сертификации, выдавшего сертификат X.509.</param>
      <param name="issuerSerialNumber">Серийный номер сертификата X.509.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString">
      <summary>Возвращает текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <summary>Представляет предложение идентификатора, определяющее маркер безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> с помощью необработанных данных сертификата X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />, используя указанные необработанные данные сертификата X.509. </summary>
      <param name="certificateRawData">Массив <see cref="T:System.Byte" />, содержащий необработанные данные сертификата X.509.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificateRawData" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="certificateRawData" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey">
      <summary>Возвращает значение, указывающее, можно ли создать ключ из необработанных данных сертификата X.509 или массива байтов в конструкторе. </summary>
      <returns>Значение true во всех случаях.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey">
      <summary>Создает ключ из необработанных данных сертификата X.509 или массива байтов, указанного в конструкторе.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />, содержащий один или несколько ключей, связанных с сертификатом X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData">
      <summary>Возвращает необработанные данные, связанные с сертификатом X.509.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий необработанные данные, связанные с сертификатом X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному сертификату X.509.</summary>
      <returns>Значение true, если параметр <paramref name="certificate" /> имеет необработанные данные, соответствующие текущему экземпляру; в противном случае — значение false.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509 для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString">
      <summary>Возвращает текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SecurityToken">
      <summary>Представляет маркер безопасности, основанный на сертификате X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.Задает свойство <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />, используя указанный сертификат X.509 и уникальный идентификатор. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.Задает свойство <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />.</param>
      <param name="id">Уникальный идентификатор маркера безопасности.Задает свойство <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.— или —Значение параметра <paramref name="id" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
      <returns>Значение true, если параметр <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> или <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />; в противном случае — значение false.</returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate">
      <summary>Возвращает сертификат X.509, связанный с маркером безопасности.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает конструкцию заданного идентификатора ключа.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся конструкцией идентификатора ключа для маркера безопасности.</returns>
      <typeparam name="T">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающий создаваемый идентификатор ключа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Id">
      <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
      <returns>Уникальный идентификатор маркера безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, указывающее, равен ли идентификатор ключа данного экземпляра указанному идентификатору ключа.</summary>
      <returns>Значение true, если параметр <paramref name="keyIdentifierClause" /> принадлежит к одному из типов <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> или <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />, а конструкции идентификатора ключа совпадают; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys">
      <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed">
      <summary>Если для этого экземпляра вызывается метод <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />, создается исключение.</summary>
      <exception cref="T:System.ObjectDisposedException">Для данного экземпляра вызван метод <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom">
      <summary>Возвращает первый момент времени, когда данный маркер безопасности становится действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo">
      <summary>Возвращает последний момент времени, когда данный маркер безопасности является действительным.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <summary>Представляет предложение идентификатора, определяющее маркер безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> с помощью расширения идентификатора ключа для субъекта сертификата X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, используя указанный идентификатор ключа субъекта. </summary>
      <param name="ski">Массив <see cref="T:System.Byte" />, содержащий предложения идентификатора ключа субъекта.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="ski" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Возвращает значение, определяющее, можно ли создать предложение идентификатора ключа для указанного сертификата X.509. </summary>
      <returns>Значение true, если можно создать предложение идентификатора ключа для <paramref name="certificate" />, в противном случае — значение false.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier">
      <summary>Возвращает идентификатор ключа субъекта.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий предложения идентификатора ключа субъекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра идентификатору ключа указанного сертификата X.509.</summary>
      <returns>Значение true, если параметр <paramref name="certificate" /> имеет такой же идентификатор ключа субъекта, что и текущий экземпляр; в противном случае — значение false.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509 для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)">
      <summary>Создает предложение идентификатора ключа с помощью указанного сертификата X.509.</summary>
      <returns>Значение true, если для указанного сертификата X.509 можно создать предложение идентификатора ключа; в противном случае — значение false. </returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, для которого создается предложение идентификатора ключа.</param>
      <param name="keyIdentifierClause">При возврате этого метода он содержит объект <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, представляющий предложение идентификатора ключа.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <summary>Представляет предложение идентификатора, определяющее маркеры безопасности <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> с помощью отпечатка сертификата X.509.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" /> с помощью заданного отпечатка для сертификата X.509. </summary>
      <param name="thumbprint">Массив <see cref="T:System.Byte" />, содержащий отпечаток сертификата X.509.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="thumbprint" /> равно null.— или —Параметр <paramref name="thumbprint" /> имеет нулевую длину.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, используя указанный сертификат X.509. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint">
      <summary>Возвращает отпечаток для сертификата X.509.</summary>
      <returns>Массив <see cref="T:System.Byte" />, содержащий отпечаток сертификата X.509.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Возвращает значение, указывающее, эквивалентен ли идентификатор ключа данного экземпляра указанному отпечатку сертификата X.509.</summary>
      <returns>Значение true, если <paramref name="certificate" /> имеет тот же отпечаток, что и текущий экземпляр; в противном случае — значение false.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509 для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <summary>Представляет маркер безопасности, который основан на сертификате X.509, сопоставленном с учетной записью пользователя локального компьютера.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />, используя указанный сертификат X.509 и либо домен Windows, либо учетную запись компьютера. </summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий удостоверение домена Windows или учетной записи компьютера.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />, используя указанный сертификат X.509, домен Windows или учетную запись компьютера, а также уникальный идентификатор.</summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <param name="windowsIdentity">Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий удостоверение домена Windows или учетной записи компьютера.</param>
      <param name="id">Уникальный идентификатор маркера безопасности.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />.</summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат X.509.</param>
      <param name="windowsIdentity">Представляет удостоверение домена Windows или учетной записи компьютера.</param>
      <param name="authenticationType">Тип проверки подлинности маркера.</param>
      <param name="id">Уникальный идентификатор для маркера безопасности.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType">
      <summary>Возвращает тип проверки подлинности маркера.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity">
      <summary>Возвращает удостоверение домена Windows или учетной записи компьютера.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий удостоверение домена Windows или учетной записи компьютера.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>