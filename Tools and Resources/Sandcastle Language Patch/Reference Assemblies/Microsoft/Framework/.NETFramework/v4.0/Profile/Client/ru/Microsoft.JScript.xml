<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.JScript</name>
  </assembly>
  <members>
    <member name="T:Microsoft.JScript.ActivationObject">
      <summary>Представляет объект, который входит в состав иерархии областей.Этот класс содержит методы для разрешения области и получения сведений о членах.Он принадлежит к категории состояний компиляции и времени выполнения.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)">
      <summary>Получает новую глобальную переменную, используя заданное имя, значение и атрибуты.</summary>
      <returns>Глобальная переменная с заданным именем, значением и атрибутами.</returns>
      <param name="name">Имя поля.</param>
      <param name="attributeFlags">A bitwise combination of the enumeration values that describe the attributes of a field.<see cref="F:System.Reflection.FieldAttributes.Static" /> is added automatically.</param>
      <param name="value">Значение поля.</param>
    </member>
    <member name="F:Microsoft.JScript.ActivationObject.field_table">
      <summary>Хранит массив переменных в пределах области.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject">
      <summary>Получает текущую область по умолчанию, в которой содержится объект области оператора with или глобальной области.</summary>
      <returns>Текущая область по умолчанию.</returns>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)">
      <summary>Возвращает поле с заданным именем путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Объект <see cref="T:System.Reflection.FieldInfo" /> с заданным именем.</returns>
      <param name="name">Имя искомого поля.</param>
      <param name="lexLevel">Лексический уровень поиска.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetGlobalScope">
      <summary>Получает глобальную область, выполняя поиск по иерархии областей до тех пор, пока не будет найдена область, содержащая статические переменные, например область модулей.</summary>
      <returns>Глобальная область.</returns>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)">
      <summary>Получает локальное объявление полей с заданными именами.Используется во время компиляции для проверки на наличие ошибок.</summary>
      <returns>Локальное объявление поля.</returns>
      <param name="name">Имя поля.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам, которые сопоставлены заданному имени.</summary>
      <returns>Массив объектов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам текущего объекта.</summary>
      <returns>Массив объектов, содержащий все члены текущего объекта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)">
      <summary>Получает значение заданного члена путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Значение члена <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="lexlevel">Лексический уровень поиска.</param>
    </member>
    <member name="T:Microsoft.JScript.ActiveXObjectConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.Invoke">
      <summary>Возвращает значение NULL во всех случаях.</summary>
      <returns>NULL.</returns>
    </member>
    <member name="T:Microsoft.JScript.ArgumentsObject">
      <summary>Представляет сведения, используемые для вызова функции.К их числу относятся данные о функции, вызывающем объекте, аргументах и кадре стека.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.callee">
      <summary>Функция закрытия, представляющая вызываемую функцию.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.caller">
      <summary>Сведения об области вызова из кадра стека.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.length">
      <summary>Число аргументов.</summary>
    </member>
    <member name="T:Microsoft.JScript.ArrayConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.ConstructArray(System.Object[])">
      <summary>Вспомогательный метод, создающий новый массив и заполняющий его заданными значениями.</summary>
      <returns>Новый массив.</returns>
      <param name="args">Значения, которыми необходимо заполнить массив.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.Invoke(System.Object[])">
      <summary>Вызывает метод объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Результат вызова метода.</returns>
      <param name="args">Аргументы для передачи в метод.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayLiteral">
      <summary>Этот класс используется средством синтаксического анализа JScript для представления литерала типа "массив".</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayLiteral.#ctor(Microsoft.JScript.Context,Microsoft.JScript.ASTList)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ArrayLiteral" />, задавая контекст и элементы.</summary>
      <param name="context">Контекст текущего документа.</param>
      <param name="elements">Элементы массива.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayObject">
      <summary>Представляет объект массива.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.ArrayObject.length">
      <summary>Возвращает или задает длину массива.</summary>
      <returns>Длина массива.</returns>
    </member>
    <member name="M:Microsoft.JScript.ArrayObject.SpliceSlowly(System.UInt32,System.UInt32,System.Object[],Microsoft.JScript.ArrayObject,System.UInt32,System.UInt32)">
      <summary>Добавляет элементы и удаляет элементы, расположенные в массиве в указанной позиции.Элементы можно добавлять, удалять или выполнять обе операции одновременно.</summary>
      <param name="start">Позиция в этом массиве, в которой нужно добавить или удалить элементы.</param>
      <param name="deleteCount">Число удаляемых элементов (если есть).</param>
      <param name="args">Добавляемые элементы (если есть).</param>
      <param name="outArray">Массив, содержащий элементы, удаляемые из этого массива, если таковые имеются.</param>
      <param name="oldLength">Предыдущая длина этого массива.</param>
      <param name="newLength">Новая длина этого массива.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.ArrayObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])">
      <summary>Сцепляет объекты или массивы, присоединяя их к кону заданного объекта или массива.</summary>
      <returns>Сцепленные параметры <paramref name="thisob" /> и <paramref name="args" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="args">Объекты или массивы, присоединяемые к <paramref name="thisob" />.</param>
    </member>
    <member name="P:Microsoft.JScript.ArrayPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)">
      <summary>Сцепляет элементы заданного массива, образуя строку.Элементы отделяются друг от друга заданным разделителем.</summary>
      <returns>Строка, в которой сцепляются элементы <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="separator">Строка, используемая в качестве разделителя элементов.Значение по умолчанию — запятая.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)">
      <summary>Удаляет последний элемент из заданного массива и возвращает этот элемент.</summary>
      <returns>Последний элемент в <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])">
      <summary>Добавляет новые элементы в конец объекта заданного массива.</summary>
      <returns>Новая длина объекта <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="args">Элементы, добавляемые в <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)">
      <summary>Резервирует элементы заданного массива.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)">
      <summary>Удаляет первый элемент из заданного массива и возвращает этот элемент.Перемещает оставшиеся элементы в предыдущие позиции.</summary>
      <returns>Первый элемент объекта <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)">
      <summary>Создает новый массив, содержащий последовательно расположенные заданные элементы из указанного массива.</summary>
      <returns>Новый массив, содержащий элементы, последовательно расположенные между <paramref name="thisob" />[<paramref name="start" />] и <paramref name="thisob" />[<paramref name="end" />].</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="start">Первый получаемый последовательный элемент.</param>
      <param name="end">Последний получаемый последовательный элемент.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)">
      <summary>Сортирует элементы заданного массива, используя заданную функцию для сравнения элементов.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="function">Функция, используемая для сравнения элементов.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])">
      <summary>Добавляет и удаляет элементы, расположенные в массиве в указанной позиции.Элементы можно добавлять, удалять или выполнять обе операции одновременно.</summary>
      <returns>Новый массив, содержащий элементы, удаляемые из <paramref name="thisob" />, если таковые имеются.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="start">Позиция в массиве, в которой нужно добавить или удалить элементы.</param>
      <param name="deleteCnt">Число удаляемых элементов (если есть).</param>
      <param name="args">Добавляемые элементы (если есть).</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)">
      <summary>Создает строковое представление заданного объекта, содержащее элементы, отделенные друг от друга разделителем <see cref="P:System.Globalization.TextInfo.ListSeparator" /> и пробелом.</summary>
      <returns>Строковое представление, содержащее сцепленные элементы <paramref name="thisob" />, отделенные друг от друга разделителем <see cref="P:System.Globalization.TextInfo.ListSeparator" /> и пробелом.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)">
      <summary>Создает строковое представление заданного объекта, содержащее сцепленные элементы, отделенные друг от друга запятой.</summary>
      <returns>Строковое представление, содержащее сцепленные элементы <paramref name="thisob" />, отделенные друг от друга запятой.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])">
      <summary>Добавляет новые элементы в начало объекта заданного массива.Перемещает оставшиеся элементы в следующие позиции.</summary>
      <returns>Новая длина объекта <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="args">Элементы, добавляемые в <paramref name="thisob" />.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayWrapper">
      <summary>Создает оболочку для массива с целью создания объекта JScript <see cref="T:Microsoft.JScript.ArrayObject" />.Этот класс создает оболочки либо для объекта <see cref="T:System.Array" /> платформы .NET Framework, либо для объекта <see cref="T:Microsoft.JScript.ArrayObject" /> платформы JScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayWrapper.GetType">
      <summary>Получает тип массива.</summary>
      <returns>Тип объекта <see cref="T:System.Array" /> или <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.ArrayWrapper.length">
      <summary>Получает длину массива.</summary>
      <returns>Длина массива.</returns>
    </member>
    <member name="T:Microsoft.JScript.AssemblyCustomAttributeList">
      <summary>Этот класс используется средством синтаксического анализа JScript для хранения атрибутов, назначенных сборке.</summary>
    </member>
    <member name="T:Microsoft.JScript.AST">
      <summary>Представляет дерево с абстрактным синтаксисом, используемое для анализа кода JScript.</summary>
    </member>
    <member name="T:Microsoft.JScript.ASTList">
      <summary>Сохраняет список дочерних элементов <see cref="T:Microsoft.JScript.AST" />.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="T:Microsoft.JScript.BinaryOp">
      <summary>Представляет базовый класс для классов, выполняющих операции с двумя операндами, например <see cref="T:Microsoft.JScript.Plus" />, <see cref="T:Microsoft.JScript.Equality" /> и <see cref="T:Microsoft.JScript.Relational" />.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)">
      <summary>Определяет наилучший метод вызова на основе запрашиваемой операции и типов данных операндов.</summary>
      <returns>Рекомендуемый метод вызова операндов.</returns>
      <param name="ir1">Тип данных первого операнда.</param>
      <param name="ir2">Тип данных второго операнда.</param>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operand1">
      <summary>Предоставляет первый операнд операции.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operand2">
      <summary>Предоставляет второй операнд операции.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorMeth">
      <summary>Представляет фактически выполняемую операцию.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorTok">
      <summary>Представляет запрашиваемую операцию.One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.type1">
      <summary>Предоставляет тип данных первого операнда операции.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.type2">
      <summary>Предоставляет тип данных второго операнда операции.</summary>
    </member>
    <member name="T:Microsoft.JScript.Binding">
      <summary>Представляет ссылку на член класса, вызываемое выражение или имя переменной.Этот класс пытается разрешить ссылку на правильное значение во время компиляции.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.defaultMember">
      <summary>Хранит ссылку на индексированное свойство по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.GetObject">
      <summary>При переопределении в производном классе получает объект, для которого определена ссылка привязки.</summary>
      <returns>Объект, для которого определена ссылка привязки.</returns>
    </member>
    <member name="M:Microsoft.JScript.Binding.HandleNoSuchMemberError">
      <summary>При переопределении в производном классе разрешает ситуации, в которых ссылка привязки указывает на ненайденный член.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.isAssignmentToDefaultIndexedProperty">
      <summary>Хранит значение, позволяющее определить, указывает ли ссылка привязки на индексированное по молчанию свойство.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.isFullyResolved">
      <summary>Хранит значение, указывающее, является ли ссылка привязки полностью разрешенной.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.IsMissing(System.Object)">
      <summary>Определяет, совпадает ли указанный объект с объектом <see cref="T:Microsoft.JScript.Missing" />.</summary>
      <returns>true, если параметр <paramref name="value" /> эквивалентен <see cref="T:Microsoft.JScript.Missing" />; в противном случае — false.</returns>
      <param name="value">Объект для сравнения.</param>
    </member>
    <member name="F:Microsoft.JScript.Binding.isNonVirtual">
      <summary>Хранит значение, позволяющее определить, указывает ли ссылка привязки на член, который переопределяет член в базовом классе.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.name">
      <summary>Хранит строку, которая используется для идентификации ссылки привязки.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.ResolveRHValue">
      <summary>Разрешает правую часть ссылки привязки.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILObject(System.Reflection.Emit.ILGenerator,System.Type,System.Boolean)">
      <summary>При переопределении в производном классе создает код на языке MSIL для объекта, для которого определена ссылка привязки.</summary>
      <param name="il">Объект, создающий инструкции языка MSIL.</param>
      <param name="obtype">Тип объекта.</param>
      <param name="noValue">Значение true, если у объекта нет значения; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILWithDupOfThisOb(System.Reflection.Emit.ILGenerator)">
      <summary>При переопределении в производном классе создает код на языке MSIL для ссылки привязки.При необходимости копирует текущее верхнее значение в стеке вычислений и помещает копию в стек вычислений.</summary>
      <param name="il">Объект, создающий инструкции языка MSIL.</param>
    </member>
    <member name="T:Microsoft.JScript.BitwiseBinary">
      <summary>Выполняет битовые двоичные операции.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.BitwiseBinary.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BitwiseBinary" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащую выполнению операцию.</param>
    </member>
    <member name="M:Microsoft.JScript.BitwiseBinary.EvaluateBitwiseBinary(System.Object,System.Object)">
      <summary>Выполняет битовую двоичную операцию.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.Block">
      <summary>Представляет блок в JScript.Этот класс используется преимущественно классом <see cref="T:Microsoft.JScript.JSParser" /> для создания объектов <see cref="T:Microsoft.JScript.Block" /> в процессе анализа кода.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="T:Microsoft.JScript.BlockScope">
      <summary>Представляет область блока кода, которая входит в состав иерархии областей и может быть принудительно передана в стек глобальных областей.Например, этот класс может представлять область блока try.</summary>
    </member>
    <member name="M:Microsoft.JScript.BlockScope.#ctor(Microsoft.JScript.ScriptObject,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BlockScope" />.</summary>
      <param name="parent">Родительская область.</param>
      <param name="name">Имя области.</param>
      <param name="scopeId">Идентификатор области.</param>
    </member>
    <member name="M:Microsoft.JScript.BlockScope.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)">
      <summary>Получает новую переменную области, используя заданное имя, значение и атрибуты.</summary>
      <returns>Переменная области с заданным именем, значением и атрибутами.</returns>
      <param name="name">Имя поля.</param>
      <param name="attributeFlags">Битовая комбинация значений перечисления, определяющая атрибуты поля.</param>
      <param name="value">Значение поля.</param>
    </member>
    <member name="T:Microsoft.JScript.BooleanConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanConstructor.Invoke(System.Object)">
      <summary>Вызывает метод объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Результат вызова метода.</returns>
      <param name="arg">Аргументы для передачи в метод.</param>
    </member>
    <member name="T:Microsoft.JScript.BooleanObject">
      <summary>Представляет логический объект.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanObject.#ctor(Microsoft.JScript.ScriptObject,System.Type)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BooleanObject" />, указывая родительски класс и подтип.</summary>
      <param name="prototype">Родительский объект.</param>
      <param name="subType">Подтип объекта.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanObject.GetType">
      <summary>Returns <see cref="T:System.Boolean" /> or <see cref="T:Microsoft.JScript.BooleanObject" />.</summary>
      <returns>
        <see cref="T:System.Boolean" /> or <see cref="T:Microsoft.JScript.BooleanObject" />.</returns>
    </member>
    <member name="T:Microsoft.JScript.BooleanPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.BooleanObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.#ctor(Microsoft.JScript.ObjectPrototype,System.Type)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BooleanPrototype" />.</summary>
      <param name="parent">Статический экземпляр родительского класса данного класса.</param>
      <param name="baseType">Экземпляр типа этого класса.</param>
    </member>
    <member name="P:Microsoft.JScript.BooleanPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)">
      <summary>Создает строковое представление заданного объекта, используя класс <see cref="T:Microsoft.JScript.Convert" />.</summary>
      <returns>Строковое представление <paramref name="thisob" />, созданное классом <see cref="T:Microsoft.JScript.Convert" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)">
      <summary>Возвращает заданный объект <see cref="T:Microsoft.JScript.BooleanObject" /> или <see cref="T:System.Boolean" />.</summary>
      <returns>
        <paramref name="thisob" /> в виде объекта <see cref="T:Microsoft.JScript.BooleanObject" /> или <see cref="T:System.Boolean" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.BreakOutOfFinally">
      <summary>Представляет состояние исключения, когда выполнение кода выходит за пределы блока finally.  </summary>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BreakOutOfFinally" /> с помощью указанной целевого объекта.</summary>
      <param name="target">Целевой объект исключения.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BreakOutOfFinally" /> class, using the specified error message.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.BreakOutOfFinally" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Хранит сведения об исключении в <see cref="T:System.Runtime.Serialization.SerializationInfo" />.К числу хранимых сведений относится значение <see cref="F:Microsoft.JScript.ContinueOutOfFinally.target" />.</summary>
      <param name="s">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="c">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="F:Microsoft.JScript.BreakOutOfFinally.target">
      <summary>Хранит целевой объект исключения.</summary>
    </member>
    <member name="T:Microsoft.JScript.Closure">
      <summary>Представляет функцию закрытия.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="M:Microsoft.JScript.Closure.#ctor(Microsoft.JScript.FunctionObject)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Closure" />.</summary>
      <param name="func">Функция, которую представляет это закрытие.</param>
    </member>
    <member name="F:Microsoft.JScript.Closure.arguments">
      <summary>Используемые для функции аргументы.</summary>
    </member>
    <member name="F:Microsoft.JScript.Closure.caller">
      <summary>Сведения об области вызова из кадра стека.</summary>
    </member>
    <member name="M:Microsoft.JScript.Closure.ToString">
      <summary>Создает строковое представление функции, например имя функции или контекст.</summary>
      <returns>Строковое представление функции.</returns>
    </member>
    <member name="T:Microsoft.JScript.CmdLineError">
      <summary>Задает ошибки, которые происходят при запуске компилятора командной строки jsc.exe.Это перечисление используется для объектов <see cref="T:Microsoft.JScript.CmdLineException" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoError">
      <summary>Нет ошибки.This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.AssemblyNotFound">
      <summary>Не удалось найти сборку, на которую указывает ссылка "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.CannotCreateEngine">
      <summary>Не удается создать обработчик JScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.CompilerConstant">
      <summary>Не удается изменить значение константы компилятора "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateFileAsSourceAndAssembly">
      <summary>Дублирующееся имя файла "{0}" указано одновременно в качестве исходного файла и в качестве импортируемой сборки.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceFile">
      <summary>Файл ресурсов "{0}" упоминается несколько раз.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceName">
      <summary>Имя ресурса "{0}" не является уникальным.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateSourceFile">
      <summary>Дублирующееся имя файла "{0}" указано в качестве исходного файла несколько раз.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ErrorSavingCompiledState">
      <summary>Ошибка при сохранении скомпилированного состояния: {0}.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.IncompatibleTargets">
      <summary>Значение свойства <see cref="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable" /> несовместимо с конечным типом "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidAssembly">
      <summary>"{0}" не является допустимой сборкой.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCharacters">
      <summary>Имя файла "{0}" содержит недопустимые символы (подстановочные знаки не поддерживаются).</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCodePage">
      <summary>Кодовая страница "{0}" недопустима или не установлена.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidDefinition">
      <summary>Определению "{0}" следует присвоить логическое или целочисленное значение.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidForCompilerOptions">
      <summary>Значение "{0}" в поле CompilerOptions недопустимо.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidLocaleID">
      <summary>Код языка "{0}" недопустим или не установлен.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidPlatform">
      <summary>Платформа "{0}" недопустима.Задайте значение x86, Itanium, x64 или anycpu.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidTarget">
      <summary>Целевой объект "{0}" недопустим.Задайте exe или library.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidSourceFile">
      <summary>"{0}" не является допустимым исходным файлом.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidVersion">
      <summary>"{0}" является недопустимой строкой версии.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidWarningLevel">
      <summary>Недопустимый уровень предупреждения, заданный параметром "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ManagedResourceNotFound">
      <summary>Управляемый ресурс "{0}" не найден.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingDefineArgument">
      <summary>Отсутствует идентификатор для параметра командной строки "-define:".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingExtension">
      <summary>Отсутствует расширение файла для "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingLibArgument">
      <summary>Отсутствует спецификация файла для параметра командной строки '-lib:'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingReference">
      <summary>В списке аргументов отсутствует ссылка "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingVersionInfo">
      <summary>Отсутствуют сведения о версии в параметре -assembly.version.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleOutputNames">
      <summary>Задано несколько имен выходного файла.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleTargets">
      <summary>Задано несколько целевых объектов.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleWin32Resources">
      <summary>Не удается задать несколько файлов ресурсов Win32.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NestedResponseFiles">
      <summary>Не удается обработать вложенные файлы ответов.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoCodePage">
      <summary>Кодовая страница с параметром "{0}" не задана.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoFileName">
      <summary>Имя файла с параметром "{0}" не задано.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoInputSourcesSpecified">
      <summary>Не указаны входные источники.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoLocaleID">
      <summary>Код языка с параметром "{0}" не задан.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoWarningLevel">
      <summary>Уровень предупреждений с параметром "{0}" не задан.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ResourceNotFound">
      <summary>Ресурс Win32 "{0}" не найден.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceFileTooBig">
      <summary>Исходный файл слишком большой.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceNotFound">
      <summary>Не удалось найти исходный файл "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.UnknownOption">
      <summary>Неизвестный параметр "{0}".</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.Unspecified">
      <summary>Незаданная ошибка.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.LAST">
      <summary>Элемент перечисления прототипов, содержащий значение, совпадающее с последним (наибольшим) присвоенным значением перечисления.</summary>
    </member>
    <member name="T:Microsoft.JScript.CmdLineException">
      <summary>Представляет ошибки, которые происходят при запуске компилятора командной строки jsc.exe. </summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" />, используя заданный код ошибки и сведения о языке и региональных параметрах.</summary>
      <param name="errorCode">Одно из значений перечисления.Указывает, какая именно произошла ошибка.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.String,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" />, используя заданный код ошибки, контекст и сведения о языке и региональных параметрах.</summary>
      <param name="errorCode">Одно из значений перечисления.Указывает, какая именно произошла ошибка.</param>
      <param name="context">Контекст, в котором возникает ошибка.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" /> с помощью сериализованных данных.</summary>
      <param name="s">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="c">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" />, используя указанное сообщение об ошибке.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineException" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, вызвавшее текущее исключение, или значение NULL, если внутреннее исключение не задано.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Хранит сериализованный объект, касающийся возникшего исключения.</summary>
      <param name="s">Сериализованный объект, касающийся возникшего исключения.</param>
      <param name="c">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:Microsoft.JScript.CmdLineException.Message">
      <summary>Возвращает сообщение, которое описывает текущее исключение.</summary>
      <returns>Сообщение об ошибке, объясняющее причину исключения.</returns>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.ResourceKey(Microsoft.JScript.CmdLineError)">
      <summary>Возвращает ключ для заданной ошибки в файле ресурсов.</summary>
      <returns>Ключ для <paramref name="errorCode" />.</returns>
      <param name="errorCode">Одно из значений перечисления.Задает ошибку, для которой нужно получить ключ.</param>
    </member>
    <member name="T:Microsoft.JScript.CmdLineOptionParser">
      <summary>Проверят правильность форматирования параметра, заданного для компилятора командной строки jsc.exe и считывает аргументы при их наличии.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.CmdLineOptionParser" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String)">
      <summary>Получает аргумент из заданного параметра командной строки.Применяется к параметрам, у которых если только одно имя, таким как /out:&lt;filename&gt;.</summary>
      <returns>Аргумент, "", если аргумент не задан, или значение NULL, если параметр или аргумент неправильно отформатирован.</returns>
      <param name="option">Параметр командной строки, заданный пользователем.</param>
      <param name="prefix">Имя параметра.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String,System.String)">
      <summary>Получает аргумент из заданного параметра командной строки.Применяется к параметрам, которые можно указать с помощью короткого или длинного имени параметра, например /r или /reference для /r[eference]:&lt;file list&gt;.</summary>
      <returns>Аргумент, "", если аргумент не задан, или значение NULL, если параметр или аргумент неправильно отформатирован.</returns>
      <param name="option">Параметр командной строки, заданный пользователем.</param>
      <param name="shortPrefix">Краткая форма имени параметра.</param>
      <param name="longPrefix">Длинная форма имени параметра.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String)">
      <summary>Получает аргумент + или - из заданного параметра командной строки.Применяется к параметрам, у которых если только одно имя, таким как /debug[+|-].</summary>
      <returns>Значение false для -; значение true для + или если аргумент не задан; значение NULL, если параметр или аргумент неправильно отформатирован.</returns>
      <param name="option">Параметр командной строки, заданный пользователем.</param>
      <param name="prefix">Имя параметра.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String,System.String)">
      <summary>Получает аргумент + или - из заданного параметра командной строки.Применяется к параметрам, которые можно указать с помощью короткого или длинного имени параметра.</summary>
      <returns>Значение false для -; значение true для + или если аргумент не задан; значение NULL, если параметр или аргумент неправильно отформатирован.</returns>
      <param name="option">Параметр командной строки, заданный пользователем.</param>
      <param name="shortPrefix">Краткая форма имени параметра.</param>
      <param name="longPrefix">Длинная форма имени параметра.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsSimpleOption(System.String,System.String)">
      <summary>Проверяет, правильно ли отформатирован заданный параметр.</summary>
      <returns>Значение true, если параметр отформатирован правильно; в противном случае — значение false.</returns>
      <param name="option">Параметр командной строки, заданный пользователем.</param>
      <param name="prefix">Имя параметра.</param>
    </member>
    <member name="T:Microsoft.JScript.COMCharStream">
      <summary>Представляет поток, который отправляет свои данные в объект <see cref="T:Microsoft.JScript.IMessageReceiver" />.Данные хранятся в буфере до тех пор, пока они не будут очищены или не будет закрыт поток.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.#ctor(Microsoft.JScript.IMessageReceiver)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.COMCharStream" />.</summary>
      <param name="messageReceiver">Получатель данных потока.</param>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanRead">
      <summary>Получает значение, указывающее, поддерживает ли текущий поток чтение.</summary>
      <returns>Значение false во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanSeek">
      <summary>Получает значение, указывающее, поддерживает ли текущий поток поиск.</summary>
      <returns>Значение false во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanWrite">
      <summary>Получает значение, указывающее, поддерживает ли текущий поток запись.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Close">
      <summary>Отправляет данные потока в объект <see cref="T:Microsoft.JScript.IMessageReceiver" /> и очищает его буфер.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Flush">
      <summary>Отправляет данные потока в объект <see cref="T:Microsoft.JScript.IMessageReceiver" /> и очищает его буфер.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.Length">
      <summary>Получает длину потока.</summary>
      <returns>Длина потока.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.Position">
      <summary>Получает текущую позицию в потоке.Метод Set не выполняет никаких действий.</summary>
      <returns>Текущая позиция в потоке.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="buffer">Массив байтов, в котором хранятся данные, считанные из потока.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается сохранение данных, считанных из потока.</param>
      <param name="count">Максимальное число байтов, которое должно быть считано из потока.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Задает позицию в текущем потоке.Этот метод не выполняет никаких действий.Он всегда возвращает значение 0.</summary>
      <returns>0 во всех случаях.</returns>
      <param name="offset">Смещение в байтах относительно значения параметра <paramref name="origin" />.</param>
      <param name="origin">Значение, указывающее опорную точка, которая используется для получения новой позиции.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.SetLength(System.Int64)">
      <summary>Устанавливает длину потока.</summary>
      <param name="value">Новая длина потока.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает в этот поток указанные байтовые данные.</summary>
      <param name="buffer">Массив байтовых данных для копирования в текущий поток.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается копирование байтов в текущий поток.</param>
      <param name="count">Число байтов, копируемых из <paramref name="buffer" /> в текущий поток.</param>
    </member>
    <member name="T:Microsoft.JScript.COMFieldInfo">
      <summary>Позволяет JScript обмениваться данным с внешним COM-полем.Этот класс используется внешней COM-реализацией для представления ее объектов в JScript, поскольку JScript для привязки к внешнему объекту требуется управляемый объект <see cref="T:System.Reflection.MemberInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.COMFieldInfo" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Attributes">
      <summary>Получает атрибуты, связанные с этим полем.</summary>
      <returns>
        <see cref="F:System.Reflection.FieldAttributes.Public" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.DeclaringType">
      <summary>Получает тип, объявляющий данное поле.</summary>
      <returns>Значение NULL, поскольку тип, объявляющий это поле, является внешним COM-объектом.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldHandle">
      <summary>Во всех случаях вызывает исключение <see cref="F:Microsoft.JScript.JSError.InternalError" />.</summary>
      <returns>Во всех случаях вызывает исключение <see cref="F:Microsoft.JScript.JSError.InternalError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldType">
      <summary>Возвращает тип данного поля.</summary>
      <returns>Тип <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCOMMemberInfo">
      <summary>Получает управляемый объект, позволяющий JScript обмениваться данными с внешним COM-полем.</summary>
      <returns>Управляемый объект, позволяющий JScript обмениваться данными с внешним COM-полем.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetValue(System.Object)">
      <summary>Получает значение внешнего COM-поля, используя объект <see cref="T:Microsoft.JScript.COMMemberInfo" />, заданный в методе <see cref="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.</summary>
      <returns>Значения внешнего COM-поля.</returns>
      <param name="obj">Список аргументов, передаваемых внешнему COM-полю.Этот параметр игнорируется.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Инициализирует сведения, позволяющие JScript обмениваться данными с внешним COM-полем.</summary>
      <param name="name">Имя внешнего COM-поля, представляемого данным объектом.</param>
      <param name="dispatch">Сведения, позволяющие JScript получить доступ к внешнему COM-полю.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в это поле указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.MemberType">
      <summary>Получает тип члена, которым является данное поле.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Name">
      <summary>Получает имя внешнего COM-поля, представляемого данным объектом.</summary>
      <returns>Имя внешнего COM-поля, представляемого данным объектом.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Значение NULL, поскольку этот экземпляр не был получен путем отражения.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Задает значение внешнего COM-поля, используя объект <see cref="T:Microsoft.JScript.COMMemberInfo" />, заданный в методе <see cref="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.</summary>
      <param name="obj">Объект, для которого будет установлено значение поля.Этот параметр игнорируется.</param>
      <param name="value">Новое значения внешнего COM-члена.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="T:Microsoft.JScript.COMMemberInfo">
      <summary>Определяет методы, которые позволяют JScript обмениваться данным с внешними COM-членом.Этот интерфейс используется внешней COM-реализацией для представления ее объектов в JScript, поскольку для JScript требуется управляемый объект <see cref="T:System.Reflection.MemberInfo" />, привязываемый к внешнему объекту.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.Call(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>При реализации в классе позволяет JScript вызывать внешний COM-член.Использует заданные сведения о привязке.</summary>
      <returns>Значение для вызова внешнего COM-члена.</returns>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="arguments">Список аргументов, передаваемых внешнему COM-члену.</param>
      <param name="culture">Предоставляет сведения об определенном языке и региональных параметрах или языковом стандарте для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.GetValue(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>При реализации в классе позволяет JScript получить значение внешнего COM-члена с помощью заданных сведений о привязке.</summary>
      <returns>Значения внешнего COM-члена.</returns>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="index">Список аргументов, передаваемых внешнему COM-члену.</param>
      <param name="culture">Предоставляет сведения об определенном языке и региональных параметрах или языковом стандарте для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.SetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>При реализации в классе позволяет JScript задать новое указанное значение для внешнего COM-члена с помощью заданных сведений о привязке.</summary>
      <param name="value">Новое значения внешнего COM-члена.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="index">Список аргументов, передаваемых внешнему COM-члену.</param>
      <param name="culture">Предоставляет сведения об определенном языке и региональных параметрах или языковом стандарте для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="T:Microsoft.JScript.COMMethodInfo">
      <summary>Позволяет JScript обмениваться данным с внешним COM-методом.Этот класс используется внешней COM-реализацией для представления ее объектов в JScript, поскольку JScript для привязки к внешнему объекту требуется управляемый объект <see cref="T:System.Reflection.MemberInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.COMMethodInfo" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo._comObject">
      <summary>Хранит управляемый объект, позволяющий JScript обмениваться данными с внешним COM-методом.</summary>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo._name">
      <summary>Хранит имя внешнего COM-метода, представляемого данным объектом.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Attributes">
      <summary>Получает атрибуты, связанные с этим методом.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodAttributes.Public" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.DeclaringType">
      <summary>Получает тип, который объявляет данный метод.</summary>
      <returns>Значение NULL, поскольку тип, объявляющий этот метод, является внешним COM-объектом.</returns>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo.EmptyParams">
      <summary>Хранит массив объектов <see cref="T:System.Reflection.ParameterInfo" />, содержащий нулевые элементы.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetBaseDefinition">
      <summary>Возвращает объект <see cref="T:System.Reflection.MethodInfo" /> для метода в прямом или косвенном базовом классе, в котором он был первоначально объявлен.</summary>
      <returns>Значение this во всех случаях.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetCOMMemberInfo">
      <summary>Получает управляемый объект, позволяющий JScript обмениваться данными с внешним COM-методом.</summary>
      <returns>Управляемый объект, позволяющий JScript обмениваться данными с внешним COM-методом.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetMethodImplementationFlags">
      <summary>Возвращает сведения о реализации этого метода.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> и <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetParameters">
      <summary>Получает параметры этого внешнего COM-метода.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.ParameterInfo" />, содержащий нулевые элементы.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Инициализирует сведения, позволяющие JScript обмениваться данными с внешним COM-методом.</summary>
      <param name="name">Имя внешнего COM-метода, представляемого данным объектом.</param>
      <param name="dispatch">Сведения, позволяющие JScript получить доступ к внешнему COM-методу.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Вызывает внешний COM-метод, используя объект <see cref="T:Microsoft.JScript.COMMemberInfo" />, заданный в методе <see cref="M:Microsoft.JScript.COMMethodInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.</summary>
      <returns>Возвращаемое значение для вызова внешнего COM-метода.</returns>
      <param name="obj">Объект, для которого вызывается метод.Этот параметр игнорируется.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="parameters">Список аргументов, передаваемых внешнему COM-члену.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MemberType">
      <summary>Получает тип члена, которым является данный метод.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MethodHandle">
      <summary>Во всех случаях вызывает исключение <see cref="F:Microsoft.JScript.JSError.InternalError" />.</summary>
      <returns>Во всех случаях вызывает исключение <see cref="F:Microsoft.JScript.JSError.InternalError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Name">
      <summary>Получает имя внешнего COM-метода, представляемого данным объектом.</summary>
      <returns>Имя внешнего COM-метода, представляемого данным объектом.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Значение NULL, поскольку этот экземпляр не был получен путем отражения.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnType">
      <summary>Получает тип значения, возвращаемого этим методом.</summary>
      <returns>Значение NULL во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnTypeCustomAttributes">
      <summary>Получает настраиваемые атрибуты для типа возвращаемого этим методом значения.</summary>
      <returns>Значение NULL во всех случаях.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.ToString">
      <summary>Возвращает строку, которая представляет текущий метод.</summary>
      <returns>Пустая строка.</returns>
    </member>
    <member name="T:Microsoft.JScript.COMPropertyInfo">
      <summary>Позволяет JScript обмениваться данным с внешним COM-свойством.Этот класс используется внешней COM-реализацией для представления ее объектов в JScript, поскольку JScript для привязки к внешнему объекту требуется управляемый объект <see cref="T:System.Reflection.MemberInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.COMPropertyInfo" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Attributes">
      <summary>Получает атрибуты, связанные с этим свойством.</summary>
      <returns>
        <see cref="F:System.Reflection.PropertyAttributes.None" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanRead">
      <summary>Получает значение, указывающее, можно ли выполнить считывание данного свойства.</summary>
      <returns>Значение true во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanWrite">
      <summary>Получает значение, указывающее, можно ли выполнять запись в данное свойство.</summary>
      <returns>Значение true во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.DeclaringType">
      <summary>Получает тип, который объявляет данное свойство.</summary>
      <returns>Значение NULL, поскольку тип, объявляющий это свойство, является внешним COM-объектом.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetAccessors(System.Boolean)">
      <summary>Получает массив, элементы которого содержат методы Get и Set для доступа к внешнему COM-свойству, которое представляет данный объект.</summary>
      <returns>Массив, состоящий из двух объектов <see cref="T:System.Reflection.MethodInfo" />, которые содержат методы Get и Set данного свойства.</returns>
      <param name="nonPublic">Значение true для включения закрытых методов доступа.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCOMMemberInfo">
      <summary>Получает управляемый объект, позволяющий JScript обмениваться данными с внешним COM-свойством.</summary>
      <returns>Управляемый объект, позволяющий JScript обмениваться данными с внешним COM-свойством.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это свойство.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это свойство, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetGetMethod(System.Boolean)">
      <summary>Возвращается метод доступа Get для данного свойства.</summary>
      <returns>Метод доступа Get для данного свойства.</returns>
      <param name="nonPublic">Значение true для включения закрытых методов доступа.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetIndexParameters">
      <summary>Возвращает массив, содержащий все индексные параметры данного свойства.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.ParameterInfo" />, содержащий нулевые элементы.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetSetMethod(System.Boolean)">
      <summary>Возвращается метод доступа set для данного свойства.</summary>
      <returns>Метод доступа Set для данного свойства.</returns>
      <param name="nonPublic">Значение true для включения закрытых методов доступа.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Получает значение внешнего COM-свойства, используя объект <see cref="T:Microsoft.JScript.COMMemberInfo" />, заданный в методе <see cref="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.</summary>
      <returns>Значения внешнего COM-свойства.</returns>
      <param name="obj">Объект, значение свойства которого нужно получить.Этот параметр игнорируется.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="index">Список аргументов, передаваемых внешнему COM-свойству.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Инициализирует сведения, позволяющие JScript обмениваться данными с внешним COM-свойством.</summary>
      <param name="name">Имя внешнего COM-свойства, представляемого данным объектом.</param>
      <param name="dispatch">Сведения, позволяющие JScript получить доступ к внешнему COM-свойству.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в это свойство указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.MemberType">
      <summary>Получает тип члена, которым объявлен данное свойство.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Property" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.PropertyInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Name">
      <summary>Получает имя внешнего COM-свойства, представляемого данным объектом.</summary>
      <returns>Имя внешнего COM-свойства, представляемого данным объектом.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.PropertyType">
      <summary>Возвращает тип свойства.</summary>
      <returns>Тип <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Значение NULL, поскольку этот экземпляр не был получен путем отражения.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Задает значение внешнего COM-свойства, используя объект <see cref="T:Microsoft.JScript.COMMemberInfo" />, заданный в методе <see cref="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.</summary>
      <param name="obj">Объект, значение свойства которого будет установлено.Этот параметр игнорируется.</param>
      <param name="value">Новое значения внешнего COM-члена.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="index">Список аргументов, передаваемых внешнему COM-свойству.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="T:Microsoft.JScript.Context">
      <summary>Представляет исходный код JScript.Этот класс принадлежит к категории состояний компиляции и времени выполнения.</summary>
    </member>
    <member name="P:Microsoft.JScript.Context.EndColumn">
      <summary>Получает номер столбца в строке, в котором заканчивается этот код.При этом учитывается пробел в начале строки.</summary>
      <returns>Номер столбца, в котором заканчивается этот код.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.EndLine">
      <summary>Получает номер конечной строки этого кода.</summary>
      <returns>Номер конечной строки этого кода.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.EndPosition">
      <summary>Получает позицию в текстовой строке кода, в которой заканчивает этот код, поскольку все строки кода хранятся в одной текстовой строке.</summary>
      <returns>Позиция в текстовой строке кода, в которой заканчивается этот код.</returns>
    </member>
    <member name="M:Microsoft.JScript.Context.GetCode">
      <summary>Получает код, содержащийся в контексте, отбрасывает все пробелы.</summary>
      <returns>Код, содержащийся в контексте.</returns>
    </member>
    <member name="M:Microsoft.JScript.Context.GetToken">
      <summary>Получает отдельный блок кода, или маркер, содержащийся в контексте.</summary>
      <returns>Отдельный блок кода, или маркер, содержащийся в контексте.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartColumn">
      <summary>Получает номер столбца в строке, в котором начинается этот код.При этом учитывается пробел в начале строки.</summary>
      <returns>Номер столбца, в котором начинается этот код.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartLine">
      <summary>Получает номер строки, в которой начинается этот код.</summary>
      <returns>Номер строки, в которой начинается этот код.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartPosition">
      <summary>Получает позицию в текстовой строке кода, с которой начинается этот код, поскольку все строки кода хранятся в одной текстовой строке.</summary>
      <returns>Позиция в текстовой строке кода, с которой начинает этот код.</returns>
    </member>
    <member name="T:Microsoft.JScript.ContinueOutOfFinally">
      <summary>Представляет состояние исключения, когда выполнение кода продолжается вне блока finally.  </summary>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ContinueOutOfFinally" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ContinueOutOfFinally" /> с помощью указанной целевого объекта.</summary>
      <param name="target">Целевой объект исключения.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ContinueOutOfFinally" />, используя указанное сообщение об ошибке.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ContinueOutOfFinally" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Хранит сведения об исключении в <see cref="T:System.Runtime.Serialization.SerializationInfo" />.К числу хранимых сведений относится значение <see cref="F:Microsoft.JScript.ContinueOutOfFinally.target" />.</summary>
      <param name="s">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="c">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="F:Microsoft.JScript.ContinueOutOfFinally.target">
      <summary>Хранит целевой объект исключения.</summary>
    </member>
    <member name="T:Microsoft.JScript.Convert">
      <summary>Преобразует данные одного типа в другой.Это служебный класс.</summary>
    </member>
    <member name="M:Microsoft.JScript.Convert.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Convert" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)">
      <summary>Determines whether a <see cref="T:System.Double" /> variable contains an integer value.</summary>
      <returns>Если параметр <paramref name="d" /> содержит целочисленное значение, возвращается значение <paramref name="d" />.В противном случае выдается исключение.</returns>
      <param name="d">Значение типа <see cref="T:System.Double" /> для проверки.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)">
      <summary>Определяет, содержит ли переменная типа <see cref="T:System.Single" /> целочисленное значение.</summary>
      <returns>Если параметр <paramref name="s" /> содержит целочисленное значение, возвращается значение <paramref name="s" />.В противном случае выдается исключение.</returns>
      <param name="s">Значение типа <see cref="T:System.Single" /> для проверки.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.Coerce(System.Object,System.Object)">
      <summary>Преобразовывает заданное значение в значение указанного типа.</summary>
      <returns>Параметр <paramref name="value" />, преобразовываемый в значение типа <paramref name="type" />.</returns>
      <param name="value">Значение, которое нужно преобразовать в значение нового типа.</param>
      <param name="type">Тип, в который преобразуется параметр <paramref name="value" />.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)">
      <summary>Преобразовывает заданное значение в значение <see cref="T:System.TypeCode" />, при необходимости допуская потерю данных.</summary>
      <returns>Значение <paramref name="value" />, которое преобразуется в значение типа <paramref name="target" />.</returns>
      <param name="value">Значение, которое нужно преобразовать в значение нового типа.</param>
      <param name="target">The type to convert <paramref name="value" /> to.</param>
      <param name="truncationPermitted">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)">
      <summary>Converts the specified value to the specified <see cref="T:System.Type" />, optionally allowing data loss.</summary>
      <returns>Значение <paramref name="value" />, которое преобразуется в значение типа <paramref name="t" />.</returns>
      <param name="value">Значение, которое нужно преобразовать в значение нового типа.</param>
      <param name="t">The type to convert <paramref name="value" /> to.</param>
      <param name="explicitOK">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)">
      <summary>Определяет, содержит ли переменная значение индекса массива.</summary>
      <returns>Значение true, если параметр <paramref name="ast" /> содержит значение индекса массива, в противном случае — значение false.</returns>
      <param name="ast">Тестируемая переменная.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)">
      <summary>Во всех случаях создает исключение <see cref="T:Microsoft.JScript.JScriptException" />.</summary>
      <param name="val">Исходный код, вызвавший исключение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>Значение false, если параметр <paramref name="d" /> равен 0; в противном случае — значение true.</returns>
      <param name="d">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object)">
      <summary>Converts the specified <see cref="T:System.Object" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Boolean" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)">
      <summary>Преобразовывает заданное значение в значение <see cref="T:System.Object" /> в структуру <see cref="T:System.Boolean" />, при необходимости допуская потерю данных.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Boolean" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="explicitConversion">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Преобразует заданное значение в значение типа <see cref="T:System.Object" />, представляющее коллекцию объектов <see cref="T:Microsoft.JScript.AST" />.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToInt32(System.Object)">
      <summary>Converts the specified value to an <see cref="T:System.Int32" />.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Int32" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)">
      <summary>Преобразует указанный объект <see cref="T:Microsoft.JScript.ArrayObject" /> в значение типа <see cref="T:System.Array" />.</summary>
      <returns>Значение <paramref name="value" />, преобразованное в массив <see cref="T:System.Array" />, если это возможно; в противном случае — значение <paramref name="value" />.</returns>
      <param name="value">The <see cref="T:Microsoft.JScript.ArrayObject" /> to convert. </param>
      <param name="handle">Тип элементов массива.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.Object)">
      <summary>Converts the specified <see cref="T:System.Object" /> to a <see cref="T:System.Double" />.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Double" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.Double" />.</summary>
      <returns>
        <paramref name="str" /> converted to a <see cref="T:System.Double" />.</returns>
      <param name="str">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts the specified value to an <see cref="T:System.Object" />.Выдает ошибку, если не удается выполнить преобразование.</summary>
      <returns>Значение <paramref name="value" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts the specified value to an <see cref="T:System.Object" />.Возвращает значение NULL, если не удается выполнить преобразование.</summary>
      <returns>Значение <paramref name="value" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Boolean)">
      <summary>Converts the specified <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <paramref name="b" /> converted to a <see cref="T:System.String" />.</returns>
      <param name="b">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <paramref name="d" /> converted to a <see cref="T:System.String" />.</returns>
      <param name="d">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)">
      <summary>Преобразовывает заданное значение типа <see cref="T:System.Object" /> в значение типа <see cref="T:System.String" />, при необходимости допуская потерю данных.</summary>
      <returns>Значение <paramref name="value" />, преобразовываемое в структуру <see cref="T:System.String" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="explicitOK">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="T:Microsoft.JScript.DateConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.Invoke">
      <summary>Возвращает количество миллисекунд, истекших с 1 января 1970 года.</summary>
      <returns>Количество миллисекунд, истекших с 1 января 1970 года.</returns>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.parse(System.String)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент в формате <see cref="T:System.Double" />.</summary>
      <returns>Эквивалент в формате <see cref="T:System.Double" /> для даты и времени, который содержится в параметре <paramref name="str" />.</returns>
      <param name="str">Строка, содержащая дату и время, которые нужно преобразовать.</param>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Преобразует заданную дату и время в их эквивалент в формате <see cref="T:System.Double" />.</summary>
      <returns>Эквивалент в формате <see cref="T:System.Double" /> для заданной даты и времени.</returns>
      <param name="year">Подлежащий преобразованию год даты и времени.</param>
      <param name="month">Подлежащий преобразованию месяц даты и времени.</param>
      <param name="date">Подлежащая преобразованию дата даты и времени.</param>
      <param name="hours">Подлежащие преобразованию часы даты и времени.</param>
      <param name="minutes">Подлежащие преобразованию минуты даты и времени.</param>
      <param name="seconds">Подлежащие преобразованию секунды даты и времени.</param>
      <param name="ms">Подлежащие преобразованию миллисекунды даты и времени.</param>
    </member>
    <member name="T:Microsoft.JScript.DateObject">
      <summary>Представляет объект даты.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="T:Microsoft.JScript.DatePrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.DateObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.DatePrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getDate(System.Object)">
      <summary>Получает значение даты заданного объекта <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение даты в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getDay(System.Object)">
      <summary>Получает значение дня недели в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение дня недели в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)">
      <summary>Получает значение года заданного объекта <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение года в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getHours(System.Object)">
      <summary>Получает значение часов в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение часов в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)">
      <summary>Получает значение миллисекунд заданного объекта <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение миллисекунд в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)">
      <summary>Получает значение минут в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение минут в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)">
      <summary>Получает значение месяца в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение месяца в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)">
      <summary>Получает значение секунд в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение секунд в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getTime(System.Object)">
      <summary>Получает значение времени в заданном объекте <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение времени в параметре <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)">
      <summary>Получает смещение заданного объекта <see cref="T:Microsoft.JScript.DateObject" /> от времени в формате UTC.</summary>
      <returns>Разность между значением параметра <paramref name="thisob" /> и временем в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)">
      <summary>Получает значение даты заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение даты <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)">
      <summary>Получает значение дня недели заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение дня недели в параметре <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)">
      <summary>Получает значение года заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение года <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)">
      <summary>Получает значение часов заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение часов <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)">
      <summary>Получает значение миллисекунд заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение миллисекунд <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)">
      <summary>Получает значение минут заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение минут <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)">
      <summary>Получает значение месяца заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение месяца <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)">
      <summary>Получает значение секунд заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение секунд <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)">
      <summary>Возвращает указанный объект <see cref="T:Microsoft.JScript.DateObject" /> в виде объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Значение параметра <paramref name="thisob" />, представленное в виде объекта <see cref="T:System.DateTime" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getYear(System.Object)">
      <summary>Получает значение года заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, выраженное в формате времени UTC.</summary>
      <returns>Значение года <paramref name="thisob" />, выраженное в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)">
      <summary>Задает значение даты в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным указанному значению даты.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="ddate">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)">
      <summary>Устанавливает значение года в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению года.</summary>
      <returns>Значение года, заданное для параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dyear">Значение года, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="month">Значение месяца, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="date">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)">
      <summary>Устанавливает значение часов в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению часов.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dhour">Значение часов, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="min">Значение минут, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="sec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)">
      <summary>Устанавливает значение миллисекунд в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению миллисекунд.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmsec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)">
      <summary>Устанавливает значение минут в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению минут.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmin">Значение минут, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="sec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)">
      <summary>Устанавливает значение месяца в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению месяца.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmonth">Значение месяца, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="date">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)">
      <summary>Устанавливает значение секунд в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению секунд.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dsec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)">
      <summary>Задает значение времени в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным указанному значению времени.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="time">Значение времени, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)">
      <summary>Устанавливает значение даты объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению даты, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="ddate">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)">
      <summary>Устанавливает значение года объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению года, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dyear">Значение года, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="month">Значение месяца, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="date">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)">
      <summary>Устанавливает значение часов объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению часов, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dhour">Значение часов, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="min">Значение минут, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="sec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)">
      <summary>Устанавливает значение миллисекунд объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению миллисекунд, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmsec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)">
      <summary>Устанавливает значение минут объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению минут, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmin">Значение минут, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="sec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)">
      <summary>Устанавливает значение месяца объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению месяца, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dmonth">Значение месяца, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="date">Значение даты, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)">
      <summary>Устанавливает значение секунд объекта <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению секунд, выраженному в формате времени UTC.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как значение будет задано в формате UTC.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dsec">Значение секунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
      <param name="msec">Значение миллисекунд, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)">
      <summary>Устанавливает значение года в объекте <see cref="T:Microsoft.JScript.DateObject" /> равным заданному значению года.</summary>
      <returns>Новое значение параметра <paramref name="thisob" /> после того, как будет задано значение.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dyear">Значение года, которое нужно задать для параметра <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее день недели, месяц, дату и год.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее день недели, месяц, дату, год и время, выраженные в формате UTC.По возможности, вместо него следует использовать метод <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" />.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее дату, но не содержащее время.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее дату и время.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее время, но не содержащее дату.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее день недели, месяц, дату, время часовой пояс и год.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее время и часовой пояс.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)">
      <summary>Создает строковое представление заданного объекта <see cref="T:Microsoft.JScript.DateObject" />, содержащее день недели, месяц, дату, год и время, выраженные в формате UTC.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)">
      <summary>Returns the value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>Значение <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.DebugBreak">
      <summary>Этот класс используется средством синтаксического анализа JScript для представления точки останова в отладчике.</summary>
    </member>
    <member name="T:Microsoft.JScript.DebugConvert">
      <summary>Преобразует данные одного типа в другой.Включает методы, преобразующие значения в объекты типа <see cref="T:System.String" />, чтобы их можно было отобразить в отладчике.</summary>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.DebugConvert" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Boolean" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строка литерала true или строка литерала false.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Byte" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Decimal" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)">
      <summary>Создает строковое представление заданного значения типа <see cref="T:System.Double" />.Строковое представление содержит день недели, месяц, дату, время часовой пояс и год.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToString(System.Double)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Double" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)">
      <summary>Получает сообщение об ошибке, созданное на основе значения свойства <see cref="P:System.Exception.HResult" /> и объекта <see cref="T:System.Globalization.CultureInfo" /> заданного объекта <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</summary>
      <returns>Локализованная строка, содержащая сведения об ошибке.</returns>
      <param name="hr">Код ошибки HRESULT.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)">
      <summary>Создает управляемый объект с заданным значением примитива типа <see cref="T:System.Char" />.</summary>
      <returns>Значение <paramref name="i" /> приведенное к типу <see cref="T:System.Char" />, а затем к типу <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)">
      <summary>Создает управляемый объект с заданным значением примитива типа <see cref="T:System.Int64" />.</summary>
      <returns>Значение <paramref name="i" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)">
      <summary>Создает управляемый объект с заданным значением примитива.</summary>
      <returns>Значение <paramref name="value" />, преобразованное в управляемый объект <see cref="T:System.Object" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)">
      <summary>Создает управляемый объект с заданным значением примитива типа <see cref="T:System.UInt64" />.</summary>
      <returns>Значение <paramref name="i" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Int16" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Int32" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Int64" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Преобразует заданные сведения о регулярном выражении в формат <see cref="T:System.String" />.</summary>
      <returns>Строковое представление сведений о регулярном выражении.</returns>
      <param name="source">Шаблон регулярного выражения для сопоставления.</param>
      <param name="ignoreCase">Значение true, чтобы сопоставление выполняется без учета регистра; в противном случае — значение false.</param>
      <param name="global">Значение true, для использования глобального сопоставления, в противном случае — значение false.</param>
      <param name="multiline">Значение true, для использования многократного сопоставления, в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.SByte" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.SingleToString(System.Single)">
      <summary>Преобразовывает указанное значение <see cref="T:System.Single" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.StringToPrintable(System.String)">
      <summary>Преобразует заданное значение типа <see cref="T:System.String" /> в значение типа <see cref="T:System.String" />, содержащее escape-символ и вместо непечатаемых символов.</summary>
      <returns>Строковое представление параметра <paramref name="source" />, содержащее escape-символ и.</returns>
      <param name="source">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)">
      <summary>Преобразовывает заданное значение в значение <see cref="T:System.TypeCode" />, при необходимости допуская потерю данных.</summary>
      <returns>Значение <paramref name="value" />, которое преобразуется в значение типа <paramref name="typeCode" />.</returns>
      <param name="value">Значение, которое нужно преобразовать в значение нового типа.</param>
      <param name="typeCode">Тип, в который преобразуется параметр <paramref name="value" />.</param>
      <param name="truncationPermitted">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.UInt16" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.UInt32" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)">
      <summary>Преобразовывает указанное значение <see cref="T:System.UInt64" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="T:Microsoft.JScript.DocumentContext">
      <summary>Представляет файл исходного кода, написанного на языке JScript.</summary>
    </member>
    <member name="T:Microsoft.JScript.DynamicFieldInfo">
      <summary>Представляет сведения о поле.Этот класс используется для возврата отладчику полей классов expando и массивов скрипта.</summary>
    </member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.DynamicFieldInfo" />, используя указанное имя и значение.</summary>
      <param name="name">Имя поля.</param>
      <param name="value">Значение поля.</param>
    </member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object,System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.DynamicFieldInfo" />, используя указанное имя, значение и тип.</summary>
      <param name="name">Имя поля.</param>
      <param name="value">Значение поля.</param>
      <param name="fieldTypeName">Тип поля.</param>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.fieldTypeName">
      <summary>Тип поля.</summary>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.name">
      <summary>Имя поля.</summary>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.value">
      <summary>Значение поля.</summary>
    </member>
    <member name="T:Microsoft.JScript.Empty">
      <summary>Представляет значение переменной, для которой не был создан экземпляр.</summary>
    </member>
    <member name="F:Microsoft.JScript.Empty.Value">
      <summary>Задает значение переменной, для которой не был создан экземпляр.</summary>
    </member>
    <member name="T:Microsoft.JScript.EndOfFile">
      <summary>Этот класс используется средством синтаксического анализа JScript для представления достижения конца файла как исключения.Код может выбрасывать эту ошибку для остановки работы средства синтаксического анализа.</summary>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.Invoke">
      <summary>Возвращает значение NULL во всех случаях.</summary>
      <returns>NULL.</returns>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorObject">
      <summary>Представляет объект перечислителя.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="F:Microsoft.JScript.EnumeratorObject.enumerator">
      <summary>Содержит перечислитель, представленный классом <see cref="T:Microsoft.JScript.EnumeratorObject" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorObject.LoadObject">
      <summary>Перемещает перечислитель к следующему элементу в коллекции и сохраняет ссылку на текущий элемент в коллекции.</summary>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.EnumeratorObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)">
      <summary>Определяет, передал ли перечислитель последний элемент коллекции.</summary>
      <returns>Значение true, если перечислитель передал последний элемент коллекции; в противном случае — значение false.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="P:Microsoft.JScript.EnumeratorPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)">
      <summary>Возвращает текущий элемент в коллекции.</summary>
      <returns>Текущий элемент в наборе.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)">
      <summary>Перемещает перечислитель в исходное положение перед первым элементом в коллекции.</summary>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)">
      <summary>Перемещает перечислитель на следующий элемент коллекции.</summary>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.Equality">
      <summary>Выполняет операции сравнения.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Equality.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Equality" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащее выполнению сравнение.</param>
    </member>
    <member name="M:Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)">
      <summary>Выполняет операцию сравнения.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="M:Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)">
      <summary>Выполняет операцию сравнения.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.ErrorConstructor.Invoke(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorObject">
      <summary>Представляет объект ошибки.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.description">
      <summary>Задает сообщение, объясняющее причину ошибки.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.message">
      <summary>Задает сообщение, объясняющее причину ошибки.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.number">
      <summary>Задает номер или код ошибки.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.op_Explicit(Microsoft.JScript.ErrorObject)~System.Exception">
      <summary>Явным образом преобразует объект <see cref="T:Microsoft.JScript.ErrorObject" /> в объект <see cref="T:System.Exception" />.</summary>
      <returns>The converted <see cref="T:Microsoft.JScript.ErrorObject" />.</returns>
      <param name="err">The object to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.ToException(Microsoft.JScript.ErrorObject)">
      <summary>Неявным образом преобразует объект <see cref="T:Microsoft.JScript.ErrorObject" /> в объект <see cref="T:System.Exception" />.</summary>
      <returns>The converted <see cref="T:Microsoft.JScript.ErrorObject" />.</returns>
      <param name="err">The object to convert.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.ErrorObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.ErrorPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="F:Microsoft.JScript.ErrorPrototype.name">
      <summary>Определяет имя типа ошибки.Возможные значения: Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError и URIError.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />, содержащее имя типа объекта ошибки и сообщение об ошибке при его наличии.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorType">
      <summary>Задает типы ошибок JScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.OtherError">
      <summary>Ошибка, не принадлежащая к типам "других ошибок".Это значение по умолчанию.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.EvalError">
      <summary>Ошибка Метод eval (JScript).Соответствует объекту <see cref="T:Microsoft.JScript.EvalErrorObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.RangeError">
      <summary>Ошибка диапазона.Соответствует объекту <see cref="T:Microsoft.JScript.RangeErrorObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.ReferenceError">
      <summary>Ошибка ссылки.Соответствует объекту <see cref="T:Microsoft.JScript.ReferenceErrorObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.SyntaxError">
      <summary>Синтаксическая ошибка.Соответствует объекту <see cref="T:Microsoft.JScript.SyntaxErrorObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.TypeError">
      <summary>Ошибка типа.Соответствует объекту <see cref="T:Microsoft.JScript.TypeErrorObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.URIError">
      <summary>Ошибка универсального кода ресурса (URI).Соответствует объекту <see cref="T:Microsoft.JScript.URIErrorObject" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.Eval">
      <summary>Оценивает код JScript.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Оценивает заданный код JScript с помощью заданного обработчика.</summary>
      <returns>Результат оценки.Если значение параметра <paramref name="source" /> не является строкой, то возвращаемое значение равно <paramref name="source" />.</returns>
      <param name="source">Подлежащий оценке код.</param>
      <param name="engine">Ссылка на обработчик скриптов, используемый для оценки <paramref name="source" />.</param>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Оценивает заданный код JScript с помощью заданного обработчика и параметра безопасности.</summary>
      <returns>Результат оценки.Если значение параметра <paramref name="source" /> не является строкой, то возвращаемое значение равно <paramref name="source" />.</returns>
      <param name="source">Подлежащий оценке код.</param>
      <param name="unsafeOption">Строковый литерал unsafe для включения небезопасной оценки; в противном случае — значение false.</param>
      <param name="engine">Ссылка на обработчик скриптов, используемый для оценки <paramref name="source" />.</param>
    </member>
    <member name="T:Microsoft.JScript.EvalErrorObject">
      <summary>Представляет ошибки, которые происходят при использовании метода eval.Дополнительные сведения см. в разделе Метод eval (JScript).</summary>
    </member>
    <member name="T:Microsoft.JScript.Expando">
      <summary>Указывает, что класс или метод является классом или методом expando.</summary>
    </member>
    <member name="M:Microsoft.JScript.Expando.#ctor">
      <summary>Инициализирует новый экземпляр атрибутов <see cref="T:Microsoft.JScript.Expando" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.FieldAccessor">
      <summary>Представляет метод доступа к полю.</summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.FieldAccessor" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.GetValue(System.Object)">
      <summary>При переопределении в производном классе получает значение поля для заданного объекта.</summary>
      <returns>Значение поля для параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.SetValue(System.Object,System.Object)">
      <summary>При переопределении в производном классе устанавливает указанное значение поля для заданного объекта.</summary>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="value">Значение, которое нужно задать для поля.</param>
    </member>
    <member name="T:Microsoft.JScript.ForIn">
      <summary>Представляет оператор JScript for...in.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.ForIn.JScriptGetEnumerator(System.Object)">
      <summary>Возвращает перечислитель, выполняющий итерацию по заданной коллекции.</summary>
      <returns>Перечислитель, осуществляющий итерацию по коллекции <paramref name="coll" />.</returns>
      <param name="coll">Коллекция, для которой необходимо получить перечислитель.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.Invoke(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionDeclaration">
      <summary>Представляет объявление функции.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionDeclaration.JScriptFunctionDeclaration(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает новую функцию закрытия, используя заданные сведения.</summary>
      <returns>Новая функция закрытия, представляющая объявление функции.</returns>
      <param name="handle">Дескриптор для типа функции.</param>
      <param name="name">Имя функции.</param>
      <param name="method_name">Имя функции.</param>
      <param name="formal_parameters">Параметры функции.</param>
      <param name="fields">Поля функции.</param>
      <param name="must_save_stack_locals">Значение true для сохранения локальных переменных стека.Это важно для вложенной функции, которая обращается к одной из ее локальных переменных, или для оператора eval.</param>
      <param name="hasArgumentsObject">Значение true, если у функции есть массив параметров.</param>
      <param name="text">Текст объявления функции.</param>
      <param name="declaringObject">Получает тип, который объявляет данный метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionExpression">
      <summary>Представляет объект функции.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionExpression.JScriptFunctionExpression(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает новый объект функции, используя заданные сведения.</summary>
      <returns>Новый объект функции.</returns>
      <param name="handle">Дескриптор для типа функции.</param>
      <param name="name">Имя функции.</param>
      <param name="method_name">Имя функции.</param>
      <param name="formal_params">Параметры функции.</param>
      <param name="fields">Поля функции.</param>
      <param name="must_save_stack_locals">Значение true для сохранения локальных переменных стека.Это важно для вложенной функции, которая обращается к одной из ее локальных переменных, или для оператора eval.</param>
      <param name="hasArgumentsObject">Значение true, если у функции есть массив параметров.</param>
      <param name="text">Текст объявления функции.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionObject">
      <summary>Представляет объект функции. </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionObject.ToString">
      <summary>Возвращает строковое представление объекта функции.</summary>
      <returns>Строковое представление этого объекта функции, содержащее текст функции.</returns>
    </member>
    <member name="T:Microsoft.JScript.FunctionPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.FunctionObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)">
      <summary>Вызывает функцию, которую представляет этот объект, преобразовывая заданный объект аргумента в массив аргументов, если это необходимо.</summary>
      <returns>Возвращаемое значение для вызова функции, которую представляет данный объект.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="thisarg">Текущая область по умолчанию.Объект, в котором содержится область оператора with, или глобальная область.</param>
      <param name="argArray">Аргументы, передаваемые функции в виде объекта <see cref="T:Microsoft.JScript.ArgumentsObject" /> или <see cref="T:Microsoft.JScript.ArrayObject" />.</param>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])">
      <summary>Вызывает функцию, которую предоставляет этот объект.</summary>
      <returns>Возвращаемое значение для вызова функции, которую представляет данный объект.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="thisarg">Текущая область по умолчанию.Объект, в котором содержится область оператора with, или глобальная область.</param>
      <param name="args">Аргументы, передаваемые функции в виде массива.</param>
    </member>
    <member name="P:Microsoft.JScript.FunctionPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />, содержащего имя функции.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionWrapper">
      <summary>Привязывает члены функции к объекту. </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionWrapper.ToString">
      <summary>Создает строковое представление функции.</summary>
      <returns>Строковое представление функции, содержащее источник функции, ее члены и имя.</returns>
    </member>
    <member name="T:Microsoft.JScript.GlobalObject">
      <summary>Хранит константы, сведения о типе данных, служебные функции и ссылки на объекты на основе прототипа.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ActiveXObject">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Array">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.boolean">
      <summary>Получает управляемый тип, соответствующий типу данных JScript boolean.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript boolean.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Boolean">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.byte">
      <summary>Получает управляемый тип, соответствующий типу данных JScript byte.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript byte.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.char">
      <summary>Получает управляемый тип, соответствующий типу данных JScript char.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript char.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.CollectGarbage">
      <summary>Вызывает сборщик мусора.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Date">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.decimal">
      <summary>Получает управляемый тип, соответствующий типу данных JScript decimal.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript decimal.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)">
      <summary>Декодирует заданный универсальный код ресурса (URI), учитывая зарезервированные символы.</summary>
      <returns>Декодированная версия параметра <paramref name="encodedURI" />.</returns>
      <param name="encodedURI">Декодируемый код URI.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)">
      <summary>Декодирует указанный универсальный код ресурса (URI).</summary>
      <returns>Декодированная версия параметра <paramref name="encodedURI" />.</returns>
      <param name="encodedURI">Декодируемый код URI.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.double">
      <summary>Получает управляемый тип, соответствующий типу данных JScript double.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript double.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)">
      <summary>Кодирует заданный универсальный код ресурса (URI), учитывая зарезервированные символы.</summary>
      <returns>Кодированная версия параметра <paramref name="uri" />.</returns>
      <param name="uri">Идентификатор объекта, подлежащий кодированию.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)">
      <summary>Кодирует указанный универсальный код ресурса (URI).</summary>
      <returns>Кодированная версия параметра <paramref name="uriComponent" />.</returns>
      <param name="uriComponent">Идентификатор объекта, подлежащий кодированию.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Enumerator">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Error">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.escape(System.Object)">
      <summary>Преобразует заданную строку для использования знака % в качестве escape-символа для преобразования зарезервированных символов (@, *, _, +, -, ., /) и представления их в формате Юникода.</summary>
      <returns>Новая копия <paramref name="string" />, в которой зарезервированные символы преобразуются в escape-символ % и представляются в формате Юникода.</returns>
      <param name="string">Преобразуемая строка.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.eval(System.Object)">
      <summary>Throws an <see cref="F:Microsoft.JScript.JSError.IllegalEval" /> exception in all cases.</summary>
      <returns>Во всех случаях вызывает исключение <see cref="F:Microsoft.JScript.JSError.IllegalEval" />.</returns>
      <param name="x">The expression to evaluate.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.EvalError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.float">
      <summary>Получает управляемый тип, соответствующий типу данных JScript float.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript float.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Function">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)">
      <summary>Создает управляемый объект на основе неуправляемого объекта, используя моникер или идентификатор ProgID.</summary>
      <returns>Управляемый объект.</returns>
      <param name="moniker">Моникер объекта.</param>
      <param name="progId">Идентификатор ProgID объекта.</param>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.Infinity">
      <summary>Представляет плюс бесконечность.Это поле является константой.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.int">
      <summary>Получает управляемый тип, соответствующий типу данных JScript int.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript int.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)">
      <summary>Определяет, представляет ли заданное число бесконечность.</summary>
      <returns>Значение true, если параметр <paramref name="number" /> не является ни <see cref="F:System.Double.NaN" />, ни <see cref="F:System.Double.PositiveInfinity" />, ни <see cref="F:System.Double.NegativeInfinity" />; в противном случае — значение false.</returns>
      <param name="number">Проверяемое число.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)">
      <summary>Определяет, можно ли преобразовать заданное число в число JScript.</summary>
      <returns>Значение true, если параметр <paramref name="num" /> можно преобразовать в число JScript; в противном случае — значение false.</returns>
      <param name="num">Проверяемое число.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.long">
      <summary>Получает управляемый тип, соответствующий типу данных JScript long.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript long.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Math">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.MathObject" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.MathObject" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.NaN">
      <summary>Представляет значение, не являющееся числом (NaN).This field is constant.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Number">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Object">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalActiveXObjectField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalArrayField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalBooleanField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalDateField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEnumeratorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEvalErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalFunctionField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalNumberField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectPrototypeField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ObjectPrototype" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRangeErrorField">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalReferenceErrorField">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRegExpField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalStringField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalSyntaxErrorField">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalTypeErrorField">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalURIErrorField">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalVBArrayField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)">
      <summary>Преобразует заданную строку в равнозначную ей <see cref="T:System.Double" />.</summary>
      <returns>Значение эквивалентное значению, которое содержится в параметре <paramref name="string" />.</returns>
      <param name="string">Преобразуемая строка.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)">
      <summary>Преобразует заданную строку в равнозначное ей значение типа <see cref="T:System.Double" />, используя указанное основание.</summary>
      <returns>Значение, эквивалентное значению, которое содержится в параметре <paramref name="string" />.</returns>
      <param name="string">Преобразуемая строка.</param>
      <param name="radix">A number between 2 and 36 that represents the base of the number system that <paramref name="string" /> is expressed in.The default is 10.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.RangeError">
      <summary>Возвращает ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ReferenceError">
      <summary>Возвращает ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.RegExp">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.sbyte">
      <summary>Получает управляемый тип, соответствующий типу данных JScript sbyte.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript sbyte.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngine">
      <summary>Получает имя обработчика скриптов.</summary>
      <returns>Строковый литерал JScript.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion">
      <summary>Получает номер построения обработчика скриптов.</summary>
      <returns>Номер построения обработчика скриптов.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion">
      <summary>Получает основной номер версии обработчика скриптов.</summary>
      <returns>Основной номер версии обработчика скриптов.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion">
      <summary>Получает дополнительный номер версии обработчика скриптов.</summary>
      <returns>Дополнительный номер версии обработчика скриптов.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.short">
      <summary>Получает управляемый тип, соответствующий типу данных JScript short.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript short.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.String">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.SyntaxError">
      <summary>Возвращает ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.TypeError">
      <summary>Возвращает ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.uint">
      <summary>Получает управляемый тип, соответствующий типу данных JScript uint.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript uint.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ulong">
      <summary>Получает управляемый тип, соответствующий типу данных JScript ulong.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript ulong.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.undefined">
      <summary>Представляет значение, равное NULL.</summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.unescape(System.Object)">
      <summary>Преобразует escape-символы %, в которые были преобразованы символы (@, *, _, +, -, ., /), в указанную строку в исходном формате.Преобразованные в escape-символы знаки представляются в формате Юникода.</summary>
      <returns>Новая копия <paramref name="string" />, в которой символы, преобразованные в escape-символы, преобразуются в их исходный формат.</returns>
      <param name="string">Преобразуемая строка.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.URIError">
      <summary>Возвращает ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
      <returns>Ссылка на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.Объект, инициализируемый как <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ushort">
      <summary>Получает управляемый тип, соответствующий типу данных JScript ushort.</summary>
      <returns>Управляемый тип, соответствующий типу данных JScript ushort.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.VBArray">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.void">
      <summary>Получает управляемый тип, соответствующий возвращаемому значению функции, которая не возвращает значение.</summary>
      <returns>Управляемый тип, соответствующий возвращаемому значению функции, которая не возвращает значение.</returns>
    </member>
    <member name="T:Microsoft.JScript.Globals">
      <summary>Хранит ссылки на все доступные на глобальном уровне типы и управляет стеком.Этот класс принадлежит к категории состояний компиляции и времени выполнения.</summary>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArray(System.Object[])">
      <summary>Предоставляет глобальный доступ к методу <see cref="M:Microsoft.JScript.ArrayConstructor.CreateInstance(System.Object[])" />.</summary>
      <returns>Новый экземпляр JScript <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="args">Значения, которыми необходимо заполнить массив.</param>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArrayLiteral(System.Object[])">
      <summary>Предоставляет глобальный доступ к методу <see cref="M:Microsoft.JScript.ArrayConstructor.ConstructArray(System.Object[])" />.</summary>
      <returns>Новый экземпляр JScript <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="args">Значения, которыми необходимо заполнить массив.</param>
    </member>
    <member name="F:Microsoft.JScript.Globals.contextEngine">
      <summary>Хранит глобальные ссылки на единый обработчик скриптов, который выполняется в текущем контексте.</summary>
    </member>
    <member name="T:Microsoft.JScript.GlobalScope">
      <summary>Представляет глобальную область. </summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.GlobalScope" />.</summary>
      <param name="parent">Ссылка на родительский объект.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.AddField(System.String)">
      <summary>Добавляет в глобальную область заданное поле.</summary>
      <returns>Новое поле, если оно было успешно добавлено.</returns>
      <param name="name">Имя добавляемого поля.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject">
      <summary>Получает текущую область по умолчанию, в которой содержится объект области оператора with или глобальной области.</summary>
      <returns>Данный объект.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)">
      <summary>Получает поле с заданным именем путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Поле с указанным именем.</returns>
      <param name="name">Имя искомого поля.</param>
      <param name="lexLevel">Лексический уровень поиска.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям глобальной области.</summary>
      <returns>Массив объектов, содержащий всем поля глобальной области.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetGlobalScope">
      <summary>Получает глобальную область, возвращает ссылку на этот объект.</summary>
      <returns>Данный объект.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)">
      <summary>Получает локальное объявление полей с заданными именами.Используется во время компиляции для проверки на наличие ошибок.</summary>
      <returns>Локальное объявление поля.</returns>
      <param name="name">Имя поля.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам, которые сопоставлены заданному имени.</summary>
      <returns>Массив объектов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам глобальной области.</summary>
      <returns>Массив объектов, содержащий все члены глобальной области.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MethodInfo" />, соответствующих всем методам глобальной области.</summary>
      <returns>Массив объектов, содержащий все методы глобальной области.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем свойствам глобальной области.</summary>
      <returns>Массив объектов, содержащий все свойства глобальной области.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>Добавляет в глобальную область заданный метод.Этот метод не реализован в JScript.</summary>
      <returns>Значение NULL во всех случаях.</returns>
      <param name="name">Имя добавляемого метода.</param>
      <param name="method">Делегат для метода.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>Добавляет в глобальную область заданное свойство.Этот метод не реализован в JScript.</summary>
      <returns>Значение NULL во всех случаях.</returns>
      <param name="name">Имя добавляемого свойства.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)">
      <summary>Удаляет заданный член из глобальной области.</summary>
      <param name="m">Имя удаляемого члена.</param>
    </member>
    <member name="T:Microsoft.JScript.Hide">
      <summary>Указывает, что метод или поле скрывают метод или поле в базовом классе.</summary>
    </member>
    <member name="M:Microsoft.JScript.Hide.#ctor">
      <summary>Инициализирует новый экземпляр атрибутов <see cref="T:Microsoft.JScript.Hide" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.IActivationObject">
      <summary>Определяет методы для разрешения области.Этот интерфейс реализуется всеми объектами, которые входят в состав иерархии областей.</summary>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject">
      <summary>При реализации в классе получает текущую область по умолчанию.Объект, в котором содержится область оператора with, или глобальная область.</summary>
      <returns>Текущая область по умолчанию.</returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)">
      <summary>При реализации в классе возвращает поле с заданным именем путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Объект <see cref="T:System.Reflection.FieldInfo" /> с заданным именем.</returns>
      <param name="name">Имя искомого поля.</param>
      <param name="lexLevel">Лексический уровень поиска.</param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetGlobalScope">
      <summary>При реализации в классе получает глобальную область, выполняя поиск по иерархии областей до тех пор, пока не будет найдена область, содержащая статические переменные, например область модулей.</summary>
      <returns>Глобальная область.</returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)">
      <summary>При реализации в классе получает локальное объявление полей с заданными именами.Используется во время компиляции для проверки на наличие ошибок.</summary>
      <returns>Локальное объявление поля.</returns>
      <param name="name">Имя поля.</param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)">
      <summary>При реализации в классе получает значение заданного члена, выполняя поиск по иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Значение члена <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="lexlevel">Лексический уровень поиска.</param>
    </member>
    <member name="T:Microsoft.JScript.IAuthorServices">
      <summary>Определяет услуги по разработке кода JScript в редакторе.</summary>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetCodeSense">
      <summary>При реализации в классе получает объект, используемый для добавления IntelliSense в текст при разработке кода JScript в редакторе.</summary>
      <returns>Объект, используемый для добавления IntelliSense в текст.</returns>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetColorizer">
      <summary>При реализации в классе получает объект, используемый для выделения текста цветом при разработке кода JScript в редакторе.</summary>
      <returns>Объект, используемый для выделения текста цветом.</returns>
    </member>
    <member name="T:Microsoft.JScript.IColorizeText">
      <summary>Определяет службы для выделения текста цветом при разработке кода JScript в редакторе.</summary>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.Colorize(System.String,Microsoft.JScript.SourceState)">
      <summary>При реализации в классе сканирует заданный исходный код для отдельных блоков кода и определяет цвет, которым каждый из них должен быть обозначен.</summary>
      <returns>Перечисление объектов <see cref="T:Microsoft.JScript.ITokenColorInfo" />, представляющий блоки кода, которые необходимо выделить цветом.</returns>
      <param name="sourceCode">Исходный код для выделения цветом.</param>
      <param name="state">Текущее состояние (обычный текс, примечание, строка) исходного кода.</param>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.GetStateForText(System.String,Microsoft.JScript.SourceState)">
      <summary>При реализации в классе сканирует заданный исходный код для отдельных блоков кода и определяет состояние заданного кода (обычный текст, примечание, строка).</summary>
      <returns>Состояние исходного кода.</returns>
      <param name="sourceCode">Подлежащий анализу исходный код.</param>
      <param name="currentState">Текущее состояние (обычный текс, примечание, строка) исходного кода.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert">
      <summary>Определяет набор служебных методов, которые преобразуют данные из одного типа в другой.Включает методы, преобразующие значения в объекты типа <see cref="T:System.String" />, чтобы их можно было отобразить в отладчике.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Boolean" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строка литерала true или строка литерала false.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Byte" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)">
      <summary>При реализации в классе создает строковое представление заданного объекта типа <see cref="T:System.Double" />.Строковое представление содержит день недели, месяц, дату, время часовой пояс и год.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)">
      <summary>При реализации в классе, получает сообщение об ошибке, созданное на основе значения свойства <see cref="P:System.Exception.HResult" /> и объекта <see cref="T:System.Globalization.CultureInfo" /> заданного объекта <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</summary>
      <returns>Локализованная строка, содержащая сведения об ошибке.</returns>
      <param name="hr">Код ошибки HRESULT.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)">
      <summary>При реализации в классе создает управляемый объект с заданным значением примитива типа <see cref="T:System.Char" />.</summary>
      <returns>Значение <paramref name="i" /> приведенное к типу <see cref="T:System.Char" />, а затем к типу <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)">
      <summary>При реализации в классе создает управляемый объект с заданным значением примитива типа <see cref="T:System.Int64" />.</summary>
      <returns>Значение <paramref name="i" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)">
      <summary>При реализации в классе создает управляемый объект с заданным значением примитива.</summary>
      <returns>Значение <paramref name="value" />, преобразованное в управляемый объект <see cref="T:System.Object" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)">
      <summary>При реализации в классе создает управляемый объект с заданным значением примитива типа <see cref="T:System.UInt64" />.</summary>
      <returns>Значение <paramref name="i" />, преобразовываемое в значение типа <see cref="T:System.Object" />.</returns>
      <param name="i">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Int16" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Int32" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Int64" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>При реализации в классе преобразует заданные сведения о регулярном выражении в формат <see cref="T:System.String" />.</summary>
      <returns>Строковое представление сведений о регулярном выражении.</returns>
      <param name="source">Шаблон регулярного выражения для сопоставления.</param>
      <param name="ignoreCase">Значение true, чтобы сопоставление выполняется без учета регистра; в противном случае — значение false.</param>
      <param name="global">Значение true, для использования глобального сопоставления, в противном случае — значение false.</param>
      <param name="multiline">Значение true, для использования многократного сопоставления, в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.SByte" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Single" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.String" /> в значение типа <see cref="T:System.String" />, содержащее escape-символ и вместо непечатаемых символов.</summary>
      <returns>Строковое представление параметра <paramref name="source" />, содержащее escape-символ и.</returns>
      <param name="source">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)">
      <summary>При реализации в классе преобразовывает заданное значение в значение <see cref="T:System.TypeCode" />, при необходимости допуская потерю данных.</summary>
      <returns>Значение <paramref name="value" />, которое преобразуется в значение типа <paramref name="typeCode" />.</returns>
      <param name="value">Значение, которое нужно преобразовать в значение нового типа.</param>
      <param name="typeCode">Тип, в который преобразуется параметр <paramref name="value" />.</param>
      <param name="truncationPermitted">Значение true, чтобы разрешить потерю данных; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.UInt16" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.UInt32" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.UInt64" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="radix" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="radix">Основание возвращаемого значения.Основанием может быт число 2, 8, 10 или 16.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert2">
      <summary>Определяет служебные методы, которые преобразуют данные из одного типа в другой.Включает методы, преобразующие значения в объекты типа <see cref="T:System.String" />, чтобы их можно было отобразить в отладчике.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert2.DecimalToString(System.Decimal)">
      <summary>При реализации в классе преобразует заданное значение типа <see cref="T:System.Decimal" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемое значение.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebuggerObject">
      <summary>Определяет методы, предоставляющие сведения об объектах отладчика.Этот интерфейс реализуется всеми объектами <see cref="T:System.Reflection.IReflect" />, реализованными отладчиком.В данный момент этот интерфейс служит только для отметки этих объектов как таковых для обработчика скриптов.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.HasEnumerableMember(System.String)">
      <summary>При реализации в классе определяет, есть ли у текущего объекта член с заданным именем, допускающим перечисление.</summary>
      <returns>Значение true, если у текущего объекта есть перечисляемый член с именем <paramref name="name" />; в противном случае — значение false.</returns>
      <param name="name">Имя искомого члена.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsCOMObject">
      <summary>При реализации в классе определяет, является ли текущий объект истинным COM-объектом или же он служит прокси для управляемого объекта.</summary>
      <returns>Значение true, если текущий объект является COM-объектом; значение false, если текущий объект является прокси для управляемого объекта.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsEqual(Microsoft.JScript.IDebuggerObject)">
      <summary>При реализации в классе определяет, равен ли текущий объект заданному объекту.</summary>
      <returns>Значение true, если текущий объект совпадает с объектом <paramref name="o" />; в противном случае — значение false.</returns>
      <param name="o">Объект для проверки на равенство.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptFunction">
      <summary>При реализации в классе определяет, является ли текущий объект прокси для управляемой функции JScript.</summary>
      <returns>Значение true, если текущий объект является прокси для управляемой функции JScript; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptObject">
      <summary>При реализации в классе определяет, является ли текущий объект прокси для управляемого объекта JScript.</summary>
      <returns>Значение true, если текущий объект является прокси для управляемого объекта JScript; в противном случае — значение false.</returns>
    </member>
    <member name="T:Microsoft.JScript.IDebugScriptScope">
      <summary>Определяет методы, которые задают значение this, связанное с глобальной областью.Используется объектом <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugScriptScope.SetThisValue(System.Object)">
      <summary>При реализации в классе задает значение this, связанное с глобальной областью.</summary>
      <param name="thisValue">Значение, которое используется как объект this для глобальной области.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugType">
      <summary>Определяет методы, предоставляющие сведения об объектах отладчика.Этот интерфейс реализуется объектами отладчика, которые представляют тип в его целевом объекте.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugType.HasInstance(System.Object)">
      <summary>При реализации в классе определяет, является ли заданный объект экземпляром текущего типа.</summary>
      <returns>Значение true, если объект <paramref name="o" /> является экземпляром текущего типа; в противном случае — значение false.</returns>
      <param name="o">Объект для проверки.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
      <summary>Определяет методы, используемые для вычисления выражений и анализа строк.Этот интерфейс обычно реализуется объектом, представляющим блок кода, и, как правило, вызывается отладчиком.Этот интерфейс предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
      <summary>При реализации в классе, анализирует представленный элементом кода блок, выражение или оператор, и возвращает соответствующее значение.Обычно вызывается отладчиком, которому необходимо вычислить выражение (например, в окне контрольных значений).Результатом анализа выражения является значение.Для блоков и операторов результирующим будет последнее выражение, вычисленное блоком или оператором.</summary>
      <returns>Возвращает значение, представляющее результат анализа оператора, выражения или блока.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
      <summary>При реализации в классе, анализирует строки и возвращает полученную в результате анализа информацию.Этот метод обычно вызывается отладчиком, который должен анализировать информацию о точке останова, представленную в формате string.У отладчика может быть точка останова, введенная пользователем в форме имяФункции-аргументы-смещениеУровняЦелостности.Формат строки именованной точки останова может быть сложным, например F.B(C.D[], int, arg : double ) : C.Abc + 123. Список параметров не обязателен, как и смещение уровня целостности.</summary>
      <returns>Возвращает значение true, если именованная точка останова проанализирована успешно, либо false, если это не так.</returns>
      <param name="input">Строка именованной точки останова с правильным форматом, в которой указана функция, список необязательных аргументов и необязательное смещение уровня целостности.</param>
      <param name="functionName">Параметр Out, возвращающий имя функции, полученной в результате анализа входной строки, или пустую строку в случае неправильного формата входной строки.</param>
      <param name="nargs">Параметр Out, возвращающий количество аргументов в списке необязательных аргументов.Возвращает ноль, если аргументы в списке отсутствуют или если формат строки неправильный.</param>
      <param name="arguments">Параметр Out, возвращающий список имен типов всех аргументов в списке аргументов, разделенных пробелами, либо пустую строку, если список аргументов отсутствует или формат входной строки неправильный.</param>
      <param name="returnType">Параметр Out, возвращающий строку, содержащую возвращаемый тип функции, названный во входных данных, или пустую строку, если возвращаемый тип отсутствует, либо формат входной строки неправильный.</param>
      <param name="offset">Значение типа long integer без знака, соответствующее смещению уровня целостности входной строки, или ноль, если смещение уровня целостности отсутствует или формат строки неправильный.</param>
    </member>
    <member name="T:Microsoft.JScript.IDefineEvent">
      <summary>Определяет дополнительные функциональные возможности, необходимые для узла активного скрипта. </summary>
    </member>
    <member name="M:Microsoft.JScript.IDefineEvent.AddEvent(System.String,System.Int32)">
      <summary>Используется узлом активного скрипта для определения события.</summary>
      <returns>Событие в случае успешного добавления.</returns>
      <param name="code">Код, содержащий событие.</param>
      <param name="startLine">Номер строки, в которой начинается код.</param>
    </member>
    <member name="T:Microsoft.JScript.IEngine2">
      <summary>Определяет дополнительные функциональные возможности, необходимые для сайта IActiveScript.Реализуется обработчиком <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)">
      <summary>При реализации в классе создает новый идентичный обработчик, выполняемый в новом домене приложения с тем же компилированным состоянием и именованными элементами.Этот метод не реализован в JScript.</summary>
      <returns>Новый обработчик.</returns>
      <param name="domain">Домен приложения, в котором нужно создать новый обработчик.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.CompileEmpty">
      <summary>При реализации в классе инициирует компиляцию всех состояний, которые на данный момент есть в обработчике.Все ссылки, элементы кода, ведущие элементы и ресурсы запускаются с помощью компилятора.</summary>
      <returns>Значение true — если компиляция прошла успешно; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.ConnectEvents">
      <summary>При реализации в классе сообщает обработчику, что он может подключить любой зарегистрированный источник событий к любому глобальному обработчику событий.Этот метод не реализован в JScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.DisconnectEvents">
      <summary>При реализации в классе указывает обработчику на необходимость отключить источники событий от обработчиков событий.Этот метод не реализован в JScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetAssembly">
      <summary>При реализации в классе получает скомпилированную сборку, которая создается на этапе компиляции.</summary>
      <returns>Скомпилированная сборка.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetGlobalScope">
      <summary>При реализации в классе получает объект глобальной области.</summary>
      <returns>Объект глобальной области.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetModule">
      <summary>При реализации в классе получает модуль кода из скомпилированной сборки.</summary>
      <returns>Модуль кода из скомпилированной сборки.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)">
      <summary>При реализации в классе, инициализирует объект <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
      <param name="rootMoniker">Корневой моникер обработчика скриптов.Дополнительные сведения см. в разделе <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</param>
      <param name="site">Реализуемый основным приложением объект <see cref="T:Microsoft.Vsa.IVsaSite" />, который используется обработчиком скрипта для связи с основным приложением.Дополнительные сведения см. в разделе <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Interrupt">
      <summary>При реализации в классе вызывает метод <see cref="M:System.Threading.Thread.Abort" /> для потока, в котором выполняется код скрипта.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)">
      <summary>При реализации в классе задает имя элемента, обозначенного как источник событий, благодаря чему метод <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> может определить событие, к которому нужно подключиться.Этот метод не реализован в JScript.</summary>
      <param name="name">Имя добавленного элемента, предоставляющего события.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Restart">
      <summary>При реализации в классе этот метод вызывается отладчиком, если необходимо выполнить сброс обработчика для очистки состояния перед вычислением нового выражения.Этот метод восстанавливает исходное состояние добавленных элементов и глобальной области.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)">
      <summary>При реализации в классе запускает скомпилированный код в заданном домене приложения.Этот метод не реализован в JScript, поскольку управляемые обработчики не поддерживают выполнение кода в предоставленных пользователем доменах приложений.</summary>
      <param name="domain">Домен приложения, в котором выполняется скомпилированный код.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RunEmpty">
      <summary>При реализации в классе запускает скомпилированный код в текущем объекте <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.IErrorHandler">
      <summary>Определяет метод для обработки ошибок, которые происходят в процессе анализа кода.</summary>
    </member>
    <member name="M:Microsoft.JScript.IErrorHandler.OnCompilerError(Microsoft.JScript.IVsaFullErrorInfo)">
      <summary>При реализации в классе определяет способ обработки ошибки, которая происходит в процессе анализа кода.</summary>
      <returns>Значение false для обработки ошибки; значение true для игнорирования ошибки и продолжения анализа.</returns>
      <param name="error">Объект, содержащий сведения об ошибке.</param>
    </member>
    <member name="T:Microsoft.JScript.IMessageReceiver">
      <summary>Определяет методы для получения выходных данных из обработчика скриптов.Этот интерфейс функционирует как объект обратного вызова, перенаправляющий выходные данные, которые в противном случае выводились бы в консоль.</summary>
    </member>
    <member name="M:Microsoft.JScript.IMessageReceiver.Message(System.String)">
      <summary>При реализации в классе перенаправляет заданные выходные данные.</summary>
      <param name="strValue">Перенаправляемые выходные данные.</param>
    </member>
    <member name="T:Microsoft.JScript.IMethodsCompletionInfo">
      <summary>Это интерфейс разметки, у которого нет методов.</summary>
    </member>
    <member name="T:Microsoft.JScript.Import">
      <summary>Импортирует пространства имен для использования в коде.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Import.JScriptImport(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Импортирует заданное пространство имен для использования заданным обработчиком скриптов.</summary>
      <param name="name">Импортируемое пространство имен.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.In">
      <summary>Определяет, содержится ли объект в другом объекте.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.In.JScriptIn(System.Object,System.Object)">
      <summary>Определяет, содержится ли первый заданный объект во втором заданном объекте.</summary>
      <returns>Значение true, если объект <paramref name="v1" /> содержится в объекте <paramref name="v2" />, в противном случае — значение false.</returns>
      <param name="v1">Объект, который нужно найти.</param>
      <param name="v2">Объект, в котором нужно выполнить поиск.</param>
    </member>
    <member name="T:Microsoft.JScript.INeedEngine">
      <summary>Определяет методы, которые получают и задают ссылки обработчик скриптов. </summary>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.GetEngine">
      <summary>При реализации в классе получает ссылку на обработчик скриптов.</summary>
      <returns>Ссылка на обработчик скриптов.</returns>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.SetEngine(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>При реализации в классе задает ссылку на обработчик скриптов.</summary>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.Instanceof">
      <summary>Определяет, можно ли привести объект к типу другого объекта.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Instanceof.JScriptInstanceof(System.Object,System.Object)">
      <summary>Определяет, можно ли привести первый указанный объект к типу второго указанного объекта.</summary>
      <returns>Значение true, если объект <paramref name="v1" /> можно привести к типу объекта v2; в противном случае — значение false.</returns>
      <param name="v1">Объект, приводимый к типу объекта <paramref name="v2" />.</param>
      <param name="v2">Объект, относящийся к необходимому типу.</param>
    </member>
    <member name="T:Microsoft.JScript.IObjectCompletionInfo">
      <summary>Это интерфейс разметки, у которого нет методов.</summary>
    </member>
    <member name="T:Microsoft.JScript.IParseText">
      <summary>Определяет методы для анализа текста при разработке кода JScript в редакторе.</summary>
    </member>
    <member name="M:Microsoft.JScript.IParseText.Parse(System.String,Microsoft.JScript.IErrorHandler)">
      <summary>При реализации в классе анализирует заданный исходных код.</summary>
      <param name="code">Исходный код для анализа.</param>
      <param name="error">Объект, который содержит сведения об ошибках, возникающих при анализе <paramref name="code" />.</param>
    </member>
    <member name="T:Microsoft.JScript.IRedirectOutput">
      <summary>Определяет методы, перенаправляющие выходные данные, которые в противном случае были бы переданы в консоль.Этот интерфейс реализуется классом <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IRedirectOutput.SetOutputStream(Microsoft.JScript.IMessageReceiver)">
      <summary>При реализации в классе перенаправляет заданный поток выходных данных в новый поток или хранилище данных.</summary>
      <param name="output">Перенаправляемые выходные данные. </param>
    </member>
    <member name="T:Microsoft.JScript.ISite2">
      <summary>Определяет методы, используемые объектом <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> для разрешения конфликта имен.Предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.ISite2.GetParentChain(System.Object)">
      <summary>При реализации в классе получает иерархию родительских объектов для заданного объекта.</summary>
      <returns>Массив, содержащий родительские объекты объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект <see cref="T:System.Reflection.IReflect" />, для которого нужно получить иерархию родительских объектов.</param>
    </member>
    <member name="T:Microsoft.JScript.ITokenColorInfo">
      <summary>Определяет свойства для выделения цветом заданных блоков кода.</summary>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.Color">
      <summary>При реализации в классе получает цвет, который следует использовать для отображения блока кода.</summary>
      <returns>Цвет, который следует использовать для отображения блока кода.</returns>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.EndPosition">
      <summary>При реализации в классе получает позицию, в которой заканчивается блок кода.</summary>
      <returns>Позиция, в которой заканчивается блок кода.</returns>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.StartPosition">
      <summary>При реализации в классе получает позицию, с которой начинается блок кода.</summary>
      <returns>Позиция, с которой начинает блок кода.</returns>
    </member>
    <member name="T:Microsoft.JScript.ITokenEnumerator">
      <summary>Определяет методы для итерации по коллекции объектов <see cref="T:Microsoft.JScript.ITokenColorInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.GetNext">
      <summary>При реализации в классе возвращает следующий элемент в коллекции объектов <see cref="T:Microsoft.JScript.ITokenColorInfo" />.</summary>
      <returns>Следующий элемент в коллекции.</returns>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.Reset">
      <summary>При реализации в классе задает перечислитель в исходное положение перед первым элементом в коллекции объектов <see cref="T:Microsoft.JScript.ITokenColorInfo" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.IVsaFullErrorInfo">
      <summary>Определяет свойства для получения сведений об ошибках.Этот интерфейс предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</summary>
    </member>
    <member name="P:Microsoft.JScript.IVsaFullErrorInfo.EndLine">
      <summary>При реализации в классе получает последнюю строку кода, в которой произошла ошибка.</summary>
      <returns>Последняя строка кода, в которой произошла ошибка.</returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptCodeItem">
      <summary>Определяет дополнительные функциональные возможности, необходимые для узла IActiveScript. </summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptCodeItem.Execute">
      <summary>При реализации в классе, компилирует и запускает этот код.</summary>
      <returns>Возвращаемое значение выполняемого кода (если есть); в противном случае — значение NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartColumn">
      <summary>При реализации в классе возвращает или задает номер столбца в строке, в котором начинается этот код.</summary>
      <returns>Номер столбца, в котором начинается этот код.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartLine">
      <summary>При реализации в классе возвращает или задает номер строки, в которой начинается этот код.</summary>
      <returns>Номер строки, в которой начинается этот код.</returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptScope">
      <summary>Определяет методы для разрешения области.Этот интерфейс реализуется объектом глобальной области <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType)">
      <summary>При реализации в классе добавляет элемент в область. </summary>
      <returns>Новый элемент, если он был успешно добавлен.</returns>
      <param name="itemName">Имя элемента.</param>
      <param name="type">Одно из значений перечисления.Определяет тип добавляемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.CreateDynamicItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType)">
      <summary>При реализации в классе добавляет элемент в область.Дли использования этого метода нужно запустить <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
      <returns>Новый элемент, если он был успешно добавлен.</returns>
      <param name="itemName">Имя элемента.</param>
      <param name="type">Одно из значений перечисления.Определяет тип добавляемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItem(System.String)">
      <summary>При реализации в классе получает элемент из области, на которую указывает заданное имя.</summary>
      <returns>Элемент с именем <paramref name="itemName" />.</returns>
      <param name="itemName">Имя возвращаемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemAtIndex(System.Int32)">
      <summary>При реализации в классе получает элемент из области, на которую указывает заданное значение индекса.</summary>
      <returns>Элемент с индексом <paramref name="index" />.</returns>
      <param name="index">Индекс получаемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemCount">
      <summary>При реализации в классе получает количество элементов в области.</summary>
      <returns>Число элементов в области.</returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetObject">
      <summary>При реализации в классе получает ссылку на глобальную область.</summary>
      <returns>Ссылка на глобальную область.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptScope.Parent">
      <summary>При реализации в классе получает ссылку на родительский объект.</summary>
      <returns>Родительская область.</returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(Microsoft.JScript.Vsa.IJSVsaItem)">
      <summary>При реализации в классе удаляет заданный объект <see cref="T:Microsoft.JScript.Vsa.IJSVsaItem" /> из области.</summary>
      <param name="item">Удаляемый элемент.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(System.String)">
      <summary>При реализации в классе удаляет элемент, на который указывает заданное имя, из области.</summary>
      <param name="itemName">Имя удаляемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItemAtIndex(System.Int32)">
      <summary>При реализации в классе удаляет элемент, на который указывает заданное значение индекса, из области.</summary>
      <param name="index">Индекс удаляемого элемента.</param>
    </member>
    <member name="T:Microsoft.JScript.IWrappedMember">
      <summary>Определяет методы доступа к объекту, для которого определен член.</summary>
    </member>
    <member name="M:Microsoft.JScript.IWrappedMember.GetWrappedObject">
      <summary>При реализации в классе возвращает объект, для которого определен член.</summary>
      <returns>Объект, для которого определен член.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSAuthor">
      <summary>Предоставляет услуги по разработке кода JScript в редакторе. </summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSAuthor" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetCodeSense">
      <summary>Получает объект, используемый для добавления IntelliSense в текст при разработке кода JScript в редакторе.</summary>
      <returns>Объект, используемый для добавления IntelliSense в текст.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetColorizer">
      <summary>Получает объект, используемый для выделения текста цветом при разработке кода JScript в редакторе.</summary>
      <returns>Объект, используемый для выделения текста цветом.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSBuiltin">
      <summary>Задает встроенные функции JScript.Эти функции соответствуют статическим методам встроенных объектов JScript.Элементы этого перечисления используются для создания объектов <see cref="T:Microsoft.JScript.JSFunctionAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.None">
      <summary>Без метода.This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_concat">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_join">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_pop">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_push">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_reverse">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_shift">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_slice">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_sort">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_splice">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_unshift">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_toString">
      <summary>The static <see cref="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDay">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTime">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getTime(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTimezoneOffset">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDay">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getVarDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_parse">
      <summary>The static <see cref="M:Microsoft.JScript.DateConstructor.parse(System.String)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setTime">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toDateString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toGMTString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleDateString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleTimeString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toTimeString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toUTCString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_UTC">
      <summary>The static <see cref="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_atEnd">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_item">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveFirst">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveNext">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Error_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ErrorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_apply">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_call">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_toString">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_CollectGarbage">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.CollectGarbage" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURI">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURIComponent">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURI">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURIComponent">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_escape">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.escape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_eval">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.eval(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_GetObject">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isNaN">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isFinite">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseFloat">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseInt">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngine">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngine" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineBuildVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMajorVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMinorVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_unescape">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.unescape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_abs">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.abs(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_acos">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.acos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_asin">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.asin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.atan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan2">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_ceil">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.ceil(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_cos">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.cos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_exp">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.exp(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_floor">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.floor(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_log">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.log(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_max">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_min">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_pow">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_random">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.random" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_round">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.round(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sin">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.sin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sqrt">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.sqrt(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_tan">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.tan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toExponential">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toFixed">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toPrecision">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toString">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_hasOwnProperty">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_isPrototypeOf">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_propertyIsEnumerable">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_compile">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_exec">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_test">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_toString">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_anchor">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_big">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.big(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_blink">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.blink(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_bold">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.bold(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charAt">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charCodeAt">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_concat">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fixed">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fixed(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontcolor">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontsize">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fromCharCode">
      <summary>The static <see cref="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_indexOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_italics">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.italics(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_lastIndexOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_link">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_localeCompare">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_match">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_replace">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_search">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_slice">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_small">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.small(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_split">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_strike">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.strike(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sub">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.sub(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substr">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substring">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sup">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.sup(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleLowerCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleUpperCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLowerCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toString">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toUpperCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_dimensions">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_getItem">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_lbound">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_toArray">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_ubound">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSConstructor">
      <summary>Создает оболочку объекта <see cref="T:Microsoft.JScript.FunctionObject" />. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Attributes">
      <summary>Получает атрибуты, связанные с этим конструктором.</summary>
      <returns>Побитовая комбинация значений перечисления.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.DeclaringType">
      <summary>Получает тип, который объявляет данный конструктора.</summary>
      <returns>Объект Type класса, в котором объявлен данный член.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот конструктор.</summary>
      <returns>Массив настраиваемых атрибутов, вложенный в этот метод, или, в случае их отсутствия, массив нулевых элементов.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот конструктора, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that has zero elements.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetMethodImplementationFlags">
      <summary>Возвращает сведения о реализации этого метода.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> и <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetParameters">
      <summary>Получает параметры данного конструктора.</summary>
      <returns>Массив, содержащий сведения, соответствующие сигнатуре этого конструктора.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Вызывает конструктор для заданного объекта, используя заданное значение, язык и региональные параметры, а также сведения о привязке.</summary>
      <returns>Экземпляр класса, связанного с конструктором.</returns>
      <param name="obj">Объект, для которого вызывается конструктор.</param>
      <param name="options">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="parameters">Список аргументов для передачи конструктору.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Вызывает конструктор, используя заданное значение, язык и региональные параметры, а также сведения о привязке.</summary>
      <returns>Экземпляр класса, связанного с конструктором.</returns>
      <param name="options">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="parameters">Список аргументов для передачи конструктору.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в этот конструктора указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MemberType">
      <summary>Получает тип члена, которым является данный метод.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Constructor" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.ConstructorInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MethodHandle">
      <summary>Получает дескриптор представления внутренних метаданных этого конструктора.</summary>
      <returns>Дескриптор представления внутренних метаданных этого конструктора.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Name">
      <summary>Получает имя данного конструктора.</summary>
      <returns>Имя данного конструктора.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Объект Type класса, в котором объявлен данный член.</returns>
    </member>
    <member name="T:Microsoft.JScript.JScriptCodeProvider">
      <summary>Предоставляет доступ к экземплярам генератора и компилятора кода JScript. </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptCodeProvider" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateCompiler">
      <summary>Возвращает экземпляр компилятора кода JScript.</summary>
      <returns>Экземпляр компилятора кода JScript.</returns>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateGenerator">
      <summary>Возвращает экземпляр генератор кода JScript.</summary>
      <returns>Экземпляр генератор кода JScript.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptCodeProvider.FileExtension">
      <summary>Получает расширение имени файла для файлов кода на языке JScript.</summary>
      <returns>Строковый литерал js.</returns>
    </member>
    <member name="T:Microsoft.JScript.JScriptException">
      <summary>Исключение, которое выбрасывается JScript для уведомления основного приложения или программы среды CLR о появлении ошибки.Исключение <see cref="T:Microsoft.JScript.JScriptException" /> обычно принимает значение перечисления <see cref="T:Microsoft.JScript.JSError" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptException" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(Microsoft.JScript.JSError)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptException" />, используя заданный <see cref="T:Microsoft.JScript.JSError" />.</summary>
      <param name="errorNumber">Одно из значений перечисления.Значение задает ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptException" />, используя указанные сериализованные данные.</summary>
      <param name="info">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptException" />, используя указанное сообщение об ошибке.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JScriptException" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Column">
      <summary>Получает столбец в коде, в котором произошла ошибка.</summary>
      <returns>Столбец в коде, в котором произошла ошибка, или 0, если значение объекта <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Description">
      <summary>Получает сообщение с описанием ошибки.</summary>
      <returns>Сообщение, описывающее ошибку.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndColumn">
      <summary>Получает столбец в коде, в котором закончилась ошибка.</summary>
      <returns>Столбец в коде, в котором закончилась ошибка, или 0, если значение объекта <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndLine">
      <summary>Получает строку кода, в которой закончилась ошибка.</summary>
      <returns>Строка кода, в которой закончилась ошибка, или 0, если значение объекта <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.ErrorNumber">
      <summary>Получает код ошибки <see cref="P:System.Exception.HResult" />.</summary>
      <returns>Код ошибки <see cref="P:System.Exception.HResult" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Хранит сведения об исключении, в том числе значения IsError и Code, в объекте <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="info">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Line">
      <summary>Получает строку кода, в которой произошла ошибка.</summary>
      <returns>Строка кода, в которой произошла ошибка, или 0, если значение объекта <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.LineText">
      <summary>Получает текст кода, в котором произошла ошибка.</summary>
      <returns>Текст кода или пустая строка, если значение <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Message">
      <summary>Получает сообщение с описанием ошибки.</summary>
      <returns>Сообщение, описывающее ошибку.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#JScript#Vsa#IJSVsaError#Description">
      <summary>Получает сообщение с описанием ошибки.</summary>
      <returns>Сообщение, описывающее ошибку.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#JScript#Vsa#IJSVsaError#Number">
      <summary>Получает код ошибки <see cref="P:System.Exception.HResult" />.</summary>
      <returns>Код ошибки <see cref="P:System.Exception.HResult" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Number">
      <summary>Получает код ошибки <see cref="P:System.Exception.HResult" />.</summary>
      <returns>Код ошибки <see cref="P:System.Exception.HResult" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Severity">
      <summary>Получает число от 0 (наиболее важная) до 4 (наименее важная), задающее важность ошибки.По умолчанию — 0.</summary>
      <returns>Число от 0 до 4.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.SourceItem">
      <summary>Получает исходный код элемента, вызвавшего ошибку.</summary>
      <returns>Исходный код элемента; или исключение <see cref="T:Microsoft.JScript.NoContextException" />, если значение <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.SourceMoniker">
      <summary>Получает имя файла исходного кода, содержащего ошибку.</summary>
      <returns>Имя файла исходного кода или строковый литерал "no source", если значение <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.StackTrace">
      <summary>Получает сведения о трассировке стека на момент появления ошибки.</summary>
      <returns>Сведения о трассировке стека.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.StartColumn">
      <summary>Получает столбец в коде, в котором произошла ошибка.</summary>
      <returns>Столбец в коде, в котором произошла ошибка, или 0, если значение объекта <see cref="T:Microsoft.JScript.Context" /> равно NULL.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSError">
      <summary>Задает сообщения об ошибке JScript.Этот класс принадлежит к категории состояний компиляции и времени выполнения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoError">
      <summary>Нет ошибки.Это значение по умолчанию (0) для перечисления.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCall">
      <summary>Недопустимый вызов или аргумент процедуры.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfMemory">
      <summary>Недостаточно памяти.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeMismatch">
      <summary>Несоответствие типов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfStack">
      <summary>Превышен размер стека.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InternalError">
      <summary>Произошла внутренняя ошибка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FileNotFound">
      <summary>Файл не найден.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedObject">
      <summary>Требуется объект.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantCreateObject">
      <summary>Не удается создать объект.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OLENoPropOrMethod">
      <summary>Объект не поддерживает данное свойство или метод.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ActionNotSupported">
      <summary>Объект не поддерживает это действие.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotCollection">
      <summary>Этот объект не является набором.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SyntaxError">
      <summary>Обнаружена синтаксическая ошибка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoColon">
      <summary>Требуется ":".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSemicolon">
      <summary>Требуется ";".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftParen">
      <summary>Требуется "(".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParen">
      <summary>Требуется ")".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracket">
      <summary>Требуется "]".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftCurly">
      <summary>Требуется "{".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightCurly">
      <summary>Требуется "}".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoIdentifier">
      <summary>Требуется идентификатор.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoEqual">
      <summary>Требуется "=".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalChar">
      <summary>Недопустимый символ.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnterminatedString">
      <summary>Отсутствует обозначение конца строковой константы.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommentEnd">
      <summary>Отсутствует обозначение конца комментария.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadReturn">
      <summary>Возвращенный оператор не может находиться за пределами функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadBreak">
      <summary>Функция break не может использоваться вне цикла.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadContinue">
      <summary>Функция continue не может использоваться вне цикла.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadHexDigit">
      <summary>Требуется шестнадцатеричная цифра.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoWhile">
      <summary>Требуется while.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadLabel">
      <summary>Метка с таким именем уже существует.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLabel">
      <summary>Метка не найдена.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupDefault">
      <summary>Поле default может встречаться в операторе switch только один раз.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMemberIdentifier">
      <summary>Требуется идентификатор или значения типа string.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCcEnd">
      <summary>Требуется @end.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcOff">
      <summary>Условная компиляция отключена.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotConst">
      <summary>Требуется константа.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoAt">
      <summary>Требуется @.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCatch">
      <summary>Требуется catch.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidElse">
      <summary>Несогласованная директива else; не задан оператор if.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoComma">
      <summary>Требуется ",".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupVisibility">
      <summary>Модификатор видимости уже задан.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalVisibility">
      <summary>Недопустимый модификатор видимости.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadSwitch">
      <summary>Отсутствует оператор case или default.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidEnd">
      <summary>Несогласованная директива @end; не задан оператор @if.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElse">
      <summary>Несогласованная директива @else; не задан оператор @if.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElif">
      <summary>Несогласованная директива @elif; не задан оператор @if.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ErrEOF">
      <summary>Требуются дополнительные исходные символы.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleVisibility">
      <summary>Несовместимый модификатор видимости.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClassNotAllowed">
      <summary>В данном контексте определение класса запрещено.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedCompileTimeConstant">
      <summary>Выражение должно быть статичной константой.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateName">
      <summary>Идентификатор уже используется.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedType">
      <summary>Требуется имя типа.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotInsideClass">
      <summary>Допустимо только внутри определения класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPositionDirective">
      <summary>Обнаружена неизвестная директива положения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustBeEOL">
      <summary>Другой код не может располагаться после директивы в одной с ней строке.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongDirective">
      <summary>Неправильная директива отладчика или неправильное расположение директивы.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotNestPositionDirective">
      <summary>Чтобы начать новую директиву позиции, необходимо закончить текущую.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CircularDefinition">
      <summary>Циклическое определение.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.Deprecated">
      <summary>Задан нерекомендуемый тип.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfThis">
      <summary>В текущем контексте элемента использование this недопустимо.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAccessible">
      <summary>В этой области объект или член недоступен.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseNameOfClass">
      <summary>Имя функции может совпадать с именем класса, в котором она находится, только если она является функцией-конструктором.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustImplementMethod">
      <summary>Класс должен обеспечивать реализацию метода.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInterface">
      <summary>Требуется имя интерфейса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnreachableCatch">
      <summary>Предложение Catch недостижимо.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeCannotBeExtended">
      <summary>Не удается расширить тип.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndeclaredVariable">
      <summary>Переменная не объявлена.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableLeftUninitialized">
      <summary>Неинициализированные переменные опасны и замедляют работу.Они должны оставаться неинициализированными?</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.KeywordUsedAsIdentifier">
      <summary>Зарезервированное слово нельзя использовать как идентификатор.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAllowedInSuperConstructorCall">
      <summary>Объект или член недопустим при обращении к конструктору базовых классов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotMeantToBeCalledDirectly">
      <summary>Этот метод нельзя вызывать непосредственно.Если это возможно, воспользуйтесь вместо него методами доступа к свойству.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.GetAndSetAreInconsistent">
      <summary>Методы get и set данного свойства не соответствуют друг другу.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttribute">
      <summary>Класс настраиваемых атрибутов должен быть производным класса <see cref="T:System.Attribute" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeArgument">
      <summary>В списке аргументов конструктора настраиваемых атрибутов допускаются только типы примитивов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeClassOrCtor">
      <summary>Неизвестный конструктор или класс настраиваемых атрибутов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyParameters">
      <summary>Слишком много фактических параметров.Избыточные параметры будут пропущены.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfWith">
      <summary>Оператор <see cref="T:Microsoft.JScript.With" /> приводит к неоднозначности при использовании этого имени.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfEval">
      <summary>Наличие функции <see cref="T:Microsoft.JScript.Eval" /> приводит к неоднозначности при использовании этого имени.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchMember">
      <summary>У объектов данного типа нет такого элемента.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ItemNotAllowedOnExpandoClass">
      <summary>Не удается задать свойство Item для класса <see cref="T:Microsoft.JScript.Expando" />.Это свойство Item зарезервировано для полей <see cref="T:Microsoft.JScript.Expando" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodNotAllowedOnExpandoClass">
      <summary>Не удается задать свойство с именем Item для класса <see cref="T:Microsoft.JScript.Expando" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodClashOnExpandoSuperClass">
      <summary>Не удается создать класс <see cref="T:Microsoft.JScript.Expando" /> поскольку свойство с именем Item уже определено в иерархии классов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BaseClassIsExpandoAlready">
      <summary>Базовый класс уже обозначен как <see cref="T:Microsoft.JScript.Expando" />; текущая спецификация использоваться не будет.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBePrivate">
      <summary>Абстрактный метод не может быть закрытым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotIndexable">
      <summary>Объекты такого типа не подлежат индексированию.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMissingInStaticInit">
      <summary>В статическом инициализаторе должно быть указано ключевое слово static.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingConstructForAttributes">
      <summary>Данный список атрибутов к текущему контексту неприменим.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAllowed">
      <summary>В объекте package допускается использование только классов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoClassShouldNotImpleEnumerable">
      <summary>Классы <see cref="T:Microsoft.JScript.Expando" /> не должны реализовывать <see cref="T:System.Collections.IEnumerable" />.Этот интерфейс явно определен в классах <see cref="T:Microsoft.JScript.Expando" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantMember">
      <summary>Указанный элемент не является CLS-совместимым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotDeletable">
      <summary>Не удается удалить объект или член.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageExpected">
      <summary>Требуется имя пакета.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessExpression">
      <summary>Выражение не оказывает никакого влияния.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesParentMember">
      <summary>В классе base уже содержится элемент с таким именем.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotChangeVisibility">
      <summary>Не удается изменить спецификацию видимости базового метода.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesAbstractInBase">
      <summary>Метод скрывает элементы с параметром abstract в классе base.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NewNotSpecifiedInMethodDeclaration">
      <summary>Метод соответствует методу в базовом классе.Должен быть задан параметр override или hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodInBaseIsNotVirtual">
      <summary>Метод базового класса, для которого установлен атрибут final или не установлен атрибут virtualoverride, пропускается.Укажите ключевое слово hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToNew">
      <summary>В базовом классе нет члена, для которого необходимо задать параметр hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DifferentReturnTypeFromBase">
      <summary>У лежащего в основе метода другой тип возвращаемого значения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClashWithProperty">
      <summary>Имя поля конфликтует с именем свойства.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OverrideAndHideUsedTogether">
      <summary>При объявлении элемента не удается одновременно использовать параметры override и hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidLanguageOption">
      <summary>Нужно указать языковой параметр fast или versionSafe.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToOverride">
      <summary>В базовом классе нет элемента, для которого необходимо задать параметр override.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidForConstructor">
      <summary>Недопустимо для конструктора.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotReturnValueFromVoidFunction">
      <summary>Не удалось вернуть значение пустой функции или конструктора.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousMatch">
      <summary>Этому списку параметров соответствует несколько методов или свойств.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousConstructorCall">
      <summary>Этому списку параметров соответствует несколько конструкторов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuperClassConstructorNotAccessible">
      <summary>Конструктор базового класса недоступен из этой области.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OctalLiteralsAreDeprecated">
      <summary>Восьмеричные литералы устарели.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableMightBeUnitialized">
      <summary>Возможно, переменная не инициализирована.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotOKToCallSuper">
      <summary>Вызов конструктора базового класса из этого места недопустим.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfSuper">
      <summary>Такой способ использования базового класса является недопустимым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadWayToLeaveFinally">
      <summary>Данный способ выхода из блока finally медленный и может стать причиной путаницы.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommaOrTypeDefinitionError">
      <summary>Требуется "," или объявление типа является недопустимым; следует писать не "&lt;тип&gt; &lt;идентификатор&gt;", а "&lt;идентификатор&gt; : &lt;тип&gt;".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractWithBody">
      <summary>У абстрактной функции не может быть основной части.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParenOrComma">
      <summary>Требуется "," или ")".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracketOrComma">
      <summary>Требуется "," или "]".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpressionExpected">
      <summary>Требуется выражение.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnexpectedSemicolon">
      <summary>Непредвиденный символ ";".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyTokensSkipped">
      <summary>Слишком много ошибок.Возможно, файл не является файлом JScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadVariableDeclaration">
      <summary>Возможно, используется недопустимое объявление переменной, отсутствует оператор var или обнаружена неизвестная синтаксическая ошибка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadFunctionDeclaration">
      <summary>Возможно, используется недопустимое объявление функции, функция отсутствует или обнаружена неизвестная синтаксическая ошибка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadPropertyDeclaration">
      <summary>Недопустимое объявление свойства.У метода доступа get не должно быть аргументов, а у метода доступа set должен быть один аргумент.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DoesNotHaveAnAddress">
      <summary>В выражении отсутствует адрес.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooFewParameters">
      <summary>Указаны не все обязательные параметры.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessAssignment">
      <summary>Присвоение приводит к созданию свойства <see cref="T:Microsoft.JScript.Expando" />, которое тотчас же выбрасывается.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectAssignment">
      <summary>Условие If не может содержать присвоение.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectSemicolon">
      <summary>В операторе if найден пустой оператор.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImpossibleConversion">
      <summary>Указанное преобразование или приведение невозможно.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FinalPrecludesAbstract">
      <summary>Параметры final и abstract нельзя использовать одновременно.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInstance">
      <summary>Требуется экземпляр.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotBeAbstract">
      <summary>Не может быть абстрактным, если класс не обозначен как абстрактный.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidBaseTypeForEnum">
      <summary>Базовым типом enum должен быть тип целочисленного примитива.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotInstantiateAbstractClass">
      <summary>Создать экземпляр абстрактного класса невозможно.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayMayBeCopied">
      <summary>Присвоение массива JScript объекту <see cref="T:System.Array" /> может привести к копированию массива.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBeStatic">
      <summary>Статические методы не могут быть абстрактными.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticIsAlreadyFinal">
      <summary>Тип статических методов не может быть final.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotOverride">
      <summary>Статические методы не могут переопределять методы базового класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotHide">
      <summary>Для статических методов нельзя скрыть методы базового класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesOverride">
      <summary>Методы <see cref="T:Microsoft.JScript.Expando" /> не могут переопределять методы базового класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalParamArrayAttribute">
      <summary>У списка переменных аргументов должен быть тип "массив".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesAbstract">
      <summary>Методы <see cref="T:Microsoft.JScript.Expando" /> не могут быть абстрактными.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ShouldBeAbstract">
      <summary>У функции без основной части должен быть тип abstract.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadModifierInInterface">
      <summary>Этот модификатор нельзя использовать для элемента интерфейса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VarIllegalInInterface">
      <summary>Не удается объявить переменные в интерфейсе.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InterfaceIllegalInInterface">
      <summary>Интерфейсы не могут быть объявлены в interface.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoVarInEnum">
      <summary>При объявлении элемента enum не следует использовать ключевое слово var.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidImport">
      <summary>Оператор import импорта в данном контексте является недопустимым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumNotAllowed">
      <summary>Определение enum в данном контексте запрещено.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeTarget">
      <summary>Этот атрибут является недопустимым для данного типа объявления.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageInWrongContext">
      <summary>В данном контексте определение пакета запрещено.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ConstructorMayNotHaveReturnType">
      <summary>У конструктора не может быть типа возвращаемого значения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAndPackagesAllowed">
      <summary>В библиотеке допускается использование только классов и пакетов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidDebugDirective">
      <summary>Недопустимая директива отладки.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CustomAttributeUsedMoreThanOnce">
      <summary>Данный тип атрибута должен быть уникальным.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NestedInstanceTypeCannotBeExtendedByStatic">
      <summary>Нестатический вложенный тип можно расширить только с помощью нестатического вложенного типа того же класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PropertyLevelAttributesMustBeOnGetter">
      <summary>Предназначенный для свойства атрибут должен быть задан в методе доступа get, если метод доступа get существует.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadThrow">
      <summary>У оператора throw должен быть аргумент, если он не находится внутри блока catch оператора try.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ParamListNotLast">
      <summary>Список переменных аргументов должен быть последним аргументом.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchType">
      <summary>Не удалось найти тип.Возможно, отсутствует ссылка на сборку.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadOctalLiteral">
      <summary>Восьмеричный литерал с неправильным форматом интерпретирован как десятичный литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InstanceNotAccessibleFromStatic">
      <summary>В области static нельзя получить доступ к не статическому элементу.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticRequiresTypeName">
      <summary>Для доступа к статическому члену следует использовать имя класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonStaticWithTypeName">
      <summary>К не статическому элементу нельзя получить доступ с помощью имени класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchStaticMember">
      <summary>У типа нет такого члена типа static.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectLoopCondition">
      <summary>Условие цикла не может содержать вызов функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpectedAssembly">
      <summary>Требуется сборка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssemblyAttributesMustBeGlobal">
      <summary>Настраиваемые атрибуты сборки не могут входить в состав другой конструкции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesStatic">
      <summary>Методы <see cref="T:Microsoft.JScript.Expando" /> не могут быть статическими.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateMethod">
      <summary>Имя, типы параметров и тип возвращаемого значения этого метода совпадают с соответствующими характеристиками другого метода в данном классе.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAnExpandoFunction">
      <summary>Элементы класса, используемые в качестве конструкторов, должны быть обозначены как функции <see cref="T:Microsoft.JScript.Expando" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidVersionString">
      <summary>Недопустимая строка версии.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExecutablesCannotBeLocalized">
      <summary>Исполняемые файлы не могут быть локализованы; свойство <see cref="P:System.Reflection.AssemblyCultureAttribute.Culture" /> всегда должно быть пустым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringConcatIsSlow">
      <summary>Использование оператора "плюс" — это медленный способ сцепления строк.Вместо него рекомендуется использовать класс <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidInDebugger">
      <summary>В отладчике нельзя использовать условные директивы и переменные компиляции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoMustBePublic">
      <summary>Методы <see cref="T:Microsoft.JScript.Expando" /> должны быть открытыми.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DelegatesShouldNotBeExplicitlyConstructed">
      <summary>Делегаты не должны быть построены явно; просто воспользуйтесь именем метода.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImplicitlyReferencedAssemblyNotFound">
      <summary>Указанная сборка зависит от другой сборки, на которую не была создана ссылка, или найти которую не удалось.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversion">
      <summary>Возможно, во время выполнения произошел сбой преобразования.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversionFromString">
      <summary>Преобразование строки в число или логическое значение выполняется медленно и может закончиться сбоем во время выполнения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidResource">
      <summary>Этот файл не является допустимым файлом .resources.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongUseOfAddressOf">
      <summary>Адрес оператора можно использовать только в списке аргументов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantType">
      <summary>Указанный тип не является CLS-совместимым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MemberTypeCLSCompliantMismatch">
      <summary>Член класса нельзя обозначить как CLS-совместимый, поскольку сам класс не обозначен как CLS-совместимый.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeAssemblyCLSCompliantMismatch">
      <summary>Тип нельзя обозначить как CLS-совместимый, поскольку сборка не обозначена как CLS-совместимая.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleAssemblyReference">
      <summary>Упомянутая сборка является несовместимой.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidAssemblyKeyFile">
      <summary>Использован недопустимый файл ключа сборки.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeNameTooLong">
      <summary>Полное имя типа слишком длинное.Оно не должно превышать 1 024 знака.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MemberInitializerCannotContainFuncExpr">
      <summary>Инициализатор элемента не может содержать выражение функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantAssignThis">
      <summary>Не удается выполнить присвоение this.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NumberExpected">
      <summary>Требуется число.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FunctionExpected">
      <summary>Требовалась функция.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotAssignToFunctionResult">
      <summary>Не удается выполнить присвоение результату функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringExpected">
      <summary>Требуется строка.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DateExpected">
      <summary>Требуется объект-дата.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ObjectExpected">
      <summary>Требуется объект.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalAssignment">
      <summary>Недопустимое присвоение.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndefinedIdentifier">
      <summary>Не определен идентификатор.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BooleanExpected">
      <summary>Не удалось найти логическое значение.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VBArrayExpected">
      <summary>Необходим объект VBArray.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumeratorExpected">
      <summary>Требуется объект-перечислитель.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpExpected">
      <summary>Нужен объект <see cref="T:Microsoft.JScript.RegExpObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpSyntax">
      <summary>Синтаксическая ошибка в регулярном выражении.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UncaughtException">
      <summary>Возникло исключение, которое не удалось перехватить.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPrototype">
      <summary>У этой функции отсутствует допустимый прототип объекта.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIEncodeError">
      <summary>Декодируемый универсальный код ресурса содержит недопустимый знак.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIDecodeError">
      <summary>Недопустимая кодировка декодируемого универсального кода ресурса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FractionOutOfRange">
      <summary>Количество десятичных знаков выходит за пределы допустимого диапазона.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PrecisionOutOfRange">
      <summary>Точность выходит за пределы допустимого диапазона.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthConstructIncorrect">
      <summary>Длина массива должна быть конечным положительным целым.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthAssignIncorrect">
      <summary>Длина массива должна быть конечным положительным числом.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedArrayObject">
      <summary>Элемент "|" не является объектом-массивом.Требуется объект-массив.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoConstructor">
      <summary>Такой конструктор отсутствует.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalEval">
      <summary>Объект <see cref="T:Microsoft.JScript.Eval" /> нельзя вызывать по псевдониму.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotYetImplemented">
      <summary>Еще не реализовано.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustProvideNameForNamedParameter">
      <summary>Указание неопределенного или пустого имени для именованного параметра невозможно.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateNamedParameter">
      <summary>Дублирует именованный параметр.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingNameParameter">
      <summary>Заданное имя именованного параметра не является именем формальных параметров.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MoreNamedParametersThanArguments">
      <summary>Задано слишком мало аргументов.Количество имен именованных параметров не может превышать количество переданных аргументов.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonSupportedInDebugger">
      <summary>Не удается вычислить выражение в отладчике.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssignmentToReadOnly">
      <summary>Нельзя присваивать полю или свойству, которые доступны только для чтения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WriteOnlyProperty">
      <summary>Свойство доступно только для записи.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncorrectNumberOfIndices">
      <summary>Количество индексов не соответствует размерности массива.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RefParamsNonSupportedInDebugger">
      <summary>Не удается вызвать в отладчике методы с параметрами ref.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotCallSecurityMethodLateBound">
      <summary>Методы безопасности <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> и <see cref="M:System.Security.CodeAccessPermission.Assert" /> нельзя вызвать с помощью позднего связывания.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseStaticSecurityAttribute">
      <summary>Статические атрибуты безопасности в JScript не поддерживаются.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonClsException">
      <summary>Целевой объект выбросил исключение, не относящееся к CLS.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalAborted">
      <summary>Вычисление функции прервано.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalTimedout">
      <summary>Тайм-аут вычисления функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSuspended">
      <summary>Сбой при вычислении функции.Поток приостановлен.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSleepWaitJoin">
      <summary>Сбой при вычислении функции.Поток находится в спящем режиме, режиме ожидания объекта или режиме ожидания завершения другого потока.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadState">
      <summary>Сбой при вычислении функции.Поток может содержать неверные данные.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadNotStarted">
      <summary>При вычислении функции произошел сбой, и поток не был запущен.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoFuncEvalAllowed">
      <summary>Вычисление функции прервано.Для запуска вычисления свойства выберите пункт Параметры в меню Сервис, а затем выберите элемент Отладка в представлении дерева.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadLocation">
      <summary>Если остановка произошла в данном месте программы, функцию вычислить невозможно.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalWebMethod">
      <summary>Не удается вызвать веб-метод в отладчике.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticVarNotAvailable">
      <summary>Статическая переменная недоступна.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeObjectNotAvailable">
      <summary>Объект типа для данного типа недоступен.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExceptionFromHResult">
      <summary>Исключение из-за использования HRESULT.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SideEffectsDisallowed">
      <summary>Исключение вызывает побочные эффекты и не будет оцениваться.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSField">
      <summary>Поддерживает все поля в JScript.Этот класс является базовым для всех полей, определенных JScript.Этот класс принадлежит к категории привязки по имени.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSField" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.JSField.Attributes">
      <summary>Получает атрибуты, связанные с этим полем.</summary>
      <returns>
        <see cref="F:System.Reflection.FieldAttributes.PrivateScope" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.DeclaringType">
      <summary>Получает тип, объявляющий данное поле.</summary>
      <returns>Значение NULL во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldHandle">
      <summary>Получает дескриптор представления внутренних метаданных этого поля.</summary>
      <returns>Дескриптор представления внутренних метаданных этого поля.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldType">
      <summary>Возвращает тип данного поля.</summary>
      <returns>Тип <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSField.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в это поле указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSField.MemberType">
      <summary>Получает тип члена, которым является данное поле.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, because this class derives from <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.Name">
      <summary>Получает имя данного поля.</summary>
      <returns>Имя этого поля.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Тип, которым объявлен данный метод.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSFieldInfo">
      <summary>Создает оболочку для объекта <see cref="T:System.Reflection.FieldInfo" />. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Attributes">
      <summary>Получает атрибуты, связанные с этим полем.</summary>
      <returns>Побитовая комбинация значений перечисления.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.DeclaringType">
      <summary>Получает тип, объявляющий данное поле.</summary>
      <returns>Объект Type класса, в котором объявлен данный член.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldHandle">
      <summary>Получает дескриптор представления внутренних метаданных этого поля.</summary>
      <returns>Дескриптор представления внутренних метаданных этого поля.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldType">
      <summary>Возвращает тип данного поля.</summary>
      <returns>Тип этого поля.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащий нулевые элементы.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetValue(System.Object)">
      <summary>Получает значение поля.</summary>
      <returns>Значение поля.</returns>
      <param name="obj">Объект, значение поля которого будет возвращено.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в это поле указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.MemberType">
      <summary>Получает тип члена, которым является данное поле.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, because this class derives from <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Name">
      <summary>Получает имя данного поля.</summary>
      <returns>Имя этого поля.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Объект Type, используемый для получения этого метода.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)">
      <summary>Задает значение поля, используя заданное значение.</summary>
      <param name="obj">Объект, для которого будет установлено значение поля.</param>
      <param name="value">The value to assign to the field.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Задает значение поля, используя заданное значение, язык и региональные параметры, а также сведения о привязке.</summary>
      <param name="obj">Объект, для которого будет установлено значение поля.</param>
      <param name="value">Значение, присваиваемое полю.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Набор свойств, который позволяет осуществлять связывание, приведение типов аргументов и вызов элементов с помощью отражения.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="T:Microsoft.JScript.JSFunctionAttribute">
      <summary>Используется <see cref="T:Microsoft.JScript.JSFunctionAttributeEnum" /> для комментирования соглашений о вызовах методов и конструкторов, создаваемых компилятором JScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSFunctionAttribute" />, используя указанные соглашения о вызовах.</summary>
      <param name="value">Соглашение о вызовах метода или конструктора.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum,Microsoft.JScript.JSBuiltin)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSFunctionAttribute" />, используя указанные соглашения о вызовах.Этот атрибут позволяет идентифицировать заданную встроенную функцию.</summary>
      <param name="value">Соглашение о вызовах метода или конструктора.</param>
      <param name="builtinFunction">Встроенная функция, которую можно идентифицировать по этому атрибуту.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.GetAttributeValue">
      <summary>Получает соглашение о вызовах метода или конструктора.</summary>
      <returns>Соглашение о вызовах метода или конструктора.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSFunctionAttributeEnum">
      <summary>Задает соглашения о вызовах функций, созданных компилятором JScript.Используется с настраиваемым атрибутом <see cref="T:Microsoft.JScript.JSFunctionAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.None">
      <summary>Задает обычный метод платформы .NET Framework без особых соглашений о вызовах.Обычно не используется, так как в данном случае класс JSFunctionAttribute остается незадействованным.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments">
      <summary>Указывает, что третий параметр функции принадлежит к типу Object.Вызывающий объект должен передавать объект, с помощью которого осуществляется реализация объекта аргументов JScript. Обычно этим объектом является экземпляр <see cref="T:Microsoft.JScript.ArgumentsObject" />.В среде выполнения JScript предполагается, что если задано значение поля <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" />, заданы и значения полей <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame" /> и <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject">
      <summary>Указывает, что первый параметр функции принадлежит к типу Object и обычно носит имя <paramref name="thisob" />.Вызывающий объект должен передавать экземпляр объекта, для которого выполняется эта функция.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsNested">
      <summary>Указывает, что функция вложена в другую функцию JScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame">
      <summary>Указывает, что перед осуществлением вызова функция копирует свои локальные переменные в объект кадра стека, сохраненный средой выполнения JScript.После возвращения управления функции копирует переменные из кадра стека и заменяет ими локальные переменные.Этот флаг устанавливается для функций с вложенными функциями, которые обращаются к локальным переменным родительской функции.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs">
      <summary>Указывает, что функция принимает переменное число аргументов.Тип последнего параметра — массив значений типа Object, в котором содержатся все явно заданные аргументы.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine">
      <summary>Указывает, что второй параметр функции принадлежит к типу <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.Вызывающий объект должен передавать экземпляр <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />, из которого функция может извлечь инфраструктуру среды выполнения.В среде выполнения JScript предполагается, что если задано значение поля <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" />, задано и значение поля <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsExpandoMethod">
      <summary>Указывает, что функция является функцией конструктора для объекта на основе прототипа.Дополнительные сведения см. в разделах Объекты, основанные на прототипах и Модификатор expando.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsInstanceNestedClassConstructor">
      <summary>Указывает, что функция является конструктором для вложенного класса экземпляров.Первый параметр функции является экземпляром родительского класса.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction">
      <summary>Specifies the aggregate of <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" />, and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction">
      <summary>Specifies the aggregate of <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.IsNested" />, and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicNestedFunction">
      <summary>Задает объединение полей <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction" /> и <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSLocalField">
      <summary>Представляет локальную переменную.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.#ctor(System.String,System.RuntimeTypeHandle,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSLocalField" />, используя заданное имя, дескриптор и номер ячейки.</summary>
      <param name="name">Имя этого поля.</param>
      <param name="handle">Дескриптор представления внутренних метаданных этого поля.</param>
      <param name="slotNumber">Номер ячейки переменной.</param>
    </member>
    <member name="P:Microsoft.JScript.JSLocalField.FieldType">
      <summary>Возвращает тип данного поля.</summary>
      <returns>Тип этого поля.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.GetValue(System.Object)">
      <summary>Получает значение поля.</summary>
      <returns>Значение поля.</returns>
      <param name="obj">Объект, значение поля которого будет возвращено.</param>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Задает значение поля, используя заданное значение, язык и региональные параметры, а также сведения о привязке.</summary>
      <param name="obj">Объект, для которого будет установлено значение поля.</param>
      <param name="value">Значение, присваиваемое полю.</param>
      <param name="invokeAttr">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Набор свойств, который позволяет осуществлять связывание, приведение типов аргументов и вызов элементов с помощью отражения.</param>
      <param name="locale">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="T:Microsoft.JScript.JSMethod">
      <summary>Представляет метод JScript.Этот класс принадлежит к категории привязки по имени.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetBaseDefinition">
      <summary>Возвращает объект <see cref="T:System.Reflection.MethodInfo" /> для метода в прямом или косвенном базовом классе, в котором он был первоначально объявлен.</summary>
      <returns>Значение this во всех случаях.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот метод.</summary>
      <returns>Массив объектов <see cref="T:System.Object" />, содержащий нулевые элементы.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот метод, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that has zero elements.</returns>
      <param name="t">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetMethodImplementationFlags">
      <summary>Возвращает сведения о реализации этого метода.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> и <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Вызывает метод, используя заданные сведения.</summary>
      <returns>Значение, возвращаемое в результате вызова метода.</returns>
      <param name="obj">Объект, для которого вызывается метод.</param>
      <param name="options">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="parameters">Список аргументов для передачи в метод.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в этот метод указанный тип атрибута.</summary>
      <returns>Значение false во всех случаях.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.MemberType">
      <summary>Получает тип члена, которым является данный метод.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.MethodHandle">
      <summary>Получает дескриптор представления внутренних метаданных этого метода.</summary>
      <returns>Дескриптор представления внутренних метаданных этого метода.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Тип, которым объявлен данный метод.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReturnTypeCustomAttributes">
      <summary>Получает настраиваемые атрибуты для типа возвращаемого этим методом значения.</summary>
      <returns>Значение NULL во всех случаях.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSMethodInfo">
      <summary>Создает оболочку для объекта <see cref="T:System.Reflection.MethodInfo" />. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Attributes">
      <summary>Получает атрибуты, связанные с этим методом.</summary>
      <returns>Побитовая комбинация значений перечисления.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.DeclaringType">
      <summary>Получает тип, который объявляет данный метод.</summary>
      <returns>Объект Type класса, в котором объявлен данный член.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetBaseDefinition">
      <summary>Возвращает объект <see cref="T:System.Reflection.MethodInfo" /> для метода прямого или косвенного базового класса, в котором он был первоначально объявлен.</summary>
      <returns>Первая реализация этого метода в иерархии.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот метод.</summary>
      <returns>Массив, содержащий все настраиваемые атрибуты, вложенные в этот метод, или, в случае их отсутствия, массив нулевых элементов.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в этот метод, выполняя поиск только атрибутов заданного типа.</summary>
      <returns>Массив, содержащий все настраиваемые атрибуты, вложенные в этот метод, или, в случае их отсутствия, массив нулевых элементов.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetMethodImplementationFlags">
      <summary>Возвращает сведения о реализации этого метода.</summary>
      <returns>Побитовая комбинация значений перечисления.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetParameters">
      <summary>Получает параметры данного метода.</summary>
      <returns>Массив, содержащий сведения, соответствующие сигнатуре этого метода.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Вызывает метод, используя заданные сведения.</summary>
      <returns>Значение, возвращаемое в результате вызова метода.</returns>
      <param name="obj">Объект, для которого вызывается метод.</param>
      <param name="options">Побитовое сочетание значений перечисления, которое используется для управления привязкой.</param>
      <param name="binder">Объект, преобразующий фактический тип аргумента в формальный тип аргумента.</param>
      <param name="parameters">Список аргументов для передачи в метод.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, добавлен ли в этот метод указанный тип атрибута.</summary>
      <returns>Значение true, если в этот метод вложен один или несколько экземпляров заданного атрибута <paramref name="type" />, в противном случае — значение false.</returns>
      <param name="type">Искомый тип атрибута.</param>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MemberType">
      <summary>Получает тип члена, которым является данный метод.Указывает тип класса, производного от <see cref="T:System.Reflection.MemberInfo" />, который наследуется текущим классом.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, поскольку этот класс является производным от класса <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MethodHandle">
      <summary>Получает дескриптор представления внутренних метаданных этого метода.</summary>
      <returns>Дескриптор представления внутренних метаданных этого метода.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Name">
      <summary>Получает имя данного метода.</summary>
      <returns>Имя данного метода.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для извлечения данного экземпляра путем отражения.</summary>
      <returns>Объект Type, используемый для получения этого метода.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnType">
      <summary>Получает тип значения, возвращаемого этим методом.</summary>
      <returns>Тип значения, возвращаемого этим методом.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnTypeCustomAttributes">
      <summary>Получает настраиваемые атрибуты для типа возвращаемого этим методом значения.</summary>
      <returns>Настраиваемые атрибуты для типа возвращаемого этим методом значения.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.ToString">
      <summary>Возвращает строку, которая представляет метод.</summary>
      <returns>Строка, которая представляет метод.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSObject">
      <summary>Представляет объект в JScript.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSObject" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.AddField(System.String)">
      <summary>Добавляет заданное поле в объект.</summary>
      <returns>Новое поле, если оно было успешно добавлено.</returns>
      <param name="name">Имя добавляемого поля.</param>
    </member>
    <member name="F:Microsoft.JScript.JSObject.field_table">
      <summary>Хранит список полей, динамически добавляемых и удаляемых из объекта.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам, которые сопоставлены заданному имени.</summary>
      <returns>Массив членов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам текущего объекта скрипта.</summary>
      <returns>Массив объектов, содержащий все члены текущего объекта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)">
      <summary>Задает значение поля, которое было динамически добавлено в объект и сохранено в поле <see cref="F:Microsoft.JScript.JSObject.field_table" />.</summary>
      <param name="name">Имя поля, для которого следует задать значение.</param>
      <param name="value">Новое значение поля.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по членам объекта.</summary>
      <returns>Объект перечислителя, используемый для итерации по членам объекта.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>Adds the specified method to the object.<see cref="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" /> is not implemented in JScript.</summary>
      <returns>Значение NULL во всех случаях.</returns>
      <param name="name">Имя добавляемого метода.</param>
      <param name="method">Делегат для метода.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>Добавляет заданное свойство в объект.Этот метод не реализован в JScript.</summary>
      <returns>Значение NULL во всех случаях.</returns>
      <param name="name">Имя добавляемого свойства.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)">
      <summary>Удаляет заданный член из объекта.</summary>
      <param name="m">Имя удаляемого члена.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.ToString">
      <summary>Возвращает строку, которая представляет текущий объект.</summary>
      <returns>Строка, представляющая текущий объект.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSParser">
      <summary>Анализирует код JScript.Этот класс принадлежит к категории сканирования и синтаксического анализа.Дополнительные сведения о сканировании и синтаксическом анализе см. в статье Создание компилятора языка для платформы .NET Framework.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSParser.#ctor(Microsoft.JScript.Context)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSParser" />, задающего исходный код для анализа.</summary>
      <param name="context">Исходный код для анализа.</param>
    </member>
    <member name="M:Microsoft.JScript.JSParser.Parse">
      <summary>Анализирует исходный код.</summary>
      <returns>Корень дерева с абстрактным синтаксисом, созданного путем анализа кода.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSParser.ParseEvalBody">
      <summary>Анализирует исходный код.Этот метод следует использовать вместо метода <see cref="M:Microsoft.JScript.JSParser.Parse" />, если исходный код расположен внутри вызова метода eval.</summary>
      <returns>Корень дерева с абстрактным синтаксисом, созданного путем анализа кода.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSPrototypeObject">
      <summary>Добавляет функцию конструктора в объект <see cref="T:Microsoft.JScript.JSObject" /> для процессов раннего связывания.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSPrototypeObject.constructor">
      <summary>Хранит объект функции конструктора, который определяет объект на основе прототипа.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSScanner">
      <summary>Сканирует код JScript, выполняя поиск отдельных блоков кода или маркеров.Этот класс принадлежит к категории сканирования и синтаксического анализа.Дополнительные сведения о сканировании и синтаксическом анализе см. в статье Создание компилятора языка для платформы .NET Framework.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSScanner" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor(Microsoft.JScript.Context)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.JSScanner" />, задающего исходный код для сканирования.</summary>
      <param name="sourceContext">Исходный код для сканирования.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentLine">
      <summary>Получает текущий номер строки в коде.Это указатель, перемещающийся по мере сканирования кода.</summary>
      <returns>Текущий номер строки в коде.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentPosition(System.Boolean)">
      <summary>Получает текущую позицию в строке кода.Это указатель, перемещающийся по мере сканирования кода.</summary>
      <returns>Текущая позицию в строке кода.</returns>
      <param name="absolute">Этот параметр игнорируется.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetNextToken">
      <summary>Сканирует код, пытаясь найти следующий маркер.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetSourceCode">
      <summary>Получает исходный код, связанный с объектом этого сканера.</summary>
      <returns>Исходный код для сканирования.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStartLinePosition">
      <summary>Получает позицию в текстовой строке кода, с которой начинается первая строка текущего кода.Все строки кода хранятся в одной текстовой строке.Это указатель, перемещающийся по мере сканирования кода.</summary>
      <returns>Позицию в текстовой строке кода, с которой начинается первая строка текущего кода.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStringLiteral">
      <summary>Получает просканированную строку, в которой заменены все escape-последовательности.</summary>
      <returns>Просканированная строка, в которой заменены все escape-последовательности.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GotEndOfLine">
      <summary>Указывает, был ли достигнут конец строки после того, как сканер выполнил сканирование или подобрал маркер.</summary>
      <returns>Значение true, если конец строки достигнут; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsKeyword(Microsoft.JScript.JSToken)">
      <summary>Определяет, является ли заданный маркер ключевым словом в языке JScript.</summary>
      <returns>Значение true, если маркер является ключевым словом; в противном случае — значение false.</returns>
      <param name="token">Проверяемый маркер.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsOperator(Microsoft.JScript.JSToken)">
      <summary>Определяет, является ли заданный маркер оператором в языке JScript.</summary>
      <returns>Значение true, если маркер является оператором; в противном случае — значение false.</returns>
      <param name="token">Проверяемый маркер.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SetAuthoringMode(System.Boolean)">
      <summary>Устанавливает флаг, указывающий, работает ли сканер в режиме разработки.</summary>
      <param name="mode">Значение true для обозначения режима разработки; в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SetSource(Microsoft.JScript.Context)">
      <summary>Задает исходный код для сканирования.</summary>
      <param name="sourceContext">Исходный код для сканирования.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SkipMultiLineComment">
      <summary>Пропускает примечание, которое занимает несколько строк, и перемещает указатели, задающие текущую позицию в коде.</summary>
      <returns>Новая текущая позиция в строке кода.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSToken">
      <summary>Задает отдельные единицы кода, или маркеры, из которых образуется язык JScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.None">
      <summary>Без маркеров.Например, перед сканированием маркеров или в случае ошибки.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.EndOfFile">
      <summary>Конец сканируемого или анализируемого файла.This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.If">
      <summary>The if statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.For">
      <summary>The for statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Do">
      <summary>The do statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.While">
      <summary>The while statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Continue">
      <summary>The continue statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Break">
      <summary>The break statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Return">
      <summary>The return statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Import">
      <summary>The import statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.With">
      <summary>The with statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Switch">
      <summary>The switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Throw">
      <summary>The throw statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Try">
      <summary>The try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Package">
      <summary>The package statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Internal">
      <summary>The internal modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Abstract">
      <summary>The abstract modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Public">
      <summary>The public modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Static">
      <summary>The static modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Private">
      <summary>The private modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Protected">
      <summary>The protected modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Final">
      <summary>The final modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Event">
      <summary>The event reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Var">
      <summary>The var statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Const">
      <summary>The const statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Class">
      <summary>The class statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Function">
      <summary>The function statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftCurly">
      <summary>The { symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Semicolon">
      <summary>The ; symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Null">
      <summary>The null literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.True">
      <summary>The true literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.False">
      <summary>The false literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.This">
      <summary>The this statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Identifier">
      <summary>Идентификатор.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StringLiteral">
      <summary>Числовой литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.IntegerLiteral">
      <summary>Целочисленный литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.NumericLiteral">
      <summary>Числовой литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftParen">
      <summary>The ( symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftBracket">
      <summary>The [ symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.AccessField">
      <summary>Символ метода доступа к полю ..</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.FirstOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalNot">
      <summary>Логический оператор НЕ !.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseNot">
      <summary>Битовый оператор НЕ ~.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Delete">
      <summary>The delete operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Void">
      <summary>The void operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Typeof">
      <summary>The typeof operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Increment">
      <summary>Оператор инкремента ++.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Decrement">
      <summary>Оператор декремента --.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.FirstBinaryOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Plus">
      <summary>Оператор сложения +.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Minus">
      <summary>Оператор вычитания -.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalOr">
      <summary>Логический оператор ИЛИ ||.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalAnd">
      <summary>Логический оператор И &amp;&amp;.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOr">
      <summary>The | bitwise OR operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXor">
      <summary>Битовый оператор исключающего ИЛИ ^.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAnd">
      <summary>Битовый оператор И &amp;.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Equal">
      <summary>Оператор сравнения для определения равенства ==.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.NotEqual">
      <summary>Оператор сравнения для определения неравенства !=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StrictEqual">
      <summary>The === identity comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StrictNotEqual">
      <summary>The !== identity comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThan">
      <summary>The &gt; relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LessThan">
      <summary>The &lt; relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LessThanEqual">
      <summary>The &lt;= relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThanEqual">
      <summary>The &gt;= relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftShift">
      <summary>Битовый оператор сдвига влево &lt;&lt;.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightShift">
      <summary>Битовый оператор сдвига вправо &gt;&gt;.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShift">
      <summary>Оператор сдвига вправо без знака &gt;&gt;&gt;.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Multiply">
      <summary>Оператор умножения *.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Divide">
      <summary>Оператор деления /.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Modulo">
      <summary>Оператор вычисления модуля %.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastPPOperator">
      <summary>Элемент перечисления прототипов, который позволяет проводить такие сравнения, как if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastPPOperator then.... Операторы PPOperator соответствуют операциям, которые допускают предварительную обработку.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Instanceof">
      <summary>The instanceof operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.In">
      <summary>The in operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Assign">
      <summary>Оператор назначения =.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PlusAssign">
      <summary>Оператор присвоения сложения +=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.MinusAssign">
      <summary>Оператор присвоения вычитания -=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.MultiplyAssign">
      <summary>Оператор присвоения умножения *=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.DivideAssign">
      <summary>Оператор присвоения деления /=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAndAssign">
      <summary>Битовый оператор присвоения И &amp;=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOrAssign">
      <summary>Битовый оператор присвоения ИЛИ |=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXorAssign">
      <summary>Битовый оператор присвоения исключающего ИЛИ ^=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ModuloAssign">
      <summary>Оператор присвоения модуля %=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftShiftAssign">
      <summary>Оператор присваивания сдвига влево &lt;&lt;=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightShiftAssign">
      <summary>Оператор присваивания сдвига вправо &gt;&gt;=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShiftAssign">
      <summary>Оператор присваивания сдвига вправо без знака &gt;&gt;&gt;=.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastAssign">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.Assign &lt;= token &amp;&amp; token &lt;= JSToken.LastAssign then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastBinaryOp">
      <summary>Элемент перечисления прототипов, который позволяет проводить такие сравнения, как if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ConditionalIf">
      <summary>The ? ternary operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Colon">
      <summary>The : ternary operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Comma">
      <summary>Оператор "Запятая" ,.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastOp">
      <summary>Элемент перечисления прототипов, который позволяет проводить такие сравнения, как if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Case">
      <summary>The case keyword of a switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Catch">
      <summary>The catch keyword of a try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Debugger">
      <summary>The debugger statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Default">
      <summary>The default keyword of a switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Else">
      <summary>Ключевое слово else оператора if.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Export">
      <summary>The export reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Extends">
      <summary>The extends keyword of a class statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Finally">
      <summary>The finally keyword of a try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Get">
      <summary>The get keyword of a function get statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Implements">
      <summary>Ключевое слово implements оператора class или interface.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Interface">
      <summary>The interface statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.New">
      <summary>The new operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Set">
      <summary>The set keyword of a function set statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Super">
      <summary>The super statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightParen">
      <summary>The ) symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightCurly">
      <summary>The } symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightBracket">
      <summary>The ] symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessorConstant">
      <summary>Константа препроцессора.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Comment">
      <summary>Текст комментария.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnterminatedComment">
      <summary>Примечание без признака завершения.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Assert">
      <summary>The assert reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Boolean">
      <summary>The boolean data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Byte">
      <summary>The byte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Char">
      <summary>The char data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Decimal">
      <summary>The decimal data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Double">
      <summary>The double data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.DoubleColon">
      <summary>The :: reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Enum">
      <summary>The enum statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ensure">
      <summary>The ensure reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Float">
      <summary>The float data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Goto">
      <summary>The goto reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Int">
      <summary>The int data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Invariant">
      <summary>The invariant reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Long">
      <summary>The long data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Namespace">
      <summary>The namespace reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Native">
      <summary>The native reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Require">
      <summary>The require reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Sbyte">
      <summary>The sbyte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Short">
      <summary>The short data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Synchronized">
      <summary>The synchronized reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Transient">
      <summary>The transient reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Throws">
      <summary>The throws reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ParamArray">
      <summary>The ... reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Volatile">
      <summary>The volatile reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ushort">
      <summary>The ushort data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Uint">
      <summary>The uint data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ulong">
      <summary>The ulong data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Use">
      <summary>The use reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.EndOfLine">
      <summary>Конец анализируемой строки.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessDirective">
      <summary>Директивы препроцессора.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSVariableField">
      <summary>Поддерживает доступные поля в JScript.Это базовый класс для параметров, локальных переменных, глобальных переменных и членов класса.</summary>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Attributes">
      <summary>Получает атрибуты, связанные с этим полем.</summary>
      <returns>Побитовая комбинация значений перечисления.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.DeclaringType">
      <summary>Получает тип, объявляющий данное поле.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.FieldType">
      <summary>Возвращает тип данного поля.</summary>
      <returns>Тип этого поля.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSVariableField.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив, содержащий настраиваемые атрибуты, вложенные в это поле.</summary>
      <returns>Массив, содержащий все настраиваемые атрибуты, вложенные в это поле, или, в случае их отсутствия, массив нулевых элементов.</returns>
      <param name="inherit">Значение true, чтобы выполнить поиск в иерархии наследования этого члена для поиска атрибутов.</param>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Name">
      <summary>Получает имя данного поля.</summary>
      <returns>Имя этого поля.</returns>
    </member>
    <member name="T:Microsoft.JScript.LateBinding">
      <summary>Представляет ссылку на член класса, вызываемое выражение или имя переменной.Этот класс пытается разрешить ссылку на правильное значение во время выполнения.</summary>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.LateBinding" /> с помощью указанного идентификатора.</summary>
      <param name="name">Строка, которая используется для идентификации ссылки привязки.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.LateBinding" /> с помощью указанного идентификатора и объекта.</summary>
      <param name="name">Строка, которая используется для идентификации ссылки привязки.</param>
      <param name="obj">Объект, для которого определена ссылка привязки.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.Call(System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Разрешает ссылку привязки, вызвав член.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="arguments">Аргументы для передачи члену.</param>
      <param name="construct">Значение true для использования метода конструирования; в противном случае — значение false.</param>
      <param name="brackets">Значение true, если ссылка привязки содержит квадратные скобки; в противном случае — значение false.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Разрешает ссылку привязки, вызвав член.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="thisob">Объект, для которого определена ссылка привязки.</param>
      <param name="val">Сведения о вызываемом члене.</param>
      <param name="arguments">Аргументы для передачи члену.</param>
      <param name="construct">Значение true для использования метода конструирования; в противном случае — значение false.</param>
      <param name="brackets">Значение true, если ссылка привязки содержит квадратные скобки; в противном случае — значение false.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue2(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Разрешает ссылку привязки, вызвав член.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="val">Сведения о вызываемом члене.</param>
      <param name="thisob">Объект, для которого определена ссылка привязки.</param>
      <param name="arguments">Аргументы для передачи члену.</param>
      <param name="construct">Значение true для использования метода конструирования; в противном случае — значение false.</param>
      <param name="brackets">Значение true, если ссылка привязки содержит квадратные скобки; в противном случае — значение false.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.Delete">
      <summary>Удаляет член ссылки привязки из объекта, для которого определена эта ссылка.</summary>
      <returns>Значение true, если член успешно удален; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.DeleteMember(System.Object,System.String)">
      <summary>Удаляет заданный член из указанного объекта.</summary>
      <returns>Значение true, если член успешно удален; в противном случае — значение false.</returns>
      <param name="obj">Объект, из которого нужно удалить член.</param>
      <param name="name">Удаляемый член.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.GetNonMissingValue">
      <summary>Получает значение ссылки привязки и преобразует значение <see cref="T:Microsoft.JScript.Missing" /> в значение NULL.</summary>
      <returns>Значение ссылки привязки; в противном случае — значение NULL.</returns>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.GetValue2">
      <summary>Получает значение ссылки привязки и выбрасывает исключение, если ее не удается разрешить.</summary>
      <returns>Значение ссылки привязки.</returns>
    </member>
    <member name="F:Microsoft.JScript.LateBinding.obj">
      <summary>Хранит ссылку на объект, для которого определена ссылка привязки.</summary>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.SetIndexedPropertyValueStatic(System.Object,System.Object[],System.Object)">
      <summary>Задает индексированное свойство.</summary>
      <param name="obj">Объект, для которого определена ссылка привязки.</param>
      <param name="arguments">Аргументы для передачи члену.</param>
      <param name="value">Новое значение свойства.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.SetValue(System.Object)">
      <summary>Задает свойство.</summary>
      <param name="value">Новое значение свойства.</param>
    </member>
    <member name="T:Microsoft.JScript.LenientArrayPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.The <see cref="T:Microsoft.JScript.LenientArrayPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.concat">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ArrayConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.join">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.pop">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.push">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.reverse">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.shift">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.slice">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.sort">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.splice">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toLocaleString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.unshift">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.ArrayPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientBooleanPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.BooleanPrototype" />.The <see cref="T:Microsoft.JScript.LenientBooleanPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.BooleanConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.valueOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)" /> класса <see cref="T:Microsoft.JScript.BooleanPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDateConstructor">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.DateConstructor" />.Класс <see cref="T:Microsoft.JScript.LenientDateConstructor" /> принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.parse">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DateConstructor.parse(System.String)" /> класса <see cref="T:Microsoft.JScript.DateConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.UTC">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DateConstructor" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDatePrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.DatePrototype" />.The <see cref="T:Microsoft.JScript.LenientDatePrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.DateConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDay">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getDay(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getFullYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getHours">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getHours(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMilliseconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMinutes">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMonth">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getSeconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTime">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getTime(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTimezoneOffset">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDate">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDay">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCFullYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCHours">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMilliseconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMinutes">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMonth">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCSeconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getVarDate">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.getYear(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setDate">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setFullYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setHours">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMilliseconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMinutes">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMonth">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setSeconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setTime">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCDate">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCFullYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCHours">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMilliseconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMinutes">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMonth">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCSeconds">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setYear">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toDateString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toGMTString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleDateString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleTimeString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toTimeString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toUTCString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.valueOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)" /> класса <see cref="T:Microsoft.JScript.DatePrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientEnumeratorPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.EnumeratorPrototype" />.The <see cref="T:Microsoft.JScript.LenientEnumeratorPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.atEnd">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.EnumeratorConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.item">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)" /> класса <see cref="T:Microsoft.JScript.EnumeratorPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveFirst">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)" /> класса <see cref="T:Microsoft.JScript.EnumeratorPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveNext">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)" /> класса <see cref="T:Microsoft.JScript.EnumeratorPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientErrorPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.ErrorPrototype" />.The <see cref="T:Microsoft.JScript.LenientErrorPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.name">
      <summary>Хранит строку, содержащую имя подтипа ошибки.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.ErrorPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientFunctionPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.FunctionPrototype" />.The <see cref="T:Microsoft.JScript.LenientFunctionPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.apply">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.call">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.FunctionPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.FunctionConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.FunctionPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientGlobalObject">
      <summary>Хранит объекты функции конструктора, сведения о типе данных и объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.GlobalObject" />.The <see cref="T:Microsoft.JScript.LenientGlobalObject" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ActiveXObject">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> constructor function object.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Array">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ArrayConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ArrayConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.boolean">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript boolean.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Boolean">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.BooleanConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.BooleanConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.byte">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript byte.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.char">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript char.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Date">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.LenientDateConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.LenientDateConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decimal">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript decimal.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURI">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURIComponent">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.double">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript double.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURI">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURIComponent">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Enumerator">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.EnumeratorConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.EnumeratorConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Error">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.escape">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.escape(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.eval">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.eval(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.EvalError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.float">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript float.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Function">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.FunctionConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.GetObject">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.Infinity">
      <summary>Представляет плюс бесконечность.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.int">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript int.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isFinite">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isNaN">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.long">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript long.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Math">
      <summary>Возвращает или задает объект <see cref="T:Microsoft.JScript.LenientMathObject" />.</summary>
      <returns>A <see cref="T:Microsoft.JScript.LenientMathObject" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.NaN">
      <summary>Представляет значение, не являющееся числом (NaN).</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Number">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.NumberConstructor" /> constructor function object.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.NumberConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Object">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ObjectConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ObjectConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseFloat">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseInt">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RangeError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ReferenceError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RegExp">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.RegExpConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.RegExpConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.sbyte">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript sbyte.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngine">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngine" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineBuildVersion">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMajorVersion">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMinorVersion">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.short">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript short.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.String">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.LenientStringConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.LenientStringConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.SyntaxError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.TypeError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.uint">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript uint.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ulong">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript ulong.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.undefined">
      <summary>Представляет значение, равное NULL.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.unescape">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.GlobalObject.unescape(System.Object)" /> класса <see cref="T:Microsoft.JScript.GlobalObject" />.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.URIError">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.ErrorConstructor" /> и инициализированный как <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.ErrorConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ushort">
      <summary>Хранит управляемый тип, соответствующий типу данных JScript ushort.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.VBArray">
      <summary>Возвращает или задает объект на основе прототипа, определенный при помощи объекта функции конструктора <see cref="T:Microsoft.JScript.VBArrayConstructor" />.</summary>
      <returns>Объект <see cref="T:Microsoft.JScript.VBArrayConstructor" />.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.void">
      <summary>Хранит управляемый тип, соответствующий возвращаемому значению функции, которая не возвращает значение.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientMathObject">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.MathObject" />.Класс <see cref="T:Microsoft.JScript.LenientMathObject" /> принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.abs">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.abs(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.acos">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.acos(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.asin">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.asin(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.atan(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan2">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.ceil">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.ceil(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.cos">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.cos(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.E">
      <summary>Хранит значение, представляющее постоянную Эйлера — основание натурального логарифма, заданного постоянной e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.exp">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.exp(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.floor">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.floor(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN10">
      <summary>Хранит значение, представляющее логарифм 10 с основанием e — натуральный логарифм 10.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN2">
      <summary>Хранит значение, представляющее логарифм 2 с основанием e — натуральный логарифм 2.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.log">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.log(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG10E">
      <summary>Хранит значение, представляющее логарифм e с основанием 10 — десятичный логарифм e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG2E">
      <summary>Хранит значение, представляющее логарифм e с основанием 2 — двоичный логарифм e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.max">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.min">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.PI">
      <summary>Хранит значение, представляющее отношение длины окружности к ее диаметру, определяемое константой π.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.pow">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.random">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.random" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.round">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.round(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sin">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.sin(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sqrt">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.sqrt(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT1_2">
      <summary>Stores a value that represents the following equivalent values: (√2)/2, √(½), and 1/(√2).</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT2">
      <summary>Хранит значение, представляющее √2.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.tan">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.MathObject.tan(System.Double)" /> класса <see cref="T:Microsoft.JScript.MathObject" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientNumberPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.NumberPrototype" />.The <see cref="T:Microsoft.JScript.LenientNumberPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.NumberConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toExponential">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toFixed">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.NumberPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toLocaleString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)" /> класса <see cref="T:Microsoft.JScript.NumberPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toPrecision">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.NumberPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.NumberPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.valueOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)" /> класса <see cref="T:Microsoft.JScript.NumberPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientObjectPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.The <see cref="T:Microsoft.JScript.LenientObjectPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.ObjectConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.hasOwnProperty">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.isPrototypeOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.propertyIsEnumerable">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toLocaleString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)" /> класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.valueOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)" /> класса <see cref="T:Microsoft.JScript.ObjectPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientRegExpPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.RegExpPrototype" />.The <see cref="T:Microsoft.JScript.LenientRegExpPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.compile">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.RegExpConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.exec">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.RegExpPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.test">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.RegExpPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.RegExpPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringConstructor">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.StringConstructor" />.Класс <see cref="T:Microsoft.JScript.LenientStringConstructor" /> принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringConstructor.fromCharCode">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])" /> класса <see cref="T:Microsoft.JScript.StringConstructor" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.StringPrototype" />.The <see cref="T:Microsoft.JScript.LenientStringPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.anchor">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.big">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.big(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.blink">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.blink(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.bold">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.bold(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charAt">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charCodeAt">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.concat">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.StringConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fixed">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.fixed(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontcolor">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontsize">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.indexOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.italics">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.italics(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.lastIndexOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.link">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.localeCompare">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.match">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.replace">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.search">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.slice">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.small">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.small(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.split">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.strike">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.strike(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sub">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.sub(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substr">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substring">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sup">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.sup(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleLowerCase">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleUpperCase">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLowerCase">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toString">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.toString(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toUpperCase">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.valueOf">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)" /> класса <see cref="T:Microsoft.JScript.StringPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientVBArrayPrototype">
      <summary>Хранит объекты, представляющие статические методы класса <see cref="T:Microsoft.JScript.VBArrayPrototype" />.The <see cref="T:Microsoft.JScript.LenientVBArrayPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.constructor">
      <summary>Хранит ссылку на объект <see cref="T:Microsoft.JScript.VBArrayConstructor" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.dimensions">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.getItem">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])" /> класса <see cref="T:Microsoft.JScript.VBArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.lbound">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.VBArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.toArray">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)" /> класса <see cref="T:Microsoft.JScript.VBArrayPrototype" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.ubound">
      <summary>Хранит объект, представляющий статический метод <see cref="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)" /> класса <see cref="T:Microsoft.JScript.VBArrayPrototype" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.MathObject">
      <summary>Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.abs(System.Double)">
      <summary>Вычисляет абсолютное значение заданного числа.</summary>
      <returns>Абсолютное значение параметра <paramref name="d" />.</returns>
      <param name="d">Число, для которого нужно вычислить абсолютное значение.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.acos(System.Double)">
      <summary>Вычисляет арккосинус заданного числа.</summary>
      <returns>Арккосинус <paramref name="x" /> в радианах.</returns>
      <param name="x">Число, для которого нужно вычислить арккосинус.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.asin(System.Double)">
      <summary>Вычисляет арксинус заданного числа.</summary>
      <returns>Арксинус <paramref name="x" /> в радианах.</returns>
      <param name="x">Число, для которого нужно вычислить арксинус.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan(System.Double)">
      <summary>Вычисляет арктангенс заданного числа.</summary>
      <returns>Арктангенс <paramref name="x" /> в радианах.</returns>
      <param name="x">Число, для которого нужно вычислить арктангенс.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)">
      <summary>Вычисляет арктангенс частного заданных чисел.</summary>
      <returns>Арктангенс <paramref name="dy" />/<paramref name="dx" /> в радианах.</returns>
      <param name="dy">Числитель частного, для которого нужно вычислить арктангенс.</param>
      <param name="dx">Знаменатель частного, для которого нужно вычислить арктангенс.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.ceil(System.Double)">
      <summary>Вычисляет ближайшее сверху целое для заданного числа — наименьшее целое число, которое больше или равно заданному значению.</summary>
      <returns>Ближайшее сверху целое величины <paramref name="x" />.</returns>
      <param name="x">Число, для которого нужно вычислить ближайшее сверху целое.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.cos(System.Double)">
      <summary>Вычисляет косинус заданного угла.</summary>
      <returns>Косинус <paramref name="x" />.</returns>
      <param name="x">Угол, измеряемый в радианах.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.E">
      <summary>Хранит значение, представляющее постоянную Эйлера, которая является основанием натурального логарифма, заданного постоянной e.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.exp(System.Double)">
      <summary>Вычисляет число e, возведенное в заданную степень, где e — постоянная Эйлера, основание натурального логарифма.</summary>
      <returns>Число e, возведенное в степень <paramref name="x" />.</returns>
      <param name="x">Степень, в которую нужно возвести число e.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.floor(System.Double)">
      <summary>Вычисляет ближайшее снизу целое для заданного числа — наибольшее целое число, которое меньше или равно заданному значению.</summary>
      <returns>Ближайшее снизу целое величины <paramref name="x" />.</returns>
      <param name="x">Число, для которого нужно вычислить ближайшее снизу целое.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LN10">
      <summary>Хранит значение, представляющее логарифм 10 с основанием e — натуральный логарифм 10.</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LN2">
      <summary>Хранит значение, представляющее логарифм 2 с основанием e — натуральный логарифм 2.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.log(System.Double)">
      <summary>Вычисляет основание логарифма e заданного числа — натурального логарифма заданной величины.</summary>
      <returns>Натуральный логарифм <paramref name="x" />.</returns>
      <param name="x">Число, для которого нужно вычислить натуральный логарифм.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LOG10E">
      <summary>Хранит значение, представляющее логарифм e с основанием 10 — десятичный логарифм e.</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LOG2E">
      <summary>Хранит значение, представляющее логарифм e с основанием 2 — двоичный логарифм e.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])">
      <summary>Возвращает большее из двух или более заданных чисел.</summary>
      <returns>Наибольшее из чисел <paramref name="x" />, <paramref name="y" /> и чисел, содержащихся в параметре <paramref name="args" />.</returns>
      <param name="x">Первое число для сравнения.</param>
      <param name="y">Второе число для сравнения.</param>
      <param name="args">Дополнительные числа для сравнения.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])">
      <summary>Возвращает наименьшее из двух или более заданных чисел.</summary>
      <returns>Наименьшее из чисел <paramref name="x" />, <paramref name="y" /> и чисел, содержащихся в параметре <paramref name="args" />.</returns>
      <param name="x">Первое число для сравнения.</param>
      <param name="y">Второе число для сравнения.</param>
      <param name="args">Дополнительные числа для сравнения.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.PI">
      <summary>Хранит значение, представляющее отношение длины окружности к ее диаметру, определяемое константой π.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)">
      <summary>Вычисляет заданное число, возведенное в указанную степень.</summary>
      <returns>Число <paramref name="dx" />, возведенное в степень <paramref name="dy" />.</returns>
      <param name="dx">Число, возведенное в степень <paramref name="dy" />.</param>
      <param name="dy">Степень, в которую нужно возвести число <paramref name="dx" />.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.random">
      <summary>Создает случайное число в диапазоне от 0 до 1.Этот метод не создает криптографически надежное случайное число.</summary>
      <returns>Число, которое больше или равно 0 и меньше 1.</returns>
    </member>
    <member name="M:Microsoft.JScript.MathObject.round(System.Double)">
      <summary>Округляет заданное число в большую или меньшую сторону до ближайшего целого.</summary>
      <returns>Если дробная часть параметра <paramref name="d" /> меньше половины разности между ближайшими целыми числами сверху и снизу, параметр <paramref name="d" /> округляется в меньшую сторону.Если дробная часть параметра <paramref name="d" /> равна половине разности между ближайшими целыми числами сверху и снизу или превышает это значение, параметр <paramref name="d" /> округляется в большую сторону.</returns>
      <param name="d">Округляемое число.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.sin(System.Double)">
      <summary>Вычисляет синус заданного угла.</summary>
      <returns>Синус <paramref name="x" />.</returns>
      <param name="x">Угол, измеряемый в радианах.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.sqrt(System.Double)">
      <summary>Вычисляет квадратный корень заданного числа.</summary>
      <returns>Квадратный корень значения <paramref name="x" />.</returns>
      <param name="x">Число, для которого нужно вычислить квадратный корень.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.SQRT1_2">
      <summary>Хранит значение, представляющее следующие эквивалентные значения: (√2)/2, √(Ѕ) и 1/(√2).</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.SQRT2">
      <summary>Хранит значение, представляющее √2.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.tan(System.Double)">
      <summary>Вычисляет тангенс заданного угла.</summary>
      <returns>Тангенс <paramref name="x" />.</returns>
      <param name="x">Угол, измеряемый в радианах.</param>
    </member>
    <member name="T:Microsoft.JScript.MemberInfoInitializer">
      <summary>Определяет методы, которые должен реализовать внешний COM-объект.Этот интерфейс используется внешней COM-реализацией для представления ее объектов в JScript, поскольку для JScript необходим управляемый объект <see cref="T:System.Reflection.MemberInfo" />, привязываемый к внешнему объекту.Этот интерфейс реализуется классами <see cref="T:Microsoft.JScript.COMFieldInfo" />, <see cref="T:Microsoft.JScript.COMMethodInfo" /> и <see cref="T:Microsoft.JScript.COMPropertyInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.GetCOMMemberInfo">
      <summary>При реализации в классе получает управляемый объект, позволяющий JScript обмениваться данными с внешним COM-членом.</summary>
      <returns>Управляемый объект, позволяющий JScript обмениваться данными с внешним COM-членом.</returns>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>При реализации в классе инициализирует сведения, позволяющие JScript обмениваться данными с заданным внешним COM-членом.</summary>
      <param name="name">Имя внешнего COM-члена.</param>
      <param name="dispatch">Сведения, позволяющие JScript вызвать, получить и задать внешний COM-член.</param>
    </member>
    <member name="T:Microsoft.JScript.MemberInfoList">
      <summary>Сохраняет список дочерних элементов <see cref="T:System.Reflection.MemberInfo" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.MethodInvoker">
      <summary>Представляет средство вызова определенного метода.Используется классом <see cref="T:Microsoft.JScript.JSMethodInfo" /> для вызова методов.</summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.MethodInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.Invoke(System.Object,System.Object[])">
      <summary>При переопределении в производном вызывает метод.</summary>
      <returns>Следствие вызова метода.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="parameters">Используемые для метода аргументы.</param>
    </member>
    <member name="T:Microsoft.JScript.Missing">
      <summary>Представляет значение переменной, для которой был создан экземпляр, но еще не было задано значение.</summary>
    </member>
    <member name="F:Microsoft.JScript.Missing.Value">
      <summary>Задает значение переменной, для которой был создан экземпляр, но еще не было задано значение.</summary>
    </member>
    <member name="T:Microsoft.JScript.Namespace">
      <summary>Представляет пространство имен.</summary>
    </member>
    <member name="M:Microsoft.JScript.Namespace.GetNamespace(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает и возвращает новый экземпляр класса <see cref="T:Microsoft.JScript.Namespace" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:Microsoft.JScript.Namespace" />.</returns>
      <param name="name">Имя пространства имен.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.NoContextException">
      <summary>Исключение, которое возникает, если с исключением <see cref="T:Microsoft.JScript.JScriptException" /> не связан какой-либо код <see cref="T:Microsoft.JScript.Context" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NoContextException" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NoContextException" />, используя указанные сериализованные данные.</summary>
      <param name="s">Данные сериализованного объекта, касающиеся возникшего исключения.</param>
      <param name="c">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NoContextException" />, используя указанное сообщение об ошибке.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NoContextException" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:Microsoft.JScript.NotRecommended">
      <summary>Указывает, что метод или поле использовать не рекомендуется.</summary>
    </member>
    <member name="M:Microsoft.JScript.NotRecommended.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр атрибутов <see cref="T:Microsoft.JScript.NotRecommended" />.</summary>
      <param name="message">Имя метода или поля, использовать которые не рекомендуется.</param>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.IsError">
      <summary>Получает значение, указывающее, является ли ошибкой использование нерекомендованного метода или поля.</summary>
      <returns>Значение false во всех случаях.</returns>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.Message">
      <summary>Получает имя метода или поля, использовать которые не рекомендуется.</summary>
      <returns>Имя метода или поля, использовать которые не рекомендуется.</returns>
    </member>
    <member name="T:Microsoft.JScript.NumberConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.Invoke(System.Object)">
      <summary>Преобразовывает указанный объект в число.</summary>
      <returns>Параметр <paramref name="arg" /> представленный в виде числе, если это возможно.</returns>
      <param name="arg">Объект для преобразования.</param>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MAX_VALUE">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Double" />.Это поле является константой.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MIN_VALUE">
      <summary>Представляет наименьшее положительное значение <see cref="T:System.Double" /> больше нуля.Это поле является константой.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.NaN">
      <summary>Представляет значение, не являющееся числом (NaN).This field is constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY">
      <summary>Представляет минус бесконечность.Это поле является константой.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY">
      <summary>Представляет плюс бесконечность.Это поле является константой.</summary>
    </member>
    <member name="T:Microsoft.JScript.NumberObject">
      <summary>Представляет пустой объект.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.#ctor(Microsoft.JScript.ScriptObject,System.Object)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NumberObject" />.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="value">Базовое значение, которое представляет класс.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.GetType">
      <summary>Возвращает тип объекта базового значения или объект <see cref="T:Microsoft.JScript.NumberObject" />.</summary>
      <returns>Тип объекта базового значения или объект <see cref="T:Microsoft.JScript.NumberObject" />.</returns>
    </member>
    <member name="T:Microsoft.JScript.NumberPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.NumberObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.NumberPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)">
      <summary>Создает строковое представление заданного объекта<see cref="T:Microsoft.JScript.NumberObject" />, который использует научное (экспоненциальное) представление.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="fractionDigits">Число от 0 до 20, представляющее количество отображаемых десятичных разрядов.Значение по умолчанию — 16.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)">
      <summary>Создает строковое представление заданного объекта<see cref="T:Microsoft.JScript.NumberObject" />, в котором отображается указанное число десятичных знаков.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="fractionDigits">Число от 0 до 20, представляющее количество отображаемых десятичных разрядов.По умолчанию используется значение 0.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)">
      <summary>Создает строковое представление заданного объекта, в основе которого лежит свойство <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" /> и объект <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)">
      <summary>Создает строковое представление заданного объекта<see cref="T:Microsoft.JScript.NumberObject" />, которое отображается с заданной точностью.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="precision">Число от 0 до 21, представляющее точность отображаемого числа.Точность — это количество отображаемых знаков в сочетании десятичного и экспоненциального представления.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="radix">A number between 2 and 36 that represents the base of the number system that <paramref name="thisob" /> is expressed in.The default is 10.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)">
      <summary>Возвращает значение заданного объекта <see cref="T:Microsoft.JScript.NumberObject" />.</summary>
      <returns>Значение <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.NumericBinary">
      <summary>Выполняет двоичные операции с числовыми операндами.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NumericBinary" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащую выполнению операцию.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.DoOp(System.Object,System.Object,Microsoft.JScript.JSToken)">
      <summary>Выполняет указанную двоичную операцию с заданными числовыми операндами.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащую выполнению операцию.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.EvaluateNumericBinary(System.Object,System.Object)">
      <summary>Выполняет двоичную операцию с заданными числовыми операндами.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.NumericUnary">
      <summary>Выполняет унарные операции с числовыми операндами.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.NumericUnary" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащую выполнению операцию.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.EvaluateUnary(System.Object)">
      <summary>Выполняет унарную операцию с числовым операндом.</summary>
      <returns>Результат операции.</returns>
      <param name="v">Операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.ObjectConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.ConstructObject">
      <summary>Создает экземпляр объекта на основе прототипа.</summary>
      <returns>Экземпляр объекта.</returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.Invoke(System.Object[])">
      <summary>Вызывает метод объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Результат вызова метода.</returns>
      <param name="args">Аргументы для передачи в метод.</param>
    </member>
    <member name="T:Microsoft.JScript.ObjectPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.JSObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.ObjectPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)">
      <summary>Определяет, содержит ли заданный объект указанное свойство.</summary>
      <returns>Значение true, если параметр <paramref name="name" /> является свойством параметра <paramref name="thisob" /> и был задан; в противном случае — значение false.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="name">Искомое свойство.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)">
      <summary>Определяет, можно ли создать для первого указанного объекта экземпляр с типом второго указанного объекта.</summary>
      <returns>Значение true, если объект <paramref name="ob" /> находится иерархии наследования <paramref name="thisob" />; в противном случае — значение false.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="ob">Объект, относящийся к необходимому типу.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)">
      <summary>Определяет, поддерживает ли заданное свойство указанного объекта перечисление.</summary>
      <returns>Значение true, если параметр <paramref name="name" /> является перечислимым свойством; в противном случае — значение false.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="name">Проверяемое свойство.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)">
      <summary>Создает строковое представление заданного объекта, используя класс <see cref="T:Microsoft.JScript.Convert" />.</summary>
      <returns>Строковое представление <paramref name="thisob" />, созданное классом <see cref="T:Microsoft.JScript.Convert" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Имя класса объекта, если он для него определен; в противном случае свойство <see cref="P:System.Reflection.MemberInfo.Name" /> типа объекта <see cref="T:System.Type" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)">
      <summary>Возвращает указанный объект.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.Override">
      <summary>Указывает, что метод или поле переопределяют метод или поле в базовом классе.</summary>
    </member>
    <member name="M:Microsoft.JScript.Override.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Override" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.Package">
      <summary>Создает пакеты кода JScript для использования другим кодом.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Package.JScriptPackage(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает заданный пакет с помощью заданного обработчика скриптов.</summary>
      <param name="rootName">Имя пакета.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.ParserException">
      <summary>Этот класс используется средством синтаксического анализа JScript для представления исключений в средстве синтаксического анализа.</summary>
    </member>
    <member name="T:Microsoft.JScript.Plus">
      <summary>Выполняет операции суммирования и объединения.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Plus" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.DoOp(System.Object,System.Object)">
      <summary>Выполняет операцию суммирования или объединения.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="M:Microsoft.JScript.Plus.EvaluatePlus(System.Object,System.Object)">
      <summary>Выполняет операцию суммирования или объединения.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.PostOrPrefixOperator">
      <summary>Выполняет операции увеличения и уменьшения, соответствующие синтаксису префикса и постфикса.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.PostOrPrefixOperator" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащую выполнению операцию.</param>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.EvaluatePostOrPrefix(System.Object@)">
      <summary>Выполняет операцию увеличения и уменьшения над заданным операндом.</summary>
      <returns>Результат операции.</returns>
      <param name="v">Операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.RangeErrorObject">
      <summary>Представляет ошибку диапазона.Ошибка диапазона может, например, возникать при использовании неверного индекса для доступа к элементу массива.</summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceAttribute">
      <summary>Представляет ссылку на сборку.</summary>
    </member>
    <member name="M:Microsoft.JScript.ReferenceAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ReferenceAttribute" />.</summary>
      <param name="reference">Ссылка на сборку.</param>
    </member>
    <member name="F:Microsoft.JScript.ReferenceAttribute.reference">
      <summary>Задает ссылку на сборку.</summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceErrorObject">
      <summary>Представляет ошибку ссылки.Ошибка ссылки может, например, произойти при создании ссылки на необъявленную переменную.</summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Создает новый объект <see cref="T:Microsoft.JScript.RegExpObject" /> для заданной схемы регулярного выражения и флагов.</summary>
      <returns>Новый объект <see cref="T:Microsoft.JScript.RegExpObject" />.</returns>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="ignoreCase">Значение true, чтобы сопоставление выполнялось без учета регистра; в противном случае — значение false.</param>
      <param name="global">Значение true, для использования глобального сопоставления, в противном случае — значение false.</param>
      <param name="multiline">Значение true, для использования многократного сопоставления, в противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.index">
      <summary>Получает индекс последнего успешного сопоставления перед смещением индекса.</summary>
      <returns>Индекс последнего успешного сопоставления, если таковое имело место. </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.input">
      <summary>Возвращает или задает входную строку для поиска регулярного выражения.</summary>
      <returns>Входная строка для поиска регулярного выражения.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastIndex">
      <summary>Получает индекс последнего успешного сопоставления после смещения индекса.</summary>
      <returns>Индекс последнего успешного сопоставления, если таковое имело место.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastMatch">
      <summary>Получает строковое представление последнего успешного сопоставления.</summary>
      <returns>Получает строковое представление последнего успешного сопоставления, если таковое имело место.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastParen">
      <summary>Получает последний объект <see cref="T:System.Text.RegularExpressions.Group" /> из свойства <see cref="P:System.Text.RegularExpressions.Match.Groups" /> последнего сопоставления.</summary>
      <returns>Получает строковое представление последней групп, если таковая имела место.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.leftContext">
      <summary>Получает подстроку входной строки между началом ввода и началом последнего успешного сопоставления.</summary>
      <returns>Подстрока входной строки, если таковая имела место.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.rightContext">
      <summary>Получает подстроку входной строки между началом последнего успешного сопоставления и концом ввода.</summary>
      <returns>Подстрока входной строки, если таковая имела место.</returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpMatch">
      <summary>Представляет результаты из сопоставления регулярных выражений.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpObject">
      <summary>Представляет объект регулярного выражения.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.global">
      <summary>Получает значение, указывающее выполняется ли поиск с глобальным флагом (/g), соответствующим всем вхождениям.</summary>
      <returns>Значение true если выполняется глобальный поиск; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.ignoreCase">
      <summary>Получает значение, указывающее выполняется ли поиск без учета регистра (/i).</summary>
      <returns>Значение true если поиск выполняется без учета регистра; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.lastIndex">
      <summary>Возвращает или задает индекс последнего успешного сопоставления.</summary>
      <returns>Индекс последнего успешного сопоставления, если таковое имело место.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.multiline">
      <summary>Получает значение, указывающее выполняется ли поиск с флагом многострочности (/m).</summary>
      <returns>Значение true если поиск выполняется в многострочном режиме; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.source">
      <summary>Получает шаблон регулярного выражения, представленного этим объектом.</summary>
      <returns>Шаблон регулярного выражения, представленного этим объектом.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpObject.ToString">
      <summary>Создает строковое представление этого объекта, содержащее шаблон регулярного выражения и флаги.</summary>
      <returns>Строковое представление этого объекта.</returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.RegExpObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)">
      <summary>Создает и компилирует новый объект <see cref="T:Microsoft.JScript.RegExpObject" /> для заданной схемы регулярного выражения и флагов.</summary>
      <returns>Новый объект <see cref="T:Microsoft.JScript.RegExpObject" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="source">Искомый шаблон регулярного выражения.</param>
      <param name="flags">Флаги для режима игнорирования регистра, глобального и многострочного режима.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)">
      <summary>Запускает поиск заданного шаблона регулярного выражения в указанном объекте.</summary>
      <returns>Результат поиска шаблона регулярного выражения.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="input">Искомый шаблон регулярного выражения.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)">
      <summary>Тестирует поиск заданного шаблона регулярного выражения в указанном объекте.</summary>
      <returns>Значение true, если поиск выполнен успешно, в противном случае — значение false.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="input">Искомый шаблон регулярного выражения.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)">
      <summary>Создает строковое представление заданного объекта, содержащее шаблон регулярного выражения и флаги.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.Relational">
      <summary>Выполняет операции сравнения отношений.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Relational.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.Relational" />.</summary>
      <param name="operatorTok">Одно из значений перечисления <see cref="T:Microsoft.JScript.JSToken" />.Задает подлежащее выполнению сравнение.</param>
    </member>
    <member name="M:Microsoft.JScript.Relational.EvaluateRelational(System.Object,System.Object)">
      <summary>Выполняет операцию сравнения отношений с заданными операндами.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="M:Microsoft.JScript.Relational.JScriptCompare(System.Object,System.Object)">
      <summary>Выполняет операцию сравнения отношений с заданными операндами.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.ReturnOutOfFinally">
      <summary>Представляет состояние исключения, когда выполнение кода возобновляется вне блока finally.  </summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ReturnOutOfFinally" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ReturnOutOfFinally" />, используя указанное сообщение об ошибке.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ReturnOutOfFinally" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="m">Сообщение, описывающее ошибку.</param>
      <param name="e">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:Microsoft.JScript.Runtime">
      <summary>Предоставляет служебные функции.</summary>
    </member>
    <member name="M:Microsoft.JScript.Runtime.DoubleToInt64(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> value to an <see cref="T:System.Int64" />.</summary>
      <returns>
        <paramref name="val" /> converted to an <see cref="T:System.Int64" />.</returns>
      <param name="val">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.Equals(System.Object,System.Object)">
      <summary>Определяет, равны ли два заданных значения.</summary>
      <returns>Значение true, если значения равны; значение false, если значение не равны.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.UncheckedDecimalToInt64(System.Decimal)">
      <summary>Converts the specified <see cref="T:System.Decimal" /> value to an <see cref="T:System.Int64" />.</summary>
      <returns>
        <paramref name="val" /> converted to an <see cref="T:System.Int64" />.</returns>
      <param name="val">Преобразуемое значение.</param>
    </member>
    <member name="T:Microsoft.JScript.ScriptBlock">
      <summary>Представляет блок кода JScript.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="T:Microsoft.JScript.ScriptFunction">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Большинство классов функций конструктора, таких как <see cref="T:Microsoft.JScript.DateConstructor" />, <see cref="T:Microsoft.JScript.NumberConstructor" />, <see cref="T:Microsoft.JScript.StringConstructor" /> и <see cref="T:Microsoft.JScript.ObjectConstructor" /> наследуют этот класс.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ScriptFunction" />.</summary>
      <param name="parent">Родительский прототип объекта, который строится с помощью этой функции.</param>
      <param name="name">Имя объекта, который строится с помощью этой функции.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject">
      <summary>Получает прототип объекта для этой функции конструктора.</summary>
      <returns>Прототип объекта для этой функции конструктора.</returns>
    </member>
    <member name="F:Microsoft.JScript.ScriptFunction.ilength">
      <summary>Хранит число элементов в параметре <paramref name="args" /> метода <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])">
      <summary>Вызывает метод объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Результат вызова метода.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="args">Аргументы для передачи в метод.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Invokes the specified member.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="name">Имя элемента, который предполагается вызвать.</param>
      <param name="invokeAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="target">Объект, для которого следует вызвать данный член.Это должен быть объект текущего скрипта.</param>
      <param name="args">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента.Если параметров нет, этот массив пуст.</param>
      <param name="modifiers">Массив, длина которого совпадает с длиной параметра <paramref name="args" />.Представляет атрибуты аргумента вызванного члена в метаданных.</param>
      <param name="culture">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
      <param name="namedParameters">Массив параметров.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptFunction.length">
      <summary>Возвращает или задает число элементов в параметре <paramref name="args" /> метода <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" />.</summary>
      <returns>Число элементов в параметре <paramref name="args" /> метода <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.ScriptFunction.prototype">
      <summary>Возвращает или задает прототип объекта для этой функции конструктора.</summary>
      <returns>Прототип объекта для этой функции конструктора.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.ToString">
      <summary>Возвращает строковое представление функции конструктора.</summary>
      <returns>Строка, содержащая имя функции конструктора и прототип для кода.</returns>
    </member>
    <member name="T:Microsoft.JScript.ScriptObject">
      <summary>Поддерживает классы JScript.Это основной базовый класс всех классов JScript.Этот класс принадлежит к категории объектов и функций.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.engine">
      <summary>Хранит ссылка на обработчик скриптов.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Получает поле с заданным именем.</summary>
      <returns>Поле, для которого задан параметр <paramref name="name" />, или значение NULL, если объект не содержит такое поле.</returns>
      <param name="name">Имя поля, которое нужно получить.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям текущего объекта скрипта.</summary>
      <returns>Массив объектов, содержащий все поля текущего объекта скрипта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>При переопределении в производном классе получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам, которые соответствуют заданному имени.</summary>
      <returns>Массив объектов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>При переопределении в производном классе получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам текущего объекта скрипта.</summary>
      <returns>Массив объектов, содержащий все члены текущего объекта скрипта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)">
      <summary>Получает метод с заданным именем.</summary>
      <returns>Метод, для которого задан параметр <paramref name="name" />, или значение NULL, если объект не содержит такой метод.</returns>
      <param name="name">Имя метода, который необходимо получить.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Получает метод с заданным именем, используя указанные критерии выбора.</summary>
      <returns>Метод, для которого задан параметр <paramref name="name" />, или значение NULL, если объект не содержит такой метод.</returns>
      <param name="name">Имя искомого метода.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="types">Типы параметров, используемые для нахождения соответствующего метода.</param>
      <param name="modifiers">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MethodInfo" />, соответствующих всем методам текущего объекта скрипта.</summary>
      <returns>Массив объектов, содержащий все методы текущего объекта скрипта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetParent">
      <summary>Получает ссылку на родительский объект.</summary>
      <returns>Ссылка на родительский объект.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем свойствам текущего объекта скрипта.</summary>
      <returns>Массив объектов, содержащий все свойства текущего объекта скрипта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Получает свойство с указанным именем.</summary>
      <returns>Свойство, для которого задан параметр <paramref name="name" />, или значение NULL, если объект не содержит такое свойство.</returns>
      <param name="name">Имя возвращаемого свойства.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Получает свойство с заданным именем, используя указанные критерии выбора.</summary>
      <returns>Свойство, для которого задан параметр <paramref name="name" />, или значение NULL, если объект не содержит такое свойство.</returns>
      <param name="name">Имя искомого свойства.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="returnType">Тип возвращаемого значения, который должен быть у свойства.</param>
      <param name="types">Типы индексов свойства, поиск которого выполняется.Используется для свойств индекса, например указателя для класса.</param>
      <param name="modifiers">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Вызывает указанный член.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="name">Имя элемента, который предполагается вызвать.</param>
      <param name="invokeAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="target">Объект, для которого следует вызвать данный член.Это должен быть объект текущего скрипта.</param>
      <param name="args">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента.Если параметров нет, этот массив пуст.</param>
      <param name="modifiers">Массив, длина которого совпадает с длиной аргументов.Представляет атрибуты аргумента вызванного члена в метаданных.</param>
      <param name="locale">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
      <param name="namedParameters">Массив параметров.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Double)">
      <summary>Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Double" /> index value.</summary>
      <returns>Значение члена, расположенного в позиции с индексом <paramref name="index" />.</returns>
      <param name="index">Индекс члена.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Int32)">
      <summary>Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Int32" /> index value.</summary>
      <returns>Значение члена, расположенного в позиции с индексом <paramref name="index" />.</returns>
      <param name="index">Индекс члена.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Object[])">
      <summary>Возвращает или задает член объекта скрипта, на который указывает заданное имя, значение индекса <see cref="T:System.Double" /> или значение индекса <see cref="T:System.Int32" />.</summary>
      <returns>Значение члена, заданное в параметре <paramref name="pars" />.</returns>
      <param name="pars">Имя или индекс члена.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.String)">
      <summary>Возвращает или задает член объекта скрипта, на который указывает заданное имя.</summary>
      <returns>Значение члена с именем <paramref name="name" />.</returns>
      <param name="name">Имя члена.</param>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.parent">
      <summary>Хранит ссылки на родительский объект.</summary>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.UnderlyingSystemType">
      <summary>Получает тип объекта скрипта.</summary>
      <returns>Тип объекта скрипта.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)">
      <summary>Создает объект с оболочкой, который содержит заданный член вместе с указанным объектом.</summary>
      <returns>Массив из одного элемента, являющегося объектом с оболочкой, в котором содержатся сведения о члене и параметр <paramref name="obj" />.</returns>
      <param name="member">Член, для которого нужно создать оболочку.</param>
      <param name="obj">Объект, для которого определен параметр <paramref name="member" />.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)">
      <summary>Создает массив объектов с оболочкой, содержащий заданные члены вместе с указанным объектом.</summary>
      <returns>Массив объектов с оболочкой, в каждом из которых содержатся сведения о члене и копия параметра <paramref name="obj" />.</returns>
      <param name="members">Члены, для которых нужно создать оболочку.</param>
      <param name="obj">Объект, для которого определены параметры <paramref name="members" />.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)">
      <summary>Создает массив объектов с оболочкой, содержащий заданный член вместе с указанным объектом, кэшируя результаты в указанное хранилище данных.</summary>
      <returns>Массив объектов с оболочкой, в каждом из которых содержатся сведения о члене и копия параметра <paramref name="obj" />.</returns>
      <param name="members">Члены, для которых нужно создать оболочку.</param>
      <param name="obj">Объект, для которого определены параметры <paramref name="members" />.</param>
      <param name="cache">Временное хранилища данных для объектов с оболочкой.</param>
    </member>
    <member name="T:Microsoft.JScript.ScriptStream">
      <summary>Представляет поток данных.Этот класс отправляет данные в поток <see cref="T:Microsoft.JScript.COMCharStream" /> или <see cref="T:System.Console" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.ScriptStream" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Error">
      <summary>Stores a reference to either the standard console <see cref="P:System.Console.Error" /> stream or a custom <see cref="T:Microsoft.JScript.COMCharStream" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Out">
      <summary>Хранит ссылку на поток свойства <see cref="P:System.Console.Out" /> стандартной консоли или пользовательский поток <see cref="T:Microsoft.JScript.COMCharStream" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace">
      <summary>Записывает строку, описывающую текущее содержимое стека вызова.Строка, записываемая в поток <see cref="F:Microsoft.JScript.ScriptStream.Out" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace(System.Exception)">
      <summary>Записывает строку, описывающую содержимое стека вызова в момент возникновения заданного исключения.Строка, записываемая в поток <see cref="F:Microsoft.JScript.ScriptStream.Out" />.</summary>
      <param name="e">Выброшенное исключение.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.Write(System.String)">
      <summary>Записывает указанную строку в поток.Строка, записываемая в поток <see cref="F:Microsoft.JScript.ScriptStream.Out" />.</summary>
      <param name="str">Строка, записываемая в поток.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.WriteLine(System.String)">
      <summary>Записывает заданную строку в поток, за которой следует признак конца строки.Строка, записываемая в поток <see cref="F:Microsoft.JScript.ScriptStream.Out" />.</summary>
      <param name="str">Строка, записываемая в поток.</param>
    </member>
    <member name="T:Microsoft.JScript.SimpleHashtable">
      <summary>Хэш-таблица для внутреннего хранилища элементов.</summary>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.#ctor(System.UInt32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.SimpleHashtable" />, используя заданное пороговое значение.</summary>
      <param name="threshold">Количество элементов, на которое нужно изменить размер хэш-таблицы.</param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.GetEnumerator">
      <summary>Получает перечислитель для хэш-таблицы.</summary>
      <returns>Перечислитель для хэш-таблицы.</returns>
    </member>
    <member name="P:Microsoft.JScript.SimpleHashtable.Item(System.Object)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <returns>Значение элемента с заданным параметром <paramref name="key" />.</returns>
      <param name="key">Ключ элемента, который требуется получить или задать.</param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.Remove(System.Object)">
      <summary>Удаляет элемент с заданным ключом из хэш-таблицы.</summary>
      <param name="key">Ключ удаляемого элемента.</param>
    </member>
    <member name="T:Microsoft.JScript.SourceState">
      <summary>Задает состояние текста исходного кода.Этот класс используется совместно с другими классами, предоставляющими сведения для выделения кода JScript цветом в редакторе.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_NORMAL">
      <summary>Стандартный текст.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_COMMENT">
      <summary>Текст комментария.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_STRING">
      <summary>Текст строки.</summary>
    </member>
    <member name="T:Microsoft.JScript.StackFrame">
      <summary>Представляет кадр стека для выполнения кода.Этот класс содержит методы для разрешения области.Он принадлежит к категории состояний компиляции и времени выполнения.</summary>
    </member>
    <member name="F:Microsoft.JScript.StackFrame.closureInstance">
      <summary>Хранит ссылку на вызывающий объект текущего кадра стека.</summary>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetDefaultThisObject">
      <summary>Получает текущую область по умолчанию, в которой будет содержаться объект области оператора with или глобальной области.</summary>
      <returns>Текущая область по умолчанию.</returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetField(System.String,System.Int32)">
      <summary>Получает поле с заданным именем путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Значение NULL во всех случаях.</returns>
      <param name="name">Имя искомого поля.</param>
      <param name="lexLevel">Лексический уровень поиска.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetGlobalScope">
      <summary>Получает глобальную область, выполняя поиск по иерархии областей до тех пор, пока не будет найдена область, содержащая статические переменные, например область модулей.</summary>
      <returns>Глобальная область.</returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам, которые сопоставлены заданному имени.</summary>
      <returns>Массив объектов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMembers(System.Reflection.BindingFlags)">
      <summary>Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам текущего объекта.</summary>
      <returns>Массив объектов, содержащий все члены текущего объекта.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMemberValue(System.String,System.Int32)">
      <summary>Получает значение заданного члена путем поиска в иерархии областей.Этот метод выполняет поиск только в области, заданной на лексическом уровне.</summary>
      <returns>Значение члена <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="lexlevel">Лексический уровень поиска.</param>
    </member>
    <member name="F:Microsoft.JScript.StackFrame.localVars">
      <summary>Хранит локальные переменные для этого кадра стека.</summary>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.Microsoft#JScript#IActivationObject#GetLocalField(System.String)">
      <summary>Получает локальное объявление полей с заданными именами.Этот метод используется во время компиляции для проверки на наличие ошибок.</summary>
      <returns>Локальное объявление поля.</returns>
      <param name="name">Имя поля.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForMethod(System.Object,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает новый объект <see cref="T:Microsoft.JScript.StackFrame" /> для метода и публикует его в стеке глобальных областей.</summary>
      <param name="thisob">Объект, содержащий метод.</param>
      <param name="fields">Локальные переменные для кадра стека.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForStaticMethod(System.RuntimeTypeHandle,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Создает новый объект <see cref="T:Microsoft.JScript.StackFrame" /> для статического метода и публикует его в стеке глобальных областей.</summary>
      <param name="thisclass">Класс, содержащий статический метод.</param>
      <param name="fields">Локальные переменные для кадра стека.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.StrictEquality">
      <summary>Выполняет операции сравнения.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.StrictEquality.JScriptStrictEquals(System.Object,System.Object)">
      <summary>Выполняет операцию сравнения.</summary>
      <returns>Результат операции.</returns>
      <param name="v1">Первый операнд.</param>
      <param name="v2">Второй операнд.</param>
    </member>
    <member name="T:Microsoft.JScript.StringConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])">
      <summary>Преобразует каждый элемент заданного массива в символ, сцепляя полученные символы.</summary>
      <returns>Строковое представление параметра <paramref name="arg" />.</returns>
      <param name="args">Элементы, преобразуемые в строку.</param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.Invoke(System.Object)">
      <summary>Converts the specified object to a string.</summary>
      <returns>Строковое представление параметра <paramref name="arg" />.</returns>
      <param name="arg">Объект, преобразуемый в строку.</param>
    </member>
    <member name="T:Microsoft.JScript.StringObject">
      <summary>Представляет строковый объект.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringObject.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.StringObject" />. </summary>
      <param name="prototype">Родительский объект.</param>
      <param name="value">Базовое значение, которое представляет класс.</param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.Equals(System.Object)">
      <summary>Определяет, равны ли значения этой и заданной строки.</summary>
      <returns>Значение true, если значения этой строк и объекта <paramref name="ob" /> совпадают; в противном случае — значение false.</returns>
      <param name="ob">Строка, подлежащая сравнению.</param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetHashCode">
      <summary>Возвращает хэш-код для этой строки.</summary>
      <returns>Хэш-код для этой строки.</returns>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetType">
      <summary>Возвращает значение типа <see cref="T:System.String" /> или <see cref="T:Microsoft.JScript.StringObject" />.</summary>
      <returns>
        <see cref="T:System.String" /> or <see cref="T:Microsoft.JScript.StringObject" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.StringObject.length">
      <summary>Получает количество знаков в строке.</summary>
      <returns>Количество знаков в строке.</returns>
    </member>
    <member name="T:Microsoft.JScript.StringPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.StringObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги привязки, и присваивает элементу привязки заданный атрибут имени.</summary>
      <returns>Строка в формате "&lt;A NAME=\""+ <paramref name="anchorName" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/A&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="anchorName">Атрибут имени элемента привязки.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.big(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для начертания с большим размером.</summary>
      <returns>Строка в формате "&lt;BIG&gt;"+ <paramref name="thisob" /> +"&lt;/BIG&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.blink(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для мерцающего начертания.</summary>
      <returns>Строка в формате "&lt;BLINK&gt;"+ <paramref name="thisob" /> +"&lt;/BLINK&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.bold(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для полужирного начертания знаков.</summary>
      <returns>Строка в формате "&lt;B&gt;"+ <paramref name="thisob" /> +"&lt;/B&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)">
      <summary>Возвращает символ в указанной позиции в заданном объекте.</summary>
      <returns>Символ в позиции <paramref name="pos" /> при его наличии.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="pos">Позиция возвращаемого символа.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)">
      <summary>Возвращает кодировку ASCII в указанной позиции в заданном объекте.</summary>
      <returns>Код символа в позиции <paramref name="pos" /> при его наличии.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="pos">Позиция символа, код которого необходимо вернуть.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])">
      <summary>Добавляет заданные аргументы в указанный объект.</summary>
      <returns>Строковое представление <paramref name="thisob" />, к которому добавлены аргументы <paramref name="args" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="args">Аргументы, добавляемые в <paramref name="thisob" />.</param>
    </member>
    <member name="P:Microsoft.JScript.StringPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fixed(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для моноширинного начертания знаков.</summary>
      <returns>Строка в формате "&lt;TT&gt;"+ <paramref name="thisob" /> +"&lt;/TT&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги шрифта, и присваивает элементу заданный атрибут цвета.</summary>
      <returns>Строка в формате "&lt;FONT COLOR=\""+ <paramref name="colorName" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/FONT&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="colorName">Атрибут цвет элемента шрифта.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги шрифта, и присваивает элементу заданный атрибут размера.</summary>
      <returns>Строка в формате "&lt;FONT SIZE=\""+ <paramref name="fontSize" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/FONT&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="fontSize">Атрибут размера элемента шрифта.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)">
      <summary>Осуществляет поиск первого вхождения заданной строки в указанном объекте, начиная с заданной позиции символа.</summary>
      <returns>Позиция первого вхождения объекта <paramref name="searchString" />, если таковое найдено.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="searchString">Искомая строка.</param>
      <param name="position">Позиция, с которой необходимо начать поиск.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.italics(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для курсивного начертания знаков.</summary>
      <returns>Строка в формате "&lt;I&gt;"+ <paramref name="thisob" /> +"&lt;/I&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)">
      <summary>Осуществляет поиск последнего вхождения заданной строки в указанном объекте, начиная с заданной позиции символа.</summary>
      <returns>Позиция последнего вхождения объекта <paramref name="searchString" />, если таковое найдено.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="searchString">Искомая строка.</param>
      <param name="position">Позиция, с которой необходимо начать поиск.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги привязки, и присваивает элементу привязки заданный атрибут целевого объекта ссылки.</summary>
      <returns>Строка в формате "&lt;A HREF=\""+ <paramref name="linkRef" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/A&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="linkRef">Целевой атрибут элемента привязки.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)">
      <summary>Сравнивает две заданные строки и возвращает целочисленное значение, отражающее лексическую связь между ними.</summary>
      <returns>Отрицательное значение, если <paramref name="thisob" /> меньше, чем <paramref name="thatob" />; нуль, если значение <paramref name="thisob" /> равно значению <paramref name="thatob" />; положительное значение, если <paramref name="thisob" /> больше, чем <paramref name="thatob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="thatob">Строка, сравниваемая с параметром <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)">
      <summary>Запускает поиск заданного шаблона регулярного выражения в указанном объекте.</summary>
      <returns>Результат поиска шаблона регулярного выражения.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="regExp">Искомый шаблон регулярного выражения.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)">
      <summary>Запускает поиск заданного шаблона регулярного выражения в первом указанном объекте и заменяет все найденные совпадения третьим заданным объектом.</summary>
      <returns>Новая строка после замещения.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="regExp">Искомый шаблон регулярного выражения.</param>
      <param name="replacement">Замещение любых совпадений.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)">
      <summary>Запускает поиск заданного шаблона регулярного выражения в указанном объекте.</summary>
      <returns>Если поиск выполнен успешно, индекс совпадения, в противном случае — значение -1.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="regExp">Искомый шаблон регулярного выражения.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)">
      <summary>Создает новую строку, содержащую заданные символы, последовательно расположенные в указанной строке.</summary>
      <returns>Новая строка, содержащая символы, последовательно расположенные между <paramref name="start" /> и <paramref name="end" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="start">Первый получаемый последовательный символ.</param>
      <param name="end">Последний получаемый последовательный символ.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.small(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для начертания с меньшим размером.</summary>
      <returns>Строка в формате "&lt;SMALL&gt;"+ <paramref name="thisob" /> +"&lt;/SMALL&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)">
      <summary>Возвращает массив, содержащий подстроки в указанном объекте, отделенные друг от друга заданными символами.Количество подстрок в массиве ограничивается заданным предельным значением.</summary>
      <returns>Массив, содержащий подстроки в <paramref name="thisob" />, отделенные друг от друга разделителем <paramref name="separator" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="separator">Символы, которые разделяют подстроки в <paramref name="thisob" />.</param>
      <param name="limit">Максимальное число возвращаемых подстрок.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.strike(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для зачеркнутого начертания знаков.</summary>
      <returns>Строка в формате "&lt;STRIKE&gt;"+ <paramref name="thisob" /> +"&lt;/STRIKE&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.sub(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для подстрочных знаков.</summary>
      <returns>Строка в формате "&lt;SUB&gt;"+ <paramref name="thisob" /> +"&lt;/SUB&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)">
      <summary>Создает новую строку, содержащую заданное количество последовательно расположенных символов из указанной строки, начиная с символа в заданной позиции.По возможности, вместо этого метода следует использовать метод <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" />.</summary>
      <returns>Новая строка, содержащая последовательно расположенные символы, число которых равно <paramref name="count" /> и которые отсчитываются от позиции <paramref name="start" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="start">Первый получаемый последовательный символ.</param>
      <param name="count">Число получаемых символов.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)">
      <summary>Создает новую строку, содержащую заданные символы, последовательно расположенные в указанной строке.</summary>
      <returns>Новая строка, содержащая символы, последовательно расположенные между <paramref name="start" /> и <paramref name="end" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="start">Первый получаемый последовательный символ.</param>
      <param name="end">Последний получаемый последовательный символ.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.sup(System.Object)">
      <summary>Преобразует заданный объект в текст, заключенный в теги разметки для надстрочных знаков.</summary>
      <returns>Строка в формате "&lt;SUP&gt;"+ <paramref name="thisob" /> +"&lt;/SUP&gt;".</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)">
      <summary>Возвращает копию заданной строки, преобразованной в нижний регистр, в соответствии с правилами учета регистра для свойства <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</summary>
      <returns>Строка в нижнем регистре.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)">
      <summary>Возвращает копию заданной строки, преобразованной в верхний регистр, в соответствии с правилами учета регистра для свойства <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</summary>
      <returns>Строка, записанная прописными буквами.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)">
      <summary>Возвращает копию заданной строки, преобразованной в нижний регистр, в соответствии с правилами учета регистра для свойства <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</summary>
      <returns>Строка в нижнем регистре.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toString(System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Строковое представление параметра <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)">
      <summary>Возвращает копию заданной строки, преобразованной в верхний регистр, в соответствии с правилами учета регистра для свойства <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</summary>
      <returns>Строка, записанная прописными буквами.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)">
      <summary>Возвращает значение указанного объекта.</summary>
      <returns>Значение <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="T:Microsoft.JScript.SuperTypeMembersSorter">
      <summary>Хранит члены, полученные из базовых классов и интерфейсов.</summary>
    </member>
    <member name="T:Microsoft.JScript.SyntaxErrorObject">
      <summary>Представляет синтаксическую ошибку.Синтаксическая ошибка может, например, произойти в случае пропуска точки с запятой.</summary>
    </member>
    <member name="T:Microsoft.JScript.Throw">
      <summary>Создает исключение.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Throw.JScriptThrow(System.Object)">
      <summary>Возвращает заданный объект как исключение, выполняя, при необходимости его преобразование.</summary>
      <returns>Исключение, представляющее параметр <paramref name="value" />.</returns>
      <param name="value">Возникающее исключение. </param>
    </member>
    <member name="T:Microsoft.JScript.TokenColor">
      <summary>Задает цвета, которыми должны отмечаться отдельные блоки кода при выделении текста цветом в редакторе.Элементы этого перечисления используются свойством <see cref="P:Microsoft.JScript.ITokenColorInfo.Color" /> объектов <see cref="T:Microsoft.JScript.ITokenColorInfo" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_TEXT">
      <summary>Цвет блока кода, который представляет текст.Это — значение по умолчанию.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_IDENTIFIER">
      <summary>Цвет блока кода, который представляет идентификатор.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_KEYWORD">
      <summary>Цвет блока кода, который представляет ключевое слово.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_COMMENT">
      <summary>Цвет блока кода, который представляет комментарий.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_OPERATOR">
      <summary>Цвет блока кода, который представляет оператор.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_NUMBER">
      <summary>Цвет блока кода, который представляет числовой литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_STRING">
      <summary>Цвет блока кода, который представляет строковый литерал.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_CONDITIONAL_COMP">
      <summary>Не используется.</summary>
    </member>
    <member name="T:Microsoft.JScript.Try">
      <summary>Позволяет идентифицировать блоки кода в областях обработки ошибок.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Возвращает заданный объект как исключение, преобразовывая его в определенный объект <see cref="T:Microsoft.JScript.JScriptException" />, если это возможно.</summary>
      <returns>Исключение <paramref name="e" />, преобразованное в определенный объект <see cref="T:Microsoft.JScript.JScriptException" />, если это возможно.</returns>
      <param name="e">Объект, представляющий исключение.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)">
      <summary>Создает новый объект <see cref="T:Microsoft.JScript.BlockScope" /> для блока try и публикует его в стеке глобальных областей.</summary>
      <param name="engine">Ссылка на обработчик скриптов.</param>
      <param name="id">Имя области блока try.</param>
      <param name="scopeId">Идентификатор области блока try.</param>
    </member>
    <member name="T:Microsoft.JScript.TypedArray">
      <summary>Представляет отражаемую ссылку на класс <see cref="T:System.Array" />.В этом классе хранится тип элементов типизированного массива, однако в нем не хранятся данные.</summary>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.#ctor(System.Reflection.IReflect,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.TypedArray" />.</summary>
      <param name="elementType">Тип элементов типизированного массива.</param>
      <param name="rank">Ранг (размерность) массива.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.Equals(System.Object)">
      <summary>Определяет, совпадает ли тип элементов и ранг заданного типизированного массива с текущим типизированным массивом.</summary>
      <returns>Значение true, если тип элементов и ранг объекта <paramref name="obj" /> совпадает с текущим типизированным массивом; в противном случае — значение false.</returns>
      <param name="obj">Типизированный массив, сравниваемый с текущим типизированным массивом.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Получает поле типа класса <see cref="T:System.Array" /> с заданным именем.</summary>
      <returns>Поле с указанным именем, если таковое имеется, или значение NULL.</returns>
      <param name="name">Имя поля, которое нужно получить.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetFields(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям типа класса <see cref="T:System.Array" />.</summary>
      <returns>Массив объектов, содержащий все поля типа класса <see cref="T:System.Array" />.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetHashCode">
      <summary>Служит в качестве хэш-функции для типа элементов типизированного массива.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам типа класса <see cref="T:System.Array" />, которые сопоставлены заданному имени.</summary>
      <returns>Массив объектов, которые соответствуют аргументу <paramref name="name" />.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMembers(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем членам типа класса <see cref="T:System.Array" />.</summary>
      <returns>Массив объектов, содержащий все члены типа класса <see cref="T:System.Array" />.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags)">
      <summary>Получает метод типа класса <see cref="T:System.Array" /> с заданным именем.</summary>
      <returns>Метод с указанным именем, если таковое имеется, или значение NULL.</returns>
      <param name="name">Имя метода, который необходимо получить.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Получает метод типа класса <see cref="T:System.Array" /> с заданным именем, используя указанные критерии выбора.</summary>
      <returns>Метод с указанным именем, если таковое имеется, или значение NULL.</returns>
      <param name="name">Имя метода, который необходимо получить.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="types">Типы параметров, используемые для нахождения соответствующего метода.</param>
      <param name="modifiers">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethods(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.MethodInfo" />, соответствующих всем методам типа класса <see cref="T:System.Array" />.</summary>
      <returns>Массив объектов, содержащий все методы типа класса <see cref="T:System.Array" />.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperties(System.Reflection.BindingFlags)">
      <summary>Получает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем свойствам типа класса <see cref="T:System.Array" />.</summary>
      <returns>Массив объектов, содержащий все свойства типа класса <see cref="T:System.Array" />.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Получает свойство типа класса <see cref="T:System.Array" /> с заданным именем.</summary>
      <returns>Свойство с указанным именем, если таковое имеется, или значение NULL.</returns>
      <param name="name">Имя возвращаемого свойства.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Получает свойство типа класса <see cref="T:System.Array" /> с заданным именем, используя указанные критерии выбора.</summary>
      <returns>Свойство с указанным именем, если таковое имеется, или значение NULL.</returns>
      <param name="name">Имя возвращаемого свойства.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="returnType">Тип возвращаемого значения, который должен быть у свойства.</param>
      <param name="types">Типы индексов свойства, поиск которого выполняется.Используется для свойств индекса, например указателя для класса.</param>
      <param name="modifiers">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Вызывает заданный член типа элементов или тип класса <see cref="T:System.Array" />.</summary>
      <returns>Значение, возвращаемое в результате вызова члена.</returns>
      <param name="name">Имя элемента, который предполагается вызвать.</param>
      <param name="flags">Битовая комбинация значений перечисления, задающая способ поиска членов путем отражения.</param>
      <param name="binder">Объект, выполняющий преобразование фактического типа аргумента в формальный тип аргумента.</param>
      <param name="target">Объект, для которого следует вызвать данный член.Это должен быть объект текущего скрипта.</param>
      <param name="args">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента.Если параметров нет, этот массив пуст.</param>
      <param name="modifiers">Массив, длина которого совпадает с длиной параметра <paramref name="args" />.Представляет атрибуты аргумента вызванного члена в метаданных.</param>
      <param name="locale">Предоставляет сведения, касающиеся языка и региональных параметров или языкового стандарта.Используется для надлежащего форматирования чисел, дат и строк.</param>
      <param name="namedParameters">Массив параметров.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.ToString">
      <summary>Возвращает строку, содержащую тип элементов типизированного массива и сведения о ранге.</summary>
      <returns>Строка, содержащую тип элементов типизированного массива и сведения о ранге.</returns>
    </member>
    <member name="P:Microsoft.JScript.TypedArray.UnderlyingSystemType">
      <summary>Получает тип объекта <see cref="T:Microsoft.JScript.TypedArray" />.</summary>
      <returns>Тип объекта <see cref="T:Microsoft.JScript.TypedArray" />.</returns>
    </member>
    <member name="T:Microsoft.JScript.TypeErrorObject">
      <summary>Представляет ошибку типа.Ошибка типа может, например, произойти при передаче объекта одного типа методу, для которого требуется объект другого типа.</summary>
    </member>
    <member name="T:Microsoft.JScript.Typeof">
      <summary>Определить тип данных объекта.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.Typeof.JScriptTypeof(System.Object)">
      <summary>Определяет тип даты заданного объекта.</summary>
      <returns>Тип <paramref name="value" />.</returns>
      <param name="value">Объект, тип которого необходимо определить.</param>
    </member>
    <member name="T:Microsoft.JScript.TypeReflector">
      <summary>Предоставляет реализацию метода <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" />, который быстрее по сравнению с методом <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Выполняет поиск указанного члена, используя заданные ограничения привязки.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий открытые члены с заданным именем, если такие члены есть, и пустой массив, если таких членов нет.</returns>
      <param name="name">Имя искомого члена.</param>
      <param name="bindingAttr">Битовая комбинация значений перечисления, которая задает способ поиска членов и типов с помощью операции отражения.</param>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)">
      <summary>Во всех случаях создает исключение <see cref="T:Microsoft.JScript.JScriptException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:Microsoft.JScript.JScriptException" />.</returns>
      <param name="bindingAttr">Битовая комбинация значений перечисления, которая задает способ поиска членов и типов с помощью операции отражения.</param>
    </member>
    <member name="T:Microsoft.JScript.UnaryOp">
      <summary>Представляет базовый класс для классов, выполняющих операции с одним операндом, например <see cref="T:Microsoft.JScript.Typeof" /> и <see cref="T:Microsoft.JScript.PostOrPrefixOperator" />.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="F:Microsoft.JScript.UnaryOp.operand">
      <summary>Представляет операнд.</summary>
    </member>
    <member name="T:Microsoft.JScript.URIErrorObject">
      <summary>Представляет ошибку универсального кода ресурса (URI).Ошибка URI может, например, произойти при попытке закодировать или раскодировать URI.</summary>
    </member>
    <member name="T:Microsoft.JScript.VBArrayConstructor">
      <summary>Представляет объект на основе прототипа, определенный при помощи функции конструктора.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayConstructor.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе прототипа, передающий заданные аргументы.</summary>
      <returns>Экземпляр объекта.</returns>
      <param name="args">Аргументы для передачи конструктору.</param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayObject">
      <summary>Представляет объект VBArray.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayObject.#ctor(Microsoft.JScript.VBArrayPrototype,System.Array)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.VBArrayObject" />.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="array">Базовый массив, который представляет класс.</param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayPrototype">
      <summary>Предоставляет статические методы и свойства для объектов <see cref="T:Microsoft.JScript.VBArrayObject" />.Все методы этого класса вызываются путем передачи ссылки объекту, запрашивающему доступ к методу.Этот класс принадлежит к категории встроенных объектных моделей.</summary>
    </member>
    <member name="P:Microsoft.JScript.VBArrayPrototype.constructor">
      <summary>Получает ссылку на объект на основе прототипа, в котором используется данный прототип.</summary>
      <returns>Ссылка на объект на основе прототипа.</returns>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)">
      <summary>Определяет размерность указанного массива.</summary>
      <returns>Размерность массива <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])">
      <summary>Получает значение в указанной позиции заданного массива.</summary>
      <returns>Значение в заданной позиции в массиве <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="args">Массив, представляющий индексы каждого измерения, которые задают позицию получаемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)">
      <summary>Получает нижнюю границу заданного измерения в указанном массиве.</summary>
      <returns>Нижняя граница параметра <paramref name="dimension" /> в массиве <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dimension">Измерение, нижнюю границу которого нужно определить.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Преобразовывает объект <see cref="T:Microsoft.JScript.VBArrayObject" /> в объект <see cref="T:Microsoft.JScript.ArrayObject" />.</summary>
      <returns>Массив <paramref name="thisob" />, представленный в виде объекта <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)">
      <summary>Получает верхнюю границу заданного измерения в указанном массиве.</summary>
      <returns>Верхняя граница параметра <paramref name="dimension" /> в массиве <paramref name="thisob" />.</returns>
      <param name="thisob">Объект, для которого выполняется этот метод.</param>
      <param name="dimension">Измерение, верхнюю границу которого нужно определить.</param>
    </member>
    <member name="T:Microsoft.JScript.VsaItem">
      <summary>Представляет элементы, добавленные в обработчик скриптов .NET.К их числу относятся элементы кода, элементы ссылок и глобальные элементы.</summary>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.flag">
      <summary>Specifies the type of the item as <see cref="F:Microsoft.Vsa.VsaItemFlag.Class" />, <see cref="F:Microsoft.Vsa.VsaItemFlag.Module" />, or <see cref="F:Microsoft.Vsa.VsaItemFlag.None" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.GetOption(System.String)">
      <summary>Получение параметр codebase.</summary>
      <returns>The value of the codebase option.</returns>
      <param name="name">Строковый литерал codebase.</param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.isDirty">
      <summary>Указывает, отличается ли текущее представление элемента в памяти от сохраненного представления.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.IsDirty">
      <summary>Возвращает или задает значение, указывающее, отличается ли текущее представление элемента в памяти от сохраненного представления.</summary>
      <returns>Значение true, если представление в памяти отличается от сохраненного представления; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.ItemType">
      <summary>Получает тип элемента.</summary>
      <returns>Одно из значений перечисления.Значение задает тип элемента.</returns>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.name">
      <summary>Указывает имя элемента.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.Name">
      <summary>Gets or sets the name of the item.</summary>
      <returns>Имя строкового литерала элемента.</returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)">
      <summary>Задает параметр codebase.</summary>
      <param name="name">Строковый литерал codebase.</param>
      <param name="value">Новое значение для параметра.</param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.type">
      <summary>Задает тип элемента в виде <see cref="F:Microsoft.Vsa.VsaItemType.Code" />, <see cref="F:Microsoft.Vsa.VsaItemType.Reference" /> или <see cref="F:Microsoft.Vsa.VsaItemType.AppGlobal" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.VsaItems">
      <summary>Представляет коллекцию объектов <see cref="T:Microsoft.Vsa.IVsaItem" /> к которым можно обращаться по имени или по индексу.</summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.#ctor(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.JScript.VsaItems" />.</summary>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Close">
      <summary>Отключает каждый элемент в коллекции от обработчика скриптов.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Count">
      <summary>Возвращает количество элементов в коллекции.</summary>
      <returns>Число элементов в коллекции.</returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.CreateItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType,Microsoft.JScript.Vsa.JSVsaItemFlag)">
      <summary>Создает новый элемент и добавляет его в коллекцию.</summary>
      <returns>Созданный новый элемент.</returns>
      <param name="name">Имя нового элемента.</param>
      <param name="itemType">Одно из значений перечисления.Это значение задает тип нового элемента в виде <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Code" />, <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Reference" /> или <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.AppGlobal" />.</param>
      <param name="itemFlag">Одно из значений перечисления.Это значение задает исходное содержимое элемента <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Code" /> в виде <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Class" />, <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Module" /> или <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.None" />.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.GetEnumerator">
      <summary>Получает перечислитель, выполняющий итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, выполняющий итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.Int32)">
      <summary>Получает из коллекции элемент, на который указывает заданное значение индекса.</summary>
      <returns>Элемент с индексом <paramref name="index" />.</returns>
      <param name="index">Индекс получаемого элемента.</param>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.String)">
      <summary>Получает из коллекции элемент, на который указывает заданное имя.</summary>
      <returns>Элемент с именем <paramref name="itemName" />.</returns>
      <param name="itemName">Имя возвращаемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.Int32)">
      <summary>Удаляет элемент, на который указывает заданное значение индекса, из коллекции.</summary>
      <param name="itemIndex">Индекс удаляемого элемента.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.String)">
      <summary>Удаляет элемент, на который указывает заданное имя, из коллекции.</summary>
      <param name="itemName">Имя удаляемого элемента.</param>
    </member>
    <member name="T:Microsoft.JScript.VSAITEMTYPE2">
      <summary>Расширяет перечисление <see cref="T:Microsoft.Vsa.VsaItemType" />.Предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.None">
      <summary>Не задает ничего.This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTOBJECT">
      <summary>Определяет объект основного приложения.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPE">
      <summary>Задает область.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPEANDOBJECT">
      <summary>Задает одновременно область и объект.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTSCOPE">
      <summary>Задает область скрипта.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTBLOCK">
      <summary>Задает блок скрипта.Применимо к <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.STATEMENT">
      <summary>Задает одиночный оператор.Применимо к <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.EXPRESSION">
      <summary>Задает выражение.Применимо к <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.With">
      <summary>Представляет оператор with.Этот класс принадлежит к категории деревьев с абстрактным синтаксисом.</summary>
    </member>
    <member name="M:Microsoft.JScript.With.JScriptWith(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Задает объект по умолчанию для блока оператора with, добавив его в стек области.</summary>
      <returns>Параметр <paramref name="withOb" />, преобразовываемый в объект.</returns>
      <param name="withOb">Объект по умолчанию.</param>
      <param name="engine">Ссылка на обработчик скриптов.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaEngine"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.AppDomain"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.ApplicationBase"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.applicationPath"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Assembly"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.assemblyVersion"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Close"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Compile"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.compiledRootNamespace"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoClose"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoCompile"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoLoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoSaveCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoSaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineMoniker"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineName"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineSite"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Error(Microsoft.JScript.Vsa.JSVsaError)"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.errorLocale"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Evidence"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.executionEvidence"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.failedCompilation"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.genDebugInfo"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.GenerateDebugInfo"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.GetCustomOption(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.GetOption(System.String)"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.haveCompiledState"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.InitNew"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isClosed"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsCompiled"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isDebugInfoSupported"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsDirty"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineCompiled"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineDirty"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineInitialized"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineRunning"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsRunning"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.IsValidIdentifier(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.IsValidNamespaceName(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Items"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Language"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.LCID"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.LoadCompiledState"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.loadedAssembly"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.LoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Name"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.nameTable"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Preconditions(Microsoft.JScript.Vsa.BaseVsaEngine.Pre)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Reset"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.ResetCompiledState"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.RevokeCache"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.RootMoniker"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.rootNamespace"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.RootNamespace"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Run"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.scriptLanguage"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SetCustomOption(System.String,System.Object)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SetOption(System.String,System.Object)"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Site"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.startupClass"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.startupInstance"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.ValidateRootMoniker(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Version"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.vsaItems"></member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaEngine.Pre"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.None">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotClosed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SupportForDebug">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineCompiled">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineRunning">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotRunning">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootMonikerSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootMonikerNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootNamespaceSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SiteSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SiteNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineInitialised">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotInitialised">
      <summary />
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaSite"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.#ctor"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaSite.Assembly"></member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaSite.DebugInfo"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetEventSourceInstance(System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetGlobalInstance(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.Notify(System.String,System.Object)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.OnCompilerError(Microsoft.JScript.Vsa.IJSVsaError)"></member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaStartup"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.#ctor"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.SetSite(Microsoft.JScript.Vsa.IJSVsaSite)"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.Shutdown"></member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaStartup.site"></member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.Startup"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaCodeItem"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource(System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.AppendSourceText(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaCodeItem.CodeDOM"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaCodeItem.SourceText"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaEngine"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Assembly"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Close"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Compile"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Evidence"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsCompiled"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsDirty"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsRunning"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.IsValidIdentifier(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Items"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Language"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.LCID"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Name"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Reset"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.RevokeCache"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Run"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption(System.String,System.Object)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Version"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaError"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Description"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.EndColumn"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Line"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.LineText"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Number"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Severity"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.SourceItem"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.SourceMoniker"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.StartColumn"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaGlobalItem"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaGlobalItem.ExposeMembers"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaGlobalItem.TypeString"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaItem"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItem.GetOption(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.IsDirty"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.ItemType"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.Name"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItem.SetOption(System.String,System.Object)"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaItems"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Count"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType,Microsoft.JScript.Vsa.JSVsaItemFlag)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Item(System.Int32)"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Item(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.Remove(System.Int32)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.Remove(System.String)"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaPersistSite"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement(System.String,System.String)"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaReferenceItem"></member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaReferenceItem.AssemblyName"></member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaSite"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetEventSourceInstance(System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetGlobalInstance(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.Notify(System.String,System.Object)"></member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.OnCompilerError(Microsoft.JScript.Vsa.IJSVsaError)"></member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaError"></member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainCannotBeSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseCannotBeSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyExpected">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.BadAssembly">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CachedAssemblyInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CallbackUnexpected">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CodeDOMNotAvailable">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CompiledStateNotFound">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.DebugInfoNotSupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ElementNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ElementNotFound">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineBusy">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotClose">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotReset">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineClosed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineEmpty">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineInitialized">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInUse">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotCompiled">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotInitialized">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotRunning">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineRunning">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInUse">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNotFound">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceTypeInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GetCompiledStateFailed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceTypeInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.InternalCompilerError">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRemoved">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemFlagNotSupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInUse">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNotFound">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemTypeNotSupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.LCIDNotSupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.LoadElementFailed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotificationInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.OptionInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.OptionNotSupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RevokeFailed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerAlreadySet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInUse">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerProtocolInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SaveCompiledStateFailed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SaveElementFailed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteAlreadySet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SourceItemNotAvailable">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SourceMonikerNotAvailable">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.URLInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.BrowserNotExist">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.DebuggeeNotStarted">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotExist">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.FileFormatUnsupported">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.FileTypeUnknown">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRenamed">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.MissingSource">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotInitCompleted">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NameTooLong">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInUse">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInvalid">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.VsaServerDown">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.MissingPdb">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotClientSideAndNoUrl">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CannotAttachToWebServer">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameNotSet">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.UnknownError">
      <summary />
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaException"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError,System.String,System.Exception)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.String,System.Exception)"></member>
    <member name="P:Microsoft.JScript.Vsa.JSVsaException.ErrorCode"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.ToString"></member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaItemFlag"></member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.None">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Module">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Class">
      <summary />
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaItemType"></member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.Reference">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.AppGlobal">
      <summary />
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.Code">
      <summary />
    </member>
    <member name="T:Microsoft.JScript.Vsa.ResInfo"></member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.String,System.Boolean,System.Boolean)"></member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.filename"></member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.fullpath"></member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isLinked"></member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isPublic"></member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.name"></member>
    <member name="T:Microsoft.JScript.Vsa.VsaEngine">
      <summary>Реализует интерфейс <see cref="T:Microsoft.Vsa.IVsaEngine" />. </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Clone(System.AppDomain)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CompileEmpty"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngine"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope(System.Boolean,System.String[])"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType(System.Boolean,System.String[],System.RuntimeTypeHandle)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(System.Boolean,System.String[],System.RuntimeTypeHandle,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType(System.RuntimeTypeHandle)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.DisconnectEvents"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetAssembly"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetGlobalScope"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItem(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemCount"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetMainScope"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetModule"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalArrayConstructor"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalObjectConstructor"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalRegExpConstructor"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Interrupt"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.IsValidIdentifier(System.String)"></member>
    <member name="P:Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PopScriptObject"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PushScriptObject(Microsoft.JScript.ScriptObject)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RegisterEventSource(System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Reset"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Restart"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Run(System.AppDomain)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RunEmpty"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ScriptObjectStackTop"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.SetOutputStream(Microsoft.JScript.IMessageReceiver)"></member>
  </members>
</doc>