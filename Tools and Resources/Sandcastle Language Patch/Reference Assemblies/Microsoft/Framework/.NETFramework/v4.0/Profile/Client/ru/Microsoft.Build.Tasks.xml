<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Tasks</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.AssignProjectConfiguration">
      <summary>Assigns XML project configurations to project reference task items.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects">
      <summary>Gets or sets the list of resolved project reference paths while preserving the original project reference attributes.</summary>
      <returns>The list of resolved project reference paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.Execute">
      <summary>Executes the AssignProjectConfiguration task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents">
      <summary>Gets or sets an XML string that contains the project configuration.</summary>
      <returns>An XML string that contains the project configuration.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects">
      <summary>Gets or sets the list of project reference items that could not be resolved using the pre-resolved list of outputs.</summary>
      <returns>The list of project reference items that could not be resolved using the pre-resolved list of outputs.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CombinePath">
      <summary>Combines the specified paths into a single path.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CombinePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.BasePath">
      <summary>Gets or sets the base path to combine with the other paths. Can be a relative path, absolute path, or blank.</summary>
      <returns>The base path to combine with the other paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.CombinedPaths">
      <summary>Gets or sets the combined path that is created by the CombinePath task.</summary>
      <returns>The combined path that is created by the CombinePath task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.Execute">
      <summary>Executes the CombinePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.Paths">
      <summary>Gets or sets a list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path. Paths can be relative or absolute.</summary>
      <returns>A list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ConvertToAbsolutePath">
      <summary>Implements the ConvertToAbsolutePath task. Use the ConvertToAbsolutePath element in your project file to create and execute this task. For usage and parameter information, see ConvertToAbsolutePath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ConvertToAbsolutePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths">
      <summary>Gets or sets a list of absolute paths.</summary>
      <returns>The list of absolute paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute">
      <summary>Executes the ConvertToAbsolutePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths">
      <summary>Gets or sets a list of relative paths to convert to absolute paths.</summary>
      <returns>The list of relative paths to convert to absolute paths.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateManifestResourceName">
      <summary>Determines the manifest resource name to assign to a resource.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>When overridden in a derived class, creates the manifest resource name.</summary>
      <returns>The manifest resource name.</returns>
      <param name="fileName">The name of the dependent file.</param>
      <param name="linkFileName">The name of the file specified by the Link attribute.</param>
      <param name="rootNamespaceName">The root namespace. This parameter may be a null reference (Nothing in Visual Basic).</param>
      <param name="dependentUponFileName">The file name of the parent of this dependency. This parameter may be a null reference (Nothing).</param>
      <param name="binaryStream">The binary stream contents of the file. This parameter may be a null reference (Nothing).</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.Execute">
      <summary>Runs the task.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)">
      <summary>When overridden in a derived class, indicates whether the specified file is a valid source file.</summary>
      <returns>true if the file is a valid source file; otherwise, false.</returns>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)">
      <summary>Creates a valid identifier for use with Visual Studio 2003.</summary>
      <returns>The identifier to use with Visual Studio 2003.</returns>
      <param name="name">The file name.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames">
      <summary>Gets the created manifest resource names.</summary>
      <returns>The created manifest resource names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles">
      <summary>Gets or sets the dependent resource files.</summary>
      <returns>The dependent resource files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace">
      <summary>Gets or sets the root namespace to use for naming.</summary>
      <returns>The root namespace to use for naming.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateTemporaryVCProject">
      <summary>Creates a temporary Visual C++ project with MSBuild references replaced with file references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateTemporaryVCProject" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.Configuration">
      <summary>Gets or sets the configuration of the Visual C++ project file to process.</summary>
      <returns>The configuration of the Visual C++ project file to process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.Execute">
      <summary>Executes the CreateTemporaryVCProject task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.OutputProjectFile">
      <summary>Gets or sets the name of the temporary project file to create.</summary>
      <returns>The name of the temporary project file to create.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ProjectFile">
      <summary>Gets or sets the Visual C++ project file to process.</summary>
      <returns>The Visual C++ project file to process.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceAssemblies">
      <summary>Gets or sets pre-resolved outputs of MSBuild references.</summary>
      <returns>Pre-resolved outputs of MSBuild references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceGuids">
      <summary>Gets or sets an array of GUIDs of referenced MSBuild projects.</summary>
      <returns>An array of GUIDs of referenced MSBuild projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceImportLibraries">
      <summary>Gets or sets pre-resolved import library (.lib) outputs of Visual C++ projects.</summary>
      <returns>Pre-resolved import library (.lib) outputs of Visual C++ projects.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Exec">
      <summary>Implements the Exec task. Use the Exec element in your project file to create and execute this task. For usage and parameter information, see Exec Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Exec" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Command">
      <summary>Gets or sets the command to run.</summary>
      <returns>The command to run.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ExecuteTool(System.String,System.String,System.String)">
      <summary>Executes the cmd.exe tool, waits for its completion, and cleans up the batch file after execution completes.</summary>
      <returns>The exit code that the tool returns.</returns>
      <param name="pathToTool">The path to the tool to execute.</param>
      <param name="responseFileCommands">Command line arguments that should go into a temporary response file.</param>
      <param name="commandLineCommands">Command line arguments that should be passed to the tool directly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GenerateFullPathToTool">
      <summary>Returns the full path to the system tool cmd.exe.</summary>
      <returns>The full path to the system tool cmd.exe.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GetWorkingDirectory">
      <summary>Returns the working directory to use for the tool process.</summary>
      <returns>The working directory to use for the tool process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors">
      <summary>Logs error message and handles exit code.</summary>
      <returns>true if exit code was ignored; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreExitCode">
      <summary>Gets or sets a Boolean value that indicates whether the Exec task should ignore the exit code provided by the executed command (true) or should return false if the executed command returns a non-zero exit code (false).</summary>
      <returns>true if the Exec task should ignore the exit code provided by the executed command; false if the Exec task should return false if the executed command returns a non-zero exit code.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogPathToTool(System.String,System.String)">
      <summary>Logs the tool name and path.</summary>
      <param name="toolName">The tool name.</param>
      <param name="pathToTool">The current directory where the tool is run.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogToolCommand(System.String)">
      <summary>Logs the batch file command to be executed.</summary>
      <param name="message">Specify an empty string. This parameter is not used.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Outputs">
      <summary>Gets or sets the output items from the task.</summary>
      <returns>The output items from the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorEncoding">
      <summary>Gets the encoding of the captured task standard error stream.</summary>
      <returns>The encoding of the captured task standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard error stream.</summary>
      <returns>The importance to log ordinary messages with in the standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputEncoding">
      <summary>Gets the encoding of the captured task standard output stream.</summary>
      <returns>The encoding of the captured task standard output stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard out stream.</summary>
      <returns>The importance to log ordinary messages with in the standard out stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdErrEncoding">
      <summary>Gets or sets the encoding of the captured task standard error stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard error stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdOutEncoding">
      <summary>Gets or sets the encoding of the captured task standard output stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard output stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ToolName">
      <summary>Gets the name of the tool (cmd.exe).</summary>
      <returns>The name of the tool (cmd.exe).</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.WorkingDirectory">
      <summary>Gets or sets the directory in which the command will run.</summary>
      <returns>The directory in which the command will run.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindUnderPath">
      <summary>Implements the FindUnderPath task. Use the FindUnderPath element in your project file to create and execute this task. For usage and parameter information, see FindUnderPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindUnderPath" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.Execute">
      <summary>Executes the FileUnderPath task.</summary>
      <returns>true if task executes successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Files">
      <summary>Gets or sets the files whose paths should be compared with the path specified by the <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> property.</summary>
      <returns>The files whose paths should be compared with the path specified by the <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.InPath">
      <summary>Gets or sets the items that were found under the specified path.</summary>
      <returns>The items that were found under the specified path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.OutOfPath">
      <summary>Gets or sets the items that were not found under the specified path.</summary>
      <returns>The items that were not found under the specified path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Path">
      <summary>Gets or sets the folder path to use as the reference.</summary>
      <returns>The folder path to use as the reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths">
      <summary>Gets or sets a Boolean value that indicates whether the paths of the output items should be updated to be absolute.</summary>
      <returns>true if the paths of the output items should be updated to be absolute; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatVersion">
      <summary>Appends the revision number to the version number.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FormatVersion" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.Execute">
      <summary>Executes the FormatVersion task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.FormatType">
      <summary>Gets or sets the format type.</summary>
      <returns>The format type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.OutputVersion">
      <summary>Gets or sets the output version that includes the revision number.</summary>
      <returns>The output version that includes the revision number.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Revision">
      <summary>Gets or sets the revision to append to the version.</summary>
      <returns>The revision to append to the version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Version">
      <summary>Gets or sets the version number string to format.</summary>
      <returns>The version number string to format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateDeploymentManifest">
      <summary>Implements the GenerateDeploymentManifest task. Use the GenerateDeploymentManifest element in the project file to create and execute this task. For usage and parameter information, see GenerateDeploymentManifest Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateDeploymentManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateDeploymentManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl">
      <summary>Gets or sets the update location for the application.</summary>
      <returns>The update location for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation">
      <summary>Gets or sets a Boolean value that indicates whether the application should be run automatically when it is opened through a URL.</summary>
      <returns>true if the application can only be started from the Start menu; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install">
      <summary>Gets or sets a Boolean that indicates whether the application is an installed application or an online-only application.</summary>
      <returns>true if the application is to be installed on the local computer and can be removed by using the Add or Remove Programs dialog box; false if the application is for online use from a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions">
      <summary>Gets or sets a Boolean value that indicates whether the .deploy file name extension mapping is used.</summary>
      <returns>true if every program file is published with a .deploy file name extension; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion">
      <summary>Gets or sets a Boolean value that indicates whether the user can skip the update.</summary>
      <returns>true if the user can skip the update; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Product">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher">
      <summary>Gets or sets the publisher of the application.</summary>
      <returns>The publisher of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl">
      <summary>Gets or sets the link that appears in the Uninstall or change a program dialog box for the application. The specified value should be a fully qualified URL or UNC path.</summary>
      <returns>The link that appears in the Uninstall or change a program dialog box for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters">
      <summary>Gets or sets a Boolean value that indicates whether URL query-string parameters should be made available to the application.</summary>
      <returns>true if URL query-string parameters should be made available to the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled">
      <summary>Gets or sets a Boolean value that indicates whether the application is enabled for updates.</summary>
      <returns>true if the application is enabled for updates; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval">
      <summary>Gets or sets the update interval for the application. </summary>
      <returns>The update interval for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode">
      <summary>Gets or sets a Boolean value that indicates whether updates should be checked. Updates can be checked before the application is started (in the foreground), or when the application is running (in the background).</summary>
      <returns>true if updates should be checked; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit">
      <summary>Gets or sets the time unit for the <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> property.</summary>
      <returns>The time unit for the <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateResource">
      <summary>Implements the GenerateResource task. Use the GenerateResource element in your project file to create and execute this task. For usage and parameter information, see GenerateResource Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateResource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.Execute">
      <summary>Executes the GenerateResource task.</summary>
      <returns>true if the GenerateResource task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.FilesWritten">
      <summary>Gets or sets the names of all files written to disk including the cache file, if present.</summary>
      <returns>The names of all files written to disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies">
      <summary>Gets or sets a Boolean value that specifies whether to create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files (true) or to create a new <see cref="T:System.AppDomain" /> only when the resources files reference a user's assembly (false).</summary>
      <returns>true if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files; false if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> only when the resources (.resx) files reference a user's assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.OutputResources">
      <summary>Gets or sets the name of the generated files, such as .resources files. </summary>
      <returns>The name of the generated files, such as .resources files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.PublicClass">
      <summary>Gets or sets a Boolean value that indicates whether the GenerateResource task should create a strongly typed resource class as a public class.</summary>
      <returns>true if the GenerateResource task should create a strongly typed resource class as a public class; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.References">
      <summary>Gets or sets the references to load types in .resx files from.</summary>
      <returns>The references to load types in .resx files from.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.Sources">
      <summary>Gets or sets the items to convert.</summary>
      <returns>The items to convert.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StateFile">
      <summary>Gets or sets the path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</summary>
      <returns>The path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName">
      <summary>Gets or sets the class name for the strongly typed resource class.</summary>
      <returns>The class name for the strongly typed resource class.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName">
      <summary>Gets or sets the filename for the source file.</summary>
      <returns>The filename for the source file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage">
      <summary>Gets or sets the language to use when generating the class source for the strongly typed resource.</summary>
      <returns>The language to use when generating the class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace">
      <summary>Gets or sets the namespace to use for the generated class source for the strongly typed resource.</summary>
      <returns>The namespace to use for the generated class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.UseSourcePath">
      <summary>Gets or sets a Boolean value that indicates whether the input file's directory is to be used for resolving relative file paths.</summary>
      <returns>true if the input file's directory is to be used for resolving relative file paths; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetAssemblyIdentity">
      <summary>Implements the GetAssemblyIdentity task. Use the GetAssemblyIdentity element in your project file to create and execute this task. For usage and parameter information, see GetAssemblyIdentity Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetAssemblyIdentity" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies">
      <summary>Gets or sets the retrieved assembly identities.</summary>
      <returns>The retrieved assembly identities.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles">
      <summary>Gets or sets the files to retrieve identities from.</summary>
      <returns>The files to retrieve identities from.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.Execute">
      <summary>Executes the GetAssemblyIdentity task.</summary>
      <returns>true if the GetAssemblyIdentity task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetFrameworkPath">
      <summary>Implements the GetFrameworkPath task. Use the GetFrameworkPath element in your project file to create and execute this task. For usage and parameter information, see GetFrameworkPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetFrameworkPath" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.Execute">
      <summary>Returns true in all cases.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.Path">
      <summary>Gets or sets the path of the folder that contains the latest version of the .NET Framework assemblies.</summary>
      <returns>The path of the folder that contains the latest version of the .NET Framework assemblies.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.LC">
      <summary>Implements the LC task. Use the LC element in your project file to create and execute this task. For usage and parameter information, see LC Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.LC" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.GenerateFullPathToTool">
      <summary>Returns the full file path of the license compiler tool (lc.exe).</summary>
      <returns>The full file path of the license compiler tool, or null if the license compiler tool file is not found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.LicenseTarget">
      <summary>Gets or sets the executable for which the .licenses files are generated.</summary>
      <returns>The executable for which the .licenses files are generated.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.NoLogo">
      <summary>Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.</summary>
      <returns>true if the Microsoft startup banner display is suppressed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputDirectory">
      <summary>Gets or sets the directory in which to place the output .licenses files.</summary>
      <returns>The directory in which to place the output .licenses files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputLicense">
      <summary>Gets or sets the name of the .licenses file.</summary>
      <returns>The name of the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ReferencedAssemblies">
      <summary>Gets or sets the referenced components to load when generating the .licenses file.</summary>
      <returns>The referenced components to load when generating the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.Sources">
      <summary>Gets or sets the items that contain licensed components to include in the .licenses file.</summary>
      <returns>The items that contain licensed components to include in the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ToolName">
      <summary>Gets the name of the license compiler tool.</summary>
      <returns>The name of the license compiler tool.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MSBuild">
      <summary>Implements the MSBuild task. Use the MSBuild element in your project file to create and execute this task. For usage and parameter information, see MSBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.MSBuild" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.Execute">
      <summary>Instructs the MSBuild engine to build one or more project files whose locations are specified by the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property.</summary>
      <returns>true if all projects build successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Projects">
      <summary>Gets or sets the project files to build.</summary>
      <returns>The project files to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Properties">
      <summary>Gets or sets a semicolon-delimited list of property name/value pairs to apply as global properties to the child project. </summary>
      <returns>A semicolon-delimited list of property name/value pairs to apply as global properties to the child project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RebaseOutputs">
      <summary>Gets or sets a Boolean value that specifies whether the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project. </summary>
      <returns>true if the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately">
      <summary>Gets or sets a Boolean value that specifies whether the MSBuild task invokes each target in the list passed to MSBuild one at a time, instead of at the same time.</summary>
      <returns>true if the MSBuild task invokes each target in the list passed to MSBuild one at a time; false if the MSBuild task invokes all targets in the list at the same time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure">
      <summary>Gets or sets a Boolean value that specifies whether the task should stop building the remaining projects as soon as any one of them may not work.</summary>
      <returns>true if the task should stop building the remaining projects as soon as any one of them may not work; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetOutputs">
      <summary>Returns the outputs of the built targets from all the project files. Only the outputs from the targets that were specified are returned, not any outputs that may exist on targets that those targets depend on.</summary>
      <returns>The outputs of the built targets from all the project files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Targets">
      <summary>Gets or sets the target or targets to build in the project files. Use a semicolon to separate a list of target names. </summary>
      <returns>The target or targets to build in the project files.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RegisterAssembly">
      <summary>Implements the RegisterAssembly task. Use the RegisterAssembly element in your project file to create and execute this task. For usage and parameter information, see RegisterAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RegisterAssembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.Assemblies">
      <summary>Gets or sets the assemblies to be registered with COM.</summary>
      <returns>The assemblies to be registered with COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile">
      <summary>Gets or sets information about the state between the RegisterAssembly task and the UnregisterAssembly task. This prevents the UnregisterAssembly task from attempting to unregister an assembly that failed to register in the RegisterAssembly task.</summary>
      <returns>The state information necessary for the UnregisterAssembly task to do proper clean-up.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase">
      <summary>Gets or sets a Boolean value that specifies whether the task creates a codebase entry in the registry, which specifies the file path for an assembly that is not installed in the global assembly cache. </summary>
      <returns>true if the task creates a codebase entry in the registry; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.Execute">
      <summary>Executes the RegisterAssembly task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)">
      <summary>Callback method for reporting the type library export events.</summary>
      <param name="kind">Describes the callbacks that the type library exporter makes when exporting a type library.</param>
      <param name="code">The error code of the export event.</param>
      <param name="msg">The message of the export event.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly)">
      <summary>Callback method for finding the type library for the specified assembly.</summary>
      <returns>null in all cases.</returns>
      <param name="assemblyToResolve">The assembly to find type libraries for.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles">
      <summary>Gets or sets the type library to generate from the specified assembly.</summary>
      <returns>The type library to generate from the specified assembly.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDir">
      <summary>Implements the RemoveDir task. Use the RemoveDir element in your project file to create and execute this task. For usage and parameter information, see RemoveDir Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RemoveDir" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.Directories">
      <summary>Gets or sets the directories to delete.</summary>
      <returns>The directories to delete.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.Execute">
      <summary>Executes the RemoveDir task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.RemovedDirectories">
      <summary>Gets or sets the directories that were successfully deleted.</summary>
      <returns>The directories that were successfully deleted.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNativeReference">
      <summary>Implements the ResolveNativeReference task. Use the ResolveNativeReference element in your project file to create and execute this task. For usage and parameter information, see ResolveNativeReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveNativeReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths">
      <summary>Gets or sets the search paths for resolving assembly identities of native references.</summary>
      <returns>The search paths for resolving assembly identities of native references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents">
      <summary>Gets or sets the COM components of the native assembly.</summary>
      <returns>The COM components of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles">
      <summary>Gets or sets the loose Etc files listed in the native manifest.</summary>
      <returns>The loose Etc files listed in the native manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles">
      <summary>Gets or sets the loose .tlb files of the native assembly.</summary>
      <returns>The loose .tlb files of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies">
      <summary>Gets or sets the assemblies that must be present before the manifest can be used.</summary>
      <returns>The assemblies that must be present before the manifest can be used.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries">
      <summary>Gets or sets the type libraries of the native assembly.</summary>
      <returns>The type libraries of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles">
      <summary>Gets or sets the reference files.</summary>
      <returns>The reference files.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.Execute">
      <summary>Executes the ResolveNativeReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences">
      <summary>Gets or sets the Win32 native assembly references.</summary>
      <returns>The Win32 native assembly references.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput">
      <summary>Determines the output files for non-MSBuild project references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.Execute">
      <summary>Executes the ResolveNonMSBuildProjectOutput task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs">
      <summary>Gets or sets an XML string containing resolved project outputs.</summary>
      <returns>An XML string containing resolved project outputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths">
      <summary>Gets or sets resolved reference paths that preserve the original project reference attributes.</summary>
      <returns>The resolved reference paths that preserve the original project reference attributes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences">
      <summary>Gets or sets project reference items that are in the MSBuild format.</summary>
      <returns>Project reference items that are in the MSBuild format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveVCProjectOutput">
      <summary>Determines the output files for Visual C++ project references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveVCProjectOutput" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Configuration">
      <summary>Gets or sets the configuration to look up for the Visual C++ project when using the Visual C++ project engine object model.</summary>
      <returns>The configuration to look up for the Visual C++ project.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.Execute">
      <summary>Executes the ResolveVCProjectOutput task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Override">
      <summary>Gets or sets the path of the override stylesheet that the ResolveVCProjectOutput task uses to change the directory of the Visual C++ built project.</summary>
      <returns>The path of the override stylesheet.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ProjectReferences">
      <summary>Gets or sets Visual C++ project references.</summary>
      <returns>
          Visual C++ project references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedImportLibraryPaths">
      <summary>Gets or sets resolved .LIB file paths for native Visual C++ projects and preserves the original project reference attributes.</summary>
      <returns>The resolved .LIB file paths for native Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedOutputPaths">
      <summary>Gets or sets resolved reference paths for managed Visual C++ projects. Preserves the original project reference attributes.</summary>
      <returns>The resolved reference paths for managed Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.SolutionFile">
      <summary>Gets or sets the path of the solution file that is used to set the solution macros for VCBuild.</summary>
      <returns>The path of the solution file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SignFile">
      <summary>Implements the SignFile task. Use the SignFile element in your project file to create and execute this task. For usage and parameter information, see SignFile Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.SignFile" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.CertificateThumbprint">
      <summary>Gets or sets the certificate to use for signing.</summary>
      <returns>The certificate to use for signing.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.Execute">
      <summary>Executes the SignFile task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.SigningTarget">
      <summary>Gets or sets the files to sign with the certificate.</summary>
      <returns>The files to sign with the certificate.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.TimestampUrl">
      <summary>Gets or sets the URL of a time stamping server.</summary>
      <returns>The URL of a time stamping server.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskExtension">
      <summary>Contains properties to help extend a task.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> containing task logging methods.</summary>
      <returns>An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> containing task logging methods.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ToolTaskExtension">
      <summary>Comprises extended utility methods for constructing a task that wraps a command line tool.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool must run from the command line and not from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool can run from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag">
      <summary>Gets the collection of parameters used by the derived task class.</summary>
      <returns>The collection of parameters used by the derived task class.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands">
      <summary>Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</summary>
      <returns>A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands">
      <summary>Gets the switch used by the command line tool to specify the response file.</summary>
      <returns>The switch used by the command line tool to specify the response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)">
      <summary>Gets the value of the specified Boolean parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)">
      <summary>Gets the value of the specified integer parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</summary>
      <returns>An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UpdateManifest">
      <summary>Updates selected properties in a manifest and resigns.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.UpdateManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationManifest">
      <summary>Gets or sets the application manifest.</summary>
      <returns>The application manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationPath">
      <summary>Gets or sets the path of the application manifest.</summary>
      <returns>The path of the application manifest.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.Execute">
      <summary>Executes the task.</summary>
      <returns>true if task execution succeeded; <see cref="T:System.InvalidOperationException" /> on error.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.InputManifest">
      <summary>Gets or sets the manifest to update.</summary>
      <returns>The manifest to update.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.OutputManifest">
      <summary>Gets or sets the manifest that contains updated properties.</summary>
      <returns>The manifest that contains updated properties.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.VCBuild">
      <summary>Implements the VCBuild task. Use the VCBuild element in your project file to create and execute this task. For usage and parameter information, see VCBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.VCBuild" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the VCBuild tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths">
      <summary>Gets or sets additional paths to append to the LIBPATH environment variable before executing vcbuild.exe.</summary>
      <returns>The additional paths to append to the LIBPATH environment variable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalLinkLibraryPaths">
      <summary>Gets or sets additional reference paths to append to the LIB environment variable.</summary>
      <returns>Additional reference paths to append to the LIB environment variable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalOptions">
      <summary>Gets or sets additional options you want to specify to the VCBuild tool.</summary>
      <returns>Additional options you want to specify to the VCBuild tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Clean">
      <summary>Gets or sets a Boolean value that specifies whether the VCBuild task outputs only clean build outputs. </summary>
      <returns>true if the VCBuild task outputs only clean build outputs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Configuration">
      <summary>Gets or sets the name of the configuration and platform to build with such as Debug|Win32.</summary>
      <returns>The name of the configuration and platform to build with</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.EnvironmentOverride">
      <summary>Overrides the LIBPATH environment variable with <see cref="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths" /> and returns the new environment variables.</summary>
      <returns>Name/value pairs containing the new environment variable values.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.Execute">
      <summary>Executes the VCBuild task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.GenerateFullPathToTool">
      <summary>Returns the full file path of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The full file path of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Override">
      <summary>Gets or sets the location of a VCBuild property sheet file that overrides project file settings.</summary>
      <returns>The location of a VCBuild property sheet file that overrides project file settings.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Platform">
      <summary>Gets or sets the name of the platform to build for.</summary>
      <returns>The name of the platform to build for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Projects">
      <summary>Gets or sets the projects to build.</summary>
      <returns>The projects to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Rebuild">
      <summary>Gets or sets a Boolean value that specifies whether the task performs a clean build of outputs before performing a build.</summary>
      <returns>true if the task performs a clean build of outputs before performing a build; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.SolutionFile">
      <summary>Gets or sets the full path to the solution file when building solutions, which is used to resolve solution-related Visual C++ project macros.</summary>
      <returns>The full path to the solution file when building solutions.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.ToolName">
      <summary>Returns the name of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The name of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.UseEnvironment">
      <summary>Gets or sets a Boolean value that specifies whether to use environment variables for INCLUDE and LIB paths.</summary>
      <returns>true if the VCBuild task will use environment variables for INCLUDE and LIB paths; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.UserEnvironment">
      <summary>This property is obsolete.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>True if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Warning">
      <summary>Implements the Warning task. Use the Warning element in your project file to create and execute this task. For usage and parameter information, see Warning Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Warning" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Code">
      <summary>Gets or sets the warning code.</summary>
      <returns>The warning code.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.Execute">
      <summary>Executes the Warning task.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.HelpKeyword">
      <summary>Gets or sets the Help keyword to associate with the warning.</summary>
      <returns>The Help keyword to associate with the warning.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Text">
      <summary>Gets or sets the warning text that MSBuild logs.</summary>
      <returns>The warning text that MSBuild logs.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings">
      <summary>Defines the settings for the bootstrapper build operation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile">
      <summary>Gets or sets the file to be installed after the bootstrapper installs the required components.</summary>
      <returns>The name of the file to be installed after the required components are installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName">
      <summary>Gets or sets the name of the application to be installed after the bootstrapper installs all required components.</summary>
      <returns>The name of the application to be installed after the required components are installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl">
      <summary>Gets or sets the expected source location when the bootstrapper is published to a Web site.</summary>
      <returns>A URL that represents the expected source location when the bootstrapper is published to a Web site.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation">
      <summary>Gets or sets the installation location for bootstrapper components.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation" /> installation location for bootstrapper components.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl">
      <summary>Gets or sets the location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</summary>
      <returns>The location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents">
      <summary>Gets or sets a value indicating whether the bootstrapper components will be copied to the build output directory.</summary>
      <returns>true if the bootstrapper components will be copied to the build output directory; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID">
      <summary>Gets or sets the culture identifier to use if the LCID identifier is not available.</summary>
      <returns>An integer value that represents the culture identifier to use if the LCID identifier is not available.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID">
      <summary>Gets or sets the culture identifier specifying the culture for which the bootstrapper is built.</summary>
      <returns>An integer value that represents the culture identifier specifying the culture for which the bootstrapper is built.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath">
      <summary>Gets or sets the file location to which to copy output files.</summary>
      <returns>A string representing the file location to which to copy output files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ProductBuilders">
      <summary>Gets the product builders to use for generating the bootstrapper.</summary>
      <returns>A collection of product builders (<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection" />) to use for generating the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl">
      <summary>Gets or sets the URL for the Web site that contains support information for the bootstrapper.</summary>
      <returns>The URL for the Web site that contains support information for the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate">
      <summary>Gets or sets a value indicating whether the bootstrapper performs XML validation on the component manifests.</summary>
      <returns>true if the bootstrapper performs XML validation on the component manifests; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage">
      <summary>Represents messages that occur during the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpId">
      <summary>Gets the MSBuild Help ID for the host IDE.</summary>
      <returns>An integer representing the MSBuild Help ID for the host IDE.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpKeyword">
      <summary>Gets the MSBuild F1 Help keyword for the host IDE.</summary>
      <returns>The MSBuild F1 Help keyword for the host IDE.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Message">
      <summary>Gets a description of the details of the build message.</summary>
      <returns>A text string that describes the details of the build message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Severity">
      <summary>Gets the severity of the build message.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> object that represents the severity of the build message.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder">
      <summary>Represents a buildable version of a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder.Product">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</summary>
      <returns>Returns the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the product builder collection.</summary>
      <returns>An enumerator that can iterate through the product builder collection.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest">
      <summary>Describes a ClickOnce or native Win32 application manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile">
      <summary>Gets or sets the application configuration file.</summary>
      <returns>A string that represents the name of the application configuration file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint">
      <summary>Gets or sets an assembly reference that represents the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object that represents the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile">
      <summary>Gets or sets the program icon file.</summary>
      <returns>A string that represents the name of the icon file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest">
      <summary>Gets or sets a value that specifies whether the manifest is a ClickOnce application manifest or a native Win32 application manifest.</summary>
      <returns>A Boolean value that indicates whether the manifest is a ClickOnce application manifest (True) or a native Win32 manifest (False).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath">
      <summary>Gets or sets a value that specifies the maximum allowed length of a file path in a ClickOnce application deployment. If this value is specified, the length of each file path in the application is checked against this limit. Any items that exceed the limit cause a warning message. If this input is not specified or is zero, no checking is performed. For a native Win32 manifest, this input is ignored.</summary>
      <returns>An integer that indicates the maximum allowed length of a file path in a ClickOnce application deployment.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription">
      <summary>Gets or sets a value that specifies a textual description for the operating system dependency.</summary>
      <returns>A string that indicates the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl">
      <summary>Gets or sets a value that specifies a support URL for the operating system dependency.</summary>
      <returns>A string indicating the support URL for the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion">
      <summary>Gets or sets a value that specifies the minimum required operating system version required by the application.</summary>
      <returns>A string that indicates the minimum required operating system version required by the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo">
      <summary>Gets or sets a value that specifies a trust object that defines the application security.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> object that defines the application security.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest. Any resulting errors or warnings are reported in the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity">
      <summary>Gets or sets a property that is used to serialize the entry point identity to an XML file.</summary>
      <returns>The entry point identity.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters">
      <summary>Gets or sets a property that is used to serialize the entry point parameters to an XML file.</summary>
      <returns>The entry point parameters.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath">
      <summary>Gets or sets a property that specifies the entry point for executing the assembly and that is used to serialize the entry point to an XML file.</summary>
      <returns>The entry point for executing the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property to an XML file.</summary>
      <returns>true or false. The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild">
      <summary>Gets or sets a property that is used to serialize the build version of the operating system to an XML file.</summary>
      <returns>The build version of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor">
      <summary>Gets or sets a property that is used to serialize the major portion of the version number of the operating system to an XML file.</summary>
      <returns>The major portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor">
      <summary>Gets or sets a property that is used to serialize the minor portion of the version number of the operating system to an XML file.</summary>
      <returns>The minor portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision">
      <summary>Gets or sets a property that is used to serialize the revision portion of the version number of the operating system to an XML file.</summary>
      <returns>The revision portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection">
      <summary>Provides a collection for manifest assembly references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>Adds the specified assembly reference to the collection.</summary>
      <returns>Returns the added assembly reference instance.</returns>
      <param name="assembly">The assembly reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(System.String)">
      <summary>Adds the specified assembly reference to the collection.</summary>
      <returns>Returns the added assembly reference instance.</returns>
      <param name="path">The path of the assembly to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Count">
      <summary>Gets the number of objects contained in the collection.</summary>
      <returns>An integer indicating the number of objects contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>Finds an assembly reference in the collection by the specified assembly identity.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="identity">The specified assembly identity.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(System.String)">
      <summary>Finds an assembly reference in the collection by simple name.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="name">The specified assembly simple name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(System.String)">
      <summary>Finds an assembly reference in the collection by the specified target path.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="targetPath">The specified target path.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>Returns an enumerator (<see cref="T:System.Collections.IEnumerator" />).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>Returns the assembly reference instance.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>Removes the specified assembly reference from the collection.</summary>
      <param name="assemblyReference">The specified assembly reference to remove.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection">
      <summary>Represents a collection for manifest file references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>Adds the specified file reference to the collection.</summary>
      <returns>Returns the added file reference object.</returns>
      <param name="file">The specified file reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(System.String)">
      <summary>Adds the specified file reference to the collection.</summary>
      <returns>Returns the added file reference object.</returns>
      <param name="path">The path of the specified file reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Count">
      <summary>Returns the number of objects contained in the collection.</summary>
      <returns>the number of objects contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(System.String)">
      <summary>Finds a file reference in the collection by the specified target path.</summary>
      <returns>Returns the found file reference.</returns>
      <param name="targetPath">The specified target path.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> interface representing an enumerator that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Item(System.Int32)">
      <summary>Returns the element at the specified index.</summary>
      <returns>Returns the file reference object.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>Removes the specified file reference from the collection.</summary>
      <param name="file">The specified file reference to remove.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader">
      <summary>Reads an XML manifest file into an object representation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="path">The path name of the input file.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="path">The path name of the input file.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage">
      <summary>This class represents an error, warning, or informational output message for the manifest generator.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.GetArguments">
      <summary>Returns a string array of arguments for the message.</summary>
      <returns>Returns a string array of arguments for the message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Name">
      <summary>Returns an identifier for the message.</summary>
      <returns>A string indicating the message name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Text">
      <summary>Returns the text of the message.</summary>
      <returns>A string indicating the message text.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Type">
      <summary>Returns whether the message is an error, warning, or informational message.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType" /> object indicating the message type.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode">
      <summary>Specifies how the application checks for updates.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background">
      <summary>Check for updates in the background, after the application starts.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground">
      <summary>Check for updates in the foreground, before the application starts.</summary>
    </member>
  </members>
</doc>