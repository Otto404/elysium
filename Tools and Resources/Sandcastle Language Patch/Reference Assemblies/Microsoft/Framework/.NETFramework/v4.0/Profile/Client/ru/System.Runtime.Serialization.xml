<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.CollectionDataContractAttribute">
      <summary>При применении к типу коллекции позволяет пользователю задавать элементы коллекции.Этот атрибут может применяться только к типам, распознаваемым методом <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> как допустимые сериализуемые коллекции.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
      <summary>Возвращает или задает значение, указывающее, следует ли сохранять данные ссылки на объект.</summary>
      <returns>Значение true, если требуется сохранить данные ссылки на объект; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
      <summary>Возвращает или задает пользовательское имя для элемента коллекции.</summary>
      <returns>Имя, применяемое к элементам коллекции.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
      <summary>Возвращает или задает пользовательское имя для имени ключа словаря.</summary>
      <returns>Имя, используемое вместо имени ключа словаря по умолчанию.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
      <summary>Возвращает или задает имя контракта данных для типа коллекции.</summary>
      <returns>Имя контракта данных для типа коллекции.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен для контракта данных.</summary>
      <returns>Пространство имен контракта данных.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
      <summary>Возвращает или задает пользовательское имя для имени значения словаря.</summary>
      <returns>Имя, используемое вместо имени значения словаря по умолчанию.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ContractNamespaceAttribute">
      <summary>Задает пространство имен среды CLR и пространство имен XML для контракта данных. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ContractNamespaceAttribute" />, используя указанное пространство имен. </summary>
      <param name="contractNamespace">Пространство имен контракта.</param>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace">
      <summary>Возвращает или задает пространство имен среды CLR для типа контракта данных. </summary>
      <returns>Пространство имен типа, разрешенное средой CLR. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace">
      <summary>Возвращает пространство имен элементов контракта данных.</summary>
      <returns>Пространство имен элементов контракта данных.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractAttribute">
      <summary>Указывает, что тип определяет или реализует контракт данных и может быть сериализован сериализатором, таким как <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Чтобы сделать тип сериализуемым, авторы типа должны определить для него контракт данных.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
      <summary>Возвращает или задает значение, указывающее, следует ли сохранять данные ссылки на объект.</summary>
      <returns>Значение true, если требуется сохранить данные ссылки на объект с помощью стандартного XML; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Name">
      <summary>Возвращает или задает имя для контракта данных типа.</summary>
      <returns>Локальное имя контракта данных.Значение по умолчанию — это имя класса, к которому применяется атрибут.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен для контракта данных типа.</summary>
      <returns>Пространство имен контракта. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>Предоставляет механизм динамического сопоставления типов с представлением xsi:type во время сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractResolver" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>Переопределите этот метод, чтобы во время десериализации сопоставить указанное имя и пространство имен xsi:type с типом контракта данных.</summary>
      <returns>Тип, с которым сопоставляются имя и пространство имен xsi:type. </returns>
      <param name="typeName">Сопоставляемое имя xsi:type.</param>
      <param name="typeNamespace">Сопоставляемое пространство имен xsi:type.</param>
      <param name="declaredType">Тип данных объявлен в контракте данных.</param>
      <param name="knownTypeResolver">Известный арбитр типов.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>Переопределите этот метод, чтобы во время сериализации сопоставить тип контракта данных с именем и пространством имен xsi:type.</summary>
      <returns>Значение true, если сопоставление завершено успешно, в противном случае — значение false.</returns>
      <param name="type">Сопоставляемый тип.</param>
      <param name="declaredType">Тип данных объявлен в контракте данных.</param>
      <param name="knownTypeResolver">Известный арбитр типов.</param>
      <param name="typeName">Имя xsi:type.</param>
      <param name="typeNamespace">Пространство имен xsi:type.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>Сериализует и десериализует экземпляр типа в XML-поток или документ с помощью предоставленного контракта данных.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа и инициализирует коллекцию известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.Значением по умолчанию является значение, возвращенное свойством <see cref="F:System.Int32.MaxValue" />.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации; а также альтернативу для сопоставления объявлений xsi:type во время выполнения.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.Значением по умолчанию является значение, возвращенное свойством <see cref="F:System.Int32.MaxValue" />.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="dataContractResolver">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" /> для сопоставления объявлений xsi:type типам контракта данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа с помощью предоставленных корневых элемента и пространства имен XML.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает корневые XML-элемент и пространство имен в двух строковых параметрах, а также список известных типов, которые могут присутствовать в графе объектов.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя корневого элемента содержимого.</param>
      <param name="rootNamespace">Пространство имен корневого элемента.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации; а также XML-элемент и пространство имен, в которых находится содержимое.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">XML-элемент, содержащий данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации; а также XML-элемент и пространство имен, в которых находится содержимое, и альтернативу для сопоставления объявлений xsi:type во время выполнения.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">XML-элемент, содержащий данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="dataContractResolver">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" /> для сопоставления объявлений xsi:type типам контракта данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа с помощью предоставленных корневых элемента и пространства имен XML, заданных посредством параметров типа <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="rootNamespace">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий пространство имен корневого элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает корневые XML-элемент и пространство имен в двух параметрах <see cref="T:System.Xml.XmlDictionaryString" />, а также список известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="rootNamespace">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий пространство имен корневого элемента.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации; а также параметры <see cref="T:System.Xml.XmlDictionaryString" />, задающие XML-элемент и пространство имен, в которых находится содержимое.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, указывающий XML-элемент, содержащий данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Объект <see cref="T:System.Xml.XmlDictionaryString" />, задающий пространство имен XML корня.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объекта; максимальное количество сериализуемых элементов графа; параметры, указывающие, пропускать ли непредвиденные данные, использовать ли нестандартные конструкции XML для сохранения данных ссылок на объект в графе и использовать ли суррогат для пользовательской сериализации; параметры <see cref="T:System.Xml.XmlDictionaryString" />, задающие XML-элемент и пространство имен, в которых находится содержимое, и альтернативу для сопоставления объявлений xsi:type во время выполнения.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">XML-элемент, содержащий данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.</param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропустить предоставляемые расширением типа данные при сериализации и десериализации; в противном случае — значение false.</param>
      <param name="preserveObjectReferences">Значение true, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="dataContractResolver">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" /> для сопоставления объявлений xsi:type типам контракта данных.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary>Возвращает компонент, используемый для динамического сопоставления объявлений xsi:type с типами известных контрактов.</summary>
      <returns>Возвращает реализацию класса <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
      <summary>Возвращает тип суррогата, который может расширить процесс сериализации или десериализации.</summary>
      <returns>Реализация класса <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>Возвращает значение, указывающее, должны ли пропускаться данные, предоставляемые расширением класса, при сериализации или десериализации класса.</summary>
      <returns>Значение true, если данные расширения опускаются; в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Определяет, расположен ли объект <see cref="T:System.Xml.XmlDictionaryReader" /> на объекте, который может быть десериализован.</summary>
      <returns>Значение true, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Определяет, расположен ли объект <see cref="T:System.Xml.XmlReader" /> на объекте, который может быть десериализован.</summary>
      <returns>Значение true, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>Возвращает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого экземпляра класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая ожидаемые типы, переданные в качестве известных типов в конструктор <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>Возвращает максимальное количество элементов в графе объекта для сериализации или десериализации.</summary>
      <returns>Максимальное количество сериализуемых или десериализуемых элементов.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>Возвращает значение, указывающее, следует ли использовать нестандартные конструкции XML для сохранения данных ссылок на объект.</summary>
      <returns>Значение true, если требуется сохранить ссылки; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также указывает, была ли выполнена проверка имени объекта перед чтением его значения. </summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока.</param>
      <param name="verifyObjectName">Значение true, если требуется проверить соответствие имени объекта предоставленному в конструкторе значению корневого имени; в противном случае — значение false. </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Параметру <paramref name="verifyObjectName" /> задано значение true, и имя и пространство имен элемента не соответствуют значениям, заданным в конструкторе. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary>Считывает XML-документ или поток XML-документов и возвращает десериализованный объект.Метод включает параметр, определяющий, проверяется ли имя объекта, и арбитр для сопоставления объявлений xsi:type во время выполнения.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />.</returns>
      <param name="reader">Модуль чтения XML, используемый для чтения содержимого.</param>
      <param name="verifyObjectName">Значение true, если нужно проверять имя объекта; в противном случае — значение false.</param>
      <param name="dataContractResolver">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" /> для сопоставления объявлений xsi:type типам контракта данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также указывает, была ли выполнена проверка имени объекта перед чтением его значения.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <param name="verifyObjectName">Значение true, если требуется проверить соответствие имени объекта предоставленному в конструкторе значению корневого имени; в противном случае — значение false.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Параметру <paramref name="verifyObjectName" /> задано значение true, и имя и пространство имен элемента не соответствуют значениям, заданным в конструкторе. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary>Записывает все данные объекта (начальный XML-элемент, содержимое и включающий элемент) в XML-документ или поток с помощью указанного модуля записи XmlDictionaryWriter.Метод включает арбитр для сопоставления объявлений xsi:type во время выполнения.</summary>
      <param name="writer">Модуль записи XmlDictionaryWriter, используемый для записи содержимого в XML-документ или XML-поток.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <param name="dataContractResolver">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" />, используемая для сопоставления объявлений xsi:type с известным контрактом данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает все данные объекта (начальный XML-элемент, содержимое и закрывающий элемент) в XML-документ или поток с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи потока.</param>
      <param name="graph">Объект, записываемый в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи потока.</param>
      <param name="graph">Объект, записываемый в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Выполняет запись открывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Выполняет запись открывающего XML-элемента с помощью модуля записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.DataMemberAttribute">
      <summary>При применении к элементу типа указывает, что этот элемент является частью контракта данных и сериализуется <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataMemberAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue">
      <summary>Возвращает или задает значение, указывающее, следует ли сериализовать значение по умолчанию сериализуемого поля или свойства. </summary>
      <returns>Значение true, если значение по умолчанию для элемента должно быть создано в потоке сериализации; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.IsRequired">
      <summary>Возвращает или задает значение, указывающее модулю сериализации, что чтение и десериализация производятся при наличии элемента.</summary>
      <returns>Значение true используется, если требуется элемент; в противном случае используется значение false.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Элемент отсутствует.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Name">
      <summary>Возвращает или задает имя элемента данных. </summary>
      <returns>Имя элемента данных.Значение по умолчанию — это имя целевого объекта, к которому применяется атрибут.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Order">
      <summary>Возвращает или задает порядок сериализации и десериализации элемента.</summary>
      <returns>Числовой порядок сериализации или десериализации.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EnumMemberAttribute">
      <summary>Указывает, что поле является элементом перечисления и должно быть сериализовано.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.EnumMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.EnumMemberAttribute.Value">
      <summary>Возвращает или задает значение, связанное с элементом перечисления, к которому применяется атрибут.</summary>
      <returns>Значение, связанное с элементом перечисления.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary>Представляет параметры, которые могут устанавливаться для <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.DataContractSurrogate">
      <summary>Возвращает или задает суррогат сериализации. </summary>
      <returns>Реализация интерфейса <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />, которую можно использовать для настройки экспорта представления схемы XML для конкретного типа. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary>Возвращает коллекцию типов, которые могли быть обнаружены в процессе сериализации или десериализации. </summary>
      <returns>Коллекция KnownTypes, содержащая типы, которые могут быть обнаружены в процессе сериализации или десериализации.Представления схемы XML экспортируются для всех типов, заданных в этой коллекции <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary>Сохраняет данные из контракта данных с возможностью управления версиями, который был расширен посредством добавления новых элементов. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.IDataContractSurrogate">
      <summary>Предоставляет методы, необходимые для замены одного типа другим с помощью метода <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> во время сериализации, десериализации, а также экспорта и импорта документов схемы XML (XSD). </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
      <summary>Во время операций экспорта схемы вставляет в схему заметки для возвращаемых значений, не равных null. </summary>
      <returns>Объект, представляющий заметку, которая вставляется в определение схемы XML. </returns>
      <param name="memberInfo">Объект <see cref="T:System.Reflection.MemberInfo" />, описывающий элемент. </param>
      <param name="dataContractType">Тип <see cref="T:System.Type" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
      <summary>Во время операций экспорта схемы вставляет в схему заметки для возвращаемых значений, не равных null. </summary>
      <returns>Объект, представляющий заметку, которая вставляется в определение схемы XML. </returns>
      <param name="clrType">Заменяемый тип среды CLR. </param>
      <param name="dataContractType">Тип контракта данных, для которого создается заметка. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
      <summary>При выполнении сериализации, десериализации, а также импорта и экспорта схемы возвращает тип контракта данных, заменяющий указанный тип. </summary>
      <returns>Тип <see cref="T:System.Type" />, заменяемый значением <paramref name="type" />.Этот тип должен быть сериализуем методом <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Например, он должен быть помечен атрибутом <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> или другими распознаваемыми сериализатором механизмами.</returns>
      <param name="type">Заменяемый тип среды CLR <see cref="T:System.Type" />. </param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
      <summary>При выполнении десериализации возвращает объект, являющийся заменой указанного объекта.</summary>
      <returns>Замененный десериализованный объект.Этот объект должен иметь тип, сериализуемый методом <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Например, он должен быть помечен атрибутом <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> или другими распознаваемыми сериализатором механизмами.</returns>
      <param name="obj">Заменяемый десериализованный объект.</param>
      <param name="targetType">Тип <see cref="T:System.Type" />, который назначается замененному объекту. </param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
      <summary>Задает коллекцию известных типов, используемую для сериализации и десериализации пользовательских объектов данных. </summary>
      <param name="customDataTypes">Объект <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.Type" />, в который добавляются известные типы.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
      <summary>При выполнении сериализации возвращает объект, заменяющий указанный объект. </summary>
      <returns>Замененный объект, который будет сериализован.Этот объект должен быть сериализуем методом <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Например, он должен быть помечен атрибутом <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> или другими распознаваемыми сериализатором механизмами.</returns>
      <param name="obj">Заменяемый объект. </param>
      <param name="targetType">Тип <see cref="T:System.Type" />, который назначается замененному объекту.</param>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
      <summary>При выполнении импорта схемы возвращает тип, на который ссылается схема.</summary>
      <returns>Тип <see cref="T:System.Type" />, используемый для типа, на который задана ссылка.</returns>
      <param name="typeName">Имя типа в схеме.</param>
      <param name="typeNamespace">Пространство имен типа в схеме.</param>
      <param name="customData">Объект, представляющий вставленную в определение схемы XML заметку, содержащую данные, которые можно использовать для поиска типа, на который задана ссылка.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
      <summary>Обрабатывает тип, созданный из импортированной схемы.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeTypeDeclaration" />, содержащий обработанный тип.</returns>
      <param name="typeDeclaration">Обрабатываемый объект <see cref="T:System.CodeDom.CodeTypeDeclaration" />, представляющий объявление типа, создаваемого при выполнении импорта схемы.</param>
      <param name="compileUnit">Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, содержащий другой код, созданный при выполнении импорта схемы.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary>Предоставляет структуру данных для хранения дополнительных данных, обнаруженных <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> при десериализации типа, отмеченного атрибутом <see cref="T:System.Runtime.Serialization.DataContractAttribute" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary>Возвращает или задает структуру, содержащую дополнительные данные.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />, содержащий данные, которые не были распознаны как принадлежащие к контракту данных.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.IgnoreDataMemberAttribute">
      <summary>При применении к элементу типа указывает, что этот элемент не является частью контракта данных и не сериализуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" />. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.ImportOptions">
      <summary>Представляет параметры, которые могут устанавливаться для <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ImportOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ImportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.CodeProvider">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, предоставляющий средства проверки, выявляющие, поддерживаются ли определенные параметры для целевого языка.</summary>
      <returns>Объект <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, предоставляющий средства проверки, выявляющие, поддерживаются ли определенные параметры для целевого языка.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate">
      <summary>Возвращает или задает суррогат контракта данных, который может использоваться для изменения кода, созданного при выполнении операции импорта. </summary>
      <returns>Реализация интерфейса <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />, обрабатывающая импорт схемы. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding">
      <summary>Возвращает или задает значение, указывающее, должны ли типы создаваемого кода реализовать интерфейс <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</summary>
      <returns>Значение true, если созданный код должен реализовать интерфейс <see cref="T:System.ComponentModel.INotifyPropertyChanged" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.GenerateInternal">
      <summary>Возвращает или задает значение, указывающее, помечается ли созданный код как внутренний или как открытый.</summary>
      <returns>Значение true, если код будет помечен как internal; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable">
      <summary>Возвращает или задает значение, указывающее, будут ли помечены классы контракта данных атрибутом <see cref="T:System.SerializableAttribute" /> в дополнение к атрибуту <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
      <returns>Значение true, если следует создать классы с применением атрибута <see cref="T:System.SerializableAttribute" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ImportXmlType">
      <summary>Возвращает или задает значение, определяющее, будут ли импортированы все типы схемы XML, включая типы, не соответствующие схеме контракта данных.</summary>
      <returns>Значение true, если следует импортировать все типы схемы; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.Namespaces">
      <summary>Возвращает словарь, содержащий сопоставление пространств имен контракта данных пространствам имен среды CLR, которое должно использоваться для создания кода при выполнении операции импорта.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий сопоставления пространств имен. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes">
      <summary>Возвращает коллекцию типов, представляющую коллекции контрактов данных, на которые следует ссылаться при создании кода для коллекций, например списков или словарей элементов.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий типы коллекций, на которые заданы ссылки.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes">
      <summary>Возвращает интерфейс <see cref="T:System.Collections.Generic.IList`1" />, содержащий типы, ссылки на которые присутствуют в созданном коде. </summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.IList`1" />, содержащий типы, на которые заданы ссылки. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.InvalidDataContractException">
      <summary>Исключение, которое выдается, если <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> или <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> встречает недопустимый контракт данных во время сериализации или десериализации. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.InvalidDataContractException" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> с заданными свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные, необходимые для сериализации и десериализации объекта. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, задающий контекст пользователя во время сериализации и десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> с указанным сообщением об ошибке. </summary>
      <param name="message">Описание ошибки. </param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> с указанным сообщением об ошибке и внутренним исключением. </summary>
      <param name="message">Описание ошибки. </param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />. </param>
    </member>
    <member name="T:System.Runtime.Serialization.KnownTypeAttribute">
      <summary>Задает типы, которые должны распознаваться <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> при сериализации или десериализации указанного типа. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> с именем метода, возвращающего интерфейс известных типов <see cref="T:System.Collections.IEnumerable" />.</summary>
      <param name="methodName">Имя метода, возвращающего интерфейс типов <see cref="T:System.Collections.IEnumerable" />, используемых при сериализации или десериализации данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> с указанным типом. </summary>
      <param name="type">Тип <see cref="T:System.Type" />, включаемый как известный тип при сериализации или десериализации данных.</param>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
      <summary>Возвращает имя метода, который возвратит список типов, которые должны распознаваться при сериализации или десериализации. </summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя метода типа, определяемого классом <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
      <summary>Возвращает тип, который должен распознаваться при сериализации или десериализации <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
      <returns>Тип <see cref="T:System.Type" />, используемый при сериализации или десериализации. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.NetDataContractSerializer">
      <summary>Сериализует и десериализует экземпляр типа в XML-поток или документ с помощью типов, предоставляемых .NET Framework.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с переданными данными контекста потоковой передачи. </summary>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий данные контекста.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с предоставленными данными контекста; также задает максимальное количество сериализуемых элементов объекта и параметры, указывающие, пропускаются ли дополнительные данные, метод загрузки сборки и суррогатный селектор.</summary>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий данные контекста.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации. </param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропускать предоставляемые расширением типа данные; в противном случае — значение false.</param>
      <param name="assemblyFormat">Значение перечисления <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, задающее метод определения местоположения и загрузки сборок.</param>
      <param name="surrogateSelector">Реализация класса <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxItemsInObjectGraph" /> меньше 0.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с указанными корневыми элементом и пространством имен XML.</summary>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с предоставленными данными контекста, корневыми именем и пространством имен; также задает максимальное количество сериализуемых элементов объекта и параметры, указывающие, пропускаются ли дополнительные данные, метод загрузки сборки и суррогатный селектор.</summary>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий данные контекста.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации. </param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропускать предоставляемые расширением типа данные; в противном случае — значение false.</param>
      <param name="assemblyFormat">Значение перечисления <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, задающее метод определения местоположения и загрузки сборок.</param>
      <param name="surrogateSelector">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />, используемого для обработки устаревших типов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxItemsInObjectGraph" /> меньше 0.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с двумя параметрами типа <see cref="T:System.Xml.XmlDictionaryString" />, содержащими корневые элемент и пространство имен, используемые для задания содержимого.</summary>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, в котором находится имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="rootNamespace">Объект <see cref="T:System.Xml.XmlDictionaryString" />, в котором находится пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> с предоставленными данными контекста, корневыми именем и пространством имен (в качестве параметров <see cref="T:System.Xml.XmlDictionaryString" />); также задает максимальное количество сериализуемых элементов объекта и параметры, указывающие, пропускаются ли дополнительные данные, метод загрузки сборки и суррогатный селектор.</summary>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий корневой элемент содержимого.</param>
      <param name="rootNamespace">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий пространство имен корневого элемента.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий данные контекста.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации. </param>
      <param name="ignoreExtensionDataObject">Значение true, если требуется пропускать предоставляемые расширением типа данные; в противном случае — значение false.</param>
      <param name="assemblyFormat">Значение перечисления <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, задающее метод определения местоположения и загрузки сборок.</param>
      <param name="surrogateSelector">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />, используемого для обработки устаревших типов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxItemsInObjectGraph" /> меньше 0.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
      <summary>Возвращает значение, задающее метод определения местоположения и загрузки сборок.</summary>
      <returns>Значение перечисления <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, задающее метод определения местоположения и загрузки сборок.</returns>
      <exception cref="T:System.ArgumentException">Задаваемое значение не соответствует ни одному из значений <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
      <summary>Возвращает или задает объект, управляющий загрузкой класса.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" />, используемый с текущим модулем форматирования.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.Context">
      <summary>Возвращает или задает объект, позволяющий передавать данные контекста, которые могут потребоваться при сериализации и десериализации.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий данные контекста.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
      <summary>Десериализует XML-документ или поток в объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="stream">Поток <see cref="T:System.IO.Stream" />, содержащий десериализуемый XML.</param>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
      <summary>Возвращает значение, указывающее, следует ли пропускать предоставляемые расширением объекта данные.</summary>
      <returns>Значение true, если требуется пропускать предоставляемые расширением типа данные; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Определяет, расположено ли средство чтения <see cref="T:System.Xml.XmlDictionaryReader" /> на объекте, который может быть десериализован с помощью указанного средства чтения.</summary>
      <returns>Значение true, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, содержащий XML для чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> установлен в значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Определяет, расположено ли средство чтения <see cref="T:System.Xml.XmlReader" /> на объекте, который может быть десериализован с помощью указанного средства чтения.</summary>
      <returns>Значение true, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, содержащий XML для чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> установлен в значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
      <summary>Возвращает максимальное количество элементов, допустимое в сериализуемом объекте.</summary>
      <returns>Максимальное количество элементов, допустимое в объекте.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Считывает XML-поток или документ с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также проверяет, соответствуют ли данные объекта имени и пространству имен, используемым для создания сериализатора.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения XML-потока или документа.</param>
      <param name="verifyObjectName">true, если требуется проверить соответствие имени и пространства имен включающего XML-элемента ожидаемым корневым имени и пространству имен, используемым для создания сериализатора; false, если следует пропустить проверку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> установлен в значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Считывает XML-поток или документ с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или документа.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> установлен в значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML-поток или документ с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также проверяет, соответствуют ли данные объекта имени и пространству имен, используемым для создания сериализатора.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или документа.</param>
      <param name="verifyObjectName">true, если требуется проверить соответствие имени и пространства имен включающего XML-элемента ожидаемым корневым имени и пространству имен, используемым для создания сериализатора; false, если следует пропустить проверку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> установлен в значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Сериализует заданный граф объектов с помощью указанного модуля записи.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />, с помощью которого выполняется сериализация.</param>
      <param name="graph">Объект для сериализации.Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
    </member>
    <member name="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector">
      <summary>Возвращает или задает объект, содействующий модулю форматирования при выборе суррогата для сериализации.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> для выбора суррогата.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или поток с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи содержимого XML.</param>
      <param name="graph">Объект для сериализации.Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи содержимого XML.</param>
      <param name="graph">Объект для сериализации.Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Выполняет запись открывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-элемента.</param>
      <param name="graph">Объект для сериализации.Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Выполняет запись открывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-элемента.</param>
      <param name="graph">Объект для сериализации.Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>Предоставляет базовый класс для сериализации объектов в XML-потоки или XML-документы.Это абстрактный класс.</summary>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Возвращает значение, указывающее, расположено ли средство чтения <see cref="T:System.Xml.XmlDictionaryReader" /> на элементе XML, который можно считать.</summary>
      <returns>Значение true, если средство чтения может считывать данные; в противном случае — значение false.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения XML-потока или XML-документа.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Возвращает значение, указывающее, расположено ли средство чтения <see cref="T:System.Xml.XmlReader" /> на элементе XML, который можно считать.</summary>
      <returns>Значение true, если средство чтения расположено на начальном элементе; в противном случае — значение false.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или XML-документа.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>Считывает XML-поток или XML-документ с помощью средства чтения <see cref="T:System.IO.Stream" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="stream">Средство чтения <see cref="T:System.IO.Stream" />, используемое для чтения XML-потока или XML-документа.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения документа XML.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Считывает XML-поток или XML-документ с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также позволяет указать до попытки чтения, может ли сериализатор считать данные.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения документа XML.</param>
      <param name="verifyObjectName">Значение true — для проверки соответствия имени и пространства имен включающего XML-элемента корневому имени и корневому пространству имен; в противном случае — значение false (для пропуска проверки).</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или XML-документа.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также позволяет указать перед попыткой чтения, может ли сериализатор считать данные.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-документа или XML-потока.</param>
      <param name="verifyObjectName">Значение true, если требуется проверить соответствие имени и пространства имен включающего XML-элемента корневому имени и корневому пространству имен; в противном случае — false, если следует пропустить проверку.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает завершающий элемент данных объекта в качестве закрывающего XML-элемента в XML-документ или XML-поток с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Записывает завершающий элемент данных объекта в качестве закрывающего XML-элемента в XML-документ или XML-поток с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или XML-поток с помощью указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Средство записи <see cref="T:System.IO.Stream" />, используемое для записи в XML-документ или XML-поток.</param>
      <param name="graph">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlDictionaryWriter" />, используемое для записи содержимого в XML-документ или XML-поток.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает только содержимое объекта в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает только содержимое объекта в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает начальный элемент данных объекта в качестве открывающего XML-элемента с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlDictionaryWriter" />, используемое для записи документа XML.</param>
      <param name="graph">Объект для сериализации.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает начальный элемент данных объекта в качестве открывающего XML-элемента с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, используемое для записи документа XML.</param>
      <param name="graph">Объект для сериализации.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">сериализуемый тип не удовлетворяет правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">было превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary>Содержит методы для чтения и записи XML. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Создает тип схемы по умолчанию с заданным именем типа и добавляет ее в указанный набор схем.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в который добавляется созданный тип схемы.</param>
      <param name="typeQName">Объект <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имя типа, которому присваивается схема. </param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="schemas" /> или <paramref name="typeQName" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary>Считывает набор узлов XML из указанного средства чтения и возвращает результат.</summary>
      <returns>Массив типа <see cref="T:System.Xml.XmlNode" />. </returns>
      <param name="xmlReader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="xmlReader" /> имеет значение null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">При считывании был обнаружен узел со значением null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary>Выполняет запись предоставленных узлов с помощью указанного средства записи.</summary>
      <param name="xmlWriter">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи.</param>
      <param name="nodes">Массив типа <see cref="T:System.Xml.XmlNode" />, который требуется записать.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="xmlWriter" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary>Если заданы класс, представляющий контракт данных, и метаданные, представляющие участника контракта, создает запрос XPath для участника.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary>Создает XPath из контракта данных, используя заданный тип контракта данных, массив элементов метаданных, элемент верхнего уровня и пространства имен.</summary>
      <returns>
        <see cref="T:System.String" />XPath, созданный из типа и данных члена.</returns>
      <param name="type">Тип, представляющий контракт данных.</param>
      <param name="pathToMember">Метаданные, сформированные с использованием метода <see cref="M:System.Type.GetMember" /> класса <see cref="T:System.Type" />, указывающего определенный элемент данных, использованный для формирования запроса.</param>
      <param name="rootElementXpath">Элемент верхнего уровня в xpath.</param>
      <param name="namespaces">Пространства имен XML и их префиксы, встречающиеся в контракте данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>Создает XPath из контракта данных, используя заданный тип контракта данных, массив элементов метаданных и пространства имен.</summary>
      <returns>
        <see cref="T:System.String" />XPath, созданный из типа и данных члена.</returns>
      <param name="type">Тип, представляющий контракт данных.</param>
      <param name="pathToMember">Метаданные, сформированные с использованием метода <see cref="M:System.Type.GetMember" /> класса <see cref="T:System.Type" />, указывающего определенный элемент данных, использованный для формирования запроса.</param>
      <param name="namespaces">Пространства имен XML и их префиксы, встречающиеся в контракте данных.</param>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary>Предоставляет возможность преобразования набора типов .NET Framework, используемых в контрактах данных в файле схемы XML (XSD). </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> с указанным набором схем. </summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий экспортируемые схемы. </param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Возвращает значение, указывающее, возможен ли экспорт набора типов среды CLR, содержащегося в наборе сборок. </summary>
      <returns>Значение true, если выражение можно экспортировать; в противном случае — false.</returns>
      <param name="assemblies">Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> сборок <see cref="T:System.Reflection.Assembly" />, содержащая сборки с экспортируемыми типами.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary>Возвращает значение, указывающее, возможен ли экспорт набора типов среды CLR, содержащегося в <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
      <returns>Значение true, если выражение можно экспортировать; в противном случае — false.</returns>
      <param name="types">Объект <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий указанные экспортируемые типы.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary>Возвращает значение, указывающее, возможен ли экспорт заданного типа среды CLR. </summary>
      <returns>Значение true, если тип можно экспортировать; в противном случае — false. </returns>
      <param name="type">Объект <see cref="T:System.Type" /> для экспорта. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Преобразует типы, содержащиеся в указанной коллекции сборок. </summary>
      <param name="assemblies">Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> (сборок <see cref="T:System.Reflection.Assembly" />), содержащая экспортируемые типы.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="assemblies" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Reflection.Assembly" /> в коллекции имеет значение null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary>Преобразует типы, содержащиеся в <see cref="T:System.Collections.Generic.ICollection`1" />, переданной в этот метод.</summary>
      <param name="types">Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> (сборок <see cref="T:System.Type" />), содержащая экспортируемые типы.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="types" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Тип в коллекции имеет значение null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary>Преобразует указанный тип .NET Framework в схему языка определения схемы XML (XSD). </summary>
      <param name="type">Тип <see cref="T:System.Type" />, преобразуемый в схему XML. </param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="type" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary>Возвращает имя верхнего уровня и пространство имен для типа <see cref="T:System.Type" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя верхнего уровня и пространство имен для типа <see cref="T:System.Type" />, который записывается в поток при записи этого объекта. </returns>
      <param name="type">Объект <see cref="T:System.Type" />, которому направляется запрос.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="type" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary>Возвращает схему XML для заданного типа.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, содержащий схему XML. </returns>
      <param name="type">Тип, для которого возвращается схема.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="type" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary>Возвращает имя контракта и пространство имен контракта для типа <see cref="T:System.Type" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя контракта и пространство имен типа.</returns>
      <param name="type">Экспортированный тип <see cref="T:System.Type" />. </param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="type" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary>Возвращает или задает объект <see cref="T:System.Runtime.Serialization.ExportOptions" />, содержащий параметры, которые могут быть заданы для операции экспорта. </summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.ExportOptions" />, содержащий параметры, используемые для настройки экспорта типов в схемы.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary>Возвращает коллекцию экспортированных схем XML. </summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы, преобразованные из набора типов среды CLR после вызова метода <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractImporter">
      <summary>Позволяет преобразовать набор файлов схемы XML (XSD) в типы среды CLR. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> с <see cref="T:System.CodeDom.CodeCompileUnit" />, который будет использоваться для создания кода среды CLR.</summary>
      <param name="codeCompileUnit">Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, который будет использоваться для хранения кода. </param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает значение, указывающее, можно ли преобразовать схемы, содержащиеся в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в объект <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <returns>Значение true, если схемы можно преобразовать в типы контрактов данных; в противном случае — значение false. </returns>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий преобразуемые схемы. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="schemas" /> имеет значение null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Участвующий в импорте контракт данных недействителен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
      <summary>Возвращает значение, указывающее, возможно ли преобразование набора типов, содержащегося в объекте <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в типы среды CLR, созданные в объекте <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>Значение true, если схемы можно преобразовать; в противном случае — значение false. </returns>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий преобразуемые схемы.</param>
      <param name="typeNames">Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, принадлежащий к типу <see cref="T:System.Xml.XmlQualifiedName" />, представляющий импортируемый набор типов схемы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> или параметра <paramref name="typeNames" /> — null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Участвующий в импорте контракт данных недействителен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
      <summary>Возвращает значение, указывающее, можно ли импортировать конкретный элемент схемы, содержащийся в объекте <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Значение true, если элемент может быть импортирован; в противном случае — значение false.</returns>
      <param name="schemas">Импортируемый объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <param name="element">Конкретный элемент <see cref="T:System.Xml.Schema.XmlSchemaElement" />, для которого возвращается набор схем.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> или параметра <paramref name="element" /> — null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Участвующий в импорте контракт данных недействителен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Возвращает значение, указывающее, можно ли преобразовать схемы, содержащиеся в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в объект <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <returns>Значение true, если схемы можно преобразовать в типы контрактов данных; в противном случае — значение false.</returns>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий представления схемы. </param>
      <param name="typeName">Интерфейс <see cref="T:System.Collections.IList" />, принадлежащий к типу <see cref="T:System.Xml.XmlQualifiedName" />, задающий имена типов схем, которые требуется импортировать из набора <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> или параметра <paramref name="typeName" /> — null.</exception>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Участвующий в импорте контракт данных недействителен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
      <summary>Возвращает объект <see cref="T:System.CodeDom.CodeCompileUnit" />, используемый для хранения созданных типов среды CLR.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, используемый для хранения созданных типов среды CLR.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
      <summary>Возвращает <see cref="T:System.CodeDom.CodeTypeReference" /> типу среды CLR, созданному для типа схемы с указанным <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Ссылка <see cref="T:System.CodeDom.CodeTypeReference" /> на тип среды CLR, созданный для типа схемы с указанным <paramref name="typeName" />.</returns>
      <param name="typeName">Объект <see cref="T:System.Xml.XmlQualifiedName" />, указывающий искомый тип схемы.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
      <summary>Возвращает объект <see cref="T:System.CodeDom.CodeTypeReference" /> для указанного полного XML-элемента и элемента схемы XML.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeTypeReference" />, представляющий тип, созданный для указанного типа схемы.</returns>
      <param name="typeName">Объект <see cref="T:System.Xml.XmlQualifiedName" />, указывающий искомое полное имя XML типа схемы.</param>
      <param name="element">Элемент <see cref="T:System.Xml.Schema.XmlSchemaElement" />, указывающий элемент в схеме XML.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
      <summary>Возвращает список объектов <see cref="T:System.CodeDom.CodeTypeReference" />, представляющий известные типы, созданные при создании кода для указанного типа схемы.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.IList`1" />, принадлежащий к типу <see cref="T:System.CodeDom.CodeTypeReference" />.</returns>
      <param name="typeName">Тип <see cref="T:System.Xml.XmlQualifiedName" />, представляющий тип схемы, для которого выполняется поиск известных типов.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
      <summary>Преобразует указанный набор схем XML, содержащийся в объекте <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в объект <see cref="T:System.CodeDom.CodeCompileUnit" />. </summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий представления схем, для которых создаваемые типы среды CLR.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="schemas" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
      <summary>Преобразует указанный набор типов схемы XML, содержащийся в объекте <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в типы схемы CLR, созданные в объекте <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий представления схемы.</param>
      <param name="typeNames">Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> (принадлежащий к типу <see cref="T:System.Xml.XmlQualifiedName" />), представляющий импортируемый набор типов схемы.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
      <summary>Преобразует указанный элемент схемы из набора указанных схем XML в объект <see cref="T:System.CodeDom.CodeCompileUnit" /> и возвращает <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя контракта данных для указанного элемента.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlQualifiedName" />, представляющий указанный элемент.</returns>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий преобразуемые схемы.</param>
      <param name="element">Объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />, представляющий конкретный преобразуемый элемент схемы. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> или параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Преобразует указанный тип схемы XML, содержащийся в объекте <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в объект <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий представления схемы. </param>
      <param name="typeName">Тип <see cref="T:System.Xml.XmlQualifiedName" />, представляющий конкретный импортируемый тип схемы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> или параметра <paramref name="typeName" /> — null.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
      <summary>Получает или задает объект <see cref="T:System.Runtime.Serialization.ImportOptions" />, содержащий параметры, которые могут быть заданы для операции импорта. </summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.ImportOptions" />, содержащий параметры, которые могут быть заданы. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DataContractSerializerSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DataContractSerializerSection.DeclaredTypes">
      <summary>Возвращает коллекцию типов, добавляемых в свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection" />, содержащий известные типы.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement">
      <summary>Обрабатывает XML-элементы, используемые для добавления известных типов, применяемых для сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> с указанным именем типа.</summary>
      <param name="typeName">Имя типа, для которого требуется коллекция известных типов.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElement.KnownTypes">
      <summary>Возвращает коллекцию известных типов.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.TypeElementCollection" />, содержащий известные типы.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElement.Type">
      <summary>Возвращает или задает объявленный тип, для которого требуется коллекция известных типов.</summary>
      <returns>Имя объявленного типа.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации XML с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Add(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Добавляет заданный элемент конфигурации.</summary>
      <param name="element">Добавляемый объект <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" />.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Clear">
      <summary>Очищает коллекцию, удаляя все элементы.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Contains(System.String)">
      <summary>Возвращает значение, если коллекция содержит элемент с указанным именем типа.</summary>
      <returns>Значение true, если коллекция содержит указанный элемент; в противном случае — false.</returns>
      <param name="typeName">Имя искомого элемента конфигурации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.IndexOf(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Возвращает индекс указанного элемента конфигурации.</summary>
      <returns>Индекс указанного элемента конфигурации; в противном случае — значение «-1».</returns>
      <param name="element">Искомый объект <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" />.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Item(System.Int32)">
      <summary>Возвращает элемент конфигурации с заданным индексом.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> с указанным индексом.</returns>
      <param name="index">Индекс элемента, к которому осуществляется доступ.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Item(System.String)">
      <summary>Возвращает элемент с заданным ключом.</summary>
      <returns>Элемент конфигурации с заданным ключом.</returns>
      <param name="typeName">Возвращаемое имя типа (выполняющее функцию ключа).</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Remove(System.Runtime.Serialization.Configuration.DeclaredTypeElement)">
      <summary>Удаляет указанный элемент конфигурации из коллекции.</summary>
      <param name="element">Интерфейс <see cref="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" /> для удаления.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.Remove(System.String)">
      <summary>Удаляет элемент конфигурации с заданным ключом.</summary>
      <param name="typeName">Имя типа (выполняющее функцию ключа) удаляемого элемента конфигурации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection.RemoveAt(System.Int32)">
      <summary>Удаляет элемент конфигурации по указанному индексу.</summary>
      <param name="index">Индекс удаляемого элемента конфигурации.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.ParameterElement">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации XML с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> с указанным индексом.</summary>
      <param name="index">Задает позицию в коллекции параметров.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> с указанным именем типа.</summary>
      <param name="typeName">Имя типа параметра.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Index">
      <summary>Возвращает или задает позицию универсального известного типа.</summary>
      <returns>Позиция параметра в содержащем его универсальном объявленном типе.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Parameters">
      <summary>Возвращает коллекцию параметров.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" />, содержащий все параметры.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElement.Type">
      <summary>Возвращает или задает имя типа для параметра универсального известного типа.</summary>
      <returns>Имя типа параметра.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.ParameterElementCollection">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Add(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Добавляет элемент в коллекцию элементов параметра.</summary>
      <param name="element">Элемент <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElementCollection.CollectionType">
      <summary>Возвращает тип коллекции параметров в конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementCollectionType" />, содержащий тип коллекции параметров в конфигурации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Contains(System.String)">
      <summary>Возвращает или задает значение, указывающее, содержится ли данный тип в коллекции.</summary>
      <returns>Значение true, если элемент присутствует; в противном случае — значение false.</returns>
      <param name="typeName">Имя искомого типа.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.IndexOf(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Возвращает позицию указанного элемента в коллекции.</summary>
      <returns>Позиция указанного элемента.</returns>
      <param name="element">Искомый элемент <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" />.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.ParameterElementCollection.Item(System.Int32)">
      <summary>Получает или задает элемент в коллекции в указанной позиции.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> из коллекции.</returns>
      <param name="index">Позиция получаемого или задаваемого элемента в коллекции.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.Remove(System.Runtime.Serialization.Configuration.ParameterElement)">
      <summary>Удаляет из коллекции указанный элемент.</summary>
      <param name="element">Интерфейс <see cref="T:System.Runtime.Serialization.Configuration.ParameterElement" /> для удаления.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.ParameterElementCollection.RemoveAt(System.Int32)">
      <summary>Удаляет элемент на заданной позиции.</summary>
      <param name="index">Позиция удаляемого элемента.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.SerializationSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup" />. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.SerializationSectionGroup.DataContractSerializer">
      <summary>Возвращает объект <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" />, используемый для настройки коллекции известных типов.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" />, используемый для раздела конфигурации сериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.SerializationSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Возвращает конфигурацию сериализации для заданной конфигурации.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup" />, представляющий раздел конфигурации.</returns>
      <param name="config">Объект <see cref="T:System.Configuration.Configuration" />, представляющий извлекаемую конфигурацию.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.TypeElement">
      <summary>Обрабатывает XML-элементы, используемые для настройки сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> с указанным именем типа. </summary>
      <param name="typeName">Имя типа, использующего известные типы.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Index">
      <summary>Возвращает или задает позицию элемента.</summary>
      <returns>Позиция элемента.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Parameters">
      <summary>Возвращает коллекцию параметров.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" />, содержащий параметры типа.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElement.Type">
      <summary>Возвращает или задает имя типа.</summary>
      <returns>Имя типа.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Configuration.TypeElementCollection">
      <summary>Обрабатывает XML-элементы, используемые для настройки известных типов, применяемых для сериализации с помощью <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Configuration.TypeElementCollection" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Add(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Добавляет указанный элемент в коллекцию.</summary>
      <param name="element">Тип <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" />, представляющий добавляемый известный тип.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElementCollection.CollectionType">
      <summary>Возвращает коллекцию элементов, представляющую типы, использующие известные типы.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementCollectionType" />, содержащий объекты элемента.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.IndexOf(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Возвращает позицию указанного элемента.</summary>
      <returns>Позиция указанного элемента.</returns>
      <param name="element">Объект <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" />, который нужно найти в коллекции.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Configuration.TypeElementCollection.Item(System.Int32)">
      <summary>Возвращает конкретный элемент коллекции с указанной позицией.</summary>
      <returns>Элемент на заданной позиции.</returns>
      <param name="index">Позиция возвращаемого элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.Remove(System.Runtime.Serialization.Configuration.TypeElement)">
      <summary>Удаляет из коллекции указанный элемент.</summary>
      <param name="element">Объект <see cref="T:System.Runtime.Serialization.Configuration.TypeElement" /> для удаления.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Configuration.TypeElementCollection.RemoveAt(System.Int32)">
      <summary>Удаляет элемент на заданной позиции.</summary>
      <param name="index">Позиция в коллекции, из которой удаляется элемент.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Сериализует объекты в нотацию объектов JavaScript (JSON) и десериализует данные JSON в объекты.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с коллекцией известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает список известных типов, которые могут присутствовать в графе объектов, максимальное количество элементов графа для сериализации или десериализации, пропускать ли непредвиденные данные и создавать ли информацию о типе, а также суррогат для пользовательской сериализации.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого. </param>
      <param name="maxItemsInObjectGraph">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
      <param name="ignoreExtensionDataObject">Значение  true, если требуется не учитывать интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> при сериализации и не учитывать непредвиденные данные при десериализации; в противном случае — значение false.Значение по умолчанию — false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="alwaysEmitTypeInformation">Значение true — для создания сведений о типе; в противном случае — значение false.Значение по умолчанию — false.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром, с коллекцией известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.Значение по умолчанию — "root".</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает корневое имя XML-элемента, список известных типов, которые могут присутствовать в графе объектов, максимальное количество элементов графа для сериализации или десериализации, пропускать ли непредвиденные данные и создавать ли информацию о типе, а также суррогат для пользовательской сериализации.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.Значение по умолчанию — "root".</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.Значением по умолчанию является значение, возвращенное свойством <see cref="F:System.Int32.MaxValue" />.</param>
      <param name="ignoreExtensionDataObject">Значение  true, если требуется не учитывать интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> при сериализации и не учитывать непредвиденные данные при десериализации; в противном случае — значение false.Значение по умолчанию — false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="alwaysEmitTypeInformation">Значение true — для создания сведений о типе; в противном случае — значение false.Значение по умолчанию — false.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром типа <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром типа <see cref="T:System.Xml.XmlDictionaryString" />, с коллекцией известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого. </param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа.Этот метод также задает корневое имя XML-элемента, список известных типов, которые могут присутствовать в графе объектов, максимальное количество элементов графа для сериализации или десериализации, пропускать ли непредвиденные данные и создавать ли информацию о типе, а также суррогат для пользовательской сериализации.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
      <param name="maxItemsInObjectGraph">Максимальное количество элементов в графе для сериализации или десериализации.Значением по умолчанию является значение, возвращенное свойством <see cref="F:System.Int32.MaxValue" />.</param>
      <param name="ignoreExtensionDataObject">Значение  true, если требуется не учитывать интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> при сериализации и не учитывать непредвиденные данные при десериализации; в противном случае — значение false.Значение по умолчанию — false.</param>
      <param name="dataContractSurrogate">Реализация объекта <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> для настройки процесса сериализации.</param>
      <param name="alwaysEmitTypeInformation">Значение true — для создания сведений о типе; в противном случае — значение false.Значение по умолчанию — false.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
      <summary>Возвращает тип суррогата, который в данный момент активен для заданного экземпляра <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />.Суррогаты могут расширять процесс сериализации и десериализации.</summary>
      <returns>Реализация класса <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Возвращает значение, указывающее, не учитываются ли неизвестные данные при десериализации и не учитываются ли интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> при сериализации.</summary>
      <returns>Значение true, если требуется не учитывать неизвестные данные и интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Возвращает значение, указывающее, расположен ли объект <see cref="T:System.Xml.XmlDictionaryReader" /> над XML-элементом, представляющим объект, из которого сериализатор может выполнить десериализацию.</summary>
      <returns>Значение true, если средство чтения расположено правильно; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока, полученного из JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Определяет, расположен ли объект <see cref="T:System.Xml.XmlReader" /> на объекте, который может быть десериализован.</summary>
      <returns>Значение true, если средство чтения расположено правильно; в противном случае — значение false.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Возвращает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с использованием этого экземпляра класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, которая содержит ожидаемые типы, переданные в качестве известных типов конструктору <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Возвращает максимальное количество элементов в графе объекта, которое сериализатор сериализует или десериализует в одном вызове на чтение или запись.</summary>
      <returns>Максимальное количество сериализуемых или десериализуемых элементов. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Выполняет чтение потока документа в формате JSON (нотации объектов JavaScript) и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="stream">Поток <see cref="T:System.IO.Stream" />, подлежащий чтению.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Выполняет чтение XML-документа, полученного из JSON (нотации объектов JavaScript), с помощью <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Выполняет чтение XML-документа, полученного из JSON, с помощью <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также позволяет задать, должен ли сериализатор перед попыткой выполнить десериализацию проверить, что он расположен на соответствующем элементе.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <param name="verifyObjectName">Значение true — для проверки соответствия имени и пространства имен включающего XML-элемента ожидаемым имени и пространству имен; в противном случае — значение false (для пропуска проверки).Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Выполняет чтение XML-документа, полученного из JSON (нотации объектов JavaScript), с помощью <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Выполняет чтение XML-документа, полученного из JSON, с помощью <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также позволяет задать, должен ли сериализатор перед попыткой выполнить десериализацию проверить, что он расположен на соответствующем элементе.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <param name="verifyObjectName">Значение true — для проверки соответствия имени и пространства имен включающего XML-элемента ожидаемому имени и пространству имен; в противном случае — значение false (для пропуска проверки).Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает закрывающий XML-элемент в XML-документ (используя <see cref="T:System.Xml.XmlDictionaryWriter" />), который может быть сопоставлен нотации объектов JavaScript (JSON).</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи в XML-документ для сопоставления данным JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Записывает закрывающий XML-элемент в XML-документ (используя <see cref="T:System.Xml.XmlWriter" />), который может быть сопоставлен нотации объектов JavaScript (JSON).</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи в XML-документ, сопоставленный данным JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Сериализует указанный объект в данные нотации объектов JavaScript (JSON) и записывает полученные данные JSON в поток.</summary>
      <param name="stream">Поток <see cref="T:System.IO.Stream" />, в который осуществляется запись.</param>
      <param name="graph">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Сериализует объект в код XML, который может быть сопоставлен нотации объектов JavaScript (JSON).Записывает все данные объекта, включая начальный XML-элемент, содержимое и закрывающий элемент, с помощью <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи в XML-документ или поток для сопоставления данным JSON.</param>
      <param name="graph">Объект, содержащий данные для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Сериализует объект в код XML, который может быть сопоставлен нотации объектов JavaScript (JSON).Записывает все данные объекта, включая начальный XML-элемент, содержимое и закрывающий элемент, с помощью <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи в XML-документ для сопоставления данным JSON.</param>
      <param name="graph">Объект, содержащий данные для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает содержимое XML, которое может быть сопоставлено нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />, в который выполняется запись.</param>
      <param name="graph">Записываемый объект.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает содержимое XML, которое может быть сопоставлено нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="graph">Записываемый объект.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных.Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации.Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает открывающий XML-элемент для сериализации объекта в XML-код, который может быть сопоставлен нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает открывающий XML-элемент для сериализации объекта в XML-код, который может быть сопоставлен нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Задает интерфейс для инициализации средства чтения нотации объектов JavaScript (JSON) при его повторном использовании для чтения из конкретного потока или буфера.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует средство чтения нотации объектов JavaScript (JSON) для заданного буфера, содержащего данные с кодированием JSON.</summary>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Кодировка <see cref="T:System.Text.Encoding" />, используемая средством чтения.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует средство чтения нотации объектов JavaScript (JSON) для заданного потока, содержащего данные с кодированием JSON.</summary>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="encoding">Кодировка <see cref="T:System.Text.Encoding" />, используемая средством чтения.</param>
      <param name="quotas">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Задает интерфейс для инициализации модуля записи нотации объектов JavaScript (JSON) при его повторном использовании для записи в конкретный выходной поток.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует (или повторно инициализирует) модуль записи нотации объектов JavaScript (JSON) для заданного выходного потока с заданной кодировкой.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" />, в который модуль записи осуществляет запись.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку выходного потока.</param>
      <param name="ownsStream">Значение true, если выходной поток закрывается модулем записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Создает экземпляры <see cref="T:System.Xml.XmlDictionaryReader" />, которые могут осуществлять чтение данных, кодированных с использованием нотации объектов JavaScript (JSON), из потока или буфера и сопоставлять их набору сведений XML, а также экземпляры <see cref="T:System.Xml.XmlDictionaryWriter" />, которые могут сопоставлять набор сведений XML данным JSON и записывать данные с кодированием JSON в поток. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы с заданными размером, смещением и кодировкой, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством чтения.Если указано значение null, средство чтения пытается определить кодировку автоматически.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных. </param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.Значение по умолчанию — null.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может обрабатывать данные нотации объектов JavaScript (JSON).</returns>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством чтения.Если указано значение null, средство чтения пытается определить кодировку автоматически.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных. </param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую модулем записи.Кодировка по умолчанию — UTF-8.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую модулем записи.Кодировка по умолчанию — UTF-8.</param>
      <param name="ownsStream">Значение true, если выходной поток закрывается модулем записи после завершения; в противном случае — значение false.Значение по умолчанию — true.</param>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary>Содержит свойства и методы, которые, при реализации с помощью <see cref="T:System.Xml.XmlDictionaryWriter" />, позволяют обрабатывать фрагменты XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary>Возвращает значение, указывающее, может ли этот объект <see cref="T:System.Xml.XmlDictionaryWriter" /> обработать фрагменты XML. </summary>
      <returns>Значение true, если этот <see cref="T:System.Xml.XmlDictionaryWriter" /> может обрабатывать фрагменты XML; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary>Завершает обработку фрагмента XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary>Начинает обработку фрагмента XML.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="generateSelfContainedTextFragment">Если true, любое пространство имен, объявленное за пределами фрагмента, объявляется снова, если используется внутри него; если false, то пространства имен не объявляются вновь.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает фрагмент XML в основной поток модуля записи.</summary>
      <param name="buffer">Буфер для записи.</param>
      <param name="offset">Начальное положение для записи в параметре <paramref name="buffer" />.</param>
      <param name="count">Число байтов для записи в объект <paramref name="buffer" />.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>Интерфейс, который может быть реализован классами, предоставляющими потоки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>Возвращает поток.</summary>
      <returns>
        <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>Освобождает поток для вывода.</summary>
      <param name="stream">Поток освобожден.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary>Предоставляет методы для повторной инициализации средства чтения двоичных данных для считывания нового документа.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует модуль чтения двоичных данных, используя предоставленный входной буфер.</summary>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует средство чтения двоичных данных, используя предоставленный входной поток.</summary>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary>Указывает требования реализации для модулей записи двоичных данных XML, полученных из этого интерфейса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Указывает требования инициализации для модулей записи двоичных данных XML, реализующих этот метод.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary">Используемая версия <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="session">Используемый <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream">Значение true, если поток закрывается средством записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>Интерфейс, определяющий контракт, который должен реализовать словарь XML, чтобы быть использованным в реализациях <see cref="T:System.Xml.XmlDictionaryReader" /> и <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Попытки найти запись в словаре.</summary>
      <returns>Значение true, если ключ присутствует в словаре, в противном случае значение false.</returns>
      <param name="key">Искомый ключ.</param>
      <param name="result">Если параметр <paramref name="key" /> указан, объект <see cref="T:System.Xml.XmlDictionaryString" />, сопоставляется с ключом; в противном случае — со значением null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Выполняет поиск указанного значения в словаре.</summary>
      <returns>Значение true, если значение присутствует в словаре, в противном случае значение false.</returns>
      <param name="value">Искомое строковое значение.</param>
      <param name="result">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если она обнаружена; в противном случае — значение null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Проверяет наличие в словаре указанной строки <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Xml.XmlDictionaryString" /> присутствует в словаре, в противном случае значение false.</returns>
      <param name="value">Строка <see cref="T:System.Xml.XmlDictionaryString" />, наличие которой проверяется.</param>
      <param name="result">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если она обнаружена; в противном случае — значение null.</param>
    </member>
    <member name="T:System.Xml.IXmlMtomReaderInitializer">
      <summary>Указывает требования реализации для MTOM-модулей чтения текста XML, полученных из этого интерфейса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlMtomReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Указывает требования инициализации для MTOM-модулей чтения текста XML, выполняющие считывание из буфера.</summary>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings">Возможные кодировки на входе.</param>
      <param name="contentType">Тип Content-Type сообщения.Может иметь значение null, если тип MIME присутствует в документе, чтение которого выполняется.</param>
      <param name="quotas">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="maxBufferSize">Максимально допустимый размер буфера.</param>
      <param name="onClose">Делегат, используемый в случае возникновения события onClose.</param>
    </member>
    <member name="M:System.Xml.IXmlMtomReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Указывает требования инициализации для MTOM-модулей чтения текста XML, выполняющие считывание потока.</summary>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings">Возможные кодировки в потоке.</param>
      <param name="contentType">Тип Content-Type сообщения.Может иметь значение null, если тип MIME присутствует в документе, чтение которого выполняется.</param>
      <param name="quotas">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="maxBufferSize">Максимально допустимый размер буфера.</param>
      <param name="onClose">Делегат, используемый в случае возникновения события onClose.</param>
    </member>
    <member name="T:System.Xml.IXmlMtomWriterInitializer">
      <summary>Будучи реализованным модулем записи MTOM, этот интерфейс обеспечивает инициализацию модуля записи MTOM.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlMtomWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Будучи реализованным модулем записи MTOM, выполняет инициализацию модуля записи MTOM.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="maxSizeInBytes">Максимальное число копируемых в буфер модуля записи байтов.</param>
      <param name="startInfo">Атрибут в заголовке SOAP ContentType, которому задано значение «Application/soap+xml».</param>
      <param name="boundary">Граничная строка MIME.</param>
      <param name="startUri">Универсальный код ресурса (URI) для раздела MIME.</param>
      <param name="writeMessageHeaders">Если указано значение true, выполнятся запись заголовков сообщений.</param>
      <param name="ownsStream">Если указано значение true, поток закрывается средством записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary>Указывает требования реализации для модулей чтения текста XML, полученных из этого интерфейса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Указывает требования инициализации для модулей чтения текста XML, выполняющие считывание из буфера.</summary>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Указывает требования инициализации для модулей чтения текста XML, выполняющие считывание потока.</summary>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary>Указывает требования реализации для модулей записи текста XML, полученных из этого интерфейса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Указывает требования инициализации для модулей записи текста XML, реализующих этот метод.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="ownsStream">Значение true, если поток закрывается средством записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary>Делегат для метода обратного вызова при закрытии модуля чтения.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который инициирует событие OnClose.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>Уникальный идентификатор, оптимизированный для GUID.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>Создает новый экземпляр этого класса с новым GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>Создает новый экземпляр этого класса, используя массив байтов, представляющий идентификатор <see cref="T:System.Guid" />.</summary>
      <param name="guid">Массив байтов, представляющий идентификатор <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="guid" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="guid" /> предоставляет менее 16 допустимых байтов.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>Создает новый экземпляр данного класса, начиная со смещения в пределах массива байтов, представляющего идентификатор <see cref="T:System.Guid" />.</summary>
      <param name="guid">Массив байтов, представляющий идентификатор <see cref="T:System.Guid" />.</param>
      <param name="offset">Позиция смещения внутри массива байтов, представляющего идентификатор <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="guid" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="guid " />и<paramref name=" offset" /> содержат менее 16 допустимых байт.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Создает новый экземпляр данного класса, начиная со смещения в пределах массива char, используя заданное количество записей.</summary>
      <param name="chars">Массив char, представляющий <see cref="T:System.Guid" />.</param>
      <param name="offset">Позиция смещения внутри массива char, представляющего <see cref="T:System.Guid" />.</param>
      <param name="count">Количество используемых записей массива, начиная со смещения <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="chars" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины массива минус смещение <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="count" /> равен нулю.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>Создает новый экземпляр данного класса, используя идентификатор <see cref="T:System.Guid" />.</summary>
      <param name="guid">Объект <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="guid" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>Создает новый экземпляр данного класса, используя строку.</summary>
      <param name="value">Строка, используемая для создания объекта <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <exception cref="T:System.FormatException">Длина параметра <paramref name=" value" /> равна нулю.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>Возвращает значение длины строкового представления <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Длина строкового представления <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>Проверяет, равен ли объект этому идентификатору <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Значение true, если объект равен <see cref="T:System.Xml.UniqueId" />, в противном случае значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>Создает хэш-код, представляющий идентификатор <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Целочисленный хэш-код, представляющий <see cref="T:System.Xml.UniqueId" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>Указывает, является ли идентификатор <see cref="T:System.Xml.UniqueId" /> объектом <see cref="T:System.Guid" />.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.UniqueId" /> равно <see cref="T:System.Guid" />, в противном случае false.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Переопределяет оператор равенства для проверки равенства двух объектов <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Значение true, если два объекта <see cref="T:System.Xml.UniqueId" /> равны или содержат значение null; значение false, если объекты не равны или только один из них содержит значение null.</returns>
      <param name="id1">Первый объект <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">Второй объект <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Переопределяет оператор равенства для проверки неравенства двух объектов <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Значение true, если переопределенный оператор равенства возвращает значение false, в противном случае значение false.</returns>
      <param name="id1">Первый объект <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">Второй объект <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>Помещает значение <see cref="T:System.Xml.UniqueId" /> в массив char.</summary>
      <returns>Количество записей в массиве char, заполненных значением <see cref="T:System.Xml.UniqueId" />.</returns>
      <param name="chars">Массив char.</param>
      <param name="offset">Позиция в массиве char для начала вставки значения <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="chars" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="guid " />и<paramref name=" offset" /> содержат менее 16 допустимых байт.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>Отображает значение <see cref="T:System.Xml.UniqueId" /> в строковом формате.</summary>
      <returns>Строковое представление значения <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>Предпринимает попытку получения значения <see cref="T:System.Xml.UniqueId" /> в виде <see cref="T:System.Guid" /> и сохранения его в данном массиве байтов после заданного смещения.</summary>
      <returns>Значение true, если значение, хранящееся в экземпляре <see cref="T:System.Xml.UniqueId" />, имеет тип <see cref="T:System.Guid" />, в противном случае значение false.</returns>
      <param name="buffer">Массив byte, который будет содержать объект <see cref="T:System.Guid" />.</param>
      <param name="offset">Позиция в массиве byte для начала вставки значения <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="buffer " />и<paramref name=" offset" /> содержат менее 16 допустимых байт.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>Предпринимает попытку получения значения <see cref="T:System.Xml.UniqueId" /> в виде <see cref="T:System.Guid" />.</summary>
      <returns>true, если UniqueId представляет элемент <see cref="T:System.Guid" />, в противном случае — false.</returns>
      <param name="guid">Имеет значение <see cref="T:System.Guid" /> в случае успешного выполнения; иначе — <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="buffer " />и<paramref name=" offset" /> содержат менее 16 допустимых байт.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>Обеспечивает динамическое управление оптимизированными строками</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>Создает экземпляр этого класса.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryString" /> из входного параметра и добавляет его во внутреннюю коллекцию.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
      <param name="id">Значение ключа.</param>
      <param name="value">Значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="id" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Запись с ключом <paramref name="id" /> уже существует.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>Очищает внутреннюю коллекцию от всего содержимого.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Проверяет, содержит ли внутренняя коллекция запись, соответствующую ключу.</summary>
      <returns>Значение true, если запись, соответствующая ключу <paramref name="key" />, найдена, в противном случае значение false.</returns>
      <param name="key">Искомый ключ.</param>
      <param name="result">Cтрока <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — значение null.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Проверяет, содержит ли внутренняя коллекция запись, соответствующую значению.</summary>
      <returns>Значение true, если запись, соответствующая ключу <paramref name="value" />, найдена, в противном случае значение false.</returns>
      <param name="value">Значение, которое нужно найти.</param>
      <param name="result">Cтрока <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — значение null.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Проверяет, содержит ли внутренняя коллекция запись, соответствующую значению.</summary>
      <returns>Значение true, если запись, соответствующая ключу <paramref name="value" />, найдена, в противном случае значение false.</returns>
      <param name="value">Значение, которое нужно найти.</param>
      <param name="result">Cтрока <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — значение null.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>Позволяет использовать динамический словарь для сжатия общих строк, присутствующих в сообщении и сохраняющих состояние.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>Создает экземпляр этого класса.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>Удаляет внутренние коллекции.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>Предпринимает попытку добавления строки <see cref="T:System.Xml.XmlDictionaryString" /> во внутреннюю коллекцию.</summary>
      <returns>true, если не возникло исключение.</returns>
      <param name="value">Добавляемый объект <see cref="T:System.Xml.XmlDictionaryString" />.</param>
      <param name="key">Ключ <see cref="T:System.Xml.XmlDictionaryString" />, который был успешно добавлен.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Запись с ключом <paramref name="key" /> уже существует.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Реализует словарь, используемый для оптимизации реализаций модулей чтения/записи XML .</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>Создает пустой словарь <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>Создает <see cref="T:System.Xml.XmlDictionary" /> с начальной емкостью.</summary>
      <param name="capacity">Начальный размер словаря.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>Добавляет строку в <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <returns>Добавленный объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
      <param name="value">Строка, добавляемая в словарь.</param>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>Возвращает пустой словарь <see cref="T:System.Xml.IXmlDictionary" /> типа static.</summary>
      <returns>Пустой словарь <see cref="T:System.Xml.IXmlDictionary" /> типа static.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Попытки найти запись в словаре.</summary>
      <returns>Значение true, если ключ присутствует в словаре, в противном случае значение false.</returns>
      <param name="key">Искомый ключ.</param>
      <param name="result">Если параметр <paramref name="key" /> указан, объект <see cref="T:System.Xml.XmlDictionaryString" />, сопоставляется с ключом; в противном случае — со значением null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Выполняет поиск указанного значения в словаре.</summary>
      <returns>Значение true, если значение присутствует в словаре, в противном случае значение false.</returns>
      <param name="value">Искомое строковое значение.</param>
      <param name="result">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если она обнаружена; в противном случае — значение null.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Проверяет наличие в словаре указанной строки <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Xml.XmlDictionaryString" /> присутствует в словаре, в противном случае значение false.</returns>
      <param name="value">Строка <see cref="T:System.Xml.XmlDictionaryString" />, наличие которой проверяется.</param>
      <param name="result">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если она обнаружена; в противном случае — значение null.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>Абстрактный класс, из которого  создается как производный для выполнения сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>Создает экземпляр этого класса.Вызывается только производными классами.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>Это свойство всегда возвращает значение false.Производные классы могут переопределять параметры для возврата значения true, если поддерживают канонизацию.</summary>
      <returns>Возвращает значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary">Используемая версия <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session">Используемый класс <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary">Используемая версия <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session">Используемый класс <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> или <paramref name="quotas" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <param name="session">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="quotas">Квоты, применимые к этой операции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>Создает экземпляр <see cref="T:System.Xml.XmlDictionaryReader" /> из существующего объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Возможная кодировка на входе.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encoding" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings">Возможные кодировки на входе.</param>
      <param name="contentType">Тип MIME Content-Type сообщения.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings">Возможные кодировки на входе.</param>
      <param name="contentType">Тип MIME Content-Type сообщения.</param>
      <param name="quotas">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="maxBufferSize">Максимально допустимый размер буфера.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings">Возможные кодировки на входе.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding">Возможная кодировка в потоке.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encoding" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings">Возможные кодировки в потоке.</param>
      <param name="contentType">Тип MIME Content-Type сообщения.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings">Возможные кодировки в потоке.</param>
      <param name="contentType">Тип MIME Content-Type сообщения.</param>
      <param name="quotas">Тип MIME сообщения.</param>
      <param name="maxBufferSize">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings">Возможные кодировки в потоке.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encoding" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Объект <see cref="T:System.Text.Encoding" />, указывающий свойства кодировки, которые нужно применить.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding">Объект <see cref="T:System.Text.Encoding" />, указывающий свойства кодировки, которые нужно применить.</param>
      <param name="quotas">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="quotas">Квоты, применимые к этому модулю чтения.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>Этот метод еще не реализован.</summary>
      <exception cref="T:System.NotSupportedException">Всегда.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>При переопределении в производном классе получает значение атрибута.</summary>
      <returns>Значение атрибута.</returns>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя атрибута.</param>
      <param name="namespaceUri">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая пространство имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary>Возвращает неатомарные имена.</summary>
      <param name="localName">Локальное имя.</param>
      <param name="namespaceUri">Пространство имен для локального параметра <paramref name="localName" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>Возвращает индекс локального имени текущего узла в массиве имен.</summary>
      <returns>Индекс локального имени текущего узла в массиве имен.</returns>
      <param name="localNames">Массив строк локальных имен для поиска.</param>
      <param name="namespaceUri">Пространство имен текущего узла.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> или любое из имен в массиве имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>Возвращает индекс локального имени текущего узла в массиве имен.</summary>
      <returns>Индекс локального имени текущего узла в массиве имен.</returns>
      <param name="localNames">Массив <see cref="T:System.Xml.XmlDictionaryString" /> локальных имен для поиска.</param>
      <param name="namespaceUri">Пространство имен текущего узла.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> или любое из имен в массиве имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>Проверяет, является ли параметр <paramref name="localName" /> локальным именем текущего узла.</summary>
      <returns>Значение true, если <paramref name="localName" /> соответствует локальному имени текущего узла; в противном случае — false.</returns>
      <param name="localName">Локальное имя текущего узла.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли параметр <paramref name="localName" /> локальным именем текущего узла.</summary>
      <returns>Значение true, если <paramref name="localName" /> соответствует локальному имени текущего узла; в противном случае — false.</returns>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя текущего узла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localName" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>Проверяет, является ли параметр <paramref name="namespaceUri" /> пространством имен текущего узла.</summary>
      <returns>Значение true, если параметр <paramref name="namespaceUri" /> соответствует пространству имен текущего узла; в противном случае — false.</returns>
      <param name="namespaceUri">Пространство имен текущего узла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли параметр <paramref name="namespaceUri" /> пространством имен текущего узла.</summary>
      <returns>Значение true, если параметр <paramref name="namespaceUri" /> соответствует пространству имен текущего узла; в противном случае — false.</returns>
      <param name="namespaceUri">Пространство имен текущего узла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>Проверяет, установлен ли модуль чтения в начале массива.Этот класс возвращает значение false, но производные классы, имеющие концепцию массивов, могут вернуть значение true.</summary>
      <returns>Значение true, если модуль чтения размещен в начале узла массива; в противном случае — значение false.</returns>
      <param name="type">Тип узла, если узел допустим; в противном случае — значение null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли первый тег открывающим или пустым тегом элемента, а также соответствует ли локальное имя и URI пространства таким же значениям текущего узла.</summary>
      <returns>Значение true, если первый тег в массиве является открывающим тегом или тегом пустого элемента и соответствует <paramref name="localName" /> и <paramref name="namespaceUri" />; в противном случае — значение false.</returns>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя атрибута.</param>
      <param name="namespaceUri">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая пространство имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>Проверяет, является ли текущий узел текстовым узлом.</summary>
      <returns>Значение true, если типом узла является <see cref="F:System.Xml.XmlNodetype.Text" />, <see cref="F:System.Xml.XmlNodetype.Whitespace" />, <see cref="F:System.Xml.XmlNodetype.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodetype.CDATA" /> или <see cref="F:System.Xml.XmlNodetype.Attribute" />; в противном случае — значение false.</returns>
      <param name="nodeType">Тип проверяемого узла.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствует ли свойство <see cref="P:System.Xml.XmlReader.Name" /> элемента данному аргументу.</summary>
      <param name="name">Свойство <see cref="P:System.Xml.XmlReader.Name" /> элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствуют ли свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента данным аргументам.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствуют ли свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента данного аргумента.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>Получает значения квот, применимые к текущему экземпляру данного класса.</summary>
      <returns>Выражение <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, применяющееся к текущему экземпляру данного класса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Локальное имя элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.DateTime" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Decimal" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Double" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Guid" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целых чисел типа short в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целочисленных значений в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целочисленных значений типа long в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения чисел типа float в типизированный массив.</summary>
      <returns>Количество чисел с плавающей запятой, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются числа с плавающей запятой.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество чисел с плавающей запятой, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.TimeSpan" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.DateTime" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Decimal" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения типов узлов <see cref="T:System.Double" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Guid" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целых чисел типа short в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целочисленных значений в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения целочисленных значений типа long в типизированный массив.</summary>
      <returns>Количество целочисленных значений, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются целые значения.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество целочисленных значений, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения чисел типа float в типизированный массив.</summary>
      <returns>Количество чисел с плавающей запятой, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются числа с плавающей запятой.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество чисел с плавающей запятой, помещаемых в массив.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.TimeSpan" /> в типизированный массив.</summary>
      <returns>Количество узлов, помещаемых в массив.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, в который помещаются узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов для размещения в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массив.</summary>
      <returns>Массив <see cref="T:System.Boolean" /> узлов <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массив.</summary>
      <returns>Массив <see cref="T:System.Boolean" /> узлов <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Преобразует содержимое узла в заданный тип.</summary>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <param name="type">Тип <see cref="T:System.Type" /> возвращаемого значения.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.Например, этот объект можно использовать при преобразовании объекта <see cref="T:System.Xml.XmlQualifiedName" /> в xs:string.Это значение может быть пустой ссылкой.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Байтовый массив, содержащий раскодированные двоичные байты Base64.</returns>
      <exception cref="T:System.Xml.XmlException">Размер массива больше значения квоты MaxArrayLength для данного модуля чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Массив байт, содержащий раскодированные двоичные байты BinHex.</returns>
      <exception cref="T:System.Xml.XmlException">Размер массива больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Массив байт, содержащий раскодированные двоичные байты BinHex.</returns>
      <param name="maxByteArrayContentLength">Максимальная длина массива.</param>
      <exception cref="T:System.Xml.XmlException">Размер массива больше <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает содержимое в массив типа char.</summary>
      <returns>Количество прочитанных символов.</returns>
      <param name="chars">Массив, в который помещаются символы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество символов, помещаемых в массив.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>Преобразует содержимое узла в decimal.</summary>
      <returns>Представление decimal содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>Преобразует содержимое узла в float.</summary>
      <returns>Представление float содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>Преобразует содержимое узла в guid.</summary>
      <returns>Представление guid содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>Преобразует содержимое узла в представление полного имени.</summary>
      <param name="localName">Часть <see cref="P:System.Xml.XmlReader.LocalName" /> полного имени (параметр out).</param>
      <param name="namespaceUri">Часть <see cref="P:System.Xml.XmlReader.NamespaceURI" /> полного имени (параметр out).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>Преобразует содержимое узла в строку.</summary>
      <returns>Содержимое узла в строковом представлении.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>Преобразует содержимое узла в строку.</summary>
      <returns>Содержимое узла в строковом представлении.</returns>
      <param name="maxStringContentLength">Максимальная длина строки.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>Преобразует содержимое узла в строку.</summary>
      <returns>Содержимое узла в строковом представлении.</returns>
      <param name="strings">Массив строк, с которым сопоставляется содержимое.</param>
      <param name="index">Индекс записи в <paramref name="strings" />, соответствующий содержимому.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="strings" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Запись в коллекции <paramref name=" strings" /> имеет значение  null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>Преобразует содержимое узла в строку.</summary>
      <returns>Содержимое узла в строковом представлении.</returns>
      <param name="strings">Массив объектов <see cref="T:System.Xml.XmlDictionaryString" />, с которым сопоставляется содержимое.</param>
      <param name="index">Индекс записи в <paramref name="strings" />, соответствующий содержимому.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="strings" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Запись в коллекции <paramref name=" strings" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>Преобразует содержимое узла в <see cref="T:System.TimeSpan" />.</summary>
      <returns>Представление <see cref="T:System.TimeSpan" /> содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>Преобразует содержимое узла в уникальный идентификатор.</summary>
      <returns>Содержимое узла, представленное в виде уникального идентификатора.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.Double" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде массива <see cref="T:System.Double" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>Преобразует содержимое узла в массив байтов Base64.</summary>
      <returns>Содержимое узла, представленное в виде массива байтов Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>Преобразует содержимое узла в массив байтов BinHex.</summary>
      <returns>Содержимое узла, представленное в виде массива байтов BinHex.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>Преобразует содержимое элемента в <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>Преобразует содержимое элемента в <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>Преобразует содержимое элемента в <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>Преобразует содержимое элемента в <see cref="T:System.Double" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>Преобразует содержимое элемента в число с плавающей запятой (<see cref="T:System.Single" />).</summary>
      <returns>Содержимое узла, представленное в виде числа с плавающей запятой (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>Преобразует содержимое элемента в <see cref="T:System.Guid" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>Преобразует содержимое элемента в целое число (<see cref="T:System.Int32" />).</summary>
      <returns>Содержимое узла, представленное в виде целого числа (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>Преобразует содержимое элемента в длинное целое число (<see cref="T:System.Int64" />).</summary>
      <returns>Содержимое узла, представленное в виде длинного целого числа (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>Преобразует содержимое элемента в <see cref="T:System.String" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>Преобразует содержимое элемента в <see cref="T:System.TimeSpan" />.</summary>
      <returns>Содержимое узла, представленное в виде <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>Преобразует содержимое элемента в уникальный идентификатор.</summary>
      <returns>Содержимое узла, представленное в виде уникального идентификатора.</returns>
      <exception cref="T:System.ArgumentException">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>Проверяет, является ли текущий узел элементом, и перемещает модуль чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">Метод <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает значение false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>Проверяет, является ли текущий узел элементом <paramref name="name" /> и перемещает модуль чтения на следующий узел.</summary>
      <param name="name">Полное имя элемента.</param>
      <exception cref="T:System.Xml.XmlException">Метод <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает значение false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.Xml.XmlException">Метод <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает значение false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.Xml.XmlException">Метод <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает значение false.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.Guid" />.</summary>
      <returns>Массив <see cref="T:System.Guid" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.Guid" />.</summary>
      <returns>Массив <see cref="T:System.Guid" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел типа short (<see cref="T:System.Int16" />).</summary>
      <returns>Массив целых чисел типа short (<see cref="T:System.Int16" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел типа short (<see cref="T:System.Int16" />).</summary>
      <returns>Массив целых чисел типа short (<see cref="T:System.Int16" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел (<see cref="T:System.Int32" />).</summary>
      <returns>Массив целых чисел <see cref="T:System.Int32" /> ().</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел (<see cref="T:System.Int32" />).</summary>
      <returns>Массив целых чисел <see cref="T:System.Int32" /> ().</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел типа long (<see cref="T:System.Int64" />).</summary>
      <returns>Массив целых чисел типа long (<see cref="T:System.Int64" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел типа long (<see cref="T:System.Int64" />).</summary>
      <returns>Массив целых чисел типа long (<see cref="T:System.Int64" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив чисел типа float (<see cref="T:System.Single" />).</summary>
      <returns>Массив чисел типа float (<see cref="T:System.Single" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив чисел типа float (<see cref="T:System.Single" />).</summary>
      <returns>Массив чисел типа float (<see cref="T:System.Single" />).</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary>Считывает содержимое текущего узла в строку.</summary>
      <returns>Строка, содержащая содержимое текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Не удалось выполнить чтение содержимого текущего узла.</exception>
      <exception cref="T:System.Xml.XmlException">Превышена максимально допустимая длина строки.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary>Считывает содержимое текущего узла в строку данной максимальной длины.</summary>
      <returns>Строка, содержащая содержимое текущего узла.</returns>
      <param name="maxStringContentLength">Максимально допустимая длина строки.</param>
      <exception cref="T:System.InvalidOperationException">Не удалось выполнить чтение содержимого текущего узла.</exception>
      <exception cref="T:System.Xml.XmlException">Превышена максимально допустимая длина строки.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.TimeSpan" />.</summary>
      <returns>Массив <see cref="T:System.TimeSpan" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.TimeSpan" />.</summary>
      <returns>Массив <see cref="T:System.TimeSpan" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Не реализовано.</summary>
      <returns>Не реализовано.</returns>
      <param name="buffer">Буфер, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байт, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException">Всегда.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Этот метод еще не реализован.</summary>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="includeComments">Определяет, включаются ли комментарии.</param>
      <param name="inclusivePrefixes">Префиксы, подлежащие включению.</param>
      <exception cref="T:System.NotSupportedException">Всегда.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>Не реализовано в данном классе (всегда возвращается значение false).Может переопределяться в производных классах.</summary>
      <returns>Значение false, если не переопределено в производном классе.</returns>
      <param name="count">Возвращает 0, если не переопределено в производном классе.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>Не реализовано в данном классе (всегда возвращается значение false).Может переопределяться в производных классах.</summary>
      <returns>Значение false, если не переопределено в производном классе.</returns>
      <param name="length">Возвращает 0, если не переопределено в производном классе.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Не реализовано в данном классе (всегда возвращается значение false).Может переопределяться в производных классах.</summary>
      <returns>Значение false, если не переопределено в производном классе.</returns>
      <param name="localName">Возвращает значение null, если это не переопределено в производном классе.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Не реализовано в данном классе (всегда возвращается значение false).Может переопределяться в производных классах.</summary>
      <returns>Значение false, если не переопределено в производном классе.</returns>
      <param name="namespaceUri">Возвращает значение null, если это не переопределено в производном классе.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Не реализовано в данном классе (всегда возвращается значение false).Может переопределяться в производных классах.</summary>
      <returns>Значение false, если не переопределено в производном классе.</returns>
      <param name="value">Возвращает значение null, если это не переопределено в производном классе.</param>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>Содержит настраиваемые значения квоты для XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>Создает новый экземпляр данного класса.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Задает свойства для переданного экземпляра квот, основываясь на значениях в данном экземпляре.</summary>
      <param name="quotas">Экземпляр <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в который следует выполнить копирование значения.</param>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для переданного экземпляра.</exception>
      <exception cref="T:System.ArgumentNullException">Переданные целевые<paramref name=" quotas" /> равны null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>Возвращает экземпляр данного класса с максимальными значениями для всех свойств.</summary>
      <returns>Экземпляр <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> со значениями свойств <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>Возвращает и задает максимально допустимую длину массива.</summary>
      <returns>Максимально допустимая длина массива.Значение по умолчанию — 16384.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">Попытка задать значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>Возвращает и задает максимально допустимое число байтов, возвращаемых для каждой операции чтения.</summary>
      <returns>Максимально допустимое число байтов, возвращаемых для каждой операции чтения.Значение по умолчанию — 4096.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">Попытка задать значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>Получает и задает максимальную глубину вложенного узла.</summary>
      <returns>Максимальная глубина вложенного узла.Значение по умолчанию — 32.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">Попытка задать значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>Возвращает и задает максимальное количество символов в имени таблицы.</summary>
      <returns>Максимально допустимое количество символов в имени таблицы.Значение по умолчанию — 16384.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">Попытка задать значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>Получает и задает максимальную длину строки, возвращаемую модулем чтения.</summary>
      <returns>Максимальная длина строки, возвращаемой модулем чтения.Значение по умолчанию — 8192.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">Попытка задать значение меньше нуля.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>Представляет запись, которая хранится в <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>Создает экземпляр этого класса.</summary>
      <param name="dictionary">Класс <see cref="T:System.Xml.IXmlDictionary" />, содержащий этот экземпляр.</param>
      <param name="value">Строка, являющаяся значением записи словаря.</param>
      <param name="key">Целое число, являющееся ключом записи словаря.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dictionary" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="key" /> имеет значение меньше 0 или больше <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>Представляет <see cref="T:System.Xml.IXmlDictionary" />, передаваемый конструктору экземпляра <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>
        <see cref="T:System.Xml.IXmlDictionary" /> для этой записи словаря.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlDictionaryString" />, представляющий пустую строку.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryString" />, представляющий пустую строку.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>Возвращает целочисленный ключ для экземпляра класса. </summary>
      <returns>Целочисленный ключ для этого экземпляра класса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>Отображает текстовое представление объекта.</summary>
      <returns>Строковое значение для этого экземпляра класса.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>Возвращает строковое значение для этого экземпляра класса. </summary>
      <returns>Строковое значение для этого экземпляра класса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>Абстрактный класс, из которого  создается как производный, для выполнения сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>Создает экземпляр этого класса.Вызывается только своими производными классами, поскольку является абстрактным.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>Это свойство всегда возвращает значение false.Производные классы могут переопределять параметры для возврата значения true, если поддерживают канонизацию.</summary>
      <returns>false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате .</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате .</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате .</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
      <param name="session">Используемый объект <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате .</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
      <param name="session">Используемая версия <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream">Значение true, если поток закрывается средством записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>Создает экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" /> из существующего объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="writer">Экземпляр класса <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="maxSizeInBytes">Максимальное число копируемых в буфер модуля записи байтов.</param>
      <param name="startInfo">Атрибут в заголовке SOAP ContentType.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML-данные в формате MTOM.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="maxSizeInBytes">Максимальное число копируемых в буфер модуля записи байтов.</param>
      <param name="startInfo">Тип содержимого части MIME, содержащий набор сведений.</param>
      <param name="boundary">Граница MIME в сообщении.</param>
      <param name="startUri">Универсальный код ресурса (URI) идентификатора одержимого части MIME, содержащей набор сведений.</param>
      <param name="writeMessageHeaders">Если указано значение true, выполнятся запись заголовков сообщений.</param>
      <param name="ownsStream">Если указано значение true, поток закрывается средством записи после завершения; в противном случае — значение false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML. </summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в выходе.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML.</summary>
      <returns>Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка в потоке.</param>
      <param name="ownsStream">Значение true, если поток закрывается средством записи после завершения; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>Этот метод еще не реализован. </summary>
      <exception cref="T:System.NotSupportedException">Этот метод еще не реализован.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Этот метод еще не реализован. </summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="includeComments">Определяет, включаются ли комментарии.</param>
      <param name="inclusivePrefixes">Префиксы, подлежащие включению.</param>
      <exception cref="T:System.NotSupportedException">Этот метод еще не реализован.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Записывает значения из массива <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий данные.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество значений, записываемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Double" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Guid" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int16" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int32" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int64" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Single" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Double" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Guid" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int16" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int32" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Int64" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.Single" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Записывает узлы из массива <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array">Массив, содержащий узлы.</param>
      <param name="offset">Начальный индекс в массиве.</param>
      <param name="count">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Записывает полное имя и значение атрибута.</summary>
      <param name="prefix">Префикс атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value">Атрибут.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Записывает полное имя и значение атрибута.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value">Атрибут.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Записывает элемент с текстовым содержимым.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Записывает элемент с текстовым содержимым.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Записывает текущий узел XML из объекта <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr">При значении true скопируйте атрибуты по умолчанию из XmlReader, в противном случае при значении true используйте атрибуты по умолчанию, в противном случае false.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Записывает текущий узел XML из объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr">При значении true скопируйте атрибуты по умолчанию из <see cref="T:System.Xml.XmlReader" />, в противном случае значение false. При значении true используйте атрибуты по умолчанию, в противном случае false.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает полное имя пространства имен.Этот метод выполняет поиск префикса для пространства имен в его области.</summary>
      <param name="localName">Локальное имя полного имени.</param>
      <param name="namespaceUri">URI-код пространства имен полного имени.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localName" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает начальное значение атрибута с заданным префиксом, локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает начала атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает указанный открывающий тег и связывает его с заданным пространством имен.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceUri">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>Записывает заданное текстовое содержимое.</summary>
      <param name="value">Текст для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Записывает текстовый узел, на котором в данный момент расположен объект <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, из которого возвращается текстовое значение.</param>
      <param name="isAttribute">Указывает, установлен ли модуль чтения на значении атрибута или содержимом элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>Записывает значение <see cref="T:System.Guid" />.</summary>
      <param name="value">Значение <see cref="T:System.Guid" /> для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>Записывает значение <see cref="T:System.TimeSpan" />.</summary>
      <param name="value">Значение <see cref="T:System.TimeSpan" /> для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>Записывает значение из <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">Объект <see cref="T:System.Xml.IStreamProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null. </exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="value" /> возвращает потоковый объект null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>Записывает значение уникального идентификатора.</summary>
      <param name="value">Значение уникального идентификатора для записи.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>Записывает значение <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>Записывает стандартный атрибут XML в текущий узел.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="value">Значение атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Записывает атрибут XML в текущий узел.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="value">Значение атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>Записывает атрибут объявления пространства имен.</summary>
      <param name="prefix">Префикс, привязанный к данному пространству имен.</param>
      <param name="namespaceUri">Пространство имен, к которому привязан префикс.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>Записывает атрибут объявления пространства имен.</summary>
      <param name="prefix">Префикс, привязанный к данному пространству имен.</param>
      <param name="namespaceUri">Пространство имен, к которому привязан префикс.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceUri" /> равно null.</exception>
    </member>
  </members>
</doc>