<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Web</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.WebHttpBinding">
      <summary>Привязка, используемая при настройке конечных точек для веб-служб , предоставляемых через HTTP-запросы, а не через сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WebHttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WebHttpBinding" /> с типом безопасности, используемым явно указанной привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WebHttpSecurityMode" />, задающее тип безопасности, используемый для настройки конечной точки службы для получения HTTP-запросов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданный <paramref name="securityMode" /> не является допустимым режимом <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WebHttpBinding" /> привязкой, заданной именем ее конфигурации.</summary>
      <param name="configurationName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configurationName" /> не найден.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</summary>
      <returns>Значение true — для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ContentTypeMapper">
      <summary>Возвращает или задает сопоставитель типа содержимого.</summary>
      <returns>Сопоставитель типа содержимого.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая объекты <see cref="T:System.ServiceModel.Channels.BindingElement" /> для привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled">
      <summary>Возвращает или задает значение, определяющее, включен ли доступ к скриптам из других доменов.</summary>
      <returns>Возвращает значение true, если разрешен доступ к скриптам из других доменов или между доменами, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.EnvelopeVersion">
      <summary>Возвращает версию конверта, используемую конечными точками, настроенными этой привязкой для получения HTTP-запросов.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> со свойством <see cref="P:System.ServiceModel.EnvelopeVersion.None" />, используемым с конечными точками, настроенными с этой привязкой для получения HTTP-запросов. </returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не используется.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.HostnameComparisonMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой диспетчеру буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxBufferSize">
      <summary>Возвращает или задает число, определяющее максимальный объем памяти, выделяемый диспетчером буфера сообщений, принимающим сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524 288 (0x80000) байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Размер сообщения превышает максимально допустимый.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значения квот <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> доступны только для чтения.</exception>
      <exception cref="T:System.ArgumentException">Квоты должны быть положительными.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>«https», если <see cref="P:System.ServiceModel.WebHttpBinding.Security" /> присвоено значение <see cref="F:System.ServiceModel.WebHttpSecurityMode.Transport" />; «http», если это значение — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.Security">
      <summary>Возвращает параметры безопасности, используемые с данной привязкой.  </summary>
      <returns>Объект <see cref="T:System.ServiceModel.WebHttpSecurity" />, используемый с данной привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Определяет, следует ли выполнять сериализацию квот модуля чтения.</summary>
      <returns>Значение true, если квоты модуля чтения необходимо сериализовать, в противном случае значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity">
      <summary>Определяет, следует ли выполнять сериализацию параметров безопасности.</summary>
      <returns>Значение true, если параметры безопасности необходимо сериализовать, в противном случае значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding">
      <summary>Определяет, нужно ли сериализовать кодировку, используемую при сериализации.</summary>
      <returns>Значение true, если кодировку необходимо сериализовать, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>Значение true, если входящие запросы обрабатываются синхронно, либо значение false, если они обрабатываются асинхронно.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.TransferMode">
      <summary>Возвращает или задает значение, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.TransferMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.WebHttpBinding.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="T:System.ServiceModel.WebHttpSecurity">
      <summary>Задает типы безопасности, доступные для конечной точки службы, настроенной для получения HTTP-запросов.</summary>
    </member>
    <member name="M:System.ServiceModel.WebHttpSecurity.#ctor"></member>
    <member name="P:System.ServiceModel.WebHttpSecurity.Mode">
      <summary>Возвращает или задает режим безопасности, используемый конечной точкой, настроенной для получения HTTP-запросов посредством привязки <see cref="T:System.ServiceModel.WebHttpBinding" />.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.WebHttpSecurityMode" />, указывающее, используется ли конечной точкой безопасность транспортного уровня или безопасность не используется вообще.Значение по умолчанию — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым уровнем <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeMode"></member>
    <member name="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport"></member>
    <member name="P:System.ServiceModel.WebHttpSecurity.Transport">
      <summary>Возвращает объект, содержащий параметры безопасности транспортного уровня для этой привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.HttpTransportSecurity" /> для этой привязки. Значения по умолчанию: <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />, равное <see cref="F:System.ServiceModel.HttpClientCredentialType.None" />, <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" />, равное <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" /> и <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" />, равное "".</returns>
    </member>
    <member name="T:System.ServiceModel.WebHttpSecurityMode">
      <summary>Определяет режимы безопасности, которые можно использовать для настройки конечной точки службы для получения HTTP-запросов.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.None">
      <summary>Указывает, что для HTTP-запросов механизм безопасности не используется.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.Transport">
      <summary>Указывает, что для HTTP-запросов используется безопасность транспортного уровня.</summary>
    </member>
    <member name="F:System.ServiceModel.WebHttpSecurityMode.TransportCredentialOnly">
      <summary>Указывает, что обеспечивается только проверка подлинности клиента на основе HTTP.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.WebScriptServiceHostFactory">
      <summary>Автоматически добавляет в службу конечную точку ASP.NET AJAX, не требуя настройки, в управляемой среде размещения, которая динамически активирует экземпляры узла службы в ответ на входящие сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Создает унаследованный класс <see cref="T:System.ServiceModel.ServiceHost" /> для указанного типа службы с определенным базовым адресом, который можно использовать для автоматической реализации конечных точек ASP.NET AJAX в некоторых сценариях.</summary>
      <returns>Узел <see cref="T:System.ServiceModel.ServiceHost" /> типа службы с указанными базовыми адресами.</returns>
      <param name="serviceType">Тип размещаемой службы. </param>
      <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса размещаемой службы.</param>
      <exception cref="T:System.InvalidOperationException">Другая служба использует тот же базовый адрес, или другая конечная точка использует тот же адрес, что и конечная точка ASP.NET AJAX, которую пытается создать эта фабрика.</exception>
    </member>
    <member name="T:System.ServiceModel.Activation.WebServiceHostFactory">
      <summary>Фабрика, предоставляющая экземпляры <see cref="T:System.ServiceModel.Web.WebServiceHost" /> в управляемых средах размещения, в которых экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Создает экземпляр указанного унаследованного класса <see cref="T:System.ServiceModel.Web.WebServiceHost" /> с заданными базовыми адресами.</summary>
      <returns>Экземпляр унаследованного класса <see cref="T:System.ServiceModel.ServiceHost" />.</returns>
      <param name="serviceType">Тип создаваемого узла служб.</param>
      <param name="baseAddresses">Массив базовых адресов службы.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty">
      <summary>Разрешает использование обратного вызова JavaScript в ответе операции службы с помощью JSON с заполнением (JSONP).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.CallbackFunctionName">
      <summary>Возвращает или задает имя функции обратного вызова, используемого с JSONP.</summary>
      <returns>Имя функции обратного вызова.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.Name">
      <summary>Возвращает имя свойства сообщения, используемое для добавления свойства сообщения обратного вызова JavaScript в ответ операции службы с помощью JSON.</summary>
      <returns>Имя свойства сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.JavascriptCallbackResponseMessageProperty.StatusCode">
      <summary>Возвращает или задает код состояния HTTP.</summary>
      <returns>Код состояния HTTP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamBodyWriter">
      <summary>Абстрактный базовый класс, который служит для создания пользовательских классов <see cref="T:System.ServiceModel.Channels.BodyWriter" />, которые могут быть использованы в качестве потока для текста сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamBodyWriter" />.</summary>
      <param name="isBuffered">Возвращает значение true, если поток буферизуется, в противном случае значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Переопределите этот метод, чтобы создать копию потока.</summary>
      <returns>Модуль записи текста.</returns>
      <param name="maxBufferSize">Максимальный размер буфера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnWriteBodyContents(System.IO.Stream)">
      <summary>Переопределите этот метод, чтобы он записывал содержимое текста сообщения.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Переопределите этот метод, чтобы он записывал содержимое текста сообщения.</summary>
      <param name="writer">Модуль записи, в который производится запись.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty">
      <summary>Хранит и извлекает формат кодирования входящих и исходящих сообщений для составного кодировщика веб-сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.#ctor(System.ServiceModel.Channels.WebContentFormat)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" /> с заданным форматом.</summary>
      <param name="format">Объект <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> текста сообщения.</param>
      <exception cref="T:System.ArgumentException">Формату не может быть присвоено в конструкторе значение <see cref="F:System.ServiceModel.Channels.WebContentFormat.Default" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.CreateCopy">
      <summary>Возвращает текущий экземпляр текущего свойства.</summary>
      <returns>Экземпляр интерфейса <see cref="T:System.ServiceModel.Channels.IMessageProperty" />, являющийся копией текущего объекта <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Format">
      <summary>Возвращает формат, используемый для текста сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.WebContentFormat" />, задающий формат, который используется для текста сообщения.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Name">
      <summary>Возвращает имя свойства.</summary>
      <returns>Возвращает "WebBodyFormatMessageProperty".</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.ToString">
      <summary>Возвращает имя свойства и формат кодирования, используемые при создании.</summary>
      <returns>Возвращает «WebBodyFormatMessageProperty: EncodingFormat={0}», где {0} — метод WebContentFormat.ToString(), определяющий используемый формат кодирования.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentFormat">
      <summary>Задает форматы сообщений, которым можно сопоставить типы содержимого входящих сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Default">
      <summary>Нельзя определить формат для сопоставления.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Xml">
      <summary>Сопоставлять с форматом XML.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Json">
      <summary>Сопоставлять с форматом JSON.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Raw">
      <summary>Сопоставлять с двоичным форматом "Raw".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentTypeMapper">
      <summary>Задает формат, которому сопоставляется тип контента входящего сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)">
      <summary>При переопределении в производном классе возвращает формат сообщений, используемый для заданного типа контента.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.WebContentFormat" />, задающий формат, которому сопоставляется тип контента сообщения. </returns>
      <param name="contentType">Тип контента, указывающий MIME-тип данных, которые необходимо интерпретировать.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement">
      <summary>Позволяет читать и записывать сообщения, кодированные в формате обычного XML-текста и JSON (JavaScript Object Notation), и необработанное двоичное содержимое при использовании в привязке .</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.#ctor(System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> с заданной кодировкой записи. </summary>
      <param name="writeEncoding">Кодировка <see cref="T:System.Text.Encoding" />, которую необходимо использовать для записи символов в сообщении.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writeEncoding" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="writeEncoding" /> не является поддерживаемой кодировкой текста сообщений.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы заданного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека прослушивателя каналов, принимающего заданный тип канала для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение прослушивателя заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" />, инициализированный из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.ContentTypeMapper">
      <summary>Возвращает или задает способ сопоставления типа содержимого входящего сообщения формату.</summary>
      <returns>Средство сопоставления <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />, обозначающее формат типа содержимого входящего сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику кодировщиков сообщений, которая, в свою очередь, создает кодировщиков сообщений, которые могут записывать сообщения JSON (JavaScript Object Notation) или XML.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, кодирующая сообщения JSON, XML или необработанные двоичные сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.CrossDomainScriptAccessEnabled"></member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает объект запрошенного типа из соответствующего уровня стека каналов, если есть, или значение null, если он отсутствует.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для текущего элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="context" /> задано значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Возвращает или задает значение, обозначающее максимальное число выделенных пулу средств чтения, доступных для обработки входящих сообщений без выделения новых средств чтения.</summary>
      <returns>Максимальное число средств чтения, доступных для обработки входящих сообщений.Значение по умолчанию — 64 модуля чтения каждого типа.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Возвращает или задает значение, обозначающее максимальное число выделенных пулу модулей записи, доступных для обработки исходящих сообщений без выделения новых средств записи.</summary>
      <returns>Максимальное число модулей записи, доступных для обработки исходящих сообщений.Значение по умолчанию — 16 модулей записи каждого типа.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает версию сообщения, указывающую, что элемент привязки не использует SOAP или WS-Addressing.</summary>
      <returns>
        <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />
      </returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
      <exception cref="T:System.ArgumentException">Заданное значение не равно ни null, ни <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.ReaderQuotas">
      <summary>Возвращает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с помощью этой привязки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для участвующих в обмене сообщений SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)"></member>
    <member name="M:System.ServiceModel.Channels.WebMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)"></member>
    <member name="P:System.ServiceModel.Channels.WebMessageEncodingBindingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую для записи текста сообщения.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий, какая кодировка используется для записи текста сообщения.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий дочерние элементы, в которых указываются параметры использования привязки <see cref="T:System.ServiceModel.WebHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingCollectionElement.GetDefault">
      <summary>Возвращает используемую по умолчанию привязку.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий привязку по умолчанию.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpBindingElement">
      <summary>Элемент привязки, используемый при настройке конечных точек для веб-служб , которые реагируют на запросы HTTP, а не на сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> и указывает имя элемента. </summary>
      <param name="name">Имя, используемое для данного элемента конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType">
      <summary>Возвращает тип <see cref="T:System.Type" /> привязки, которую представляет данный элемент конфигурации.</summary>
      <returns>Тип привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</summary>
      <returns>Значение true — для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper">
      <summary>Возвращает или задает способ сопоставления типа содержимого входящего сообщения формату.</summary>
      <returns>Строка, указывающая на сопоставитель, который определяет формат типа содержимого входящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled">
      <summary>Возвращает или задает значение, указывающее, разрешен ли доступ к скриптам из других доменов. </summary>
      <returns>Значение true, если доступ к скриптам из других доменов разрешен, в противном случае значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не используется.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.HostnameComparisonMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует содержимое этого элемента конфигурации привязки на основе значений свойств указанной привязки.</summary>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для инициализации данного элемента конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой диспетчеру буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize">
      <summary>Возвращает или задает число, определяющее максимальный объем памяти, выделяемый диспетчером буфера сообщений, принимающим сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524 288 (0x80000) байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Размер сообщения превышает максимально допустимый.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует значения свойств указанной привязки на основе содержимого данного элемента конфигурации привязки.</summary>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, инициализированная на основе содержимого данного элемента конфигурации привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Тип данного элемента привязки отличается от типа, указанного в параметре <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas">
      <summary>Возвращает или задает элемент конфигурации, содержащий ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, для которых настроена эта привязка.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />, в котором задаются ограничения по сложности.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значения квот <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> доступны только для чтения.</exception>
      <exception cref="T:System.ArgumentException">Квоты должны быть положительными.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.Security">
      <summary>Возвращает элемент конфигурации, содержащий параметры безопасности, используемые для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" />, используемый с данной привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode">
      <summary>Возвращает или задает значение, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.TransferMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpElement">
      <summary>Включает для конечной точки объект <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> через конфигурацию.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.AutomaticFormatSelectionEnabled">
      <summary>Возвращает или задает значение, показывающее, может ли автоматически выбираться формат сообщения.</summary>
      <returns>true, если формат сообщения может выбираться автоматически, в противном случае — false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.BehaviorType">
      <summary>Возвращает тип элемента поведения, включенного данным элементом конфигурации.</summary>
      <returns>Тип <see cref="T:System.Type" /> поведения, включенного с помощью элемента конфигурации: <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.DefaultBodyStyle">
      <summary>Возвращает и задает основной стиль сообщения по умолчанию.</summary>
      <returns>Одно из значений, определенных в перечислении <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.DefaultOutgoingResponseFormat">
      <summary>Возвращает и задает исходящий формат ответа по умолчанию.</summary>
      <returns>Одно из значений, определенных в перечислении <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.FaultExceptionEnabled">
      <summary>Возвращает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
      <returns>Возвращает значение true, если флаг установлен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpElement.HelpEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли справка.</summary>
      <returns>Значение true, если справка включена; в противном случае — значение false. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpEndpointElement">
      <summary>Представляет элемент конфигурации WCF для приложения веб-службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.AutomaticFormatSelectionEnabled">
      <summary>Возвращает или задает значение, определяющее, включен ли автоматический выбор форматирования.</summary>
      <returns>Значение true, если автоматический выбор форматирования включен, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.ContentTypeMapper">
      <summary>Возвращает или задает тип MIME для содержимого, отправляемого операциями веб-служб.</summary>
      <returns>Строка, содержащая имя содержимого MIME.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Создает новую конечную точку типа <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> с указанным описанием контракта.</summary>
      <returns>Конечная точка службы.</returns>
      <param name="contractDescription">Объект типа <see cref="T:System.ServiceModel.Description.ContractDescription" />, который определяет информацию, передаваемую конечной точкой, передает во внешний мир, включая сигнатуры операций, связанных с обменом сообщениями, типы данных этих сообщений, расположение операций и конкретные протоколы и форматы сериализации, используемые для поддержки успешной связи со службой.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.CrossDomainScriptAccessEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли условие, разрешающее внедрение кода в веб-страницы, просматриваемые другими пользователями.</summary>
      <returns>Значение true, если доступ включен, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.DefaultOutgoingResponseFormat">
      <summary>Возвращает или задает формат по умолчанию для ответов, отправляемых операциями веб-службы.</summary>
      <returns>Объект формата.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.EndpointType">
      <summary>Возвращает тип результата <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <returns>Тип объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.FaultExceptionEnabled">
      <summary>Возвращает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
      <returns>Возвращает значение true, если флаг установлен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.HelpEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли справка.</summary>
      <returns>Значение true, если справка включена; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.HostNameComparisonMode">
      <summary>Возвращает или задает имя узла веб-службы и правило сопоставления URI, которое настроено в элементе привязки и используется протоколами HTTP, TCP и именованных каналов при диспетчеризации входящих сообщений.</summary>
      <returns>Перечисление режима сравнения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой диспетчеру буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку.</summary>
      <returns>64-разрядное представление числа.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер используемого буфера.</summary>
      <returns>Число, представляющее размер буфера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальное число сообщений, которые могут быть получены веб-службой.</summary>
      <returns>64-разрядное число, представляющее максимальное количество.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Преобразует указанную <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> в <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которому применяются параметры веб-конфигурации HTTP.</param>
      <param name="serviceEndpointElement">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Преобразует указанную <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> в <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" />.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которому применяются параметры веб-конфигурации HTTP.</param>
      <param name="serviceEndpointElement">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента конечной точки канала, настраивает его для включения веб-содержимого HTTP.</summary>
      <param name="channelEndpointElement">Элемент конечной точки канала для инициализации и проверки. </param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента конечной точки службы, настраивает его для включения веб-содержимого HTTP.</summary>
      <param name="serviceEndpointElement">Элемент конечной точки службы для инициализации и проверки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.Properties">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ConfigurationProperty" />, связанную с текущим исключением <see cref="T:System.ServiceModel.Configuration.WebHttpEndpointElement" />.</summary>
      <returns>Коллекция свойств конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.ReaderQuotas">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />, содержащий ограничения на длину и сложность строк XML, считываемых модулем чтения словаря XML.</summary>
      <returns>Объект, содержащий квоты модуля чтения словаря XML.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.Security">
      <summary>Возвращает элемент, используемый для настройки безопасности веб-службы с конечными точками, принимающими запросы HTTP.</summary>
      <returns>Элемент безопасности веб-службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.TransferMode">
      <summary>Возвращает или задает метод WCF передачи данных по сети между конечными точками.</summary>
      <returns>Перечисление режимов передачи.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpEndpointElement.WriteEncoding">
      <summary>Возвращает или задает строку для кодирования.</summary>
      <returns>Закодированный текст.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebHttpSecurityElement">
      <summary>Элемент XML, используемый для настройки безопасности службы с конечными точками, принимающими запросы HTTP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebHttpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpSecurityElement.Mode">
      <summary>Возвращает элемент XML, в котором указывается режим безопасности для базовой службы HTTP.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.WebHttpSecurityMode" />, указывающее, используется ли конечной точкой безопасность на уровне транспорта или безопасность не используется вообще.Значение по умолчанию — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым уровнем <see cref="T:System.ServiceModel.WebHttpSecurityMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebHttpSecurityElement.Transport">
      <summary>Возвращает элемент XML, в котором указываются параметры безопасности на уровне транспорта для конечной точки службы, настроенной на получение запросов HTTP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" />, в котором указываются параметры безопасности на уровне транспорта.Значения по умолчанию: <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />, равное <see cref="F:System.ServiceModel.HttpClientCredentialType.None" />, <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" />, равное <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" /> и <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" />, равное "".</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebMessageEncodingElement">
      <summary>Представляет элемент конфигурации, в котором указывается кодировка для сообщений, не использующих протокол SOAP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebMessageEncodingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации привязки.</summary>
      <param name="bindingElement">Применяемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.BindingElementType">
      <summary>Возвращает тип элемента привязки, включенный данным элементом конфигурации.</summary>
      <returns>Тип элемента привязки, включенный данным элементом конфигурации: <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный элемент.</summary>
      <param name="from">Копируемый объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxReadPoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно считать одновременно без выделения памяти для дополнительных модулей чтения.</summary>
      <returns>Максимальное количество сообщений, которые можно читать одновременно, не выделяя памяти для новых модулей чтения.Значение по умолчанию — 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxWritePoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно отправить одновременно без выделения памяти для дополнительных модулей записи.</summary>
      <returns>Максимальное количество сообщений, которые можно отправить одновременно, не выделяя памяти для новых модулей записи.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />, в котором задаются ограничения по сложности. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WebContentTypeMapperType">
      <summary>Возвращает или задает имя типа <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />, в котором указывается формат, сопоставляемый типу содержимого входящего сообщения.</summary>
      <returns>Имя типа <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую при создании сообщений для привязки.</summary>
      <returns>Действительное значение <see cref="T:System.Text.Encoding" />, в котором указывается кодировка, используемая при создании сообщений для привязки.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEnablingElement">
      <summary>Включает для конечной точки объект <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" /> через конфигурацию.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEnablingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebScriptEnablingElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEnablingElement.BehaviorType">
      <summary>Возвращает тип элемента поведения, включенного данным элементом конфигурации.</summary>
      <returns>Тип <see cref="T:System.Type" /> поведения, включенного с помощью элемента конфигурации: <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WebScriptEndpointElement">
      <summary>Представляет пользовательский элемент конфигурации, который определяет <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> в файле конфигурации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.ContentTypeMapper">
      <summary>Возвращает или задает группу типов поведения и метаданные, образующие веб-документ, настраиваемый текущим элементом <see cref="T:System.ServiceModel.Configuration.WebScriptEndpointElement" />.</summary>
      <returns>Имя типа содержимого.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> с указанным <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <returns>Конечная точка веб-скрипта.</returns>
      <param name="contractDescription">Объект, свойства которого определяют характеристики конечной точки, включаясигнатуры операций, связанных с обменом сообщениями;типы данных этих сообщений, расположение операций;специальные протоколы и форматы сериализации, используемые для поддержки успешной связи со службой.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.CrossDomainScriptAccessEnabled">
      <summary>Возвращает или задает значение, указывающее, могут ли разные серверы обращаться к скриптам друг друга.</summary>
      <returns>true, если разрешен доступ к скриптам из других доменов или между доменами, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.EndpointType">
      <summary>Возвращает тип результата <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>Объект конечной точки веб-скрипта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.HostNameComparisonMode">
      <summary>Указывает способ использования имени узла в сравнениях URI при диспетчеризации входящего сообщения в <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>Перечисляемое описание режима сравнения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферных пулов, используемых транспортом сообщений.</summary>
      <returns>Максимальный размер буферного пула.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буфера для получения сообщений.</summary>
      <returns>Максимальный размер буфера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер в байтах для сообщений, принимаемых <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />. </summary>
      <returns>Максимальный размер в байтах.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Преобразует указанный объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> в <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <param name="endpoint">Преобразуемый класс <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
      <param name="serviceEndpointElement">Не используется.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Преобразует указанный объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> в <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <param name="endpoint">Преобразуемый класс <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
      <param name="serviceEndpointElement">Не используется.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> и настраивает его с тем, чтобы включить веб-содержимое привязки HTTP.</summary>
      <param name="channelEndpointElement">Действие <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> для инициализации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WebScriptEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> и настраивает его с тем, чтобы включить веб-содержимое привязки HTTP.</summary>
      <param name="serviceEndpointElement">Действие <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> для инициализации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.Properties">
      <summary>Возвращает все свойства, прикрепленные к текущему объекту <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>Коллекция свойств элементов конечных точек.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.ReaderQuotas">
      <summary>Возвращает элемент конфигурации, который определяет ограничения на сложность сообщений, которые могут быть обработаны объектами <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" />.</summary>
      <returns>Элемент конфигурации, который определяет квоты модуля чтения словаря XML. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.Security">
      <summary>Возвращает элемент привязки безопасности веб-приложений HTTP.</summary>
      <returns>Элемент конфигурации конечной точки веб-скрипта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.TransferMode">
      <summary>Возвращает или задает способ передачи сообщений WCF.</summary>
      <returns>Объект, содержащий строку, которая указывает на режим передачи сообщений WCF.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WebScriptEndpointElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую для форматирования символов в текстовом сообщении.</summary>
      <returns>Кодировка символов.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.JsonFaultDetail">
      <summary>Представляет ошибку SOAP, определенную в контракте службы для использования с JSON.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.JsonFaultDetail.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.JsonFaultDetail" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.ExceptionDetail">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.ExceptionDetail" />, который представляет ошибку SOAP, определенную в контракте службы.</summary>
      <returns>Ошибка SOAP, которая определена в контракте службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.ExceptionType">
      <summary>Получает или задает тип исключения.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.Message">
      <summary>Возвращает или задает сообщение об исключении.</summary>
      <returns>Сообщение исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.JsonFaultDetail.StackTrace">
      <summary>Возвращает или задает данные трассировки стека для этого исключения.</summary>
      <returns>Данные трассировки стека для этого исключения.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpBehavior">
      <summary>Включает модель веб-программирования для службы .</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> для передачи пользовательских данных во время выполнения для поддержки пользовательского поведения.</summary>
      <param name="endpoint">Конечная точка.</param>
      <param name="bindingParameters">Параметр привязки, который поддерживает изменение привязок.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Добавляет инспектор ошибок клиента в указанную конечную точку службы.</summary>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="clientRuntime">Среда выполнения клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Переопределите этот метод, чтобы изменить способ обработки ошибок, возникающих в работе службы.</summary>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="endpointDispatcher">Диспетчер конечных точек.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> для поддержки изменения или расширения клиента на протяжении всей конечной точки.</summary>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="clientRuntime">Клиент, для которого применимо пользовательское поведение.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> для поддержки изменения или расширения клиента на протяжении всей конечной точки.</summary>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Диспетчер конечной точки, к которому применимо поведение.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled">
      <summary>Возвращает или задает значение, определяющее, включен ли автоматический выбор формата.</summary>
      <returns>Значение true, если автоматический выбор формата включен; в противном случае ― значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
      <summary>Возвращает и задает основной стиль сообщения по умолчанию.</summary>
      <returns>Одно из значений, определенных в перечислении <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
      <summary>Возвращает и задает исходящий формат запроса по умолчанию.</summary>
      <returns>Одно из значений, определенных в перечислении <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
      <summary>Возвращает и задает исходящий формат ответа по умолчанию.</summary>
      <returns>Одно из значений, определенных в перечислении <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
      <summary>Возвращает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
      <returns>Возвращает значение true, если флаг установлен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />, который содержит селектор операций для заданной конечной точки.</returns>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
      <summary>Возвращает преобразователь строки запроса.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" />.</returns>
      <param name="operationDescription">Операция службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Возвращает модуль форматирования ответа в клиенте для заданной конечной точки и операции службы.</summary>
      <returns>Ссылка <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> на модуль форматирования ответа в клиенте для заданной операции и конечной точки.</returns>
      <param name="operationDescription">Операция службы.</param>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Возвращает модуль форматирования ответа в службе для заданной конечной точки и операции службы.</summary>
      <returns>Ссылка <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> на модуль форматирования ответа в службе для заданной операции и конечной точки.</returns>
      <param name="operationDescription">Операция службы.</param>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Возвращает модуль форматирования запроса в клиенте для заданной операции службы и конечной точки.</summary>
      <returns>Ссылка <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> на модуль форматирования запроса в клиенте для заданной операции и конечной точки.</returns>
      <param name="operationDescription">Операция службы.</param>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Возвращает модуль форматирования запроса в службе для данной операции службы и конечной точки службы.</summary>
      <returns>Ссылка <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> на модуль форматирования запроса в службе для заданной операции и конечной точки.</returns>
      <param name="operationDescription">Операция службы.</param>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
      <summary>Возвращает или задает значение, определяющее, будет ли включена страница справки .</summary>
      <returns>true, если страница справки  включена, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName">
      <summary>Возвращает или задает имя параметра обратного вызова JavaScript.</summary>
      <returns>Имя параметра обратного вызова JavaScript.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Подтверждает, что конечная точка отвечает требованиям для модели веб-программирования.</summary>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Обеспечивает правильность привязки для модели веб-программирования WCF.</summary>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpEndpoint">
      <summary>Стандартная конечная точка с фиксированной привязкой <see cref="T:System.ServiceModel.WebHttpBinding" />, которая автоматически добавляет поведение <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> с заданным объектом <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <param name="contract">Описание контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebHttpEndpoint" /> с заданными свойствами <see cref="T:System.ServiceModel.Description.ContractDescription" /> и <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="contract">Описание контракта.</param>
      <param name="address">Адрес конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.AutomaticFormatSelectionEnabled">
      <summary>Возвращает или задает значение, указывающее, включен ли автоматический выбор формата.</summary>
      <returns>true, если автоматический выбор формата включен, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.DefaultOutgoingResponseFormat">
      <summary>Возвращает или задает формат исходящего ответа по умолчанию.</summary>
      <returns>Формат ответа, заданный по умолчанию для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.FaultExceptionEnabled">
      <summary>Возвращает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
      <returns>Возвращает значение true, если флаг установлен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.HelpEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли страница справки HTTP для конечной точки.</summary>
      <returns>true, если страница справки HTTP включена, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpEndpoint.WebEndpointType">
      <summary>Возвращает <see cref="T:System.Type" /> конечной точки.</summary>
      <returns>Тип конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebScriptEnablingBehavior">
      <summary>Обеспечивает поддержку для поведения, позволяющего конечным точкам  получать HTTP-запросы от клиента ASP.NET AJAX с использованием обозревателя.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Применяет поведение к клиенту на протяжении всей конечной точки.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
      <param name="clientRuntime">Объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, для которого применимо пользовательское поведение.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Применяет поведение к конечной точке службы.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
      <param name="endpointDispatcher">Объект <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />, для которого применимо пользовательское поведение.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.AutomaticFormatSelectionEnabled">
      <summary>Возвращает или задает значение, определяющее, включен ли автоматический выбор формата.</summary>
      <returns>Значение true, если автоматический выбор формата включен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle">
      <summary>Возвращает или задает основной стиль сообщения по умолчанию.</summary>
      <returns>Значение типа <see cref="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest" />.Единственным допустимым значением является значение по умолчанию.</returns>
      <exception cref="T:System.NotSupportedException">Основной заданный стиль не поддерживается.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat">
      <summary>Возвращает или задает исходящий формат сообщения по умолчанию.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> используется исходящими сообщениями запросов.Значение по умолчанию — <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданный формат сообщения не является допустимым значением <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat">
      <summary>Возвращает и задает исходящий формат сообщения ответа по умолчанию.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> используется исходящими сообщениями ответов.Значение по умолчанию — <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданный формат сообщения не является допустимым значением <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.FaultExceptionEnabled">
      <summary>Возвращает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
      <returns>Возвращает значение true, если флаг установлен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEnablingBehavior.HelpEnabled">
      <summary>Возвращает или задает значение, определяющее, будет ли включена страница справки REST .</summary>
      <returns>true, если страница справки REST  включена, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEnablingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Подтверждает, что конечная точка отвечает требованиям, позволяющим ей функционировать как конечной точке ASP.NET AJAX.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
      <exception cref="T:System.InvalidOperationException">Конечная точка не отвечает одному из требований, чтобы быть конечной точкой ASP.NET AJAX.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.WebScriptEndpoint">
      <summary>Стандартная конечная точка с фиксированной привязкой <see cref="T:System.ServiceModel.WebHttpBinding" />, которая автоматически добавляет поведение <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> с заданным объектом <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <param name="contract">Описание контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebScriptEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebScriptEndpoint" /> с заданными свойствами <see cref="T:System.ServiceModel.Description.ContractDescription" /> и <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="contract">Описание контракта.</param>
      <param name="address">Адрес конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebScriptEndpoint.WebEndpointType">
      <summary>Возвращает <see cref="T:System.Type" /> конечной точки.</summary>
      <returns>Тип конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WebServiceEndpoint">
      <summary>Стандартная конечная точка с фиксированной привязкой <see cref="T:System.ServiceModel.WebHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.ContentTypeMapper">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />, связанный с объектом <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" />.</summary>
      <returns>Сопоставитель типов веб-содержимого.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.CrossDomainScriptAccessEnabled">
      <summary>Возвращает или задает значение, указывающее, разрешен ли доступ к скриптам из других доменов или между доменами для <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" />.</summary>
      <returns>true, если доступ к скриптам из других доменов или между доменами разрешен, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не используется.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.HostnameComparisonMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой диспетчеру буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferSize">
      <summary>Возвращает или задает число, определяющее максимальный объем памяти, выделяемый диспетчером буфера сообщений, принимающим сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524 288 (0x80000) байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Размер сообщения превышает максимально допустимый.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Ограничения сложности.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значения квот <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> доступны только для чтения.</exception>
      <exception cref="T:System.ArgumentException">Квоты должны быть положительными.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.Security">
      <summary>Возвращает параметры безопасности, используемые с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.WebHttpSecurity" />, используемый с данной привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.TransferMode">
      <summary>Возвращает или задает значение, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение не является допустимым значением для <see cref="T:System.ServiceModel.TransferMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.WebEndpointType">
      <summary>Возвращает тип конечной точки веб-службы.</summary>
      <returns>Тип конечной точки веб-службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebServiceEndpoint.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Используемая кодировка символов.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
      <summary>Этот класс преобразует значение параметра в нотацию объекта JavaScript (JSON) и обратно. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
      <summary>Получает значение, обозначающее, является ли указанный тип среды CLR известным типом, который можно сериализовать и десериализовать.</summary>
      <returns>Значение true, если заданный тип может быть сериализован, в противном случае значение false.</returns>
      <param name="type">Класс <see cref="T:System.Type" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <summary>Десериализует параметр строки запроса JSON в указанный тип среды CLR.</summary>
      <returns>Экземпляр типа среды CLR, в который преобразуется значение параметра.</returns>
      <param name="parameter">Форма JSON значения параметра.</param>
      <param name="parameterType">
        <see cref="T:System.Type" />, в который десериализуется параметр.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Сериализует тип параметра среды CLR в представление JSON.</summary>
      <returns>Сериализация типа среды CLR в параметр строки запроса JSON. null возвращается, если параметр равен null.</returns>
      <param name="parameter">Преобразуемое значение параметра.</param>
      <param name="parameterType">
        <see cref="T:System.Type" />, в который сериализуется параметр.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <summary>Этот класс преобразует параметр в строке запроса в объект нужного типа.Он также может преобразовывать параметр из объекта в представление строки запроса.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
      <summary>Определяет, может ли указанный тип быть преобразован из строкового представления и обратно.</summary>
      <returns>Значение, указывающее, возможно ли преобразование типа.</returns>
      <param name="type">Преобразуемый класс <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <summary>Преобразует параметр строки запроса в указанный тип.</summary>
      <returns>Преобразованный параметр.</returns>
      <param name="parameter">Строковая форма параметра и его значение.</param>
      <param name="parameterType">
        <see cref="T:System.Type" />, в который преобразуется параметр.</param>
      <exception cref="T:System.FormatException">Предоставленная строка имеет неправильный формат.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Преобразует параметр в представление строки запроса.</summary>
      <returns>Значения и имя параметра.</returns>
      <param name="parameter">Преобразуемый параметр.</param>
      <param name="parameterType">Тип <see cref="T:System.Type" /> параметра для преобразования.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <summary>Селектор операций, поддерживающий модель веб-программирования.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /> с заданной конечной точкой.</summary>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.GetUriTemplate(System.String)">
      <summary>Возвращает шаблон <see cref="T:System.UriTemplate" />, связанный с указанным именем операции.</summary>
      <returns>
        <see cref="T:System.UriTemplate" /> для указанной операции.</returns>
      <param name="operationName">Операция.</param>
    </member>
    <member name="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationNamePropertyName">
      <summary>Имя свойства сообщения запроса, которое содержит имя выбранной операции для запроса.</summary>
    </member>
    <member name="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationSelectorUriMatchedPropertyName">
      <summary>Строка, используемая в качестве ключа для хранения значения, которое указывает, имеется ли для вызова операции службы соответствие по URI, но не по методу HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <summary>Выбирает вызываемую операцию службы.</summary>
      <returns>Имя вызываемой операции службы.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, отправляемый для вызова операции службы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)">
      <summary>Выбирает вызываемую операцию службы.</summary>
      <returns>Имя вызываемой операции службы.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, отправляемый для вызова операции службы.</param>
      <param name="uriMatched">Значение, указывающее, соответствует ли универсальный код ресурса (URI) определенной операции службы.</param>
    </member>
    <member name="T:System.ServiceModel.Web.AspNetCacheProfileAttribute">
      <summary>Если применяется к операции службы, указывает профиль кэша вывода ASP.NET в файле конфигурации, который должен использоваться в  для кэширования ответов от операции в кэше вывода ASP.NET.Дополнительные сведения о 
   типах настроек, которые можно создать с помощью профиля кэша вывода, см. в разделе ASP.NET Cache Settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.AspNetCacheProfileAttribute" /> с указанным именем профиля кэша.</summary>
      <param name="cacheProfileName">Имя профиля кэша.</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary> Реализация метода IOperationBehavior.AddBindingParmeters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection). Используется инфраструктурой  и не должно использоваться разработчиками.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="bindingParameters">Параметры привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />.Используется инфраструктурой , не предназначен для использования разработчиками.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="clientOperation">Клиентская операция.</param>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />.Используется инфраструктурой , не предназначен для использования разработчиками.</summary>
      <param name="operationDescription">Проверяемая операция.</param>
      <param name="dispatchOperation">Объект времени выполнения, предоставляющий свойства настройки для операции, описываемой объектом <paramref name="operationDescription" />.</param>
    </member>
    <member name="P:System.ServiceModel.Web.AspNetCacheProfileAttribute.CacheProfileName">
      <summary>Возвращает имя профиля кэша.</summary>
      <returns>Имя профиля кэша.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.AspNetCacheProfileAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />.Используется инфраструктурой , не предназначен для использования разработчиками.</summary>
      <param name="operationDescription">Не реализовано.</param>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebRequestContext">
      <summary>Обеспечивает программный доступ к контексту входящего веб-запроса.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Accept">
      <summary>Возвращает значение заголовка Accept из входящего веб-запроса.</summary>
      <returns>Заголовок Accept из входящего веб-запроса.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)"></member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.ContentLength">
      <summary>Возвращает значение заголовка ContentLength входящего веб-запроса.</summary>
      <returns>Заголовок ContentLength входящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.ContentType">
      <summary>Возвращает значение заголовка ContentType из входящего веб-запроса.</summary>
      <returns>Заголовок ContentType из входящего веб-запроса.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.IncomingWebRequestContext.GetAcceptHeaderElements"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Headers">
      <summary>Возвращает заголовки для входящего веб-запроса.</summary>
      <returns>Экземпляр <see cref="T:System.Net.WebHeaderCollection" />, содержащий заголовки входящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfMatch"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfModifiedSince"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfNoneMatch"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.IfUnmodifiedSince"></member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.Method">
      <summary>Возвращает метод HTTP входящего веб-запроса.</summary>
      <returns>Метод HTTP входящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.UriTemplateMatch">
      <summary>Возвращает и задает экземпляр <see cref="T:System.UriTemplateMatch" />, созданный в процессе перенаправления входящего веб-запроса.</summary>
      <returns>Экземпляр <see cref="T:System.UriTemplateMatch" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebRequestContext.UserAgent">
      <summary>Возвращает значение заголовка UserAgent из входящего веб-запроса.</summary>
      <returns>Заголовок UserAgent из входящего веб-запроса.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebResponseContext">
      <summary>Обеспечивает программный доступ к контексту входящего веб-ответа.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ContentLength">
      <summary>Возвращает заголовок Content-Length из входящего веб-ответа.</summary>
      <returns>Заголовок Content-Length входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ContentType">
      <summary>Возвращает заголовок Content-Type из входящего веб-ответа.</summary>
      <returns>Заголовок Content-Type входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.ETag">
      <summary>Возвращает заголовок Etag из входящего веб-ответа.</summary>
      <returns>Заголовок Etag входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Headers">
      <summary>Возвращает заголовки из входящего веб-ответа.</summary>
      <returns>Экземпляр <see cref="T:System.Net.WebHeaderCollection" />, содержащий заголовки из входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Location">
      <summary>Возвращает заголовок Location из входящего веб-ответа.</summary>
      <returns>Заголовок Location из входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusCode">
      <summary>Возвращает код состояния входящего веб-ответа.</summary>
      <returns>Экземпляр <see cref="T:System.Net.HttpStatusCode" />, содержащий код состояния входящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusDescription">
      <summary>Возвращает описание состояния входящего веб-ответа.</summary>
      <returns>Описание состояния входящего веб-ответа.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute">
      <summary>Поведение контракта, позволяющее задавать другое имя параметра строки запроса URL-адреса, помимо callback, заданного по умолчанию.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
      <param name="contractDescription">Описание контракта.</param>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="bindingParameters">Параметры привязки, необходимые для реализации данного поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />.</summary>
      <param name="contractDescription">Описание контракта.</param>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="clientRuntime">Среда выполнения клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />.</summary>
      <param name="contractDescription">Описание контракта.</param>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="dispatchRuntime">Среда выполнения диспетчеризации.</param>
    </member>
    <member name="P:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.UrlParameterName">
      <summary>Возвращает или задает имя параметра строки запроса URL-адреса, используемого для доступа к скриптам из других доменов или между доменами.</summary>
      <returns>Имя параметра строки запроса URL-адреса.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />.</summary>
      <param name="contractDescription">Описание контракта.</param>
      <param name="endpoint">Конечная точка службы.</param>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebRequestContext">
      <summary>Обеспечивает программный доступ к контексту исходящего веб-запроса.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Accept">
      <summary>Возвращает и задает значение заголовка Accept из исходящего веб-запроса.</summary>
      <returns>Заголовок Accept из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentLength">
      <summary>Возвращает и задает значение заголовка Content-Length содержимого исходящего веб-запроса.</summary>
      <returns>Заголовок Content-Length исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentType">
      <summary>Возвращает и задает значение заголовка Content-Type содержимого из исходящего веб-запроса.</summary>
      <returns>Заголовок Content-Type из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Headers">
      <summary>Возвращает заголовки для исходящего веб-запроса.</summary>
      <returns>Экземпляр <see cref="T:System.Net.WebHeaderCollection" />, содержащий заголовки из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfMatch">
      <summary>Возвращает и задает значение заголовка IfMatch из исходящего веб-запроса.</summary>
      <returns>Заголовок IfMatch из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfModifiedSince">
      <summary>Возвращает и задает значение заголовка IfModifiedSince из исходящего веб-запроса.</summary>
      <returns>Заголовок IfModifiedSince из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfNoneMatch">
      <summary>Возвращает и задает значение IfNoneMatch из исходящего веб-запроса.</summary>
      <returns>Заголовок IfNoneMatch из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfUnmodifiedSince">
      <summary>Возвращает и задает значение заголовка IfUnmodifiedSince из исходящего веб-запроса.</summary>
      <returns>Заголовок IfUnmodifiedSince из исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Method">
      <summary>Возвращает метод HTTP исходящего веб-запроса.</summary>
      <returns>Метод HTTP исходящего веб-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.SuppressEntityBody">
      <summary>Возвращает значение, указывающее, опускает ли  данные, которые обычно записываются в текст объекта ответа, и принудительно возвращает пустой ответ.</summary>
      <returns>Если значение true, то опускает все данные, которые обычно записываются в текст сущности ответа, и принудительно возвращает пустой ответ.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.UserAgent">
      <summary>Возвращает значение заголовка User-Agent из исходящего веб-запроса.</summary>
      <returns>Заголовок User-Agent из исходящего веб-запроса.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebResponseContext">
      <summary>Обеспечивает программный доступ к контексту исходящего веб-ответа.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.BindingWriteEncoding">
      <summary>Возвращает кодировку, заданную для привязки.</summary>
      <returns>Кодировка.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ContentLength">
      <summary>Возвращает и задает заголовок Content-Length содержимого из исходящего веб-ответа.</summary>
      <returns>Заголовок Content-Length исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ContentType">
      <summary>Возвращает и задает заголовок Content-Type содержимого из исходящего веб-ответа.</summary>
      <returns>Заголовок Content-Type исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.ETag">
      <summary>Возвращает и задает заголовок Etag содержимого из исходящего веб-ответа.</summary>
      <returns>Заголовок Etag исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Format">
      <summary>Возвращает или задает формат веб-сообщения.</summary>
      <returns>Формат веб-сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Headers">
      <summary>Возвращает заголовки из исходящего веб-ответа.</summary>
      <returns>Экземпляр <see cref="T:System.Net.WebHeaderCollection" />, содержащий заголовки из исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.LastModified">
      <summary>Возвращает и задает заголовок Last-Modified содержимого исходящего веб-ответа.</summary>
      <returns>Экземпляр <see cref="T:System.DateTime" />, содержащий время последнего изменения запрошенного ресурса.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.Location">
      <summary>Возвращает и задает заголовок Location из исходящего веб-ответа.</summary>
      <returns>Заголовок Location из исходящего веб-ответа.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Guid)">
      <summary>Устанавливает указанный ETag.</summary>
      <param name="entityTag">ETag для установки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Int32)">
      <summary>Устанавливает указанный ETag.</summary>
      <param name="entityTag">ETag для установки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.Int64)">
      <summary>Устанавливает указанный ETag.</summary>
      <param name="entityTag">ETag для установки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetETag(System.String)">
      <summary>Устанавливает указанный ETag.</summary>
      <param name="entityTag">ETag для установки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsCreated(System.Uri)">
      <summary>Задает код состояния HTTP исходящего веб-ответа <see cref="F:System.Net.HttpStatusCode.Created" /> и устанавливает заголовок Location с предоставленным URI.</summary>
      <param name="locationUri">Экземпляр <see cref="T:System.Uri" /> требуемого ресурса.</param>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsNotFound">
      <summary>Задает код состояния HTTP исходящего веб-ответа <see cref="F:System.Net.HttpStatusCode.NotFound" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.OutgoingWebResponseContext.SetStatusAsNotFound(System.String)">
      <summary>Задает код состояния HTTP исходящего веб-ответа <see cref="F:System.Net.HttpStatusCode.NotFound" /> с указанным описанием.</summary>
      <param name="description">Описание состояния.</param>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.StatusCode">
      <summary>Возвращает и задает заголовок Status исходящего веб-ответа.</summary>
      <returns>Экземпляр <see cref="T:System.Net.HttpStatusCode" />, содержащий код состояния исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.StatusDescription">
      <summary>Возвращает и задает заголовок Status-Description исходящего веб-ответа.</summary>
      <returns>Описание состояния исходящего веб-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebResponseContext.SuppressEntityBody">
      <summary>Возвращает и задает значение, указывающее, опускает ли  данные, которые обычно записываются в текст сущности ответа, и принудительно возвращает пустой ответ.</summary>
      <returns>Если значение true, то  опускает все данные, которые обычно записываются в текст сущности ответа, и принудительно возвращает пустой ответ.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebChannelFactory`1">
      <summary>Класс, обеспечивающий доступ к веб-службе  на стороне клиента.</summary>
      <typeparam name="TChannel">Тип создаваемого канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
      <param name="binding">Привязка, используемая при создании канала.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> с заданной привязкой и свойством <see cref="T:System.Uri" />.</summary>
      <param name="binding">Используемая привязка.</param>
      <param name="remoteAddress">URL вызываемой веб-службы.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
      <param name="endpoint">Конечная точка, используемая при создании канала.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
      <param name="endpointConfigurationName">Имя в файле конфигурации приложения, в котором содержатся параметры настройки канала.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> с заданной конфигурацией конечной точки и свойством <see cref="T:System.Uri" />.</summary>
      <param name="endpointConfigurationName">Имя в файле конфигурации приложения, в котором содержатся параметры настройки канала.</param>
      <param name="remoteAddress">URL вызываемой веб-службы.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
      <param name="channelType">Тип используемого канала.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> с указанным объектом <see cref="T:System.Uri" />.</summary>
      <param name="remoteAddress">URL вызываемой веб-службы.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebChannelFactory`1.OnOpening">
      <summary>Этот метод вызывается при открытии <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebFaultException">
      <summary>Представляет ошибку, с которой может быть связан код состояния HTTP. </summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Net.HttpStatusCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebFaultException" /> с указанным объектом <see cref="T:System.Net.HttpStatusCode" />.</summary>
      <param name="statusCode">Код состояния HTTP, возвращаемый вызывающему коду.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="M:System.ServiceModel.Web.WebFaultException" /> с заданными свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Потоковый контекст.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализация метода <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />, вызываемая при сериализации объекта в поток. </summary>
      <param name="info">Сведения о сериализации, к которым добавляются данные объекта при сериализации.</param>
      <param name="context">Назначение сериализованного объекта.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebFaultException.StatusCode">
      <summary>Возвращает объект <see cref="T:System.Net.HttpStatusCode" />, связанный с этой ошибкой.</summary>
      <returns>Код состояния HTTP, связанный с ошибкой.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebFaultException`1">
      <summary>Представляет ошибку, с которой может быть связан код состояния HTTP.</summary>
      <typeparam name="T">Сериализуемый тип сведений об ошибке.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> с заданными свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Потоковый контекст.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(`0,System.Net.HttpStatusCode)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> с указанными сведениями об исключении и <see cref="M:System.ServiceModel.Web.WebFaultException.#ctor(System.Net.HttpStatusCode)" /> для возвращения вызывающему.</summary>
      <param name="detail">Ошибка.</param>
      <param name="statusCode">Код состояния HTTP для указания в ответном сообщении.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.#ctor(`0,System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.Web.WebFaultException`1" /> с указанными сведениями об исключении и <see cref="P:System.ServiceModel.Web.WebFaultException`1.StatusCode" /> для возвращения вызывающему.</summary>
      <param name="detail">Ошибка.</param>
      <param name="statusCode">Код состояния HTTP для указания в ответном сообщении.</param>
      <param name="knownTypes">Набор известных типов, которые используются для сериализации и десериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebFaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализация метода <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />, вызываемая при сериализации объекта в поток.</summary>
      <param name="info">Сведения о сериализации, к которым добавляются данные объекта при сериализации.</param>
      <param name="context">Назначение сериализованного объекта.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebFaultException`1.StatusCode">
      <summary>Возвращает объект <see cref="T:System.Net.HttpStatusCode" />, связанный с этой ошибкой.</summary>
      <returns>Код состояния HTTP, связанный с ошибкой.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebGetAttribute">
      <summary>Указывает, что операция службы логически является операцией извлечения и может быть вызвана моделью программирования  REST.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Web.WebGetAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle">
      <summary>Возвращает и задает стиль текста сообщения, отправленные операции службы или операцией службы.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly" />.</summary>
      <returns>Значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly" />.</summary>
      <returns>Значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly" />.</summary>
      <returns>Значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat">
      <summary>Возвращает и задает свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat">
      <summary>Возвращает и задает свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="bindingParameters">Коллекция параметров привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="clientOperation">Операция клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="dispatchOperation">Операция для перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.UriTemplate">
      <summary>Возвращает и задает шаблон универсального идентификатора ресурса (URI) для операции службы.</summary>
      <returns>Шаблон URI для операции службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebInvokeAttribute">
      <summary>Указывает, что операция службы логически является операцией вызова и может быть вызвана моделью программирования  REST.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Web.WebGetAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle">
      <summary>Возвращает и задает стиль текста сообщения, отправленные операции службы или операцией службы.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" />.</summary>
      <returns>Значение, указывающее, явно ли задано свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" />.</summary>
      <returns>Значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly">
      <summary>Возвращает свойство <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" />.</summary>
      <returns>Значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.Method">
      <summary>Возвращает и задает метод протокола (например, HTTP), на который отвечает операция службы.</summary>
      <returns>Метод протокола, связанный с операцией.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat">
      <summary>Возвращает и задает свойство <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat">
      <summary>Возвращает и задает свойство <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="bindingParameters">Коллекция параметров привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="clientOperation">Операция клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="dispatchOperation">Операция для перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate">
      <summary>Шаблон универсального идентификатора ресурса (URI) для операции службы.</summary>
      <returns>Шаблон URI для операции службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageBodyStyle">
      <summary>Перечисление, указывающее, следует ли помещать параметр и возвращаемое значение в элемент-оболочку.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Bare">
      <summary>Запросы и ответы не помещаются в элемент-оболочку.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Wrapped">
      <summary>Запросы и ответы помещаются в элемент-оболочку.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest">
      <summary>Запросы помещаются в элемент-оболочку, ответы — нет.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedResponse">
      <summary>Ответы помещаются в элемент-оболочку, запросы — нет.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageFormat">
      <summary>Перечисление, указывающее формат веб-сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Xml">
      <summary>Формат XML.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Json">
      <summary>Формат JSON.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebOperationContext">
      <summary>Класс поддержки, предоставляющий удобный доступ к контекстным свойствам веб-запросов и откликов.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.#ctor(System.ServiceModel.OperationContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebOperationContext" /> с указанным экземпляром <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <param name="operationContext">Контекст операции.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Attach(System.ServiceModel.OperationContext)">
      <summary>Прикрепляет текущий экземпляр <see cref="T:System.ServiceModel.Web.WebOperationContext" /> к указанному экземпляру <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <param name="owner">Объект <see cref="T:System.ServiceModel.OperationContext" />, к которому добавляются данные.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Создает сообщение с указанным содержимым, отформатированное в соответствии со спецификацией Atom 1.0.</summary>
      <returns>Сообщение в формате Atom 1.0.</returns>
      <param name="document">Содержимое для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает сообщение с указанным содержимым, отформатированное в соответствии со спецификацией Atom 1.0.</summary>
      <returns>Сообщение в формате Atom 1.0.</returns>
      <param name="feed">Содержимое для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateAtom10Response(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает сообщение с указанным содержимым, отформатированное в соответствии со спецификацией Atom 1.0.</summary>
      <returns>Сообщение в формате Atom 1.0.</returns>
      <param name="item">Содержимое для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateJsonResponse``1(``0)">
      <summary>Создает сообщение, отформатированное по JSON.</summary>
      <returns>Сообщение, отформатированное по JSON.</returns>
      <param name="instance">Объект, записываемый в сообщение.</param>
      <typeparam name="T">Тип объекта, записываемого в сообщение.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateJsonResponse``1(``0,System.Runtime.Serialization.Json.DataContractJsonSerializer)">
      <summary>Создает сообщение, отформатированное по JSON.</summary>
      <returns>Сообщение, отформатированное по JSON.</returns>
      <param name="instance">Объект, записываемый в сообщение.</param>
      <param name="serializer">Используемый сериализатор.</param>
      <typeparam name="T">Тип объекта, записываемого в сообщение.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.Action{System.IO.Stream},System.String)">
      <summary>Создает сообщение, отформатированное потоком.</summary>
      <returns>Сообщение, отформатированное потоком.</returns>
      <param name="streamWriter">Модуль записи потока, содержащий данные для записи в поток.</param>
      <param name="contentType">Тип содержимого для сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.IO.Stream,System.String)">
      <summary>Создает сообщение, отформатированное потоком.</summary>
      <returns>Сообщение, отформатированное потоком.</returns>
      <param name="stream">Поток, содержащий данные для записи в поток.</param>
      <param name="contentType">Тип содержимого сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateStreamResponse(System.ServiceModel.Channels.StreamBodyWriter,System.String)">
      <summary>Создает сообщение, отформатированное потоком.</summary>
      <returns>Сообщение, отформатированное потоком.</returns>
      <param name="bodyWriter">Модуль записи потока в текст, содержащий данные для записи в сообщение.</param>
      <param name="contentType">Тип содержимого сообщения</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.Action{System.IO.TextWriter},System.String)">
      <summary>Создает сообщение, отформатированное текстом</summary>
      <returns>Сообщение, отформатированное текстом.</returns>
      <param name="textWriter">Делегат, который записывает текстовые данные.</param>
      <param name="contentType">Тип содержимого для сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.Action{System.IO.TextWriter},System.String,System.Text.Encoding)">
      <summary>Создает сообщение, отформатированное текстом</summary>
      <returns>Сообщение, отформатированное текстом.</returns>
      <param name="textWriter">Делегат, который записывает текстовые данные.</param>
      <param name="contentType">Тип содержимого сообщения.</param>
      <param name="encoding">Используемая кодировка.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String)">
      <summary>Создает ответное сообщение в текстовом формате.</summary>
      <returns>Сообщение, отформатированное текстом.</returns>
      <param name="text">Текст для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String,System.String)">
      <summary>Создает сообщение, отформатированное текстом.</summary>
      <returns>Сообщение, отформатированное текстом.</returns>
      <param name="text">Текст для записи в сообщение.</param>
      <param name="contentType">Тип содержимого сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateTextResponse(System.String,System.String,System.Text.Encoding)">
      <summary>Создает сообщение, отформатированное текстом.</summary>
      <returns>Сообщение, отформатированное текстом.</returns>
      <param name="text">Текст для записи в сообщение.</param>
      <param name="contentType">Тип содержимого сообщения.</param>
      <param name="encoding">Используемая кодировка.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse(System.Xml.Linq.XDocument)">
      <summary>Создает сообщение, отформатированное как XML.</summary>
      <returns>Сообщение, отформатированное как XML.</returns>
      <param name="document">Данные для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse(System.Xml.Linq.XElement)">
      <summary>Создает сообщение, отформатированное как XML.</summary>
      <returns>Сообщение, отформатированное как XML.</returns>
      <param name="element">Данные для записи в сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0)">
      <summary>Создает сообщение, отформатированное как XML.</summary>
      <returns>Сообщение, отформатированное как XML.</returns>
      <param name="instance">Объект, который записывается в сообщение.</param>
      <typeparam name="T">Тип объекта, записываемого в сообщение.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает сообщение, отформатированное как XML.</summary>
      <returns>Сообщение, отформатированное как XML.</returns>
      <param name="instance">Объект, записываемый в сообщение.</param>
      <param name="serializer">Используемый сериализатор.</param>
      <typeparam name="T">Тип объекта, записываемого в сообщение.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.CreateXmlResponse``1(``0,System.Xml.Serialization.XmlSerializer)">
      <summary>Создает сообщение, отформатированное как XML.</summary>
      <returns>Сообщение, отформатированное как XML.</returns>
      <param name="instance">Объект, записываемый в сообщение.</param>
      <param name="serializer">Используемый сериализатор.</param>
      <typeparam name="T">Тип объекта, записываемого в сообщение.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.Current">
      <summary>Возвращает текущий контекст веб-операции.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Web.WebOperationContext" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Detach(System.ServiceModel.OperationContext)">
      <summary>Отсоединяет текущий экземпляр <see cref="T:System.ServiceModel.Web.WebOperationContext" /> от указанного экземпляра <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <param name="owner">Объект <see cref="T:System.ServiceModel.OperationContext" />, от которого выполняется отделение.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.GetUriTemplate(System.String)">
      <summary>Возвращает шаблон URI, связанный с указанной операцией.</summary>
      <returns>Шаблон URI.</returns>
      <param name="operationName">Операция.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingRequest">
      <summary>Возвращает контекст веб-запроса для получаемого запроса.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Web.IncomingWebRequestContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingResponse">
      <summary>Возвращает контекст веб-ответа для получаемого запроса.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Web.IncomingWebResponseContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingRequest">
      <summary>Возвращает контекст веб-запроса для отправляемого запроса.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Web.OutgoingWebRequestContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingResponse">
      <summary>Возвращает контекст веб-ответа для отправляемого ответа.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Web.OutgoingWebResponseContext" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebServiceHost">
      <summary>Производный класс <see cref="T:System.ServiceModel.ServiceHost" />, дополняющий модель программирования  REST.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebServiceHost" /> с заданным экземпляром и базовым адресом одноэлементного сервера.</summary>
      <param name="singletonInstance">Экземпляр службы, используемый в качестве одноэлементного экземпляра.</param>
      <param name="baseAddresses">Базовый адрес службы.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Web.WebServiceHost" /> с заданным типом службы и базовым адресом.</summary>
      <param name="serviceType">Тип службы.</param>
      <param name="baseAddresses">Базовый адрес службы.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
      <summary>Вызывается при открытии экземпляра <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</summary>
    </member>
  </members>
</doc>