<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>ISymWrapper</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.SymbolStore.SymBinder">
      <summary>Представляет привязку символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.{dtor}">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.Finalize">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)">
      <summary>Получает интерфейс средства чтения символов для текущего файла с использованием заданных 32-разрядного целого указателя на интерфейс метаданных, имени файла и пути поиска.</summary>
      <returns>Интерфейс для чтения символов отладки.</returns>
      <param name="importer">32-разрядное целое число, которое указывает на интерфейс импорта метаданных. </param>
      <param name="filename">Имя файла, для которого требуется интерфейс средства чтения. </param>
      <param name="searchPath">Путь поиска, используемый для поиска файла символов. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)">
      <summary>Получает интерфейс средства чтения символов для текущего файла с использованием заданных указателя на интерфейс метаданных, имени файла и пути поиска.</summary>
      <returns>Интерфейс для чтения символов отладки.</returns>
      <param name="importer">Структура, которая указывает на интерфейс импорта метаданных. </param>
      <param name="filename">Имя файла, для которого требуется интерфейс средства чтения. </param>
      <param name="searchPath">Путь поиска, используемый для поиска файла символов. </param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocument">
      <summary>Представляет документ, указанный в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocument*)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymDocument" />, используя заданный указатель на неуправляемый объект ISymUnmanagedDocument.</summary>
      <param name="pDocument">Указатель на объект ISymUnmanagedDocument.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.{dtor}">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.CheckSumAlgorithmId">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Значение <see cref="T:System.NotSupportedException" /> во всех случаях.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.DocumentType">
      <summary>Получает тип текущего документа.</summary>
      <returns>Тип текущего документа.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.FindClosestLine(System.Int32)">
      <summary>Возвращает номер ближайшей строки, являющейся точкой следования, для заданной строки документа, которая может являться или не являться точкой следования.</summary>
      <returns>Номер строки точки следования, являющейся ближайшей к заданной строке.</returns>
      <param name="line">Заданная строка в документе. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetCheckSum">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Значение <see cref="T:System.NotSupportedException" /> во всех случаях.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Значение <see cref="T:System.NotSupportedException" /> во всех случаях.</returns>
      <param name="startLine">Этот параметр не используется.</param>
      <param name="startColumn">Этот параметр не используется. </param>
      <param name="endLine">Этот параметр не используется. </param>
      <param name="endColumn">Этот параметр не используется. </param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetUnmanaged">
      <summary>Получает указатель на неуправляемый интерфейс ISymUnmanagedDocument для этого экземпляра <see cref="T:System.Diagnostics.SymbolStore.SymDocument" />.</summary>
      <returns>Указатель на неуправляемый интерфейс ISymUnmanagedDocument для этого экземпляра <see cref="T:System.Diagnostics.SymbolStore.SymDocument" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.HasEmbeddedSource">
      <summary>Указывает, хранится ли источник текущего документа в хранилище символов.</summary>
      <returns>Значение true, если источник текущего документа хранится в хранилище символов; в противном случае — false.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.Language">
      <summary>Получает язык текущего документа.</summary>
      <returns>Объект <see cref="T:System.Guid" />, представляющий язык текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.LanguageVendor">
      <summary>Получает поставщика языка текущего документа.</summary>
      <returns>Объект <see cref="T:System.Guid" />, представляющий поставщика языка текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.SourceLength">
      <summary>Получает длину внедренного источника в байтах.</summary>
      <returns>Длина источника текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.URL">
      <summary>Получает URL-адрес текущего документа.</summary>
      <returns>URL-адрес текущего документа.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentWriter">
      <summary>Предоставляет методы для записи в документ, указанный в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> class. </summary>
      <param name="pDocumentWriter">Указатель на неуправляемое средство записи в документ.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.{dtor}">
      <summary>Освобождает ресурсы, используемые текущим экземпляром объекта <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged">
      <summary>Получает неуправляемое средство записи в документ для текущего экземпляра.</summary>
      <returns>Неуправляемое средство записи в документ для текущего экземпляра <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotImplementedException" />.</summary>
      <param name="algorithmId">Этот параметр не используется.</param>
      <param name="source">Этот параметр не используется.</param>
      <exception cref="T:System.NotImplementedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="source">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymMethod">
      <summary>Представляет метод в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />, используя исходный указатель на неуправляемый интерфейс. </summary>
      <param name="pMethod">Исходный указатель на неуправляемый COM-объект ISymUnmanagedMethod.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.{dtor}">
      <summary>Освобождает ресурсы, используемые текущим экземпляром объекта <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetNamespace">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает смещение на языке MSIL в методе, соответствующее заданной позиции.</summary>
      <returns>Смещение на промежуточном языке в текущем методе для указанной позиции в документе.</returns>
      <param name="document">Документ, для которого запрашивается смещение. </param>
      <param name="line">Строка документа, для которой запрашивается смещение. </param>
      <param name="column">Столбец документа, для которого запрашивается смещение. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetParameters">
      <summary>Получает параметры текущего метода.</summary>
      <returns>Массив параметров текущего метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает массив пар начального и конечного смещения, соответствующих диапазонам смещений на языке MSIL, занимаемым данной позицией в этом методе.</summary>
      <returns>Массив пар начального и конечного смещения на промежуточном языке.</returns>
      <param name="document">Документ, для которого запрашиваются диапазоны смещений на промежуточном языке. </param>
      <param name="line">Строка документа, для которой запрашиваются диапазоны смещений на промежуточном языке. </param>
      <param name="column">Столбец документа, для которого запрашиваются диапазоны смещений на промежуточном языке. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)">
      <summary>Возвращает наиболее узкую внешнюю лексическую область, соответствующую смещению в методе.</summary>
      <returns>Наиболее узкая внешняя лексическая область для заданного смещения на промежуточном языке в методе.</returns>
      <param name="offset">Искомое смещение на промежуточном языке в методе. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Получает точки следования для текущего метода и сохраняет информацию в указанных массивах.</summary>
      <param name="offsets">Массив для сохранения смещений на промежуточном языке от начала метода для точек следования. </param>
      <param name="documents">Массив для сохранения документов, в которых находятся точки следования. </param>
      <param name="lines">Массив для сохранения строк документов, в которых находятся точки следования. </param>
      <param name="columns">Массив для сохранения столбцов документов, в которых находятся точки следования. </param>
      <param name="endLines">Массив строк в документах, в которых заканчиваются точки следования. </param>
      <param name="endColumns">Массив столбцов в документах, в которых заканчиваются точки следования. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="docs">Этот параметр не используется.</param>
      <param name="lines">Этот параметр не используется. </param>
      <param name="columns">Этот параметр не используется. </param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.RootScope">
      <summary>Получает корневую лексическую область для текущего метода.Эта область заключает весь метод.</summary>
      <returns>Корневая лексическая область, которая заключает весь метод.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal">
      <summary>Получает корневую лексическую область для текущего метода.Эта область заключает весь метод.</summary>
      <returns>Корневая лексическая область, которая заключает весь метод.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.SequencePointCount">
      <summary>Получает число точек следования в методе.</summary>
      <returns>Число точек следования в методе.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.Token">
      <summary>Получает объект <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />, содержащий метаданные для текущего метода.</summary>
      <returns>токен метаданных для текущего метода.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymReader">
      <summary>Предоставляет доступ к документам, методам и переменным в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Diagnostics.SymbolStore.SymReader" />, используя заданный указатель на неуправляемый объект ISymUnmanagedReader. </summary>
      <param name="pReader">Указатель на неуправляемый объект ISymUnmanagedReader.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.{dtor}">
      <summary>Этот метод предназначен только для внутреннего использования. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Получает документ на основании заданного URL-адреса, а также, при необходимости, языка, поставщика языка и типа.</summary>
      <returns>Документ с указанным URL-адресом в хранилище символов или значение null, если документ не существует.</returns>
      <param name="url">URL-адрес, предназначенный для идентификации документа. </param>
      <param name="language">Язык документа.Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.для указания любого языка.</param>
      <param name="languageVendor">Идентификатор поставщика языка документа.Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />, чтобы указать любого поставщика языка.</param>
      <param name="documentType">Тип документа.Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />, чтобы указать любой тип документа.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments">
      <summary>Получает массив всех документов, определенных в хранилище символов.</summary>
      <returns>Массив всех документов, определенных в хранилище символов.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Получает объект метода средства чтения символов для заданного идентификатора метода.</summary>
      <returns>Объект метода средства чтения символов для заданного идентификатора метода.</returns>
      <param name="method">токен метаданных метода. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary>Получает объект метода средства чтения символов для заданных идентификатора метода и его версии в режиме "Изменить и продолжить".</summary>
      <returns>Объект метода средства чтения символов для заданного идентификатора метода и версии.</returns>
      <param name="method">токен метаданных метода. </param>
      <param name="version">Версия в режиме "Изменить и продолжить" этого метода. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает объект метода средства чтения символов, содержащий указанную позицию в документе.</summary>
      <returns>Объект метода средства чтения символов для заданной позиции в документе.</returns>
      <param name="document">Документ, в котором находится метод. </param>
      <param name="line">Позиция строки в документе.Нумерация строк начинается с 1.</param>
      <param name="column">Позиция столбца в документе.Нумерация столбцов начинается с 1.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="parent">Этот параметр не используется.</param>
      <param name="name">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="parent">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)">
      <summary>Заменяет имеющееся хранилище символов разностным хранилищем символов. </summary>
      <param name="fileName">Имя файла, содержащего хранилище символов, или значение null при хранении в памяти.</param>
      <param name="stream">Указатель на входной поток для хранилища символов или значение <see cref="F:System.IntPtr.Zero" /> при хранении на диске.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)">
      <summary>Обновляет имеющееся хранилище символов разностным хранилищем символов. </summary>
      <param name="fileName">Имя файла, содержащего хранилище символов, или значение null при хранении в памяти.</param>
      <param name="stream">Указатель на входной поток для хранилища символов или значение <see cref="F:System.IntPtr.Zero" /> при хранении на диске.</param>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint">
      <summary>Получает токен метаданных для метода, заданного в качестве точки входа пользователя для модуля (если существует).</summary>
      <returns>токен метаданных для метода, который является точкой входа пользователя для модуля.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Не найдена точка входа.</exception>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymScope">
      <summary>Представляет лексическую область в объекте <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />, обеспечивая доступ к начальному и конечному смещениям этой области, а также к ее дочерним и родительской областям.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Diagnostics.SymbolStore.SymScope" />, используя заданный указатель на неуправляемый объект ISymUnmanagedScope.</summary>
      <param name="pScope">Указатель на неуправляемый объект ISymUnmanagedScope.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.{dtor}">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.EndOffset">
      <summary>Получает конечное смещение текущей лексической области.</summary>
      <returns>Конечное смещение MSIL.Смещение считается от начала метода текущей лексической области.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetChildren">
      <summary>Получает дочерние лексические области текущей лексической области.</summary>
      <returns>Лексические области, содержащиеся в текущей лексической области.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetLocals">
      <summary>Получает локальные переменные в текущей лексической области.</summary>
      <returns>Локальные переменные в текущей лексической области.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetNamespaces">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.Method">
      <summary>Получает метод, содержащий текущую лексическую область.</summary>
      <returns>Метод, содержащий текущую лексическую область.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.Parent">
      <summary>Получает родительскую лексическую область текущей области.</summary>
      <returns>Внешняя лексическая область текущей области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.StartOffset">
      <summary>Получает начальное смещение текущей лексической области.</summary>
      <returns>Начальное смещение MSIL.Смещение считается от начала метода текущей лексической области.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymVariable">
      <summary>Представляет переменную в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Diagnostics.SymbolStore.SymVariable" />, используя заданный указатель на неуправляемый объект ISymUnmanagedVariable. </summary>
      <param name="pVariable">Указатель на неуправляемый объект ISymUnmanagedVariable.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.{dtor}">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField1">
      <summary>Получает первый адрес переменной.</summary>
      <returns>Первый адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField2">
      <summary>Получает второй адрес переменной.</summary>
      <returns>Второй адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField3">
      <summary>Получает третий адрес переменной.</summary>
      <returns>Третий адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressKind">
      <summary>Получает значение <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />, описывающее тип адреса.</summary>
      <returns>Тип адреса.Одно из значений <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
      <exception cref="T:System.ArgumentException">Неизвестный <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.Attributes">
      <summary>Получает атрибуты переменной.</summary>
      <returns>Атрибуты переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.EndOffset">
      <summary>Получает конечное смещение переменной в области этой переменной.</summary>
      <returns>Конечное смещение переменной.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymVariable" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.GetSignature">
      <summary>Получает подпись переменной.</summary>
      <returns>Подпись переменной в виде непрозрачного большого двоичного объекта.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.Name">
      <summary>Получает имя переменной.</summary>
      <returns>Имя переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.StartOffset">
      <summary>Получает начальное смещение переменной в области этой переменной.</summary>
      <returns>Начальное смещение переменной.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymWriter">
      <summary>Представляет интерфейс записи символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> с указанием, следует ли создавать основное средство записи символов.</summary>
      <param name="noUnderlyingWriter">Значение true, если основное средство записи символов будет получено с помощью вызова метода <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />; значение false, если следует создать средство записи символов по умолчанию.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.{dtor}">
      <summary>Освобождает ресурсы, используемые текущим экземпляром объекта <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Close">
      <summary>Закрывает интерфейс <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> и сохраняет символы в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod">
      <summary>Закрывает текущий метод.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace">
      <summary>Закрывает последнее пространство имен. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)">
      <summary>Закрывает текущую лексическую область.</summary>
      <param name="endOffset">Смещение на промежуточном языке после последней инструкции в области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Определяет исходный документ.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />, представляющий документ.</returns>
      <param name="url">URL-адрес, предназначенный для идентификации документа. </param>
      <param name="language">Язык документа.Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor">Идентификатор поставщика языка документа.Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">Тип документа.Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="parent">Этот параметр не используется.</param>
      <param name="name">Этот параметр не используется.</param>
      <param name="attributes">Этот параметр не используется.</param>
      <param name="signature">Этот параметр не используется.</param>
      <param name="addrKind">Этот параметр не используется.</param>
      <param name="addr1">Этот параметр не используется.</param>
      <param name="addr2">Этот параметр не используется.</param>
      <param name="addr3">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="name">Этот параметр не используется.</param>
      <param name="attributes">Этот параметр не используется.</param>
      <param name="signature">Этот параметр не используется.</param>
      <param name="addrKind">Этот параметр не используется.</param>
      <param name="addr1">Этот параметр не используется.</param>
      <param name="addr2">Этот параметр не используется.</param>
      <param name="addr3">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Определяет одну переменную в текущей лексической области.</summary>
      <param name="name">Имя локальной переменной. </param>
      <param name="attributes">Атрибуты локальной переменной, заданные с помощью перечислителя <see cref="T:System.Reflection.FieldAttributes" />. </param>
      <param name="signature">Подпись локальной переменной. </param>
      <param name="addrKind">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" /> с использованием <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />. </param>
      <param name="addr1">Первый адрес для спецификации локальной переменной. </param>
      <param name="addr2">Второй адрес для спецификации локальной переменной. </param>
      <param name="addr3">Третий адрес для спецификации локальной переменной. </param>
      <param name="startOffset">Начальное смещение для переменной.Если значение равно нулю, этот параметр не обрабатывается и переменная определяется для всей области.Если этот параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
      <param name="endOffset">Конечное смещение для переменной.Если значение равно нулю, этот параметр не обрабатывается и переменная определяется для всей области.Если этот параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="name">Этот параметр не используется.</param>
      <param name="attributes">Этот параметр не используется.</param>
      <param name="sequence">Этот параметр не используется.</param>
      <param name="addrKind">Этот параметр не используется.</param>
      <param name="addr1">Этот параметр не используется.</param>
      <param name="addr2">Этот параметр не используется.</param>
      <param name="addr3">Этот параметр не используется.</param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Определяет группу точек следования в текущем методе.</summary>
      <param name="document">Объект документа, для которого определяются точки следования. </param>
      <param name="offsets">Смещение точек следования на промежуточном языке определяются от начала метода.</param>
      <param name="lines">Номера начальных строк точек следования. </param>
      <param name="columns">Номера начальных столбцов точек следования. </param>
      <param name="endLines">Номера конечных строк точек следования. </param>
      <param name="endColumns">Номера конечных столбцов точек следования. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, прежде чем объект <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter">
      <summary>Получает основное неуправляемое средство записи символов.</summary>
      <returns>Исходный указатель на основное неуправляемое средство записи символов.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary>Задает интерфейс включения метаданных, который требуется связать с данным средством записи.</summary>
      <param name="emitter">Интерфейс включения метаданных. </param>
      <param name="filename">Имя файла, для которого записываются символы отладки.Имя файла требуется не для всех средств записи.Если имя файла задано для средства записи, которое не использует имена файлов, этот параметр не обрабатывается.</param>
      <param name="fFullBuild">Значение true указывает, что это полное перестроение; false — что это добавочная компиляция. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)">
      <summary>Инициализирует средство записи символов.Этот метод не следует вызывать непосредственно в коде, он вызывается конструктором.</summary>
      <param name="noUnderlyingWriter">Значение true, если основное средство записи символов будет получено с помощью вызова метода <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />; значение false, если следует создать средство записи символов по умолчанию.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Открывает метод для размещения символьной информации.</summary>
      <param name="method">токен метаданных для открываемого метода. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)">
      <summary>Открывает новое пространство имен.</summary>
      <param name="name">Имя нового пространства имен. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)">
      <summary>Открывает новую лексическую область для текущего метода.</summary>
      <returns>Непрозрачный идентификатор области, который можно использовать с методом <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> для определения начального и конечного смещений области в дальнейшем.В этом случае смещения, переданные методам <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> и <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" />, не обрабатываются.Идентификатор области действителен только в текущем методе.</returns>
      <param name="startOffset">Смещение на промежуточном языке в байтах от начала метода до первой инструкции в лексической области. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary>Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="startDoc">Этот параметр не используется.</param>
      <param name="startLine">Этот параметр не используется. </param>
      <param name="startColumn">Этот параметр не используется. </param>
      <param name="endDoc">Этот параметр не используется. </param>
      <param name="endLine">Этот параметр не используется.</param>
      <param name="endColumn">Этот параметр не используется. </param>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary>Определяет диапазон смещений для заданной лексической области.</summary>
      <param name="scopeID">Идентификатор лексической области, возвращаемой методом <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />.</param>
      <param name="startOffset">Смещение начала лексической области на промежуточном языке в байтах. </param>
      <param name="endOffset">Конечное смещение текущей лексической области на промежуточном языке. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary>Определяет атрибут для заданного имени и значения атрибута.</summary>
      <param name="parent">токен метаданных, для которого определяется атрибут. </param>
      <param name="name">Имя атрибута. </param>
      <param name="data">Значение атрибута. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary>Задает основной интерфейс Интерфейс ISymUnmanagedWriter (соответствующий неуправляемый интерфейс API), который используется управляемым интерфейсом <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> для генерации символов.</summary>
      <param name="underlyingWriter">Указатель типа <see cref="T:System.IntPtr" /> на код, который является основным средством записи. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Идентифицирует пользовательский метод в качестве точки входа для текущего модуля.</summary>
      <param name="entryMethod">токен метаданных для метода, который является пользовательской точкой входа. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)">
      <summary>Указывает, что в открытой лексической области используется заданное полное имя пространства имен.</summary>
      <param name="fullName">Полное имя пространства имен. </param>
    </member>
  </members>
</doc>