<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>Обеспечивает поддержку системы конфигурации для разделов конфигурации appSettings.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.AppSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>Получает или задает файл конфигурации, предоставляющий дополнительные параметры или переопределяющий параметры, указанные в элементе appSettings.</summary>
      <returns>Файл конфигурации, предоставляющий дополнительные параметры или переопределяющий параметры, указанные в элементе appSettings.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>Получает объект <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> с парами "ключ-значение", в котором содержатся параметры приложения.</summary>
      <returns>Объект <see cref="T:System.Collections.Specialized.NameValueCollection" />, содержащий параметры приложения из файла конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>Предоставляет динамическую проверку объекта.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.CallbackValidator" />.</summary>
      <param name="type">Тип объекта, подлежащего проверке.</param>
      <param name="callback">
        <see cref="T:System.Configuration.ValidatorCallback" /> используется, как делегат.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type " />null.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true если параметр type совпадает с типом, используемым в качестве первого параметра, при создании экземпляра <see cref="T:System.Configuration.CallbackValidator" />; иначе, false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>Определяет <see cref="T:System.Configuration.CallbackValidator" /> объект, используемый для проверки кода.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidatorAttribute" /> class. </summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>Возвращает или задает имя вызванного метода.</summary>
      <returns>Имя вызываемого метода.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>Возвращает или задает тип проверяющего элемента управления.</summary>
      <returns>
        <see cref="T:System.Type" /> экземпляра атрибута проверяющего элемента управления.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр проверяющего элемента управления.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
      <exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> property is null.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> один параметр свойства не установлен в режим "public static void".</exception>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>Представляет коллекцию строковых элементов, разделенных запятой.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>Добавляет строку в коллекцию, разделенную запятыми.</summary>
      <param name="value">Строковое значение.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>Добавляет все строки из строкового массива в коллекцию.</summary>
      <param name="range">Массив объектов, добавляемых в коллекцию.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>Создает копию коллекции.</summary>
      <returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>Добавляет строковый элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс коллекции, по которому добавляется новый элемент.</param>
      <param name="value">Значение нового элемента, добавляемого в коллекцию.</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>Возвращает значение, указывающее, была ли коллекция изменена. </summary>
      <returns>true, если коллекция <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> была изменена; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли объект коллекции доступным только для чтения.</summary>
      <returns>true, если указанный строковый элемент в <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> доступен только для чтения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>Возвращает или задает строковый элемент в коллекции по указанному индексу.</summary>
      <returns>Строковый элемент в коллекции.</returns>
      <param name="index">Индекс строкового элемента в коллекции.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>Удаляет строковый элемент из коллекции.</summary>
      <param name="value">Удаляемая строка.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>Устанавливает коллекцию в режим только для чтения.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>Возвращает строковое представление объекта.</summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>Преобразует строковое значение, разделенное запятыми в объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" />, и обратно.This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object.</summary>
      <returns>Объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" />, содержащий преобразованное значение.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый для преобразования типов.</param>
      <param name="data">Преобразуемое, строковое разделенное запятой значение <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object to a <see cref="T:System.String" /> object.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий преобразованный параметр <paramref name="value" />, который является <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый для преобразования типов.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>Представляет файл конфигурации, применимый к конкретному компьютеру, приложению или ресурсу.Данный класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>Возвращает раздел конфигурации из объекта <see cref="T:System.Configuration.AppSettingsSection" />, который применяется к указанному объекту <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.AppSettingsSection" />, представляющий раздел конфигурации appSettings, который применяется к данному объекту <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>Задает делегат функции, используемый для преобразования строк сборки в файлах конфигурации.</summary>
      <returns>Делегат, преобразующий строки типа.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>Возвращает раздел конфигурации из объекта <see cref="T:System.Configuration.ConnectionStringsSection" />, который применяется к указанному объекту <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект раздела конфигурации <see cref="T:System.Configuration.ConnectionStringsSection" />, представляющий раздел конфигурации connectionStrings, который применяется к данному объекту <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>Возвращает объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>Возвращает физический путь к файлу конфигурации, представленному данным объектом <see cref="T:System.Configuration.Configuration" />. </summary>
      <returns>Физический путь к файлу конфигурации, представленный данным объектом <see cref="T:System.Configuration.Configuration" />. </returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <param name="sectionName">Путь к возвращаемому разделу.</param>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
      <param name="sectionGroupName">Имя пути возвращаемого <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>Возвращает значение, указывающее, существует ли файл для ресурса, представленного данным объектом <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>true, если существует файл конфигурации; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>Возвращает расположения, определенные в данном объекте <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLocationCollection" />, содержащая расположения, определенные в данном объекте <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>Возвращает или устанавливает значение, указывающее, содержит ли файл конфигурации пространство имен XML.</summary>
      <returns>true, если файл конфигурации содержит пространство имен XML; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>Возвращает корень <see cref="T:System.Configuration.ConfigurationSectionGroup" /> для данного объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Группа корневого раздела для данного объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в текущий файл конфигурации XML.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.илиФайл конфигурации был изменен. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в текущий файл конфигурации XML.</summary>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.илиФайл конфигурации был изменен. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в текущий файл конфигурации XML.</summary>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <param name="forceSaveAll">true для сохранения, даже если конфигурация не была изменена; в противном случае — false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.илиФайл конфигурации был изменен. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.илиФайл конфигурации был изменен. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.илиФайл конфигурации был изменен. </exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" /> в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <param name="forceSaveAll">true для сохранения, даже если конфигурация не была изменена; в противном случае — false.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="filename" /> равно NULL или пустой строке ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>Возвращает коллекцию групп разделов, определенных данной конфигурацией.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> групп разделов для данного объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>Получает коллекцию разделов, определенную данным объектом <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Коллекция разделов, определенная данным объектом <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>Задает целевую версию платформы .NET Framework, если целевой версией является более ранняя по сравнению с текущей версия.</summary>
      <returns>Имя целевой версии платформы .NET Framework.Значение по умолчанию — null, указывающее, что целевой является текущая версия.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>Задает делегат функции, используемый для преобразования строк типа в файлах конфигурации. </summary>
      <returns>Делегат, преобразующий строки типа.Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>Определяет места в иерархии файла конфигурации, которые могут устанавливать или переопределять свойства, содержащиеся в объекте <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться только в файле Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config, либо на машинном уровне, в файле Web.config, находящемся в том же каталоге что и Machine.config, а не в каталоге приложения с Web.config файлами.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config, на машинном уровне, в файле Web.config, находящемся в той же папке что и Machine.config, либо в приложении более высокого уровня, в файле Web.config, находящемся в корневом виртуальном каталоге, а не в подкаталоге виртуального корневого каталога.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может быть определено везде.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>Определяет места в иерархии файла конфигурации, которые могут устанавливать или переопределять свойства, содержащиеся в объекте <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться только в файле Machine.config. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config либо в файле Exe.config в каталоге клиентского приложения.Это — значение по умолчанию.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться в файле Machine.config, в файле Exe.config в каталоге клиентского приложения или в файле User.config в каталоге роуминга пользователя. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться в файле Machine.config, в файле Exe.config в каталоге клиентского приложения, в файле User.config в каталоге роуминга пользователя или в файле User.config в каталоге локального пользователя.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>Подробно инструктирует платформу .NET Framework, как создать коллекцию элементов конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <param name="itemType">Создаваемый тип свойства коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="itemType" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>Получает или задает имя элемента конфигурации &lt;add&gt;.</summary>
      <returns>Имя, которое заменяет стандартное имя add в разделе конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>Получает или задает имя элемента конфигурации &lt;clear&gt;.</summary>
      <returns>Имя, которое заменяет стандартное имя clear в разделе конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>Получает или задает тип атрибута <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <returns>Тип атрибута <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>Возвращает тип элемента коллекции.</summary>
      <returns>Тип элемента коллекции.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>Получает или задает имя элемента конфигурации &lt;remove&gt;.</summary>
      <returns>Имя, которое заменяет стандартное имя remove в разделе конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>Базовый класс для типов преобразователя конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationConverterBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, разрешено ли преобразование.</summary>
      <returns>true, если преобразование разрешено, в противном случае — false.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="type">Тип <see cref="T:System.Type" />, из которого выполняется преобразование.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, разрешено ли преобразование.</summary>
      <returns>true, если преобразование разрешено, в противном случае — false. </returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> используется для преобразования типов.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>Представляет элемент в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElement" />. </summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>Получает ссылку на экземпляр <see cref="T:System.Configuration.Configuration" /> верхнего уровня, представляющий иерархию конфигурации, к которой относится текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Экземпляр <see cref="T:System.Configuration.Configuration" /> верхнего уровня, к которому относится текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML из файла конфигурации.</summary>
      <param name="reader">Метод <see cref="T:System.Xml.XmlReader" />, считывающий из файла конфигурации.</param>
      <param name="serializeCollectionKey">true для сериализации только свойств ключей коллекции; в противном случае — false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Считываемый элемент заблокирован.илиАтрибут текущего узла не опознан.илиСтатус блокировки текущего узла не удается определить.  </exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>Возвращает объект <see cref="T:System.Configuration.ElementInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationElement" />. </summary>
      <returns>Элемент конфигурации <see cref="T:System.Configuration.ElementInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationElementProperty" />, представляющий объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementProperty" />, представляющий объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>Сравнивает текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" /> с указанным объектом.</summary>
      <returns>Значение true, если сравниваемый объект равен текущему экземпляру <see cref="T:System.Configuration.ConfigurationElement" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="compareTo">Объект, с которым выполняется сравнение.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>Возвращает объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ContextInformation" /> для <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Текущий элемент не связан с контекстом.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>Возвращает уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>Возвращает преобразованную версию указанного имени сборки. </summary>
      <returns>Преобразованная версия имени сборки.Если доступный преобразователь отсутствует, значение параметра <paramref name="assemblyName" /> возвращается без изменений.Если доступный преобразователь отсутствует, свойство <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> имеет значение null.</returns>
      <param name="assemblyName">Имя сборки.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>Возвращает преобразованную версию указанного имени типа.</summary>
      <returns>Преобразованная версия указанного имени типа.Если доступный преобразователь отсутствует, значение параметра <paramref name="typeName" /> возвращается без изменений.Если доступный преобразователь отсутствует, свойство <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> имеет значение null.</returns>
      <param name="typeName">Имя типа.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationElement" /> в исходное состояние.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>Используется для инициализации набора значений по умолчанию для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>Указывает, был ли изменен данный элемент конфигурации с момента последнего сохранения или загрузки после реализации в производном классе.</summary>
      <returns>true, если элемент был изменен; в противном случае — false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли объект <see cref="T:System.Configuration.ConfigurationElement" /> доступным только для чтения.</summary>
      <returns>true, если объект <see cref="T:System.Configuration.ConfigurationElement" /> доступен только для чтения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>Возвращает или задает свойство или атрибут данного элемента конфигурации.</summary>
      <returns>Указанное свойство, атрибут или дочерний элемент.</returns>
      <param name="prop">Свойство, к которому осуществляется доступ. </param>
      <exception cref="T:System.Configuration.ConfigurationException">Параметр <paramref name="prop" /> равен null или не существует в элементе.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Параметр <paramref name="prop" /> только для чтения или заблокирован.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>Получает или задает свойство, атрибут или дочерний элемент данного элемента конфигурации.</summary>
      <returns>Указанное свойство, атрибут или дочерний элемент.</returns>
      <param name="propertyName">Имя свойства <see cref="T:System.Configuration.ConfigurationProperty" />, к которому осуществляется доступ.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Параметр <paramref name="prop" /> только для чтения или заблокирован.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>Добавляет ошибку "недействительное свойство" в данном объекте <see cref="T:System.Configuration.ConfigurationElement" /> и всех его дочерних элементах к переданному списку.</summary>
      <param name="errorList">Объект, реализующий интерфейс <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>Возвращает коллекцию заблокированных атрибутов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных атрибутов (свойств) элемента.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>Возвращает коллекцию заблокированных элементов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных элементов.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>Возвращает коллекцию заблокированных атрибутов. </summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных атрибутов (свойств) элемента.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>Возвращает коллекцию заблокированных элементов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных элементов.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>Возвращает или задает значение, указывающее, заблокирован ли элемент.</summary>
      <returns>true, если элемент заблокирован; в противном случае —false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент уже заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Возвращает значение, указывающее, встретился ли неизвестный атрибут при десериализации.</summary>
      <returns>true, когда неизвестный атрибут встречается при десериализации; в противном случае — false.</returns>
      <param name="name">Имя неопознанного атрибута.</param>
      <param name="value">Значение неопознанного атрибута.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Возвращает значение, указывающее, встретился ли неизвестный элемент при десериализации.</summary>
      <returns>true, когда неизвестный элемент встречается при десериализации; в противном случае — false.</returns>
      <param name="elementName">Имя неизвестного дочернего элемента.</param>
      <param name="reader">Метод <see cref="T:System.Xml.XmlReader" />, используемый для десериализации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент, идентифицируемый параметром <paramref name="elementName" />, заблокирован.илиОдин или несколько атрибутов элемента заблокированы.или<paramref name="elementName" /> неопознан, или элемент имеет неопознанный атрибут.илиЭлемент имеет логический атрибут с недопустимым значением.илиБыла предпринята попытка десериализовать свойство более одного раза.илиБыла предпринята попытка десериализовать свойство, не являющееся допустимым членом элемента.илиЭлемент не может содержать CDATA или текстовый элемент.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>Выдает исключение, если требуемое свойство не найдено.</summary>
      <returns>Отсутствует.</returns>
      <param name="name">Имя требуемого атрибута, который не был найден.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>Вызывается после десериализации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>Вызывается до десериализации.</summary>
      <param name="writer">Метод <see cref="T:System.Xml.XmlWriter" />, который будет использоваться для десериализации <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>Возвращает коллекцию свойств.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> свойств элемента.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Восстанавливает внутреннее состояние объекта <see cref="T:System.Configuration.ConfigurationElement" />, включая блокировки и коллекции свойств.</summary>
      <param name="parentElement">Родительский узел элемента конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>Восстанавливает значение метода <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> в false при реализации в производном классе.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает содержание данного элемента конфигурации в файл конфигурации при реализации в производном классе.</summary>
      <returns>true, если данные действительно были сериализованы; в противном случае — false.</returns>
      <param name="writer">Метод <see cref="T:System.Xml.XmlWriter" />, записывающий в файл конфигурации. </param>
      <param name="serializeCollectionKey">true для сериализации только свойств ключей коллекции; в противном случае — false. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Текущий атрибут заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Записывает внешние теги данного элемента конфигурации в файл конфигурации при реализации в производном классе.</summary>
      <returns>true, если запись была успешной; в противном случае — false.</returns>
      <param name="writer">Метод <see cref="T:System.Xml.XmlWriter" />, записывающий в файл конфигурации. </param>
      <param name="elementName">Имя записываемого элемента конфигурации <see cref="T:System.Configuration.ConfigurationElement" />. </param>
      <exception cref="T:System.Exception">Элемент имеет несколько дочерних элементов. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>Устанавливает свойство в заданное значение.</summary>
      <param name="prop">Свойство элемента, которое необходимо задать. </param>
      <param name="value">Значение, присваиваемое свойству.</param>
      <param name="ignoreLocks">true, если блокировки на свойство должны игнорироваться; в противном случае — false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Возникает, если элемент доступен только для чтения или <paramref name="ignoreLocks" /> равно true, но блокировки не удается игнорировать.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>Устанавливает свойство <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> для объекта <see cref="T:System.Configuration.ConfigurationElement" /> и всех подчиненных элементов.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Изменяет объект <see cref="T:System.Configuration.ConfigurationElement" />, удаляя все значения, которые не должны сохраняться. </summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенную информацию о свойствах.</param>
      <param name="parentElement">Родительский элемент <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента, или null, если это верхний уровень.</param>
      <param name="saveMode">
        <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств включать.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>Представляет элемент конфигурации, содержащий коллекцию дочерних элементов:</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationElementCollection" />. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="comparer">Используемый компаратор <see cref="T:System.Collections.IComparer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comparer" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>Возвращает или устанавливает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией добавления в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе. </summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Добавляет новый элемент конфигурации в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> для добавления. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>Добавляет элемент конфигурации в коллекцию элементов конфигурации.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> для добавления. </param>
      <param name="throwIfExists">true, чтобы выдать исключение, если указанный <see cref="T:System.Configuration.ConfigurationElement" /> уже содержится в <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — false. </param>
      <exception cref="T:System.Exception">Добавляемый <see cref="T:System.Configuration.ConfigurationElement" /> уже существует в <see cref="T:System.Configuration.ConfigurationElementCollection" /> и параметр <paramref name="throwIfExists" /> равен true. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Добавляет элемент конфигурации в коллекцию элементов конфигурации.</summary>
      <param name="index">Расположение индекса, с которого добавляется указанный <see cref="T:System.Configuration.ConfigurationElement" />. </param>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> для добавления. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>Удаляет все объекты элементов конфигурации из коллекции.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.илиЭлемент коллекции заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>Возвращает элемент конфигурации с указанным расположением индекса.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElement" /> по указанному индексу.</returns>
      <param name="index">Расположение индекса объекта <see cref="T:System.Configuration.ConfigurationElement" />, подлежащее возврату. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Значение <paramref name="index" /> меньше значения 0.илиНе существует объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>Возвращает элемент конфигурации с указанным ключом.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом; в противном случае — null.</returns>
      <param name="key">Ключ возвращаемого элемента. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>Возвращает массив ключей для всех элементов конфигурации, содержащихся в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Массив с ключами для всех объектов <see cref="T:System.Configuration.ConfigurationElement" />, содержащихся в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>Возвращает ключ объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса.</summary>
      <returns>Ключ для указанного <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="index">Расположение индекса для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Значение <paramref name="index" /> меньше значения 0.илиНе существует объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>Индекс указанного <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Индекс указанного <see cref="T:System.Configuration.ConfigurationElement" />; в противном случае — -1.</returns>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>Возвращает значение, указывающее, удален ли <see cref="T:System.Configuration.ConfigurationElement" /> из коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true, если элемент <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом был удален; в противном случае — false.Значение по умолчанию — false.</returns>
      <param name="key">Ключ проверяемого элемента.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>Удаляет класс <see cref="T:System.Configuration.ConfigurationElement" /> из коллекции.</summary>
      <param name="key">Ключ удаляемого объекта <see cref="T:System.Configuration.ConfigurationElement" />. </param>
      <exception cref="T:System.Exception">В коллекции нет объекта <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом. Элемент уже был удален или элемент не удается удалить, потому что его значение <see cref="P:System.Configuration.ConfigurationProperty.Type" /> не равно <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса.</summary>
      <param name="index">Расположение индекса удаляемого объекта <see cref="T:System.Configuration.ConfigurationElement" />. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.или<paramref name="index" /> меньше чем 0 или больше чем число объектов <see cref="T:System.Configuration.ConfigurationElement" /> в коллекции.илиОбъект <see cref="T:System.Configuration.ConfigurationElement" /> уже был удален.илиЗначение объекта <see cref="T:System.Configuration.ConfigurationElement" /> заблокировано на более высоком уровне.илиОбъект <see cref="T:System.Configuration.ConfigurationElement" /> является наследованным.илиЗначение <see cref="T:System.Configuration.ConfigurationElement" /> объекта <see cref="P:System.Configuration.ConfigurationProperty.Type" /> не равно <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> или <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>Возвращает или задает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией очистки в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе. </summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock. </exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>Возвращает тип <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> данной коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>Копирует содержимое объекта <see cref="T:System.Configuration.ConfigurationElementCollection" /> в массив.</summary>
      <param name="array">Массив, в который копируется содержимое <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>Возвращает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>При переопределении в производном классе создает новый элемент <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Новый объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>При переопределении в производном классе, создает новый элемент <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Новый объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="elementName">Имя создаваемого элемента <see cref="T:System.Configuration.ConfigurationElement" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>Возвращает имя, используемое для данной коллекции элементов в файле конфигурации после переопределения в производном классе.</summary>
      <returns>Имя коллекции; в противном случае — пустая строка.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>Возвращает или задает значение, указывающее, была ли коллекция очищена.</summary>
      <returns>true, если элемент был создан; в противном случае — false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>Сравнивает <see cref="T:System.Configuration.ConfigurationElementCollection" /> с указанным объектом.</summary>
      <returns>true, если сравниваемый объект равен текущему экземпляру <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — false.Значение по умолчанию — false.</returns>
      <param name="compareTo">Сравниваемый объект. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>При переопределении в производном классе возвращает ключ указанного элемента конфигурации.</summary>
      <returns>Объект <see cref="T:System.Object" />, используемый в качестве ключа для указанного элемент <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" />, для которого возвращается ключ. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>Возвращает метод <see cref="T:System.Collections.IEnumerator" />, используемый для итерации по <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Метод <see cref="T:System.Collections.IEnumerator" />, используемый для итерации по <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>Возвращает уникальное значение, представляющее экземпляр <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>Указывает, существует ли указанный <see cref="T:System.Configuration.ConfigurationElement" /> в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Значение true, если элемент присутствует в коллекции; в противном случае — false.Значение по умолчанию — false.</returns>
      <param name="elementName">Имя проверяемого элемента. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Возвращает значение, указывающее, можно ли удалить указанный элемент <see cref="T:System.Configuration.ConfigurationElement" /> из коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true, если указанный <see cref="T:System.Configuration.ConfigurationElement" /> можно удалить из этой коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — false.Значение по умолчанию — true.</returns>
      <param name="element">Проверяемый элемент.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>Указывает, был ли изменен <see cref="T:System.Configuration.ConfigurationElementCollection" /> с момента последнего сохранения или загрузки после переопределения в производном классе.</summary>
      <returns>true, если элемент был изменен; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> доступным только для чтения.</summary>
      <returns>true, если объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> доступен только для чтения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>true, если доступ к классу <see cref="T:System.Configuration.ConfigurationElementCollection" /> является синхронизированным (потокобезопасным), в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Приводит к тому, что система конфигурации выдает исключение.</summary>
      <returns>true, если неопознанный элемент был успешно десериализован; в противном случае — false.Значение по умолчанию — false.</returns>
      <param name="elementName">Имя неопознанного элемента. </param>
      <param name="reader">Входной поток, считывающий XML из файла конфигурации. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент, указанный в <paramref name="elementName" /> является элементом &lt;clear&gt;.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>Возвращает или задает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией удаления в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе. </summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>Сбрасывает <see cref="T:System.Configuration.ConfigurationElementCollection" /> в неизмененное состояние после переопределения в производном классе.</summary>
      <param name="parentElement">Значение <see cref="T:System.Configuration.ConfigurationElement" />, представляющее родительский элемент коллекции (если таковой имеется); в противном случае — null. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>Переустанавливает значение свойства <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> в false при переопределении в производном классе.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает данные конфигурации в XML—элемент в файле конфигурации после переопределении в производном классе.</summary>
      <returns>true, если элемент <see cref="T:System.Configuration.ConfigurationElementCollection" /> был успешно записан в файл конфигурации.</returns>
      <param name="writer">Выходной поток, записывающий XML в файл конфигурации. </param>
      <param name="serializeCollectionKey">Значение true для сериализации ключей коллекции; в противном случае — значение false. </param>
      <exception cref="T:System.ArgumentException">Один из элементов коллекции был добавлен или изменен и начинается с зарезервированного префикса config или lock. </exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>Устанавливает свойство <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> для объекта <see cref="T:System.Configuration.ConfigurationElementCollection" /> и всех подчиненных элементов.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>Возвращает объект, используемый для синхронизации доступа к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Объект, используемый для синхронизации доступа к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует коллекцию <see cref="T:System.Configuration.ConfigurationElementCollection" /> в массив.</summary>
      <param name="arr">Массив, в который копируется данная коллекция <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>Возвращает значение, указывающее выдаст ли исключение попытка добавить дубликат <see cref="T:System.Configuration.ConfigurationElement" /> к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true, если попытка добавить дубликат <see cref="T:System.Configuration.ConfigurationElement" /> к данной коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" /> приводит к вызову исключения; в противном случае — false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Отменяет эффект слияния данных конфигурации на разных уровнях иерархии конфигурации. </summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенную информацию свойств.</param>
      <param name="parentElement">Родительский объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента или null, если это верхний уровень.</param>
      <param name="saveMode">Значение перечисления <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее какие значения свойств включать.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>Указывает тип объекта <see cref="T:System.Configuration.ConfigurationElementCollectionType" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>Коллекции этого типа содержат элементы, которые применяются на том уровне, на котором они определены, и на всех дочерних уровнях.Дочерний уровень не может изменит свойства, определенные родительским элементом данного типа.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>Тип, используемый по умолчанию, — <see cref="T:System.Configuration.ConfigurationElementCollection" />.Коллекция этого типа содержит элементы, которые могут быть включены в иерархию файла конфигурации.На любом уровне такой иерархии директивы add, remove и clear используются для изменения любых унаследованных свойств и определения новых.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>То же самое, что и <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, за исключением того, что этот тип заставляет объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> сортировать свое содержимое, таким образом, что унаследованные элементы перечисляются последними.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>То же самое, что и <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, за исключением того, что этот тип заставляет объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> сортировать свое содержимое, таким образом, что унаследованные элементы перечисляются последними.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>Указывает свойство элемента конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementProperty" /> class, based on a supplied parameter.</summary>
      <param name="validator">A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> is null.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />, использовавшийся для проверки объекта <see cref="T:System.Configuration.ConfigurationElementProperty" />.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>Текущее значение не является одним из значений <see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="info">Объект, содержащий сведения о выполнении десериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.InvalidOperationException">Текущий тип не является объектом <see cref="T:System.Configuration.ConfigurationException" /> или объектом <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Исключение, которое вызвало исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Возвращает описание причины вызова данного исключения конфигурации.</summary>
      <returns>Описание причины вызова исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>Возвращает коллекцию ошибок, которые подробно описывают причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, который содержит ошибки, определяющие причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>Возвращает путь к файлу конфигурации, который привел к вызову данного исключения конфигурации.</summary>
      <returns>Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>Возвращает путь к файлу конфигурации, из которого был загружен внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</summary>
      <returns>Путь к файлу конфигурации, из которого был загружен внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключения конфигурации. </returns>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>Возвращает путь к файлу конфигурации, из которого считывался внутренний объект <see cref="T:System.Xml.XmlReader" />, в момент вызова исключения конфигурации.</summary>
      <returns>Путь к файлу конфигурации, из которого осуществлялся доступ к внутреннему объекту <see cref="T:System.Xml.XmlReader" />, в момент вызова данного исключения конфигурации.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>Возвращает номер строки в файле конфигурации, которую представлял объект <see cref="T:System.Xml.XmlNode" /> в момент вызова данного исключения конфигурации.</summary>
      <returns>Номер строки в файле конфигурации, которая содержит объект <see cref="T:System.Xml.XmlNode" />, который анализировался в момент вызова данного исключения конфигурации.</returns>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>Возвращает номер строки в файле конфигурации, которую обрабатывал внутренний объект <see cref="T:System.Xml.XmlReader" /> в момент вызова данного исключения конфигурации.</summary>
      <returns>Номер строки в файле конфигурации, к которой осуществлял доступ объект <see cref="T:System.Xml.XmlReader" /> в момент возникновения исключения.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла конфигурации или номера строки, в которых возникло данное исключение конфигурации.</summary>
      <param name="info">Объект, содержащий сведения о серийных объектах.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>Возвращает номер строки в файле конфигурации, в которой возникло данное исключение.</summary>
      <returns>Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>Возвращает расширенное описание причины вызова данного исключения конфигурации.</summary>
      <returns>Расширенное описание причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>Определяет файл конфигурации для отображения файла конфигурации машины. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationFileMap" />. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationFileMap" /> по предоставленным параметрам.</summary>
      <param name="machineConfigFilename">Имя файла конфигурации машины.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>Создает копию существующего объекта <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации машины.</summary>
      <returns>Имя файла конфигурации машины.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>Представляет собой location элемент в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Создает пример объекта Конфигурации.</summary>
      <returns>Объект конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>Возвращает относительный путь к ресурсу, параметры конфигурации которого представлены данным <see cref="T:System.Configuration.ConfigurationLocation" /> объектом.</summary>
      <returns>Относительный путь к ресурсу, параметры конфигурации которого представлены <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationLocationCollection" /> по указанному индексу.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationLocationCollection" /> по указанному индексу.</returns>
      <param name="index">Расположение индекса объекта <see cref="T:System.Configuration.ConfigurationLocationCollection" />, подлежащее возврату.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>Объект содержит коллекцию заблокированных объектов конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>Блокирует объект конфигурации, добавляя его к коллекции.</summary>
      <param name="name">Имя объекта конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Происходит, когда <paramref name="name" /> не соответствует имеющемуся объекту конфигурации в коллекции.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>Возвращает список объектов конфигурации, содержащихся в коллекции.</summary>
      <returns>Строка с разделителем-запятой, перечисляющая заблокированных объекты конфигурации в коллекцию.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>Удаляет все объекты конфигурации из коллекции.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>Проверяет, заблокирован ли указанный объект конфигурации.</summary>
      <returns>Значение true, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> содержит указанный объект конфигурации; в противном случае — false.</returns>
      <param name="name">Имя проверяемого объекта конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>Копирует целую коллекцию <see cref="T:System.Configuration.ConfigurationLockCollection" /> в совместимый одномерный массив класса <see cref="T:System.Array" />, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Одномерный массив класса <see cref="T:System.Array" />, который является целевым массивом для элементов, копируемых из коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">Индекс, отсчитываемый с нуля в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>Возвращает число блокированных объектов конфигурации, содержащихся в коллекции.</summary>
      <returns>Число блокированных объектов конфигурации, содержащихся в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>Возвращает значение, указывающее, имеет ли коллекция заблокированных объектов родительские элементы.</summary>
      <returns>true, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> имеет родительские элементы; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>Возвращает значение, указывающее, была ли коллекция изменена.</summary>
      <returns>true, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> была изменена; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>Проверяет, является ли указанный объект конфигурации доступным только для чтения.</summary>
      <returns>true, если указанный объект конфигурации в <see cref="T:System.Configuration.ConfigurationLockCollection" /> доступен только для чтения; в противном случае — false.</returns>
      <param name="name">Имя проверяемого объекта конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Указанный объект не найден в коллекции.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, синхронизирована ли коллекция.</summary>
      <returns>Значение true, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> синхронизирована; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>Удаляет объект конфигурации из коллекции.</summary>
      <param name="name">Имя объекта конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Происходит, когда <paramref name="name" /> не соответствует имеющемуся объекту конфигурации в коллекции.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>Блокирует набор объектов конфигурации согласно представленному списку.</summary>
      <param name="attributeList">Строка с разделителем-запятой.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Происходит, когда элемент в параметре <paramref name="attributeList" /> не является допустимым блокируемым атрибутом конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>Возвращает объект, используемый для синхронизации доступа к указанной коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Объект, используемый для синхронизации доступа к указанной коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует целую коллекцию <see cref="T:System.Configuration.ConfigurationLockCollection" /> в совместимый одномерный массив класса <see cref="T:System.Array" />, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Одномерный массив класса <see cref="T:System.Array" />, который является целевым массивом для элементов, копируемых из коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">Индекс, отсчитываемый с нуля в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>Предоставляет доступ к файлам конфигурации для клиентских приложений.Этот класс не может быть наследован.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>Получает данные <see cref="T:System.Configuration.AppSettingsSection" /> для конфигурации текущего приложения по умолчанию.</summary>
      <returns>Возвращает объект <see cref="T:System.Collections.Specialized.NameValueCollection" />, в который помещено содержимое объекта <see cref="T:System.Configuration.AppSettingsSection" /> для конфигурации текущего приложения по умолчанию. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось извлечь объект <see cref="T:System.Collections.Specialized.NameValueCollection" /> с данными о параметрах приложения.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>Получает данные <see cref="T:System.Configuration.ConnectionStringsSection" /> для конфигурации текущего приложения по умолчанию.</summary>
      <returns>Возвращает объект <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />, в который помещено содержимое объекта <see cref="T:System.Configuration.ConnectionStringsSection" /> для конфигурации текущего приложения по умолчанию. </returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось извлечь объект <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>Извлекает указанный раздел конфигурации для конфигурации по умолчанию текущего приложения.</summary>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> или null, если раздел не существует.</returns>
      <param name="sectionName">Путь и имя раздела конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>Открывает файл конфигурации для текущего приложения в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="userLevel">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="exePath">Путь файла конфигурации.Файл конфигурации расположен в одном каталоге с исполняемым файлом.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>Открывает файл конфигурации компьютера на текущем компьютере в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанные сопоставление файлов и уровень пользователя.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="fileMap">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</param>
      <param name="userLevel">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Открывает файл конфигурации компьютера, как объект <see cref="T:System.Configuration.Configuration" />, который использует указанное сопоставление файлов.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="fileMap">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>Обновляет именованный раздел, чтобы при следующем извлечении он повторно считывался с диска.</summary>
      <param name="sectionName">Имя раздела конфигурации, или имя пути и раздела конфигурации раздела для обновления.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>Предоставляет структуру разрешения, которая позволяет методам или классам получать доступ к файлам конфигурации. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermission" /> class. </summary>
      <param name="state">Уровень разрешения, который необходимо предоставить.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="state" /> — это ни <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, ни <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>Возвращает новый объект <see cref="T:System.Configuration.ConfigurationPermission" /> с таким же уровнем разрешения.</summary>
      <returns>Новый объект <see cref="T:System.Configuration.ConfigurationPermission" /> с таким же уровнем разрешения.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Считывает значение состояния разрешения с XML.</summary>
      <param name="securityElement">Элемент конфигурации, с которого считывается состояние разрешения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="securityElement" /> —null.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.SecurityElement.Tag" /> для данного <paramref name="securityElement" /> не является равным IPermission.</exception>
      <exception cref="T:System.ArgumentException">Атрибут class данного <paramref name="securityElement " /> равняется null.</exception>
      <exception cref="T:System.ArgumentException">Атрибут class данного <paramref name="securityElement" /> не является именем типа для <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <exception cref="T:System.ArgumentException">Атрибут version для данного <paramref name="securityElement" /> не равняется 1.</exception>
      <exception cref="T:System.ArgumentException">Атрибут unrestricted для данного <paramref name="securityElement" /> ни true, ни false.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>Возвращает логическое пересечение между объектом <see cref="T:System.Configuration.ConfigurationPermission" /> и данным объектом, который реализует интерфейс <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Логическое пересечение между объектом <see cref="T:System.Configuration.ConfigurationPermission" /> и данным объектом, который реализует <see cref="T:System.Security.IPermission" />.</returns>
      <param name="target">Объект, содержащий разрешения на выполнение пересечения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не печатается, как <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Сравнивает объект <see cref="T:System.Configuration.ConfigurationPermission" /> с объектом, реализующим интерфейс <see cref="T:System.Security.IPermission" />.</summary>
      <returns>true, если состояние разрешения является равным; в противном случае — false.</returns>
      <param name="target">Объект для сравнения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не печатается, как <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>Указывает, является ли состояние разрешения для объекта <see cref="T:System.Configuration.ConfigurationPermission" /> значением <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <returns>true, если состояние разрешения для <see cref="T:System.Configuration.ConfigurationPermission" /> является значением <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> объекта <see cref="T:System.Security.Permissions.PermissionState" />; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>Возвращает объект <see cref="T:System.Security.SecurityElement" /> со значением атрибута, основанном на текущем объекте <see cref="T:System.Configuration.ConfigurationPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> со значениями атрибута, основанными на текущем <see cref="T:System.Configuration.ConfigurationPermission" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>Возвращает логическое объединение объекта <see cref="T:System.Configuration.ConfigurationPermission" /> и объекта, реализующего интерфейс <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Логическое объединение объекта <see cref="T:System.Configuration.ConfigurationPermission" /> и объекта, реализующего <see cref="T:System.Security.IPermission" />.</returns>
      <param name="target">Объект, с которым необходимо совершить объединение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не печатается, как <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>Создает объект <see cref="T:System.Configuration.ConfigurationPermission" />, который предоставляет либо запрещает разрешения для доступа к разделам файлов конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> class.</summary>
      <param name="action">Мерой безопасности является перечисление ряда <see cref="T:System.Security.Permissions.SecurityAction" />.Определяет статус разрешения атрибута.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>Создает и возвращает объект, реализующий интерфейс <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Создает и возвращает объект, реализующий <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>Представляет атрибут или дочерний элемент элемента конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />. </summary>
      <param name="name">Имя сущности конфигурации. </param>
      <param name="type">Тип сущности конфигурации. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationProperty" />. </summary>
      <param name="name">Имя сущности конфигурации. </param>
      <param name="type">Тип сущности конфигурации. </param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationProperty" />. </summary>
      <param name="name">Имя сущности конфигурации. </param>
      <param name="type">Тип сущности конфигурации.</param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации. </param>
      <param name="typeConverter">Тип применяемого преобразователя.</param>
      <param name="validator">Используемый проверяющий элемент управления. </param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationProperty" />. </summary>
      <param name="name">Имя сущности конфигурации. </param>
      <param name="type">Тип сущности конфигурации. </param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации. </param>
      <param name="typeConverter">Тип применяемого преобразователя.</param>
      <param name="validator">Используемый проверяющий элемент управления. </param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />. </param>
      <param name="description">Описание сущности конфигурации. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.ConfigurationProperty" />. </summary>
      <param name="name">Имя сущности конфигурации. </param>
      <param name="type">Тип сущности конфигурации. </param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации. </param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>Возвращает объект <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования указанного <see cref="T:System.Configuration.ConfigurationProperty" /> в XML представление для записи в файл конфигурации.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования указанного <see cref="T:System.Configuration.ConfigurationProperty" /> в XML представление для записи в файл конфигурации.</returns>
      <exception cref="T:System.Exception">Это значение <see cref="T:System.Configuration.ConfigurationProperty" /> не удается преобразовать. </exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>Возвращает значение по умолчанию для указанного свойства <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, который может быть преобразован в тип, указанный свойством <see cref="P:System.Configuration.ConfigurationProperty.Type" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>Возвращает описание, связанное с объектом <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Значение string, описывающее свойство.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени сборки для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
      <returns>Значение true, если свойство требует преобразования имени сборки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>Возвращает значение, указывающее, является ли свойство коллекцией по умолчанию для элемента. </summary>
      <returns>true, если свойство представляет коллекцию по умолчанию элемента; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>Возвращает значение, указывающее, является ли <see cref="T:System.Configuration.ConfigurationProperty" /> ключом для содержащего объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>true, если указанный объект <see cref="T:System.Configuration.ConfigurationProperty" /> является ключом содержащим элемент; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>Возвращает значение, указывающее, требуется ли <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>true, если <see cref="T:System.Configuration.ConfigurationProperty" /> требуется; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени типа для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
      <returns>Значение true, если свойство требует преобразования имени типа; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>Указывает, запрашивается ли во время сериализации родительский раздел конфигурации свойства конфигурации, чтобы определить, нужно ли выполнять сериализацию свойства конфигурации в формат XML.</summary>
      <returns>Значение true, если нужно запрашивать родительский раздел конфигурации; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>Возвращает имя указанного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Имя <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>Возвращает тип объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип указанного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>Возвращает <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, используемый для проверки объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Проверяющий элемент управления <see cref="T:System.Configuration.ConfigurationValidatorBase" />, используемый для проверки указанного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>Описательно инструктирует платформу .NET Framework о создании экземпляра свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> class.</summary>
      <param name="name">Имя определенного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>Возвращает или задает значение по умолчанию для декорированного свойства.</summary>
      <returns>Объект, представляющий значение по умолчанию декорированного свойства элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>Возвращает или задает значение, указывающее на то, является ли данная коллекция коллекцией свойств по умолчанию для декорированного свойства конфигурации. </summary>
      <returns>true, если свойство представляет коллекцию по умолчанию элемента, в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>Возвращает или задает значение, указывающее на то, является ли данное свойство ключевым для декорированного свойства элемента.</summary>
      <returns>true, если данное свойство является ключевым для элемента коллекции, в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>Возвращает или задает значение, указывающее на то, требуется ли декорированное свойство элемента.</summary>
      <returns>true, если свойство требуется, в противном случае — false.The default is false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>Возвращает имя декорированного свойства элемента конфигурации.</summary>
      <returns>Имя декорированного свойства элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>Возвращает или задает <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> для декорированного свойства элемента конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />, связанных с данным свойством.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>Представляет коллекцию свойств элементов конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>Добавляет в коллекцию свойство конфигурации.</summary>
      <param name="property">The <see cref="T:System.Configuration.ConfigurationProperty" />  to add. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>Удаляет из коллекции все объекты свойств конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>Указывает, содержится ли свойство конфигурации в этой коллекции.</summary>
      <returns>true if the specified <see cref="T:System.Configuration.ConfigurationProperty" /> is contained in the collection; otherwise, false.</returns>
      <param name="name">Идентификатор для проверяемого свойства <see cref="T:System.Configuration.ConfigurationProperty" />. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>Копирует ConfigurationPropertyCollection в массив.</summary>
      <param name="array">Массив, в который выполняется копирование.</param>
      <param name="index">Индекс, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>Возвращает количество свойств в коллекции.</summary>
      <returns>Количество свойств в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>true if access to the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>Возвращает элемент коллекции с указанным именем.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationProperty" /> with the specified <paramref name="name" />.</returns>
      <param name="name">Возвращаемое свойство <see cref="T:System.Configuration.ConfigurationProperty" />. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>Удаляет свойство конфигурации из коллекции.</summary>
      <returns>true, если указанное свойство <see cref="T:System.Configuration.ConfigurationProperty" /> удалено; в противном случае — false.</returns>
      <param name="name">Удаляемое свойство <see cref="T:System.Configuration.ConfigurationProperty" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>Возвращает объект, используемый для синхронизации доступа к коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует данную коллекцию в массив.</summary>
      <param name="array">Массив, в который выполняется копирование.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>Задает параметры, применяемые к свойству.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>Указывает, что к свойству не применяются параметры.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>Указывает, что свойство является коллекцией по умолчанию. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>Указывает, что свойство является обязательным. </summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>Указывает, что свойство является ключом коллекции.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени типа для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени сборки для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>Указывает, запрашивается ли во время сериализации родительский раздел конфигурации свойства конфигурации, чтобы определить, нужно ли выполнять сериализацию свойства конфигурации в формат XML.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>Определяет какие свойства записаны в файл конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>Обуславливает запись в файл конфигурации только измененных свойств, даже когда значение такое же как и наследованное.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>Обуславливает запись в файл конфигурации только тех свойств, которые не являются наследованными значениями.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>Приводит к записи всех свойств в файл конфигурации.Это является самым полезным при создании информационных файлов конфигурации или перемещениях данных с одной машины на другую.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>Представляет раздел в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationSection" />. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>Считывает XML из файла конфигурации.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, считывающий информацию из файла конфигурации. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> не обнаружил ни одного элемента в файле конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>Возвращает пользовательский объект при переопределении в производном классе.</summary>
      <returns>Объект, представляющий раздел.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>Указывает, был ли изменен данный элемент конфигурации с момента последнего сохранения или загрузки после реализации в производном классе.</summary>
      <returns>true, если элемент был изменен; в противном случае — false. </returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>Восстанавливает значение метода <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> в false при реализации в производном классе.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>Возвращает объект <see cref="T:System.Configuration.SectionInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationSection" />. </summary>
      <returns>
        <see cref="T:System.Configuration.SectionInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Создает XML-строку, содержащую разъединенное представление об объекте <see cref="T:System.Configuration.ConfigurationSection" />, как об отдельном разделе, записывающемся в файл.</summary>
      <returns>XML-строка, содержащая разъединенное представление об объекте <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <param name="parentElement">Экземпляр <see cref="T:System.Configuration.ConfigurationElement" /> используется как родительский при выполнении операции разъединения.</param>
      <param name="name">Имя создаваемого раздела.</param>
      <param name="saveMode">Экземпляр <see cref="T:System.Configuration.ConfigurationSaveMode" />, используемый при записи в строку.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Определяет, нужно ли выполнять сериализацию указанного элемента во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <returns>Значение true, если свойство <paramref name="element" /> должно сериализоваться; в противном случае — значение false.</returns>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" />, для которого рассматривается возможность сериализации.</param>
      <param name="elementName">Имя объекта <see cref="T:System.Configuration.ConfigurationElement" /> в формате XML.</param>
      <param name="targetFramework">Целевая версия платформы .NET Framework.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>Определяет, нужно ли выполнять сериализацию указанного свойства во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <returns>Значение true, если свойство <paramref name="property" /> должно сериализоваться; в противном случае — значение false.</returns>
      <param name="property">Объект <see cref="T:System.Configuration.ConfigurationProperty" />, для которого рассматривается возможность сериализации.</param>
      <param name="propertyName">Имя объекта <see cref="T:System.Configuration.ConfigurationProperty" /> в формате XML.</param>
      <param name="targetFramework">Целевая версия платформы .NET Framework.</param>
      <param name="parentConfigurationElement">Родительский элемент свойства.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Определяет, нужно ли выполнять сериализацию текущего экземпляра <see cref="T:System.Configuration.ConfigurationSection" /> во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <returns>Значение true, если текущий раздел должен сериализоваться; в противном случае — значение false.</returns>
      <param name="targetFramework">Целевая версия платформы .NET Framework.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>Представляет коллекцию взаимосвязанных разделов в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConfigurationSection" /> в объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Имя добавляемого раздела.</param>
      <param name="section">Добавляемый раздел.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>Очищает объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>Копирует данный объект <see cref="T:System.Configuration.ConfigurationSectionCollection" /> в массив.</summary>
      <param name="array">Массив, в который выполняется копирование объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина <paramref name="array" /> меньше, чем <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> плюс <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Получает число разделов в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Целое число, представляющее количество разделов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />, содержащийся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> по указанному индексу.</returns>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />, содержащийся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> с указанным именем.</returns>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="name" /> равно NULL или пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>Получает перечислитель, который позволяет выполнять перебор элементов объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который позволяет выполнять перебор элементов объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>Возвращает ключ указанного объекта <see cref="T:System.Configuration.ConfigurationSection" />, содержащегося в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Ключ объекта <see cref="T:System.Configuration.ConfigurationSection" /> по указанному индексу.</returns>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConfigurationSection" />, ключ которого возвращается. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Используется системой в процессе сериализации.</summary>
      <param name="info">Подходящий объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Подходящий объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> по указанному индексу.</returns>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> с указанным именем.</returns>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Возвращает ключи всем объектам <see cref="T:System.Configuration.ConfigurationSection" />, содержащимся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, содержащий ключи всех разделов в данной коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> из данного объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Имя раздела, подлежащего удалению. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> из данного объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Удаляемый индекс раздела. </param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>Представляет группу взаимосвязанных разделов в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>Вынуждает объявить данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>Вынуждает объявить данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="force">true, если объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> должен быть прописан в файле, в противном случае — false.</param>
      <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> является корневой группой разделов.илиДанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> имеет расположение.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>Возвращает значение, которое указывает требуется ли объявление для данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </summary>
      <returns>true, если этот <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявлен, в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>Возвращает значение, которое указывает является ли объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявленным.</summary>
      <returns>true, если этот <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявлен, в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>Возвращает имя свойства данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Имя свойства данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>Возвращает имя группы разделов, связанных с <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Имя группы разделов этого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSectionGroup" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSectionGroup" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSection" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSection" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Определяет, нужно ли выполнять сериализацию текущего экземпляра <see cref="T:System.Configuration.ConfigurationSectionGroup" /> во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <returns>Значение true, если текущая группа разделов должна сериализоваться; в противном случае — значение false.</returns>
      <param name="targetFramework">Целевая версия платформы .NET Framework.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>Возвращает или задает тип для данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Тип данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> является корневой группой разделов.илиДанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> имеет расположение.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Раздел или группа уже определены на другом уровне.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> к данному объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Имя добавляемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <param name="sectionGroup">Добавляемый объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>Копирует данный <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> объект в массив.</summary>
      <param name="array">Массив, в который выполняется копирование объекта.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина <paramref name="array" /> меньше, чем <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> плюс <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Возвращает число групп разделов в коллекции.</summary>
      <returns>Целое, представляющее число групп секций в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащийся в коллекции.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> по указанному индексу.</returns>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> из коллекции.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.</returns>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="name" /> равно NULL или пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию по объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации по объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>Возвращает ключ указанного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащегося в данном объекте <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Ключ объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" /> по указанному индексу.</returns>
      <param name="index">Индекс группы раздела, ключ которой возвращается. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Используется системой в процессе сериализации.</summary>
      <param name="info">Подходящий объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Подходящий объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>Возвращает из коллекции объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным индексом.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> по указанному индексу.В C# это свойство является индексатором класса <see cref="T:System.Configuration.ConfigurationSectionCollection" />. </returns>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>Возвращает из коллекции объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.В C# это свойство является индексатором класса <see cref="T:System.Configuration.ConfigurationSectionCollection" />. </returns>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />. </param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Возвращает ключи всем объектам <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащимся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, содержащий имена всех групп разделов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, имя которого определено из данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Имя группы раздела, подлежащей удалению. </param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, индекс которого определен из данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Индекс группы раздела, подлежащей удалению. </param>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Используется, чтобы уточнить какой файл конфигурации будет присутствовать в объекте конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>Следует воспользоваться <see cref="T:System.Configuration.Configuration" />, что применимо ко всем пользователям.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>Следует воспользоваться роумингом <see cref="T:System.Configuration.Configuration" />, что применимо ко всем пользователям.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>Следует воспользоваться языковым стандартом <see cref="T:System.Configuration.Configuration" />, что применимо ко всем пользователям.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>Служит базовым классом для проверяющего элемента управления типами атрибута <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, используя указанный тип проверяющего элемента управления.</summary>
      <param name="validator">Создает экземпляр редактора <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> для работы с указанным типом.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="validator" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" /> не является производным из <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр атрибута проверяющего элемента управления.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>Возвращает тип атрибута проверяющего элемента управления.</summary>
      <returns>
        <see cref="T:System.Type" /> экземпляра атрибута проверяющего элемента управления.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>Действует как базовый класс для создания проверочного класса, служащего для проверки значения объекта. </summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Configuration.ConfigurationValidatorBase" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <returns>true, если значение параметра <paramref name="type" /> соответствует ожидаемому type, в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным. </summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>Представляет собой отдельную именованную строку подключения в разделе строк подключения файла конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
      <param name="name">Имя строки подключения.</param>
      <param name="connectionString">Строка подключения.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object.</summary>
      <param name="name">Имя строки подключения.</param>
      <param name="connectionString">Строка подключения.</param>
      <param name="providerName">Имя поставщика для использования в строке подключения.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>Возвращает или задает строку подключения.</summary>
      <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> property.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> name.</summary>
      <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> property.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>Возвращает или задает свойство имени поставщика.</summary>
      <returns>Возвращает или задает свойство <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" />.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>Возвращает строковое представление объекта.</summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> class. </summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекцию.</summary>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Configuration.ConnectionStringSettings" /> из коллекции.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>Возвращает индекс коллекции передаваемого объекта <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Индекс коллекции указанного объекта <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</returns>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>Возвращает или задает строку подключения в коллекции по указанному индексу.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> по указанному индексу.</returns>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> object with the specified name in the collection.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> с указанным именем, в противном случае — null.</returns>
      <param name="name">Имя объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
      <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
      <param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConnectionStringSettings" /> по указанному индексу в коллекции.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>Обеспечивает программный доступ к разделу строк подключения файла конфигурации. </summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConnectionStringsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>Получает коллекцию <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>Инкапсулирует информацию о контексте, связанную с объектом <see cref="T:System.Configuration.ConfigurationElement" />.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>Предоставляет объект, содержащий информацию о разделе конфигурации, основанной на указанном имени раздела.</summary>
      <returns>Объект, содержащий определенный раздел в пределах конфигурации.</returns>
      <param name="sectionName">Имя раздела конфигурации.</param>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>Возвращает контекст среды, в которой было определено свойство конфигурации.</summary>
      <returns>Объект определяет среду, в которой было определено свойство конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>Возвращает значение, определяющее было ли указано свойство конфигурации на уровне конфигурации машины.</summary>
      <returns>true, если свойство конфигурации определено на уровне конфигурации машины, в противном случае — false.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>Представляет собой основной обработчик раздела конфигурации, который выставляет XML-текст раздела конфигурации для доступа как по чтению, так и по записи.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.DefaultSection" />. </summary>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>Обеспечивает проверку объекта.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultValidator" /> class. </summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <returns>true для всех проверяемых типов. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным. </summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Предоставляет объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />, использующий защиту данных Windows API (DPAPI) для шифрования данных конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />, используя установки по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает переданный объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Расшифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
      <param name="encryptedNode">Объект <see cref="T:System.Xml.XmlNode" /> для расшифровки. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> не имеет <see cref="P:System.Xml.XmlNode.Name" />, установленный в "EncryptedData", и <see cref="T:System.Xml.XmlNodeType" />, установленный в <see cref="F:System.Xml.XmlNodeType.Element" />.- или -<paramref name="encryptedNode" /> не имеет дочернего узла с именем "CipherData" с дочерним узлом "CipherValue".- or -Дочерний узел с именем CipherData является пустым узлом.</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Зашифровывает переданный объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Зашифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" /> для шифровки. </param>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Выполняет инициализацию поставщика параметров по умолчанию.</summary>
      <param name="name">Имя используемого поставщика для объекта.</param>
      <param name="configurationValues">Коллекция значений <see cref="T:System.Collections.Specialized.NameValueCollection" />, используемая при инициализации объекта.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> содержит неопознанные установки конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>Возвращает значение, указывающее, использует ли объект <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> защиту на уровне машины или учетной записи пользователя.</summary>
      <returns>true, если <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> использует защиту на уровне машины; false, если используется защита на уровне учетной записи пользователя.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>Содержит метаинформацию об индивидуальном элементе в пределах конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>Возвращает ошибки для связанного элемента и подэлементов.</summary>
      <returns>Коллекция, содержащая ошибки для связанного элемента и подэлементов.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>Возвращает значение, указывающее, является ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>true, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> является коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />, иначе false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>Возвращает значение, определяющее, можно ли изменять связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>true, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> не может быть изменен, иначе false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>Возвращает значение, указывающее, находится ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> в файле конфигурации.</summary>
      <returns>true, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> находится в файле конфигурации, в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>Возвращает номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>Возвращает коллекцию свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Коллекция свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>Возвращает исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>Возвращает тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>Возвращает объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>Определяет сопоставление файла конфигурации для EXE-файла приложения.Данный класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ExeConfigurationFileMap" />, используя заданное имя файла конфигурации компьютера.</summary>
      <param name="machineConfigFileName">Имя файла конфигурации компьютера, включающее полный физический путь (например, c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>Создает копию существующего объекта <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>Получает или задает имя файла конфигурации.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации для локального пользователя.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации для перемещаемого пользователя.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>Управляет путем контекста для текущего приложения.This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>Возвращает текущий путь к данному приложению.</summary>
      <returns>Строка значения содержит нынешний путь.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>Возвращает объект, представляющий путь к текущему приложению.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, представляющий уровень пути к текущему приложению.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>Преобразует между строковым типом и типом перечисления. </summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.GenericEnumConverter" />.</summary>
      <param name="typeEnum">Преобразуемый тип перечисления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="typeEnum" /> — null.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в тип <see cref="T:System.Enum" />.</summary>
      <returns>Тип <see cref="T:System.Enum" />, представляющий параметр <paramref name="data" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="data" /> равно NULL или пустой строке ("").- или -<paramref name="data" /> начинается с символа цифры.- или -<paramref name="data" /> включает символы табуляции.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует тип <see cref="T:System.Enum" /> в значение <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" />, представляющий параметр <paramref name="value" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>Дает определение типа-оболочки для разделов конфигурации, которые не обрабатываются типами <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.IgnoreSection" />.</summary>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>Преобразует строку в стандартное бесконечное или целое число и обратно.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.InfiniteIntConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Int32" />.</summary>
      <returns>
        <see cref="F:System.Int32.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.Int32" />, представляющее целое значение параметра <paramref name="data" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.Int32" /> в <see cref="T:System.String" />.</summary>
      <returns>"Бесконечность" <see cref="T:System.String" />, если значение <paramref name="value" /> равно <see cref="F:System.Int32.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>Преобразует строку в стандартное бесконечное <see cref="T:System.TimeSpan" /> значение и обратно.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.InfiniteTimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее значение параметра <paramref name="data" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" /> "бесконечность", если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования объекта.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>Проводит проверку значения <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />. </summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, который указывает минимальное значение.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, который указывает максимальное значение.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />. </summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, который указывает минимальное значение.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, который указывает максимальное значение.</param>
      <param name="rangeIsExclusive">Значение true указывает, что диапазон проверки является эксклюзивным.Инклюзивность означает, что проверяемое значение должно находиться в указанном диапазоне; эксклюзивность означает, что оно должно быть ниже нижней границы или выше верхней границы.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Configuration.IntegerValidator" />. </summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, определяющий минимальную длину значения целого числа.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, определяющий максимальную длину значения целого числа.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки исключительным.</param>
      <param name="resolution">Объект <see cref="T:System.Int32" />, определяющий значение, которое необходимо подобрать.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="resolution" /> меньше значения 0.илиЗначение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true, если параметр <paramref name="type" /> содержит значение <see cref="T:System.Int32" />, в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение для оценки.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки целого числа свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.IntegerValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> property values.</summary>
      <returns>true, если значение должно быть исключено; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>Возвращает или задает максимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое максимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше, чем <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>Возвращает или задает минимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое минимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше, чем <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.KeyValueConfigurationElement" />. </summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>Добавляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> к коллекции, основанной на указанных параметрах.</summary>
      <param name="keyValue">Объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> к коллекции, основанной на указанных параметрах.</summary>
      <param name="key">Строка, определяющая ключ.</param>
      <param name="value">Строка, определяющая значение.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>Возвращает ключи всех членов коллекции <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>Массив строк.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>Удаляет коллекцию <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>Когда метод <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> перекрывается в производном классе, он создает новый объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Новый объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>При переопределении в производном классе возвращает ключ указанного элемента конфигурации.</summary>
      <returns>Значение заданного столбца в виде объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
      <param name="element">Объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />, в который должен быть скопирован данный объект.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />, созданный на базе указанных параметров.</summary>
      <returns>Элемент конфигурации или null, если ключ отсутствует в коллекции.</returns>
      <param name="key">Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />, содержащийся в коллекции.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>Возвращает коллекцию свойств конфигурации.</summary>
      <returns>Коллекция свойств конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> из коллекции.</summary>
      <param name="key">Строка, определяющая <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>Возвращает значение, показывающее приведет ли к возбуждению исключения попытка добавить дубликат объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" /> к коллекции <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>true, если попытка добавить дубликат объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" /> к коллекции <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> приведет к возбуждению исключения; в противном случае — false. </returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>Представляет элемент конфигурации, содержащий пару ключ-значение. </summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> class based on the supplied parameters.</summary>
      <param name="key">Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value">Значение объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>Возвращает объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> в исходное состояние.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>Возвращает ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>Возвращает коллекцию свойств. </summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> свойств элемента.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
      <returns>The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>Проводит проверку значения <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />. </summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения long.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения long.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />. </summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения long.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения long.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки исключительным.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />. </summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения long.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения long.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки исключительным.</param>
      <param name="resolution">Объект <see cref="T:System.Int64" />, указывающий определенное значение для соответствия.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> равно или меньше чем 0.илиЗначение <paramref name="maxValue" /> меньше значения <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true, если параметр <paramref name="type" /> содержит значение <see cref="T:System.Int64" />, в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>Детально инструктирует платформу .NET Framework проводить проверки длинного целого числа в свойстве конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.LongValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>Возвращает или задает значение, определяющее, включать или исключать целые числа в диапазоне, обозначенном при помощи значений свойств <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> и <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</summary>
      <returns>true, если значение должно быть исключено; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>Возвращает или задает максимальное значение, допустимое для свойства.</summary>
      <returns>Длинное целое число, определяющее допустимое максимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше чем <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>Возвращает или задает минимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое минимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше чем <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.NameValueConfigurationElement" />.Данный класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>Добавляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> в коллекцию.</summary>
      <param name="nameValue">Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>Возвращает ключи всех элементов, содержащихся в <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns>Массив строк.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>Очищает <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Configuration.NameValueConfigurationElement" />, созданный на базе указанных параметров.</summary>
      <returns>Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
      <param name="name">Имя элемента <see cref="T:System.Configuration.NameValueConfigurationElement" /> в коллекции.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>Удаляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> из коллекции, основанной на предоставленном параметре.</summary>
      <param name="nameValue">Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> из коллекции, основанной на предоставленном параметре.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>Элемент конфигурации, содержащий имя <see cref="T:System.String" /> и значение <see cref="T:System.String" />.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> class based on supplied parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
      <param name="value">The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>Gets the name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
      <returns>The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
      <returns>The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>Устанавливает поведение переопределения элемента конфигурации для элементов конфигурации дочерних директорий.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>Параметр конфигурации элемента или группы будет переопределен параметрами конфигурации, являющимися дочерними директориями, если явно разрешен родительским элементом текущего элемента конфигурации или группы.Разрешение на переопределение указывается атрибутом OverrideMode.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>Параметры конфигурации элемента или группы могут быть переопределены параметрами конфигурации, являющимися дочерними директориями.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>Параметры конфигурации элемента или группы не могут быть переопределены параметрами конфигурации, являющимися дочерними директориями.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>Проводит проверку объекта <see cref="T:System.TimeSpan" />.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.PositiveTimeSpanValidator" />. </summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true, если параметр <paramref name="type" /> соответствует объекту <see cref="T:System.TimeSpan" />; в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не удается разрешить с положительным значением <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>Подробно инструктирует платформу .NET Framework как проверять временные показатели свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> class. </summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />. </returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>Содержит метаинформацию об индивидуальном свойстве в пределах конфигурации.Этот тип не может быть наследован.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>Возвращает <see cref="T:System.ComponentModel.TypeConverter" /> взаимосвязанный объект в атрибут конфигурации.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>Возвращает объект, содержащий значение по умолчанию в атрибут конфигурации.</summary>
      <returns>Объект, содержащий значение по умолчанию атрибута конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>Возвращает описание объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>Описание атрибута конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>Возвращает значение, определяющее, является ли атрибут конфигурации ключом.</summary>
      <returns>true, если конфигурация атрибута является ключом; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>Возвращает значение, определяющее, является ли атрибут конфигурации заблокированным.</summary>
      <returns>true, если <see cref="T:System.Configuration.PropertyInformation" />, объект заблокирован, в противном случае —false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>Возвращает значение, определяющее изменялся ли атрибут конфигурации.</summary>
      <returns>true, если <see cref="T:System.Configuration.PropertyInformation" /> объект изменялся; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>Возвращает значение определяющее является ли атрибут конфигурации востребованным.</summary>
      <returns>true, если <see cref="T:System.Configuration.PropertyInformation" />, объект востребован, в противном случае —false.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>Возвращает номер строки в файл конфигурации взаимосвязанный с атрибутом конфигурации.</summary>
      <returns>Номер строки в файле конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>Возвращает имя объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>Возвращает файл ресурсов, который соответствует атрибуту конфигурации.</summary>
      <returns>Файл ресурсов <see cref="T:System.Configuration.PropertyInformation" /> объекта.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>Возвращает <see cref="T:System.Type" /> объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>
        <see cref="T:System.Type" /> объекта <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>Возвращает <see cref="T:System.Configuration.ConfigurationValidatorBase" /> объект, взаимосвязанный с атрибутом конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>Возвращает или задает объект, содержащий значение взаимосвязанное с атрибутом конфигурации.</summary>
      <returns>Объект, содержащий значение <see cref="T:System.Configuration.PropertyInformation" /> объекта.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>Возвращает <see cref="T:System.Configuration.PropertyValueOrigin" /> объект, взаимосвязанный с атрибутом конфигурации. </summary>
      <returns>Объект <see cref="T:System.Configuration.PropertyValueOrigin" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.PropertyInformation" />.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>Копирует целую коллекцию <see cref="T:System.Configuration.PropertyInformationCollection" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является целевым массивом для элементов, копируемых из коллекции <see cref="T:System.Configuration.PropertyInformationCollection" />.Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Array.Length" /> свойства <paramref name="array" /> меньше <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> +<paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>Получает объект <see cref="T:System.Collections.IEnumerator" />, используемый для перебора элементов данной коллекции <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, используемый для выполнения итерации по <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации <see cref="T:System.Configuration.PropertyInformationCollection" /> экземпляра.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации <see cref="T:System.Configuration.PropertyInformationCollection" /> экземпляра.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, который содержит источник и назначение сериализованного потока, связанного с экземпляром <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.PropertyInformation" /> в коллекцию на основе данных имени параметра.</summary>
      <returns>Объект <see cref="T:System.Configuration.PropertyInformation" />.</returns>
      <param name="propertyName">Имя атрибута конфигурации находится в <see cref="T:System.Configuration.PropertyInformationCollection" />.Объект.</param>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>Определяет уровень иерархии спецификации, на котором возникают значения свойств конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>Значение свойства конфигурации возникает из свойства<see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>Значение свойства конфигурации наследуется из родительского уровня в конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>Значение свойства конфигурации определяется на текущем уровне иерархии.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>Обеспечивает доступ к защищенной конфигурации поставщиков для файла конфигурации текущего приложения. </summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>Имя поставщика защищенных данных.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>Возвращает по умолчанию имя поставщика защищенной конфигурации.</summary>
      <returns>имя по умолчанию поставщика защищенной конфигурация.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>Имя поставщика раздела защищенных данных.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>Возвращает коллекцию установленных защищенных поставщиков.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> установленных <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> объектов.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>Имя поставщика RSA.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>Базовый класс для создания поставщиков для шифрования и дешифрования данных с защищенной конфигурацией.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> class using default settings.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает объект <see cref="T:System.Xml.XmlNode" /> переданный из файла конфигурации.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий расшифрованные данные.</returns>
      <param name="encryptedNode">Объект <see cref="T:System.Xml.XmlNode" /> для расшифровки.</param>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Шифрует объект <see cref="T:System.Xml.XmlNode" />, переданный из файла конфигурации.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий шифрованные данные.</returns>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" /> для шифровки.</param>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" />, используя параметры по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to the collection.</summary>
      <param name="provider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="provider" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> не является объектом <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add already exists in the collection.- или -Коллекция доступна только для чтения.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>Возвращает объект в коллекцию <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> с указанным именем.</summary>
      <returns>The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object with the specified name, or null if there is no object with that name.</returns>
      <param name="name">The name of a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the collection.</param>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>Обеспечивает программный доступ к разделу конфигурации объекта configProtectedData.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ProtectedConfigurationSection" />, используя установки по умолчанию.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>Возвращает или задает имя по умолчанию объекта <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> в свойстве коллекции объекта <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> по умолчанию в свойстве коллекции объекта <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />. </returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Configuration.ProviderSettingsCollection" /> всех объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> из всех участвующих файлов конфигурации.</summary>
      <returns>Коллекция объектов <see cref="T:System.Configuration.ProviderSettingsCollection" /> из всех объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> из всех участвующих файлов конфигурации. </returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>Представляет группу элементов конфигурации, которые настраивают поставщиков для области конфигурации &lt;configProtectedData&gt;.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ProtectedProviderSettings" />. </summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>Возвращает коллекцию <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, представляющую свойства поставщиков для защищенных данных конфигурации.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, представляющая свойства поставщиков для защищенных данных конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Configuration.ProviderSettings" />, представляющих свойства поставщиков для защищенных данных конфигурации.</summary>
      <returns>Коллекция объектов <see cref="T:System.Configuration.ProviderSettings" /> , представляющая свойства поставщиков для защищенных данных конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>Представляет элементы конфигурации, связанные с поставщиком.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ProviderSettings" />. </summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ProviderSettings" />. </summary>
      <param name="name">Имя поставщика, для которого необходимо сконфигурировать параметры.</param>
      <param name="type">Тип поставщика, для которого необходимо сконфигурировать параметры.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>Возвращает или устанавливает имя поставщика, сконфигурированного данным классом.</summary>
      <returns>Имя поставщика.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>Возвращает коллекцию пользовательских параметров для поставщика.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> параметров для поставщика.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>Возвращает или устанавливает тип поставщика, сконфигурированного данным классом.</summary>
      <returns>Полное пространство имен и имя класса для типа поставщика, сконфигурированного данным экземпляром <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProviderSettingsCollection" />. </summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекцию.</summary>
      <param name="provider">Объект <see cref="T:System.Configuration.ProviderSettings" /> для добавления.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>Получает или задает значение в коллекции <see cref="T:System.Configuration.ProviderSettingsCollection" /> по указанному индексу.</summary>
      <returns>Указанный объект <see cref="T:System.Configuration.ProviderSettings" />.</returns>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ProviderSettings" />.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>Получает элемент из коллекции. </summary>
      <returns>Объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекции.</returns>
      <param name="key">Строковая ссылка на объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекции.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>Удаляет элемент из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Configuration.ProviderSettings" />.</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>Обеспечивает проверку строки в соответствии с правилами, предусмотренными регулярным выражением.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.RegexStringValidator" />. </summary>
      <param name="regex">Строка, определяющая регулярное выражение.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="regex" /> равно NULL или пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true, если параметр <paramref name="type" /> соответствует строке, в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не соответствует параметрам класса <see cref="T:System.Text.RegularExpressions.Regex" />.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки строки на наличие свойства конфигурации, используя регулярное выражение.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра объекта <see cref="T:System.Configuration.RegexStringValidatorAttribute" />.</summary>
      <param name="regex">Строка для использования при проверке регулярного выражения.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>Возвращает строку, используемую для выполнения проверки регулярного выражения.</summary>
      <returns>Описательно инструктирует регулярное выражение, используемое для фильтрации строки, присвоенной декорированному свойству элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>Предоставляет экземпляр <see cref="T:System.Configuration.ProtectedConfigurationProvider" />, используемый шифрование RSA для зашифровки и дешифровки данных конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" />. </summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>Добавляет ключ к контейнеру ключа RSA.</summary>
      <param name="keySize">Размер добавляемого ключа.</param>
      <param name="exportable">true указывает, что ключ может быть экспортирован, в противном случае — false.</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Возвращает имя Windows cryptography API (шифрования API) поставщика службы криптографии (CSP).</summary>
      <returns>Имя поставщика службы шифрования CryptoAPI.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает переданный узел XML.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий расшифрованные данные.</returns>
      <param name="encryptedNode">
        <see cref="T:System.Xml.XmlNode" /> подлежит расшифровке.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>Удаляет ключ с контейнера ключа RSA.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Зашифровывает переданный узел XML.</summary>
      <returns>Зашифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> подлежит шифрованию.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>Экспортирует ключ RSA из контейнера ключа.</summary>
      <param name="xmlFileName">Имя файла и путь, в которые экспортируется файл.</param>
      <param name="includePrivateParameters">true указывает, что личные параметры экспортированы, в противном случае — false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> — null. </exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой.Например, для платформ на основе Windows длина пути не должна превышать 248 символов, а имена файлов не должны содержать более 260 символов.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску. </exception>
      <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка. </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> указывает файл, разрешенный только для чтения.-или- Эта операция не поддерживается на текущей платформе.-или- <paramref name="path" /> определяет каталог.-или- Вызывающий оператор не имеет необходимого разрешения. </exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный в <paramref name="path" />, не найден. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> имеет недопустимый формат. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>Импортирует ключ RSA в ключ контейнера.</summary>
      <param name="xmlFileName">Имя файла и путь, в которые импортируется файл.</param>
      <param name="exportable">true указывает, что ключ может быть экспортирован, в противном случае — false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> — null.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой.Например, для платформ на основе Windows длина пути не должна превышать 248 символов, а имена файлов не должны содержать более 260 символов.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску. </exception>
      <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка. </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> указывает файл, разрешенный только для записи.- или - Эта операция не поддерживается на текущей платформе.-или- <paramref name="path" /> определяет каталог.-или- Вызывающий оператор не имеет необходимого разрешения. </exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный в <paramref name="path" />, не найден. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> имеет недопустимый формат. </exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Выполняет инициализацию поставщика параметров по умолчанию.</summary>
      <param name="name">Имя используемого поставщика для объекта.</param>
      <param name="configurationValues">Коллекция значений <see cref="T:System.Collections.Specialized.NameValueCollection" />, используемая при инициализации объекта.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> включает один или более нераспознанных значений.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>Возвращает имя контейнера ключа.</summary>
      <returns>Имя контейнера ключа.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>Возвращает открытый ключ, использованный поставщиком.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.RSAParameters" /> содержит открытый ключ, используемый поставщиком.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>Возвращает значение, указывающее на то, использует ли объект <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> контейнер ключа машины.</summary>
      <returns>true, если объект <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> использует контейнер ключа машины, в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>Возвращает значение, которое указывает на то, использует ли поставщик данные обмена ключа Optimal Asymmetric Encryption Padding (OAEP).</summary>
      <returns>true if the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, false.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>Содержит метаданные об отдельном разделе в пределах иерархии конфигурации.Данный класс не может наследоваться.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>Получает или задает значение, указывающее, где в иерархии файла конфигурации можно определить связанный раздел конфигурации. </summary>
      <returns>Значение, указывающее, где в иерархии файла конфигурации можно объявить связанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>Получает или задает значение, указывающее, где в иерархии файла конфигурации можно объявить связанный раздел конфигурации.</summary>
      <returns>Значение, указывающее, где в иерархии файла конфигурации можно объявить связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> для EXE-файлов.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>Получает или задает значение, указывающее, допускает ли раздел конфигурации атрибут location.</summary>
      <returns>Значение true, если атрибут location допускается; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>Получает или задает значение, указывающее, может ли связанный раздел конфигурации быть переопределен файлами конфигурации более низкого уровня.</summary>
      <returns>Значение true, если раздел может быть переопределен; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>Получает или задает имя включаемого файла, в котором определен связанный раздел конфигурации, если такой файл существует.</summary>
      <returns>Имя включаемого файла, в котором определен связанный раздел <see cref="T:System.Configuration.ConfigurationSection" />, если такой файл существует; в противном случае — пустая строка ("").</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>Принудительно записывает связанный раздел конфигурации в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>Принудительно записывает связанный раздел конфигурации в файле конфигурации или удаляет существующий раздел из файла конфигурации.</summary>
      <param name="force">Значение true, если связанный раздел должен быть записан в файле конфигурации; в противном случае — значение false.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> это true и связанный раздел не может быть перенесен в дочерний файл конфигурации или он не была задекларирован.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>Получает или задает значение, указывающее, будет ли сохраняться связанный раздел конфигурации, даже если он не был изменен.</summary>
      <returns>Значение true, если связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> будет сохраняться, даже если он не был изменен; в противном случае — значение false.Значение по умолчанию — false.ПримечаниеЕсли файл конфигурации сохраняется (даже при отсутствии внесенных изменений), ASP.NET перезапускает приложение.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>Получает раздел конфигурации, содержащий раздел конфигурации, связанный с данным объектом.</summary>
      <returns>Раздел конфигурации, содержащий объект <see cref="T:System.Configuration.ConfigurationSection" />, связанный с объектом <see cref="T:System.Configuration.SectionInformation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный метод вызывается из родительского раздела.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>Возвращает объект узла XML, который представляет связанный объект раздела конфигурации.</summary>
      <returns>Представление XML для данного раздела конфигурации.</returns>
      <exception cref="T:System.InvalidOperationException">Данный объект конфигурации закрыт и не может быть отредактирован.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>Получает или задает значение, указывающее, наследуют ли приложения, находящиеся в подкаталоге соответствующего приложения, параметры, установленные в связанном разделе конфигурации.</summary>
      <returns>Значение true, если параметры, установленные в данном объекте <see cref="T:System.Configuration.ConfigurationSection" />, наследуются дочерними приложениями; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>Получает значение, указывающее, должен ли раздел конфигурации быть объявлен в файле конфигурации.</summary>
      <returns>Значение true, если связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> должен быть объявлен в файле конфигурации; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>Получает значение, указывающее, объявлен ли раздел конфигурации в файле конфигурации.</summary>
      <returns>Значение true, если данный объект <see cref="T:System.Configuration.ConfigurationSection" /> объявлен в файле конфигурации; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>Получает значение, указывающее, заблокирован ли связанный раздел конфигурации.</summary>
      <returns>Значение true, если раздел заблокирован; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>Получает значение, указывающее, защищен ли связанный раздел конфигурации.</summary>
      <returns>Значение true, если данный объект <see cref="T:System.Configuration.ConfigurationSection" /> защищен; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>Получает имя связанного раздела конфигурации.</summary>
      <returns>Полное имя раздела конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>Получает или задает значение перечисления <see cref="T:System.Configuration.OverrideMode" />, указывающее, может ли связанный раздел конфигурации быть переопределен дочерними файлами конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Была сделана попытка изменить свойство <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> и <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, которые не поддерживается по причине несовместимости. </exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>Получает или задает значение, указывающее поведение по умолчанию переопределения раздела конфигурации дочерними файлами конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Преобразованное поведение указано в родительском разделе конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>Получает поведение переопределения раздела конфигурации, которое зависит от того, могут ли дочерние файлы конфигурации блокировать раздел конфигурации. </summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>Получает защищенный поставщик конфигурации для связанного раздела конфигурации.</summary>
      <returns>Защищенный поставщик конфигурации для данного объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>Отмечает раздел конфигурации для защиты. </summary>
      <param name="protectionProvider">Имя используемого поставщика защиты.</param>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> имеет значение false.—либо—Целевой раздел уже является разделом защищенных данных.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>Получает значение, указывающее, требует ли связанный раздел конфигурации прав доступа.</summary>
      <returns>Значение true, если атрибут requirePermission имеет значение true; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>Получает или задает значение, указывающее, требует ли изменение во внешнем включаемом файле конфигурации перезапуска приложения.</summary>
      <returns>Значение true, если изменение во внешнем включаемом файле конфигурации требует перезапуска приложения; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>Заставляет связанный раздел конфигурации наследовать все значения из родительского раздела.</summary>
      <exception cref="T:System.InvalidOperationException">Данный метод невозможно вызвать вне режима редактирования.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>Получает имя связанного раздела конфигурации.</summary>
      <returns>Имя связанного объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>Присваивает объекту XML-представление связанного раздела конфигурации в пределах файла конфигурации.</summary>
      <param name="rawXml">Используемый XML-код.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>Получает или задает имя класса раздела.</summary>
      <returns>Имя класса, связанного с данным разделом <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <exception cref="T:System.ArgumentException">Выбранное значение равно null или пустая строка ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>Снимает шифрование защищенной конфигурации со связанного раздела конфигурации.</summary>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>Выполняет проверку строки.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
      <param name="maxLength">Целое число, определяющее максимальную длину значения строки.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.StringValidator" /> по предоставленным параметрам.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
      <param name="maxLength">Целое число, определяющее максимальную длину значения строки.</param>
      <param name="invalidCharacters">Строка, отображающая недопустимые символы. </param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <returns>true, если параметр <paramref name="type" /> соответствует строке, в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным. </summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> меньше чем <paramref name="minValue" /> или больше чем <paramref name="maxValue" />, как определено в конструкторе.- или -<paramref name="value" /> содержит недопустимые символы.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки строки на наличие свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.StringValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>Возвращает или задает недопустимые символы для свойства.</summary>
      <returns>Строка, содержащая набор символов, недопустимых для данного свойства.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>Возвращает или задает максимально допустимую длину для строки, присвоенной свойству.</summary>
      <returns>Целое число, указывающее максимально допустимую длину для строки, присвоенной свойству.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>Возвращает или задает минимально допустимое значение для строки, присвоенной свойству.</summary>
      <returns>Целое число, указывающее минимально допустимую длину для строки, присвоенной свойству.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.StringValidator" /> class.</summary>
      <returns>Текущие параметры <see cref="T:System.Configuration.StringValidator" /> в экземпляре проверяющего элемента управления <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>Проверяет, является ли объект производным классом указанного типа.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.SubclassTypeValidator" />. </summary>
      <param name="baseClass">Проверяемый базовый класс от противного.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" /> is null.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <returns>true, если параметр <paramref name="type" /> совпадает с проверяемым типом, иначе, false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным. </summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="value" /> не является типом <see cref="T:System.Type" />, который может быть производным от класса <paramref name="baseClass" />, как определено в конструкторе.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> class. </summary>
      <param name="baseClass">Тип базового класса.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>Возвращает базовый тип утверждаемого объекта.</summary>
      <returns>Базовый тип утверждаемого объекта.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр атрибута проверяющего элемента управления.</summary>
      <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>Преобразует временной интервал, выраженный в минутах. </summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий параметр <paramref name="data" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />. </summary>
      <returns>Объект <see cref="T:System.String" />, представляющий параметр <paramref name="value" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>Преобразует <see cref="T:System.TimeSpan" />, выраженный в минутах или как стандартный бесконечный временной диапазон.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее значение параметра <paramref name="data" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" /> "бесконечность", если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>Преобразует временной интервал, выраженный в секундах. </summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий параметр <paramref name="data" /> в секундах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> не удается анализировать как целое число.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет параметр <paramref name="value" /> в минутах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>Преобразует <see cref="T:System.TimeSpan" />, выраженный в секундах или как стандартный бесконечный временной диапазон.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> class.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее параметр <paramref name="data" /> в секундах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> to a.<see cref="T:System.String" />.</summary>
      <returns>"Бесконечность" <see cref="T:System.String" />, если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" /> представляющее параметр <paramref name="value" /> в секундах.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>Проводит проверку объекта <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки исключительным.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки исключительным.</param>
      <param name="resolutionInSeconds">Значение <see cref="T:System.Int64" />, указывающее количество секунд. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="resolutionInSeconds" /> меньше значения 0.илиЗначение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>true, если параметр <paramref name="type" /> соответствует значению <see cref="T:System.TimeSpan" />; в противном случае — false. </returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>Подробно инструктирует платформу .NET Framework как проверять временные показатели свойства конфигурации.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> class.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>Возвращает или задает значение, определяющее, включать или исключать целые числа в диапазон, обозначенный <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> и <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns>true, если значение должно быть исключено; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>Возвращает абсолютное максимальное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Максимальное допустимое значение <see cref="T:System.TimeSpan" />. </returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>Возвращает или задает максимальное относительное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Максимальное допустимое значение <see cref="T:System.TimeSpan" />. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше чем <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>Возвращает абсолютное минимальное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Минимальное допустимое значение <see cref="T:System.TimeSpan" />. </returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>Возвращает или задает минимальное относительное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Минимальное допустимое значение <see cref="T:System.TimeSpan" />. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше чем <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>Возвращает абсолютное максимальное разрешенное значение.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>Возвращает абсолютное минимальное разрешенное значение.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Gets an instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />. </returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>Преобразует тип в строковое значение и обратно.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса<see cref="T:System.Configuration.TypeNameConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Type" /> object.</summary>
      <returns>
        <see cref="T:System.Type" />, представляющий параметр <paramref name="data" />.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentException">Значение <see cref="T:System.Type" /> не удается разрешить.</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Type" /> object to a <see cref="T:System.String" /> object.</summary>
      <returns>
        <see cref="T:System.String" />, представляющий параметр <paramref name="value" />. </returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>Указывает метод, вызываемый после проверки подлинности объекта.</summary>
      <param name="value">Метод обратного вызова.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>Преобразует строку в канонический формат. </summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в каноническую форму.</summary>
      <returns>Объект, представляющий значение для преобразования.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.String" /> в каноническую форму.</summary>
      <returns>Объект, представляющий значение для преобразования.</returns>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Конечное значение преобразования.</param>
      <param name="type">Конечный тип преобразования.</param>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>Делегирует всех членов интерфейса <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> в другой экземпляр узла.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Создает новый контекст конфигурации.</summary>
      <returns>
        <see cref="T:System.Object" /> представляющее новый контекст конфигурации.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Создает устаревший контекст конфигурации.</summary>
      <returns>
        <see cref="T:System.Object" /> представляющее устаревший контекст конфигурации.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Расшифровывает и зашифровывает раздел конфигурации.</summary>
      <returns>Строка, представляющая расшифрованный раздел конфигурации.</returns>
      <param name="encryptedXml">Зашифрованный раздел файла конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>Удаляет объект <see cref="T:System.IO.Stream" />, выполняющий операции ввода-вывода при работе с файлом конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Зашифровывает раздел объекта конфигурации.</summary>
      <returns>Строка, представляющая зашифрованный раздел объекта конфигурации.</returns>
      <param name="clearTextXml">Незашифрованный раздел конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Возвращает путь конфигурации на основании вложенного пути расположения.</summary>
      <returns>Строка, представляющая путь конфигурации.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Type" />, представляющее тип конфигурации.</summary>
      <returns>
        <see cref="T:System.Type" />, представляющее тип конфигурации.</returns>
      <param name="typeName">Строка, представляющая тип конфигурации.</param>
      <param name="throwOnError">true если при возникновении ошибки должно создаваться исключение; false если при возникновении ошибки исключение не должно создаваться.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>Возвращает строку, представляющую имя типа объекта конфигурации.</summary>
      <returns>Строка, представляющая имя типа объекта конфигурации.</returns>
      <param name="t">Объект <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Устанавливает набор определенных разрешений в пределах объекта узла (если возможно).</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">A <see cref="T:System.Security.PermissionSet" /> object.</param>
      <param name="isHostReady">true, если узел закончил инициализацию; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с источником конфигурации.</summary>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с источником конфигурации.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="configSource">Строка, представляющая источник конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>Возвращает объект <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, представляющий версию объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <returns>Объект <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, представляющий версию объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>Gets or sets the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</summary>
      <returns>A <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>Указывает узлу олицетворить и возвратить объект <see cref="T:System.IDisposable" />, требуемый платформой .NET Framework.</summary>
      <returns>An <see cref="T:System.IDisposable" /> value.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел конфигурации.</summary>
      <param name="configRoot">An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
      <param name="hostInitParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел для конфигурации.</summary>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения (переданный по ссылке).</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationConfigPath">Расположение пути конфигурации.</param>
      <param name="configRoot">Корневой элемент конфигурации.</param>
      <param name="hostInitConfigurationParams">Объект параметра, представляющий параметры, используемые для инициализации узла.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>Возвращает значение, определяющее, будет ли конфигурация выше конфигурации приложения в иерархии конфигурации.</summary>
      <returns>true если конфигурация выше конфигурации приложения в иерархии конфигурации; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Возвращает значение, определяющее, требуется ли запись конфигурации для инициализации конфигурации узла.</summary>
      <returns>true если запись конфигурации требуется для инициализации конфигурации узла; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Ограничивает или разрешает определения в конфигурации узла. </summary>
      <returns>true если разрешение или ограничение определений в конфигурации узла выполнены успешно; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="allowDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, действительным.</summary>
      <returns>true если путь, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, является действительным; в противном случае — false.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли раздел конфигурации требовать уровень полностью достоверного управления доступом для кода и не разрешать атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию.</summary>
      <returns>true если раздел конфигурации требует уровень полностью достоверного управления доступом для кода и не разрешает атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию; в противном случае — false.</returns>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли инициализация объекта конфигурации считаться отсроченной.</summary>
      <returns>true если инициализация объекта конфигурации считаться отсроченной; в противном случае — false.</returns>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>Возвращает значение, определяющее, будет ли объект конфигурации поддерживать теги расположения.</summary>
      <returns>true если объект конфигурации поддерживает теги расположения; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>Возвращает значение, определяющее, является ли конфигурация удаленной.</summary>
      <returns>true если конфигурация удаленная; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое.</summary>
      <returns>true если путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое, в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Возвращает значение, определяющее, будет ли путь конфигурации доверенным.</summary>
      <returns>true если путь конфигурации доверенный; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <returns>Возвращает объект <see cref="T:System.IO.Stream" /> определенный <paramref name="streamName" />.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <returns>Возвращает объект <see cref="T:System.IO.Stream" /> определенный <paramref name="streamName" />.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации или записи во временный файл, используемый для построения файла конфигурации.Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <returns>Объект <see cref="T:System.IO.Stream" />.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя объекта <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта (переданный по ссылке) <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации.Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <returns>Возвращает объект <see cref="T:System.IO.Stream" />, определенный параметром <paramref name="streamName" />.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя объекта <see cref="T:System.IO.Stream" />,из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации (переданный по ссылке).</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Возвращает значение, определяющее, может ли весь файл конфигурации быть прочитан определяемым объектом <see cref="T:System.IO.Stream" />.</summary>
      <returns>true если весь файл конфигурации может быть прочитан объектом <see cref="T:System.IO.Stream" /> определенным <paramref name="streamName" />; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> для чтения определенного раздела связанного с ним файла конфигурации.</summary>
      <returns>true если раздел файла конфигурации определенный <paramref name="sectionGroupName" /> и параметры <paramref name="sectionName" /> могут быть прочитаны объектом <see cref="T:System.IO.Stream" />; в противном случае — false.</returns>
      <param name="sectionGroupName">Строка, представляющая имя группы раздела в файле конфигурации.</param>
      <param name="sectionName">Строка, представляющая имя раздела в файле конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Указывает, что запись новой конфигурации требует полную инициализацию.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает узлу отслеживать связанный объект <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <returns>Экземпляр <see cref="T:System.Object" />, содержащий измененные параметры конфигурации.</returns>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> для получения возвращенных данных, которые представляют изменения в файле конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает объекту узла остановить отслеживание связанного объекта <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать уведомления изменения.</summary>
      <returns>true если узел поддерживает уведомления изменения; в противном случае — false. </returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги расположения.</summary>
      <returns>true если узел поддерживает теги расположения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла иметь поддержку пути.</summary>
      <returns>true, если конфигурация узла имеет поддержку пути; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать обновление.</summary>
      <returns>true, если конфигурация узла поддерживает обновление; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Проверяет, что определения конфигурации разрешены для записи конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="allowDefinition">An <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
      <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
      <param name="errorInfo">Объект <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Указывает, что все записи в файл конфигурации завершены.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">true если запись в файл конфигурации успешно завершена; в противном случае — false.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Указывает, что все записи в файл конфигурации завершены и определяет, должны ли быть утверждены разрешения.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">true указывает, что запись успешно завершена; в противном случае — false.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки записей конфигурации, создающих ошибки.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>Возвращает строку, определяющую имя файла, связанного со сведениями о конфигурации.</summary>
      <returns>Строка, определяющая имя файла.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>Возвращает целочисленное значение, определяющее количество строк, связанных со сведениями о конфигурации.</summary>
      <returns>Целочисленное значение, определяющее количество строк.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки инициализации свойств конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>Возвращает узел конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" />, который используется платформой .NET Framework для инициализации свойств конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="typeConfigHost">Тип узла конфигурации.</param>
      <param name="hostInitParams">Массив параметров узла конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>Возвращает корень иерархии конфигурации.</summary>
      <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки управления конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>Гарантирует, что конфигурация сети загружена.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для инициализации свойств конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>Возвращает имя файла конфигурации, связанное с путем приложения.</summary>
      <returns>Значение строки, представляющее имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>Возвращает локальный каталог конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Строка, представляющая локальный каталог конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>Возвращает путь локальной конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее путь перемещаемой конфигурации приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>Возвращает имя продукта приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее имя продукта приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>Возвращает версию продукта приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее версию продукта приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>Возвращает перемещаемый каталог конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее перемещаемый каталог конфигурации приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>Возвращает путь пользовательской перемещаемой конфигурации на основании сборки записей приложения.</summary>
      <returns>Значение строки, представляющее путь перемещаемой пользовательской конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Возвращает путь конфигурации для файла Machine.config.</summary>
      <returns>Значение строки, представляющее путь к файлу Machine.config file.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>Возвращает значение. представляющее состояние системы конфигурации.</summary>
      <returns>true если система конфигурации в процессе инициализации, в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>Возвращает значение, определяющее, поддерживаются ли параметры пользовательской конфигурации.</summary>
      <returns>true если система конфигурации поддерживает параметры пользовательской конфигурации; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>Возвращает имя файла, используемого для хранения параметров пользовательской конфигурации.</summary>
      <returns>Строка, определяющая имя файла, используемого для хранения пользовательской конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>Определяет интерфейсы, которые позволяет внутренней инфраструктуре платформы .NET Framework настраивать конфигурацию.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>Возвращает путь к файлу конфигурации приложения. </summary>
      <returns>Строка, представляющая путь к файлу конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>Возвращает строку, представляющую путь к известному локальному пользовательскому файлу конфигурации.</summary>
      <returns>Строка, представляющая путь к известному локальному пользовательскому файлу конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>Возвращает строку, представляющая путь к известному перемещаемому файлу пользовательской конфигурации.</summary>
      <returns>Строка, представляющая путь к известному перемещаемому файлу пользовательской конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как известный на текущий момент путь файла конфигурации. </summary>
      <returns>true если строка, представляющая путь конфигурации такая же, как путь к файлу конфигурации приложения; false если строка, представляющая путь конфигурации не такая же, как путь к файлу конфигурации приложения. </returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как путь файла конфигурации для известного на текущий момент локального пользователя. </summary>
      <returns>true если строка, представляющая путь конфигурации такая же, как путь к известному локальному пользовательскому файлу конфигурации; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как путь файла конфигурации для известного на текущий момент перемещаемого пользователя.</summary>
      <returns>true если строка, представляющая путь конфигурации такая же, как путь к известному перемещаемому файлу пользовательской конфигурации; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>Определяет интерфейсы, используемые внутренним режимом разработки API для создания объекта <see cref="T:System.Configuration.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>Создает и инициализирует объект <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <param name="typeConfigHost">
        <see cref="T:System.Type" /> создаваемого объекта <see cref="T:System.Configuration.Configuration" />.</param>
      <param name="hostInitConfigurationParams">Массив параметров <see cref="T:System.Object" />, который содержит параметры, которые применены к созданному объекту <see cref="T:System.Configuration.Configuration" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Нормализует вложенный путь расположения пути к файлу конфигурации.</summary>
      <returns>Строка нормализованного вложенного пути.</returns>
      <param name="subPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="errorInfo">Экземпляр <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> или null.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для инициализации свойств конфигурации приложения.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Создает и возвращает объект контекста для <see cref="T:System.Configuration.ConfigurationElement" /> конфигурации приложения.</summary>
      <returns>Объект контекста для объекта <see cref="T:System.Configuration.ConfigurationElement" /> конфигурации приложения.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationSubPath">Строка, представляющая расположение вложенного пути элемента конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Создает и возвращает устаревший объект контекста для конфигурации приложения.</summary>
      <returns>Устаревший объект контекста для объекта конфигурации приложения.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Расшифровывает и зашифровывает раздел конфигурации и возвращает его как строку.</summary>
      <returns>Расшифрованный раздел конфигурации как строка.</returns>
      <param name="encryptedXml">Зашифрованная XML строка, представляющая раздел конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>Удаляет объект <see cref="T:System.IO.Stream" />, выполняющий операции ввода-вывода при работе с файлом конфигурации приложения.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Зашифровывает раздел конфигурации и возвращает его как строку.</summary>
      <returns>Зашифрованный раздел конфигурации, представленный как строка.</returns>
      <param name="clearTextXml">XML строка, представляющая раздел конфигурации для шифрования.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Возвращает полный путь к файлу конфигурации приложения на основе локального вложенного пути.</summary>
      <returns>Строка, представляющая полный путь к файлу конфигурации приложения.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationSubPath">Расположение вложенного пути файла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий тип объекта конфигурации.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип объекта конфигурации.</returns>
      <param name="typeName">Имя типа.</param>
      <param name="throwOnError">true создать исключение при возникновении ошибки; в противном случае — false</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>Возвращает строку, представляющую имя типа из объекта <see cref="T:System.Type" />, представляющего тип конфигурации.</summary>
      <returns>Строка, представляющую имя типа из объекта <see cref="T:System.Type" />, представляющего тип конфигурации.</returns>
      <param name="t">Объект <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Связывает конфигурацию с объектом <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
      <param name="permissionSet">Объект <see cref="T:System.Security.PermissionSet" /> для связи с конфигурацией.</param>
      <param name="isHostReady">true указывает ,что узел конфигурации завершил построение связанных разрешений; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>Возвращает строку, представляющую имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</summary>
      <returns>Строка, представляющая имя файла конфигурации, связанного с <see cref="T:System.IO.Stream" /> операциями ввода-вывода при работе с файлом конфигурации.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Возвращает строку, представляющую имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с удаленным файлом конфигурации.</summary>
      <returns>Строка, представляющая имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</returns>
      <param name="streamName">Строка, представляющая имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="configSource">Строка, представляющая путь к удаленному файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>Возвращает версию объекта <see cref="T:System.IO.Stream" />, который связан с файлом конфигурации.</summary>
      <returns>Версия объекта <see cref="T:System.IO.Stream" />, который связан с файлом конфигурации.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>Указывает узлу олицетворить и возвратить объект <see cref="T:System.IDisposable" />, требуемый внутренней структурой .NET.</summary>
      <returns>An <see cref="T:System.IDisposable" /> value.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел конфигурации.</summary>
      <param name="configRoot">Корневой объект конфигурации.</param>
      <param name="hostInitParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="locationSubPath">Расположение вложенного пути файла конфигурации.</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationConfigPath">Строка, представляющая расположение пути конфигурации.</param>
      <param name="configRoot">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitConfigurationParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>Возвращает значение, определяющее, будет ли файл конфигурации расположен на более высоком уровне в иерархии конфигурации чем конфигурация приложения.</summary>
      <returns>true файл конфигурации расположен на более высоком уровне в иерархии конфигурации чем конфигурация приложения; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Возвращает значение, определяющее, требуется ли запись дочернего элемента для пути конфигурации дочернего элемента.</summary>
      <returns>true если требуется запись дочернего элемента для пути конфигурации дочернего элемента; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Определяет, допустимы ли различные определения <see cref="T:System.Type" /> для объекта конфигурации приложения.</summary>
      <returns>true если допустимы ли различные определения <see cref="T:System.Type" /> для объекта конфигурации приложения; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="allowDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, действительным.</summary>
      <returns>true если путь, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, является действительным; в противном случае — false.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли раздел конфигурации требовать уровень полностью достоверного управления доступом для кода и не разрешать атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию.</summary>
      <returns>true если раздел конфигурации требует уровень полностью достоверного управления доступом для кода и не разрешает атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию; в противном случае — false.</returns>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли инициализация объекта конфигурации считаться отсроченной.</summary>
      <returns>true если инициализация объекта конфигурации считаться отсроченной; в противном случае — false.</returns>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>Возвращает значение, определяющее, будет ли объект конфигурации поддерживать теги расположения.</summary>
      <returns>true если объект конфигурации поддерживает теги расположения; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>Возвращает значение, определяющее, является ли конфигурация удаленной.</summary>
      <returns>true если конфигурация удаленная; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое.</summary>
      <returns>true если путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое, в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Возвращает значение, определяющее, будет ли путь конфигурации доверенным.</summary>
      <returns>true если путь конфигурации доверенный; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>Открывает <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <returns>Возвращает объект <see cref="T:System.IO.Stream" /> определенный <paramref name="streamName" />.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации или записи во временный файл, используемый для построения файла конфигурации.Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации.Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <returns>Возвращает объект <see cref="T:System.IO.Stream" /> определенный <paramref name="streamName" />.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Возвращает значение, определяющее, может ли весь файл конфигурации быть прочитан определяемым объектом <see cref="T:System.IO.Stream" />.</summary>
      <returns>true если весь файл конфигурации может быть прочитан объектом <see cref="T:System.IO.Stream" /> определенным <paramref name="streamName" />; в противном случае — false.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> для чтения определенного раздела связанного с ним файла конфигурации.</summary>
      <returns>true если раздел файла конфигурации определенный <paramref name="sectionGroupName" /> и <paramref name="sectionName" /> могут быть прочитаны объектом <see cref="T:System.IO.Stream" />; в противном случае — false.</returns>
      <param name="sectionGroupName">Строка, представляющая идентифицирующее имя группы раздела файла конфигурации.</param>
      <param name="sectionName">Строка, представляющая идентифицирующее имя раздела файла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Указывает, что запись новой конфигурации требует полную инициализацию.</summary>
      <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> контролировать связанный объект <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <returns>
        <see cref="T:System.Object" />, содержащий измененные параметры конфигурации.</returns>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> для получения возвращенных данных, которые представляют изменения в файле конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает объекту <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> остановить контроль связанного объекта <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать уведомление изменения.</summary>
      <returns>true если конфигурация поддерживает уведомление изменения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги расположения.</summary>
      <returns>true если конфигурация поддерживает теги расположения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги пути.</summary>
      <returns>true если конфигурация поддерживает теги пути; в противном случае — false.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать обновление конфигурации.</summary>
      <returns>true, если конфигурация узла поддерживает обновление конфигурации; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Проверяет, что определения конфигурации разрешены для записи конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="allowDefinition">A <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
      <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
      <param name="errorInfo">Объект <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Указывает, что все записи в файл конфигурации завершены.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">true если запись в файл конфигурации успешно завершена; в противном случае — false.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Указывает, что все записи в файл конфигурации завершены и определяет, должны ли быть утверждены разрешения.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">true указывает, что запись выполнена успешно; в противном случае — false.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">true чтобы утвердить разрешения; в противном случае — false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для поддержки создания новых записей конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>Возвращает строку, представляющую путь файла конфигурации.</summary>
      <returns>Строка, представляющая путь файла конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>Возвращает объект, представляющий раздел конфигурации из последнего удачного состояния (LKG) конфигурации.</summary>
      <returns>Экземпляр <see cref="T:System.Object" />, представляющий раздел последнего удачного состояния, определенный параметром <paramref name="configKey" />.</returns>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Object" />, представляющий раздел файла конфигурации.</summary>
      <returns>Экземпляр <see cref="T:System.Object" />, представляющий раздел файла конфигурации.</returns>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>Возвращает значение, определяющее, будет ли возникать ошибка во время инициализации объекта конфигурации.</summary>
      <returns>true если возникает ошибка во время инициализации объекта конфигурации; в противном случае — false.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>Вызывает повторную инициализацию указанного раздела объекта конфигурации.</summary>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации, который должен быть обновлен.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>Удаляет запись конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>Предоставляет разрешение объекту конфигурации создавать исключение, если ошибка происходит во время инициализации.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для поддержки корневых объектов конфигурации.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> объекта <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>Represents the method that handles the <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> event of a <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий конфигурацию, определенную путем конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий конфигурацию, определенную <paramref name="configPath" />.</returns>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Object" />, представляющий данные в разделе файла конфигурации.</summary>
      <returns>
        <see cref="T:System.Object" />, представляющий данные в разделе файла конфигурации.</returns>
      <param name="section">Строка, представляющая раздел файла конфигурации.</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>Возвращает значение, представляющее путь файла ближайшего предка конфигурации, который имеет данные конфигурации.</summary>
      <returns>Возвращает строку, представляющее путь файла ближайшего предка конфигурации, который имеет данные конфигурации.</returns>
      <param name="configPath">Путь файла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий запись уникальной конфигурации для данного пути конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий запись уникальной конфигурации для данного пути конфигурации.</returns>
      <param name="configPath">Путь файла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="host">An <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</param>
      <param name="isDesignTime">true в случае режима разработки; false в случае среды выполнения.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>Возвращает значение, определяющее, будет ли конфигурация являться конфигурацией режима разработки.</summary>
      <returns>true в случае, если конфигурация является конфигурацией режима разработки; false в случае, если конфигурация не является конфигурацией режима разработки.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>Находит и удаляет записи конфигурации и все ее дочерние элементы для данного пути конфигурации.</summary>
      <param name="configPath">Путь файла конфигурации.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>Определяет интерфейс, используемый системой конфигурации для установки класса <see cref="T:System.Configuration.ConfigurationSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>Указывает, что инициализация системы конфигурации завершена. </summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>Предоставляет иерархические параметры конфигурации и расширения, определенные для ASP.NET в системе конфигурации. </summary>
      <param name="internalConfigSystem">Объект <see cref="T:System.Configuration.Internal.IInternalConfigSystem" />, который используется классом <see cref="T:System.Configuration.ConfigurationSettings" />.</param>
      <param name="initComplete">true если процесс инициализации системы конфигурации завершен, в противном случае — false.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для инициализации свойств конфигурации приложения.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>Возвращает объект конфигурации на основании определенного ключа. </summary>
      <returns>Объект конфигурации.</returns>
      <param name="configKey">Значение ключа конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>Обновляет систему конфигурации на основании определенного имени раздела. </summary>
      <param name="sectionName">Имя раздела конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>Возвращает значение, определяющее, поддерживается ли пользовательская конфигурация. </summary>
      <returns>true, если пользовательская конфигурация поддерживается; в противном случае — false.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>Определяет класс, который позволяет инфраструктуре платформы .NET Framework определить аргументы события для событий конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> class.</summary>
      <param name="configPath">Путь конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>Возвращает или устанавливает путь конфигурации, относительно объекта <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <returns>Значение строки, определяющее путь конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>Определяет класс, используемый инфраструктурой платформы .NET Framework, для поддержки событий конфигурации.</summary>
      <param name="sender">Объект источника события.</param>
      <param name="e">Аргумент события конфигурации.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>Представляет метод для узлов, который позволяет делать вызов при контролируемом изменении потока.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>Предоставляет базовую реализацию для расширяемой модели поставщика.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class. </summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>Возвращает краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах (UI).</summary>
      <returns>Краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует поставщика.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">Коллекция пар имя/значение, представляющие особые атрибуты поставщика, определенные в конфигурации поставщика.</param>
      <exception cref="T:System.ArgumentNullException">Имя поставщика null.</exception>
      <exception cref="T:System.ArgumentException">Имя поставщика имеет нулевую длину.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка вызова поставщика <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> после того, как поставщик был инициализирован.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>Возвращает понятное имя, используемое для ссылки на поставщика во время конфигурирования.</summary>
      <returns>Понятное имя, используемое для ссылки на поставщика во время конфигурирования.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>Представляет коллекцию объектов поставщика, которые наследованы из <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.Provider.ProviderCollection" />. </summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Добавляет поставщика в коллекцию.</summary>
      <param name="provider">Поставщик, который должен быть добавлен.</param>
      <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="provider" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> параметра <paramref name="provider" /> есть null.- or -Длина <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> параметра <paramref name="provider" /> меньше чем 1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>Removes all items from the collection.</summary>
      <exception cref="T:System.NotSupportedException">Коллекция установлена в режим только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>Копирует содержимое коллекции в данный массив, начиная с указанного индекса.</summary>
      <param name="array">Массив для копирования элементов коллекции.</param>
      <param name="index">Индекс элемента коллекции, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>Возвращает количество поставщиков в коллекции.</summary>
      <returns>Количество поставщиков в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>Возвращает объект, который реализует интерфейс <see cref="T:System.Collections.IEnumerator" />, производящий итерацию по коллекции.</summary>
      <returns>Объект, который реализует <see cref="T:System.Collections.IEnumerator" />, производящий итерацию по коллекции.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>Возвращает поставщика с заданным именем.</summary>
      <returns>Поставщик с заданным именем.</returns>
      <param name="name">Ключ, по которому определяется поставщик.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>Удаляет поставщика из коллекции.</summary>
      <param name="name">Имя поставщика, предназначенного для удаления.</param>
      <exception cref="T:System.NotSupportedException">Коллекция была установлена в режим только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>Sets the collection to be read-only.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>Возвращает текущий объект.</summary>
      <returns>Текущий объект.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы <see cref="T:System.Configuration.Provider.ProviderCollection" /> в массив, начиная с определенного индекса массива.</summary>
      <param name="array">Массив для копирования элементов коллекции.</param>
      <param name="index">Индекс массива, с которого начинается копирование экземпляров поставщика из коллекции.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>При возникновении ошибки в поставщике конфигурации создается исключение.Этот класс исключения также используется поставщиком для создания исключений при возникновении внутренних ошибок с поставщиком, который не сопоставлен с другими существующими классами исключений.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="info">Объект, содержащий сведения о выполнении десериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
      <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
      <param name="innerException">Создано исключение, которое вызвало <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
  </members>
</doc>