<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Workflow.Activities</name>
  </assembly>
  <members>
    <member name="T:System.Workflow.Activities.ActiveDirectoryRole">
      <summary>Представляет роль Active Directory в основной среде Windows Workflow Foundation.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports">
      <summary>Возвращает роль <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, которая содержит все роли, подотчетные текущей роли, как прямо, так и косвенно.</summary>
      <returns>Роль <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, которая содержит все роли, подотчетные текущей роли, как прямо, так и косвенно.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports">
      <summary>Возвращает объект <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, который содержит все роли, напрямую подотчетные текущей роли.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, который содержит все роли, напрямую подотчетные текущей роли.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries">
      <summary>Возвращает универсальную коллекцию, содержащую все объекты <see cref="T:System.DirectoryServices.DirectoryEntry" />, связанные с текущей ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
      <returns>Универсальная коллекция <see cref="T:System.DirectoryServices.DirectoryEntry" />, связанная с текущей ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities">
      <summary>Возвращает универсальный список учетных записей Windows NT, связанных с ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
      <returns>Универсальный список значений, представляющих учетные записи Windows NT, связанные с ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager">
      <summary>Возвращает роль Active Directory, содержащую сведения о руководителе для текущей роли <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, содержащий сведения о руководителе для текущей роли.</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain">
      <summary>Возвращает роль Active Directory, содержащую сведения о цепочке руководителей, связанной с текущей ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, содержащий сведения о цепочке руководителей, связанной с текущей ролью.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers">
      <summary>Возвращает роль Active Directory, содержащую сведения обо всех операциях Active Directory, контролируемых руководителем текущей роли <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, содержащий сведения обо всех операциях Active Directory, контролируемых руководителем текущей роли <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers">
      <summary>Возвращает универсальный список объектов <see cref="T:System.Security.Principal.SecurityIdentifier" />, связанных с текущей ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
      <returns>Универсальный список объектов <see cref="T:System.Security.Principal.SecurityIdentifier" />, связанных с текущей ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли коллекция <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> указанное удостоверение. </summary>
      <returns>Значение true для указания того, что объект <paramref name="identity" /> включен в <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />; в противном случае ― значение false.</returns>
      <param name="identity">Удостоверение, которое требуется найти.</param>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRole.Name">
      <summary>Возвращает или задает имя роли Active Directory.</summary>
      <returns>Имя роли Active Directory.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry">
      <summary>Возвращает корневой узел Active Directory, связанный с ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
      <returns>Запись <see cref="T:System.DirectoryServices.DirectoryEntry" />, которая представляет корневой узел Active Directory, связанный с ролью <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Целевой объект <see cref="T:System.Runtime.Serialization.StreamingContext" /> для данной сериализации.</param>
    </member>
    <member name="T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <summary>Класс фабрики для создания объектов <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> из псевдонимов Windows NT, адресов электронной почты и идентификаторов безопасности (ИД безопасности).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration">
      <summary>Возвращает объект <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />, связанный с <see cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />, связанный с <see cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)">
      <summary>Создает экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, используя заданный псевдоним Windows NT.</summary>
      <returns>Экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, описывающий заданный псевдоним Windows NT.</returns>
      <param name="alias">Строка псевдонима для создания <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)">
      <summary>Создает экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, используя адрес электронной почты.</summary>
      <returns>Экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, описывающий заданный адрес электронной почты.</returns>
      <param name="emailAddress">Строка адреса электронной почты, из который требуется создать <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)">
      <summary>Создает экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, используя <see cref="T:System.Security.Principal.SecurityIdentifier" /> Windows NT.</summary>
      <returns>Экземпляр <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, описывающий заданный идентификатор <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
      <param name="sid">Идентификатор <see cref="T:System.Security.Principal.SecurityIdentifier" />, используемый для создания <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</param>
    </member>
    <member name="T:System.Workflow.Activities.CallExternalMethodActivity">
      <summary>Определяет коммуникационное действие рабочего процесса, используемое для вызова метода в локальной службе.Это действие применяется для передачи данных из рабочего процесса в основное приложение через локальную службу.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />, используя имя действия.</summary>
      <param name="name">Определенное пользователем имя действия, используемое для инициализации свойства имени действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken">
      <summary>Возвращает или задает <see cref="T:System.Workflow.Runtime.CorrelationToken" /> для внешнего метода.</summary>
      <returns>Маркер корреляции для внешнего метода.</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Пытается выполнить действие <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> с заданным контекстом <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
      <returns>Одно из значений <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />.</returns>
      <param name="executionContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, содержащий среду выполнения, в которой требуется выполнить действие <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</param>
      <exception cref="T:System.ArgumentException">Этот параметр <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Объект обслуживания для параметра <paramref name="executionContext" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties">
      <summary>Выполняет инициализацию в свойствах зависимостей.</summary>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType">
      <summary>Возвращает или задает объявляющий интерфейс внешнего метода, имеющий атрибут <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
      <returns>Объявляющий интерфейс внешнего метода, имеющий атрибут <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking">
      <summary>Происходит перед вызовом метода.</summary>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName">
      <summary>Возвращает или задает имя метода, который должен быть вызван в локальной службе, зарегистрированной службой <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
      <returns>Имя метода интерфейса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)">
      <summary>Предоставляет обработчик для производных классов для извлечения и возврата значений из свойства <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.Этот метод вызывается после выполнения внешнего метода.</summary>
      <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные для события <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)">
      <summary>Предоставляет обработчик для производных классов для задания свойства <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.Этот метод вызывается перед выполнением внешнего метода.</summary>
      <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные для события <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязываемых параметров, обнаруженных в списке формальных параметров внешнего метода.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> параметров, к которым требуется выполнить привязку.</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип доступа для заданного свойства.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
      <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName " />. </returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <summary>Проверяет, что класс <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> настроен правильно.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Проверяет класс <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> во время компиляции рабочего процесса.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая ошибки данной операции.</returns>
      <param name="manager">Класс <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />, используемый при проверке.</param>
      <param name="obj">Объект <see cref="T:System.Object" />, который требуется проверить.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Workflow.Activities.CodeActivity">
      <summary>Выполняет метод побочного кода, связанный с действием.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CodeActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CodeActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="E:System.Workflow.Activities.CodeActivity.ExecuteCode">
      <summary>Происходит при запуске действия <see cref="T:System.Workflow.Activities.CodeActivity" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.CodeCondition">
      <summary>Определяет условие, выполнение которого вызывает выполнение конкретного действия в определении рабочего процесса.Имеет событие типа <see cref="T:System.Workflow.Activities.ConditionalEventArgs" /> для возврата результатов вычисления условия.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CodeCondition" />.</summary>
    </member>
    <member name="E:System.Workflow.Activities.CodeCondition.Condition">
      <summary>Происходит при вычислении условия.</summary>
    </member>
    <member name="F:System.Workflow.Activities.CodeCondition.ConditionEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.CodeCondition.Condition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>Вычисляет соответствующее условие. </summary>
      <returns>Значение true, если условие принимает значение true; в противном случае ― значение false.Значение по умолчанию — false.</returns>
      <param name="ownerActivity">Объект <see cref="T:System.Workflow.ComponentModel.Activity" />, связанный с данным условием.</param>
      <param name="provider">Объект <see cref="T:System.IServiceProvider" /> для вычисления условия.</param>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <summary>Извлекает объект <see cref="T:System.Object" />, который является субъектом <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, связанный с действием с помощью привязки <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
      <param name="bind">Необходимый объект <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <param name="targetType">Тип <see cref="T:System.Type" /> целевого объекта привязки <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bind" /> или <paramref name="targetType" /> равно null.</exception>
    </member>
    <member name="T:System.Workflow.Activities.CompensatableSequenceActivity">
      <summary>Определяет версию действия <see cref="T:System.Workflow.Activities.SequenceActivity" />, доступную для компенсации.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CompensatableSequenceActivity" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CompensatableSequenceActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Выполняет действие с использованием интерфейса <see cref="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />.</summary>
      <returns>Состояние <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> после попытки выполнения операции.</returns>
      <param name="executionContext">Контекст выполнения действия.</param>
    </member>
    <member name="T:System.Workflow.Activities.ConditionalEventArgs">
      <summary>Возвращает сведения о результате оценки для класса <see cref="T:System.Workflow.Activities.CodeCondition" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ConditionalEventArgs" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ConditionalEventArgs" />, используя результат оценки условия.</summary>
      <param name="result">Результат оценки условия.</param>
    </member>
    <member name="P:System.Workflow.Activities.ConditionalEventArgs.Result">
      <summary>Возвращает или задает результат оценки условия <see cref="T:System.Workflow.Activities.CodeCondition" />.</summary>
      <returns>true, если результат оценки условия положительный; в противном случае — false.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ConditionedActivityGroup">
      <summary>Обеспечивает определение основанного на ограничениях контекста выполнения для набора дочерних действий.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" />.</summary>
      <exception cref="T:System.InvalidOperationException">Никакие дочерние элементы не выполняются, и свойство <see cref="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" /> имеет значение false.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)">
      <summary>Возвращает число выполнений указанного дочернего действия.</summary>
      <returns>Число выполнений указанного дочернего действия.</returns>
      <param name="child">Дочернее действие.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="child" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Связанное с условием состояние группы действий имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Невозможно определить число выполнений указанного дочернего действия.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)">
      <summary>Возвращает выполняющийся в данный момент экземпляр дочернего действия.</summary>
      <returns>Выполняющийся в данный момент экземпляр <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</returns>
      <param name="childActivityName">Имя дочернего действия <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="childactivity" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Выполняющиеся действия не содержат параметра <paramref name="childactivity" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)">
      <summary>Возвращает условие, связанное со свойством <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" /> указанного объекта зависимости.</summary>
      <returns>Условие when.</returns>
      <param name="dependencyObject">Соответствующий объект хранения данных для действия.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> — это ссылка на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Выполняющиеся действия не содержат параметра <paramref name="dependencyObject" />.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)">
      <summary>Задает условие, связанное со свойством <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" /> указанного объекта зависимости.</summary>
      <param name="dependencyObject">Соответствующий объект хранения данных для действия.</param>
      <param name="value">Значение условия when.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyObject" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Выполняющиеся действия не содержат параметра <paramref name="dependencyObject" />.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition">
      <summary>Возвращает или задает значение, указывающее, когда должно быть завершено выполнение <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" />.</summary>
      <returns>Условие, которое определяет, должно ли быть завершено действие <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationAliasAttribute">
      <summary>Переопределяет значение параметра корреляции, когда значение корреляции должно получаться из параметра, отличного от параметра, определяемого значением <see cref="T:System.Workflow.Activities.CorrelationParameterAttribute" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CorrelationAliasAttribute" /> с использованием имени корреляции, для которого создается псевдоним, и пути, по которому можно найти значение.</summary>
      <param name="name">Имя параметра корреляции, для которого создается псевдоним.</param>
      <param name="path">Указывает аргумент метода или события, в котором хранится значение параметра корреляции, заданного параметром <paramref name="name" />.В этом параметре можно использовать запись через точку, например Parameter.Location.</param>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationAliasAttribute.Name">
      <summary>Возвращает имя параметра корреляции, для которого создается псевдоним.</summary>
      <returns>Имя параметра корреляции, для которого создается псевдоним.</returns>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationAliasAttribute.Path">
      <summary>Возвращает путь внутри параметра, который задает расположение значения корреляции.</summary>
      <returns>Путь внутри параметра, который задает расположение значения корреляции.</returns>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <summary>Указывает метод или событие интерфейса ExternalDataExchange, которые инициализируют значение корреляции.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor">
      <summary>Инициализирует новый экземпляр атрибута <see cref="T:System.Workflow.Activities.CorrelationInitializerAttribute" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationParameterAttribute">
      <summary>Указывает имя параметра, которое используется для корреляции в методах и событиях, определенных в интерфейсе ExternalDataExchange.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CorrelationParameterAttribute" />, где для корреляции используется имя параметра.</summary>
      <param name="name">Имя параметра, используемое для корреляции.</param>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationParameterAttribute.Name">
      <summary>Возвращает имя параметра, используемое для корреляции.</summary>
      <returns>Имя параметра, используемое для корреляции.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="T:System.Workflow.Activities.DelayActivity">
      <summary>Обеспечивает логику для установки таймера и ожидания (асинхронного) его срабатывания.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.DelayActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.DelayActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration">
      <summary>Происходит перед началом отсчета времени ожидания. </summary>
    </member>
    <member name="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>Возвращает имя очереди рабочего процесса, которая будет выполнена после истечения времени ожидания.</summary>
      <returns>Имя очереди рабочего процесса.</returns>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Создает подписку действия <see cref="T:System.Workflow.Activities.DelayActivity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="parentContext" /> или <paramref name="parentEventHandler" /> равно null.</exception>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Отменяет подписку действия <see cref="T:System.Workflow.Activities.DelayActivity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="parentContext" /> или <paramref name="parentEventHandler" /> равно null.</exception>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="P:System.Workflow.Activities.DelayActivity.TimeoutDuration">
      <summary>Возвращает или задает длительность задержки в рабочем процессе.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который определяет длительность задержки в рабочем процессе.</returns>
    </member>
    <member name="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.EventDeliveryFailedException">
      <summary>Исключение, которое создается при невозможности доставки возникшего на узле события экземпляру рабочего процесса.Как правило, событие возникает из класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> экземпляра рабочего процесса.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" />, используя сообщение об ошибке, в котором объясняется причина исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" />, используя сообщение об ошибке, в котором объясняется причина исключения, и объект <see cref="T:System.Exception" />, вызвавший это исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, вызвавший это исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.EventDrivenActivity">
      <summary>Создает оболочку для действия <see cref="T:System.Workflow.ComponentModel.Activity" />, выполнение которого инициализируется событием.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventDrivenActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.EventDrivenActivity.EventActivity">
      <summary>Возвращает событие действия, вызывающее изменение.</summary>
      <returns>Событие действия, вызывающее изменение.</returns>
    </member>
    <member name="T:System.Workflow.Activities.EventHandlersActivity">
      <summary>Составное действие, содержащее коллекцию обработчиков событий.Обычно оно используется, когда требуется обработать коллекцию событий.Каждое событие обрабатывается одним действием <see cref="T:System.Workflow.Activities.EventDrivenActivity" />, являющимся частью действия <see cref="T:System.Workflow.Activities.EventHandlersActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventHandlersActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventHandlersActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)">
      <summary>Возвращает выполняющийся в данный момент экземпляр <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</summary>
      <returns>Выполняющийся в данный момент экземпляр <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</returns>
      <param name="childActivityName">Имя дочернего действия <see cref="T:System.Workflow.Activities.EventDrivenActivity" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childactivity" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Выполняющиеся действия не содержат параметра <paramref name="childactivity" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="T:System.Workflow.Activities.EventHandlingScopeActivity">
      <summary>Разрешает обработку события с выполнением дочерних действий.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventHandlingScopeActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventHandlingScopeActivity" />, используя имя действия.</summary>
      <param name="name">Определенное пользователем имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="T:System.Workflow.Activities.EventQueueName">
      <summary>Представляет имя очереди, связанной с событием в <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventQueueName" />, используя указанные тип <see cref="T:System.Type" /> и имя операции. </summary>
      <param name="interfaceType">Тип <see cref="T:System.Type" /> интерфейса для сопоставления с <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
      <param name="operation">Строка, содержащая имя операции, сопоставляемой с <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.EventQueueName" />. </summary>
      <param name="interfaceType">Тип <see cref="T:System.Type" /> интерфейса.</param>
      <param name="operation">Строка, содержащая имя операции, сопоставляемой с <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
      <param name="propertyValues">Коллекция <see cref="T:System.Workflow.Runtime.CorrelationProperty" />, определяющая значения свойств, сопоставляемые с <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Workflow.Activities.EventQueueName" /> с указанным объектом <see cref="T:System.Workflow.Activities.EventQueueName" />. </summary>
      <returns>32-битовое целое число со знаком, указывающее, совпадают ли сравниваемые объекты.-1 указывает, что текущий объект <see cref="T:System.Workflow.Activities.EventQueueName" /> и заданный объект не совпадают; 0 указывает, что <see cref="T:System.Workflow.Activities.EventQueueName" /> и заданный объект совпадают.</returns>
      <param name="toCompare">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)">
      <summary>Сравнивает текущий объект <see cref="T:System.Workflow.Activities.EventQueueName" /> с указанным объектом <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>32-битовое целое число со знаком, указывающее, совпадают ли сравниваемые объекты.-1 указывает, что два объекта <see cref="T:System.Workflow.Activities.EventQueueName" /> не совпадают; 0 указывает, что два объекта <see cref="T:System.Workflow.Activities.EventQueueName" /> совпадают.</returns>
      <param name="eventQueueName">Объект <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения с текущим объектом <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Принимает значение true, если заданный объект <see cref="T:System.Object" /> равен текущему <see cref="T:System.Workflow.Activities.EventQueueName" />, или значение false — в противном случае. </returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Workflow.Activities.EventQueueName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues">
      <summary>Возвращает массив <see cref="T:System.Workflow.Runtime.CorrelationProperty" />, содержащий все корреляционные свойства, связанные с <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Массив <see cref="T:System.Workflow.Runtime.CorrelationProperty" />, содержащий все корреляционные свойства, связанные с <see cref="T:System.Workflow.Activities.EventQueueName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Целое значение, представляющее хэш-код, созданный для текущего объекта <see cref="T:System.Workflow.Activities.EventQueueName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.EventQueueName.InterfaceType">
      <summary>Возвращает тип <see cref="T:System.Type" />, связанный с <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Тип <see cref="T:System.Type" />, связанный с <see cref="T:System.Workflow.Activities.EventQueueName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.EventQueueName.MethodName">
      <summary>Возвращает имя метода, связанного с <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Строка, содержащая имя метода, связанного с <see cref="T:System.Workflow.Activities.EventQueueName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>Возвращает значение, указывающее, равны ли два заданных объекта <see cref="T:System.Workflow.Activities.EventQueueName" />. </summary>
      <returns>Возвращает значение true, если объекты <paramref name="queueKey1" /> и <paramref name="queueKey2" /> равны; в противном случае — значение false. </returns>
      <param name="queueKey1">Первый экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <param name="queueKey2">Второй экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>Возвращает значение, указывающее, больше ли первый из заданных объектов <see cref="T:System.Workflow.Activities.EventQueueName" /> второго объекта.</summary>
      <returns>true, если <paramref name="queueKey1" /> больше <paramref name="queueKey2" />; в противном случае — false. </returns>
      <param name="queueKey1">Первый экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <param name="queueKey2">Второй экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queueKey1" /> или <paramref name="queueKey2" /> содержит ссылку на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>Возвращает значение, указывающее, различаются ли два заданных объекта <see cref="T:System.Workflow.Activities.EventQueueName" />. </summary>
      <returns>Возвращает значение true, если объекты <paramref name="queueKey1" /> и <paramref name="queueKey2" /> не равны; в противном случае — значение false. </returns>
      <param name="queueKey1">Первый экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <param name="queueKey2">Второй экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>Возвращает значение, указывающее, меньше ли первый из заданных объектов <see cref="T:System.Workflow.Activities.EventQueueName" /> второго объекта.</summary>
      <returns>true, если <paramref name="queueKey1" /> больше <paramref name="queueKey2" />; в противном случае — false. </returns>
      <param name="queueKey1">Первый экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <param name="queueKey2">Второй экземпляр <see cref="T:System.Workflow.Activities.EventQueueName" /> для сравнения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queueKey1" /> или <paramref name="queueKey2" /> содержит ссылку на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> текущего объекта <see cref="T:System.Workflow.Activities.EventQueueName" />.</summary>
      <returns>Представление типа <see cref="T:System.String" /> текущего объекта <see cref="T:System.Workflow.Activities.EventQueueName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ExecutionType">
      <summary>Задает режим выполнения для действий.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ExecutionType.Sequence">
      <summary>Действия выполняются последовательно.Действия выполняются друг за другом, после завершения выполнения предыдущего действия.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ExecutionType.Parallel">
      <summary>Действия выполняются параллельно.</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataEventArgs">
      <summary>Представляет данные, отправленные при возникновении события с помощью действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />, используя идентификатор экземпляра рабочего процесса.</summary>
      <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
      <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
      <param name="workHandler">Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</param>
      <param name="workItem">Объект, содержащий внешний код, который порождает событие.</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
      <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
      <param name="workHandler">Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который инициирует событие, участвовать в пакете.</param>
      <param name="workItem">Объект, содержащий внешний код, который порождает событие.</param>
      <param name="waitForIdle">Значение, указывающее, должен ли рабочий процесс переходить в состояние простоя перед инициированием события; в противном случае — false.</param>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.Identity">
      <summary>Возвращает или задает идентификацию пользователя, породившего событие. </summary>
      <returns>Идентификация пользователя, породившего событие.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId">
      <summary>Возвращает или задает идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</summary>
      <returns>Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle">
      <summary>Возвращает или задает значение, указывающее, должно ли событие порождаться немедленно или рабочий процесс должен переходить в состояние простоя перед порождением события.</summary>
      <returns>true, если рабочий процесс должен переходить в состояние простоя перед порождением события; в противном случае — false.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler">
      <summary>Возвращает или задает объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</summary>
      <returns>Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem">
      <summary>Возвращает или задает объект, содержащий внешний код, который инициирует событие.</summary>
      <returns>Объект, содержащий внешний код, который порождает событие.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <summary>Помечает интерфейс в качестве интерфейса локальной службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeService">
      <summary>Представляет службу, которая должна быть добавлена в обработчик среды выполнения рабочего процесса для обеспечения возможности взаимодействия локальных служб.Чтобы эти службы были надлежащим образом инициализированы и зарегистрированы, в класс <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> необходимо добавить реализации локальных служб.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />. </summary>
      <param name="parameters">Коллекция параметров, используемых для настройки службы.Допустимые значения — пустая коллекция или коллекция, содержащая только ключ ConfigurationSection.</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
      <param name="configSectionName">Имя раздела конфигурации, содержащего требуемую конфигурацию данной службы.</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />. </summary>
      <param name="settings">Раздел конфигурации, содержащий параметры для данной службы.</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)">
      <summary>Добавляет указанную службу в класс <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
      <param name="service">Объект, представляющий добавляемую службу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Не был обнаружен внешний контейнер среды выполнения.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)">
      <summary>Возвращает реализацию службы заданного типа интерфейса, если служба доступна.</summary>
      <returns>Объект, реализующий затребованную службу, или пустое значение (Nothing в Visual Basic), если разрешить службу невозможно.</returns>
      <param name="serviceType">Тип <see cref="T:System.Type" /> интерфейса, реализуемого службой, которую требуется получить.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> является пустой ссылкой (Nothing).</exception>
      <exception cref="T:System.InvalidOperationException">Служба не зарегистрирована средой выполнения.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)">
      <summary>Удаляет указанную службу из <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
      <param name="service">Объект, представляющий удаляемую службу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Служба не зарегистрирована средой выполнения.</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.Start">
      <summary>Добавляет локальные службы, если раздел конфигурации был задан при создании объекта.</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <summary>Представляет раздел конфигурации, позволяющий задать в файле конфигурации набор служб, которые следует добавить в экземпляр <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />. </summary>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services">
      <summary>Возвращает коллекцию служб для добавления в экземпляр <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
      <returns>Коллекция элементов служб.</returns>
    </member>
    <member name="T:System.Workflow.Activities.HandleExternalEventActivity">
      <summary>Определяет коммуникационное действие рабочего процесса, используемое для обработки события, вызванного локальной службой. </summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Отменяет обработку события. </summary>
      <returns>Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> в конце затребованной операции.</returns>
      <param name="executionContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken">
      <summary>Возвращает или задает привязку для <see cref="T:System.Workflow.Runtime.CorrelationToken" />. </summary>
      <returns>Это свойство служит для корреляции события с соответствующим действием, унаследованным от действия <see cref="T:System.Workflow.Activities.IEventActivity" /> и основанным на полезной нагрузке события.Например, когда один экземпляр рабочего процесса ожидает передачи данных, связанных сразу с несколькими экземплярами одного и того же события, свойство CorrelationToken используется для направления события в соответствующее действие в этом экземпляре рабочего процесса.Такую корреляцию не следует путать с корреляцией события с соответствующим экземпляром рабочего процесса.Корреляция с соответствующим экземпляром рабочего процесса выполняется посредством передачи события в явно заданный экземпляр рабочего процесса и использования свойства <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> для надлежащей идентификации соответствующего экземпляра рабочего процесса. корреляции см. в разделе Correlated Local Service Sample.</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.EventName">
      <summary>Возвращает имя вызванного события.Это свойство должно быть задано до того, как может произойти локальное взаимодействие.</summary>
      <returns>Имя вызванного события.</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty">
      <summary>Соответствует имени события, определенного в интерфейсе, который был отмечен атрибутом <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Делает попытку выполнить действие <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, связанное с заданным контекстом <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
      <returns>Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> в конце затребованной операции.</returns>
      <param name="executionContext">Тип <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, связанный с <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>Вызывается при возникновении исключения в контексте выполнения данного экземпляра.</summary>
      <returns>Состояние <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />, которое возникает в результате попытки отменить этот экземпляр.</returns>
      <param name="executionContext">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
      <param name="exception">Исключение <see cref="T:System.Exception" />, вызвавшее этот сбой.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)">
      <summary>Инициализирует событие с поставщиком услуг.</summary>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, предоставляющий настраиваемую поддержку для класса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="provider" /> — пустая ссылка (Nothing в Visual Basic), тип поставщика услуг — пустая ссылка (Nothing), или прокси-сервер для поставщика услуг — пустая ссылка (Nothing). </exception>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties">
      <summary>Выполняет инициализацию в свойствах зависимостей.</summary>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType">
      <summary>Возвращает или задает тип интерфейса (отмеченного атрибутом <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />) локальной службы, событие которой обработано.Это свойство должно быть задано до того, как может произойти локальное взаимодействие.</summary>
      <returns>Тип интерфейса локальной службы, событие которой обработано.</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty">
      <summary>Соответствует имени интерфейса, который был отмечен атрибутом <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked">
      <summary>Происходит при получении внешнего события.</summary>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent">
      <summary>Определяет делегат события, который выполняется после того, как действие получает ожидаемое событие от локальной службы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)">
      <summary>Вызывается средой выполнения рабочих процессов и является частью перехода действия в состояние Closed.</summary>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, предоставляющий службу.</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)">
      <summary>Вызывается сразу после получения внешнего события, чтобы производные классы могли обработать входные аргументы <see cref="T:System.EventArgs" /> до закрытия действия.</summary>
      <param name="e">Аргументы <see cref="T:System.EventArgs" />, принимаемые от только что полученного внешнего события.</param>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязок параметров.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> привязок параметров.</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.Roles">
      <summary>Возвращает или задает ссылку на коллекцию ролей рабочего процесса.</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty">
      <summary>Идентифицирует допустимые роли пользователя, которым разрешается отправлять сообщения из основного приложения в данное действие.Поддерживаются роли двух типов — Active Directory и ASP.NET.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>Возвращает имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных.</summary>
      <returns>Возвращает имя очереди WorkflowQueue, в которой действие ожидает поступления данных. </returns>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Создает подписку действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Отменяет подписку действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия.</param>
      <param name="parentEventHandler"> Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)"></member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип доступа для заданного свойства.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
      <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName " />. </returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <summary>Проверяет, что класс <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> настроен правильно.</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Проверяет класс <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> во время компиляции рабочего процесса.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая ошибки данной операции.</returns>
      <param name="manager">Класс <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />, используемый при проверке.</param>
      <param name="obj">Объект <see cref="T:System.Object" />, который требуется проверить.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Workflow.Activities.IEventActivity">
      <summary>Предоставляет методы и свойства, которые должны наследоваться действиями, управляемыми событиями, для создания подписки на события.</summary>
    </member>
    <member name="P:System.Workflow.Activities.IEventActivity.QueueName">
      <summary>Возвращает имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных.</summary>
      <returns>Имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных.</returns>
    </member>
    <member name="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Создает подписку действия <see cref="T:System.Workflow.ComponentModel.Activity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Отменяет подписку действия <see cref="T:System.Workflow.ComponentModel.Activity" /> на событие.</summary>
      <param name="parentContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="T:System.Workflow.Activities.IfElseActivity">
      <summary>Выполняет условный запуск одного из двух или более действий типа <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.IfElseActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.IfElseActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})">
      <summary>Добавляет новую ветвь в <see cref="T:System.Workflow.Activities.IfElseActivity" />, использую коллекцию новых действий для добавления в новую ветвь.</summary>
      <returns>Обновленное действие <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> с новыми ветвями.</returns>
      <param name="activities">Коллекция действий для добавления в новую ветвь.</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)">
      <summary>Добавляет новую ветвь в <see cref="T:System.Workflow.Activities.IfElseActivity" />, использую коллекцию новых действий для добавления в новую ветвь.</summary>
      <returns>Обновленное действие <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> с новыми ветвями.</returns>
      <param name="activities">Коллекция действий для добавления в новую ветвь.</param>
      <param name="branchCondition">Условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, определяющее, должна ли выполняться данная ветвь.</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)"></member>
    <member name="T:System.Workflow.Activities.IfElseBranchActivity">
      <summary>Представляет ветвь действия <see cref="T:System.Workflow.Activities.IfElseActivity" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.IfElseBranchActivity.Condition">
      <summary>Возвращает или задает ссылку на объект <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> для текущего действия ветви.В результате оценки этого условия возвращается значение, указывающее, должна ли быть выполнена данная ветвь.</summary>
      <returns>Объект <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, возвращающий значение, которое указывает, должна ли быть выполнена данная ветвь.</returns>
    </member>
    <member name="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.IfElseBranchActivity.Condition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWebServiceActivity">
      <summary>Вызывает веб-службу через прокси-класс, которые передает и принимает заданные параметры.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.InvokeWebServiceActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.InvokeWebServiceActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked">
      <summary>Происходит при вызове веб-службы.</summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking">
      <summary>Происходит при вызове веб-службы.</summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName">
      <summary>Возвращает или задает имя метода прокси-класса, который вызывается в веб-службе.</summary>
      <returns>Имя метода прокси-класса.Значение по умолчанию — пустой объект <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязок параметров для метода, указанного в свойстве <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> для метода, заданного свойством <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />.Значение по умолчанию — пустая коллекция типа <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass">
      <summary>Возвращает или задает тип прокси-класса, используемого для взаимодействия с веб-службой.</summary>
      <returns>Тип <see cref="T:System.Type" /> прокси-сервера, используемого для запуска веб-службы.Значение по умолчанию — пустой объект <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId">
      <summary>Возвращает или задает идентификатор сеанса, указывающий, используется в действии общий сеанс или же новый сеанс.</summary>
      <returns>Идентификатор, который содержит свойство <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionID" /> предыдущего сеанса или пустой объект <see cref="T:System.String" />, указывающий, что будет использоваться новый сеанс.Значение по умолчанию — пустой объект <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип доступа для заданного свойства.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
      <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName " />. </returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <summary>Содержит данные события, используемые для вызова веб-службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />.</summary>
      <param name="proxyInstance">Объект <see cref="T:System.Object" /> прокси-сервера веб-службы для осуществления исходящих вызовов веб-службы.</param>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy">
      <summary>Возвращает прокси-класс, который обеспечивает взаимодействие с веб-службой.</summary>
      <returns>Объект <see cref="T:System.Object" /> прокси-сервера, который обеспечивает взаимодействие с веб-службой.</returns>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWorkflowActivity">
      <summary>Асинхронно запускает один рабочий процесс из другого.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.InvokeWorkflowActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.InvokeWorkflowActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId">
      <summary>Возвращает объект <see cref="T:System.Guid" />, определяющий только что созданный экземпляр рабочего процесса.</summary>
      <returns>Объект <see cref="T:System.Guid" />, определяющий только что созданный экземпляр рабочего процесса.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking">
      <summary>Происходит перед вызовом рабочего процесса. </summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings">
      <summary>Возвращает коллекцию параметров для привязки. </summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />, содержащая привязки параметров для вызываемого рабочего процесса.Значение по умолчанию — пустой объект <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>Определяет, может ли тип <see cref="T:System.Type" /> фильтроваться рабочим процессом.</summary>
      <returns>Значение true, если заданный тип <see cref="T:System.Type" /> можно фильтровать, в противном случае — значение false.</returns>
      <param name="type">Тип, который должен фильтроваться рабочим процессом.</param>
      <param name="throwOnError">Значение true, чтобы создавалось сообщение об ошибке, когда заданный тип не может фильтроваться, в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="type" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <paramref name="throwonError" /> имеет значение true.Это означает, что <paramref name="type" /> является типом времени разработки.</exception>
      <exception cref="T:System.Exception">
        <paramref name="type" /> не является корневым действием.</exception>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>Возвращает описание фильтра, используемого рабочим процессом.</summary>
      <returns>Описание фильтра, используемого рабочим процессом.</returns>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow">
      <summary>Возвращает или задает тип <see cref="T:System.Type" /> вызываемого рабочего процесса.</summary>
      <returns>Полное имя вызываемого рабочего процесса.Значение по умолчанию — null.</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ListenActivity">
      <summary>Обеспечивает ожидание рабочим процессом любого из возможных событий перед продолжением действия.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ListenActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ListenActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)"></member>
    <member name="T:System.Workflow.Activities.MessageEventSubscription">
      <summary>Создает подписку на события сообщений для перенаправления сообщений в соответствующий экземпляр рабочего процесса.</summary>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.MessageEventSubscription" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.MessageEventSubscription" />, используя заданное имя очереди и ИД экземпляра.</summary>
      <param name="queueName">Понятное имя, определяющее очередь.</param>
      <param name="instanceId">Значение <see cref="T:System.Guid" />, определяющее экземпляр рабочего процесса.</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.MessageEventSubscription" />, используя заданное имя очереди, ИД экземпляра и ИД подписки.</summary>
      <param name="queueName">Понятное имя, определяющее очередь.</param>
      <param name="instanceId">Значение <see cref="T:System.Guid" />, определяющее экземпляр рабочего процесса.</param>
      <param name="subscriptionId">Значение <see cref="T:System.Guid" />, определяющее идентификатор подписки.</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.MessageEventSubscription" />, используя заданное имя очереди, ИД экземпляра, тип интерфейса и имя операции.</summary>
      <param name="queueName">Понятное имя, определяющее очередь.</param>
      <param name="subscriptionId">Значение <see cref="T:System.Guid" />, определяющее идентификатор подписки.</param>
      <param name="interfaceType">Тип <see cref="T:System.Type" /> интерфейса.</param>
      <param name="operation">Имя события в интерфейсе, представляющее операцию обмена сообщениями, для которой создается подписка.</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.MessageEventSubscription" />, используя заданное имя очереди, ИД экземпляра, тип интерфейса, операции и ИД подписки.</summary>
      <param name="queueName">Понятное имя, определяющее очередь.</param>
      <param name="instanceId">Значение <see cref="T:System.Guid" />, определяющее экземпляр рабочего процесса.</param>
      <param name="interfaceType">Тип <see cref="T:System.Type" /> интерфейса.</param>
      <param name="operation">Имя события в интерфейсе, представляющее операцию обмена сообщениями, для которой создается подписка.</param>
      <param name="subscriptionId">Значение <see cref="T:System.Guid" />, определяющее идентификатор подписки.</param>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties">
      <summary>Возвращает коллекцию свойств корреляции для сообщения, которая позволит сопоставить входящее сообщение с действием <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</summary>
      <returns>Список свойств корреляции для сообщения, который позволит сопоставить входящее сообщение с действием <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType">
      <summary>Возвращает или задает тип интерфейса.</summary>
      <returns>Тип <see cref="T:System.Type" /> интерфейса.</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.MethodName">
      <summary>Возвращает или задает имя метода.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.QueueName">
      <summary>Возвращает или задает имя очереди, к которой принадлежит подписка. </summary>
      <returns>Имя, которое определяет очередь, к которой принадлежит подписка.</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId">
      <summary>Возвращает или задает уникальный идентификатор данной подписки.</summary>
      <returns>Значение <see cref="T:System.Guid" />, определяющее идентификатор подписки.</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId">
      <summary>Возвращает или задает InstanceId рабочего процесса, для которого была создана эта подписка.</summary>
      <returns>Значение <see cref="T:System.Guid" />, определяющее экземпляр рабочего процесса.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ParallelActivity">
      <summary>Выполняет ряд дочерних действий.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ParallelActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ParallelActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)"></member>
    <member name="T:System.Workflow.Activities.PolicyActivity">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.Workflow.Activities.Rules.Rule" />, которые должны выполняться во время выполнения рабочего процесса в рамках одного шага или действия.</summary>
    </member>
    <member name="M:System.Workflow.Activities.PolicyActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.PolicyActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.PolicyActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.PolicyActivity.RuleSetReference">
      <summary>Возвращает или задает ссылку на объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> в файле RULES.</summary>
      <returns>Ссылка <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" /> на объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> в файле RULES.</returns>
    </member>
    <member name="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ReplicatorActivity">
      <summary>Запускает несколько экземпляров дочернего действия.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ReplicatorActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete">
      <summary>Возвращает значение, указывающее, завершены ли все дочерние экземпляры.</summary>
      <returns>true, если все дочерние экземпляры завершены; в противном случае — false.</returns>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted">
      <summary>Происходит непосредственно после того, как <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> завершает выполнение экземпляра дочернего действия.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent">
      <summary>Происходит при завершении экземпляра дочернего действия <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized">
      <summary>Происходит непосредственно после инициализации дочернего действия.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent">
      <summary>Происходит при инициализации экземпляра дочернего действия <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.Completed">
      <summary>Происходит при завершении действия <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent">
      <summary>Происходит при завершении <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData">
      <summary>Возвращает список всех дочерних действий.</summary>
      <returns>Список всех дочерних действий.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex">
      <summary>Возвращает индекс позиции текущего дочернего действия.</summary>
      <returns>Индекс позиции текущего дочернего действия.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities">
      <summary>Возвращает массив выполняющихся экземпляров дочерних действий. </summary>
      <returns>Массив выполняющихся в данный момент экземпляров дочерних действий.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType">
      <summary>Возвращает или задает свойство <see cref="T:System.Workflow.Activities.ExecutionType" /> для объекта <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ExecutionType" /> для <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData">
      <summary>Возвращает или задает список данных дочерних действий.</summary>
      <returns>Список данных дочерних действий.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.Initialized">
      <summary>Происходит, когда начинается выполнение <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)">
      <summary>Указывает, выполняется ли в данный момент указанное дочернее действие. </summary>
      <returns>Значение true, если выполняется дочернее действие; в противном случае — значение false.</returns>
      <param name="index">Индекс позиции дочернего действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition">
      <summary>Возвращает или задает условие завершения, указывающее, когда должно быть завершено выполнение <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <returns>Условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, определяющие, завершено ли выполнение <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <summary>Содержит аргументы событий для обработчиков действия <see cref="T:System.Workflow.Activities.ReplicatorActivity" />, вызываемых при инициализации дочерних экземпляров <see cref="T:System.Workflow.ComponentModel.Activity" /> в дополнение к обработчикам, вызываемым при завершении выполнения дочерних экземпляров <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ReplicatorChildEventArgs" />.</summary>
      <param name="instanceData">Экземпляр объекта, представляющий контекст данных или выполнения, связанный с текущим дочерним экземпляром <see cref="T:System.Workflow.ComponentModel.Activity" />, выполняемым через действие <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</param>
      <param name="activity">Дочернее действие <see cref="T:System.Workflow.ComponentModel.Activity" /> текущего экземпляра <see cref="T:System.Workflow.Activities.ReplicatorActivity" />, вызвавшего событие.</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity">
      <summary>Возвращает дочернее действие или шаблон действия <see cref="T:System.Workflow.ComponentModel.Activity" /> экземпляра <see cref="T:System.Workflow.Activities.ReplicatorActivity" />, вызвавшего это событие.</summary>
      <returns>Экземпляр класса <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий дочернее действие вызвавшего это событие действия <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData">
      <summary>Возвращает текущий элемент в перечисляемой коллекции <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</summary>
      <returns>Текущий элемент в перечисляемой коллекции <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.SequenceActivity">
      <summary>Выполняет набор дочерних действий в соответствии с единым определенным порядком.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SequenceActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SequenceActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Отменяет выполнение действия.</summary>
      <returns>Состояние <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> действия после отмены выполнения.</returns>
      <param name="executionContext">Контекст выполнения действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Выполняет действие.</summary>
      <returns>Состояние <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> действия после выполнения действия.</returns>
      <param name="executionContext">Контекст выполнения действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>Вызывается при возникновении исключения в контексте выполнения данного экземпляра.</summary>
      <returns>Состояние выполнения действия.</returns>
      <param name="executionContext">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
      <param name="exception">Исключение <see cref="T:System.Exception" />, вызвавшее этот сбой.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>Вызывается при удалении действия.</summary>
      <param name="executionContext">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
      <param name="removedActivity">Заданный объект <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>При переопределении в производном классе определяет операцию, выполняемую объектом <see cref="T:System.Workflow.Activities.SequenceActivity" /> после завершения выполнения действия.</summary>
      <param name="executionContext">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="executionContext" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Вызывается после внесения изменений в коллекцию <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> этого экземпляра.</summary>
      <param name="executionContext">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
    </member>
    <member name="T:System.Workflow.Activities.SequentialWorkflowActivity">
      <summary>Представляет рабочий процесс, который выполняет действия последовательно. </summary>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed">
      <summary>Происходит после завершения рабочего процесса.</summary>
    </member>
    <member name="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition">
      <summary>Возвращает или задает условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, при котором в рабочем процессе могут быть выполнены динамические обновления, когда этот рабочий процесс переопределен в производном классе.</summary>
      <returns>Условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, определяющее, когда могут быть выполнены динамические обновления.</returns>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Выполняет рабочий процесс.</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> в действии <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> в конце затребованной операции.</returns>
      <param name="executionContext">Тип <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, связанный с <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized">
      <summary>Происходит при инициализации рабочего процесса.</summary>
    </member>
    <member name="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Вызывает <see cref="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" /> для <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" />.</summary>
      <param name="executionContext">Тип <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, связанный с <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Workflow.Activities.SetStateActivity">
      <summary>Обеспечивает переход к действию <see cref="T:System.Workflow.Activities.StateActivity" /> в рабочем процессе конечного автомата.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SetStateActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SetStateActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.SetStateActivity.TargetStateName">
      <summary>Возвращает или задает имя целевого состояния.</summary>
      <returns>Имя целевого потока.</returns>
    </member>
    <member name="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.SetStateActivity.TargetStateName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.SetStateEventArgs">
      <summary>Представляет класс, используемый в качестве аргумента для установки состояния <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SetStateEventArgs" />.</summary>
      <param name="targetStateName">Состояние, в которое требуется установить <see cref="T:System.Workflow.Activities.StateActivity" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName">
      <summary>Возвращает состояние, в которое требуется установить <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Состояние, в которое требуется установить <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.StateActivity">
      <summary>Представляет состояние в <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Отменяет выполнение действия <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Текущее состояние действия <see cref="T:System.Workflow.ComponentModel.Activity" /> в выполняющемся экземпляре рабочего процесса.</returns>
      <param name="executionContext">Контекст выполнения для действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Выполняет действие <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Текущее состояние действия <see cref="T:System.Workflow.ComponentModel.Activity" /> в выполняющемся экземпляре рабочего процесса.</returns>
      <param name="executionContext">Контекст выполнения для действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)">
      <summary>Возвращает выполняющийся экземпляр действия <see cref="T:System.Workflow.ComponentModel.Activity" />, соответствующий указанному имени дочернего действия.</summary>
      <returns>Динамические дочерние действия. </returns>
      <param name="childActivityName">Дочернее действие.</param>
      <exception cref="T:System.ArgumentException">Выполняющиеся действия не содержат параметра <paramref name="childActivityName" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)">
      <summary>Инициализирует класс <see cref="T:System.Workflow.Activities.StateActivity" />, используя поставщика службы.</summary>
      <param name="provider">Поставщик службы, от которого следует получать службы.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>Определяет, является ли добавляемое действие действием <see cref="T:System.Workflow.Activities.EventDrivenActivity" />; если является, проверяет, требуется ли подписка на новое добавляемое действие, управляемое событиями.</summary>
      <param name="executionContext">Контекст выполнения для действия.</param>
      <param name="addedActivity">Действие, добавленное в класс <see cref="T:System.Workflow.Activities.StateActivity" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)">
      <summary>Вызывается механизмом среды выполнения рабочих процессов и является частью перехода действия в состояние <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" />.</summary>
      <param name="provider">Поставщик службы, от которого следует получать службы.</param>
    </member>
    <member name="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey">
      <summary>Содержит строковое значение ключа данных отслеживания изменений: "StateActivity.StateChange".Это поле является константой.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.StateActivityValidator">
      <summary>Представляет класс, который проверяет, правильно ли настроен класс <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateActivityValidator" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Проверяет класс <see cref="T:System.Workflow.Activities.StateActivity" /> во время компиляции рабочего процесса.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая ошибки данной операции.</returns>
      <param name="manager">Класс <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />, используемый при проверке.</param>
      <param name="obj">Объект <see cref="T:System.Object" />, который требуется проверить.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>Проверяет изменения, внесенные в класс <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая ошибки данной операции.</returns>
      <param name="activity">Имя класса <see cref="T:System.Workflow.Activities.StateActivity" />, который требуется проверить.</param>
      <param name="action">Действие, применяемое к классу <see cref="T:System.Workflow.Activities.StateActivity" />.</param>
    </member>
    <member name="T:System.Workflow.Activities.StateFinalizationActivity">
      <summary>Представляет действие, выполняющее содержащиеся действия перед переходом в другое состояние в рабочем процессе конечного автомата.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateFinalizationActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateFinalizationActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="T:System.Workflow.Activities.StateInitializationActivity">
      <summary>Выступает в качестве контейнера для группы действий, которые выполняются при запуске действия <see cref="T:System.Workflow.Activities.StateActivity" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateInitializationActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateInitializationActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <summary>Служит в качестве корневого контейнера для рабочих процессов конечного автомата.Содержит действия и состояния, управляемые событиями.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName">
      <summary>Возвращает или задает конечное действие <see cref="T:System.Workflow.Activities.StateActivity" /> рабочего процесса.</summary>
      <returns>Конечное действие <see cref="T:System.Workflow.Activities.StateActivity" /> рабочего процесса.</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName">
      <summary>Возвращает имя выполняющегося в данный момент действия <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Имя текущего действия <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition">
      <summary>Возвращает или задает условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, определяющее возможность выполнения динамических обновлений в рабочем процессе, когда он переопределен в производном классе.</summary>
      <returns>Условие <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />, определяющее, когда могут быть выполнены динамические обновления.</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName">
      <summary>Возвращает или задает действие <see cref="T:System.Workflow.Activities.StateActivity" />, в котором находится действие <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> при создании экземпляра конечного автомата.</summary>
      <returns>Действие <see cref="T:System.Workflow.Activities.StateActivity" />, в котором находится действие <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> при создании экземпляра конечного автомата.</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName">
      <summary>Возвращает имя ранее выполненного действия <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Имя предыдущего действия <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName">
      <summary>Имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, используемой для изменения состояния <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.Это поле является константой.</summary>
    </member>
    <member name="T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <summary>Представляет класс, который управляет текущим экземпляром <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" />.</summary>
      <param name="runtime">Текущая среда выполнения рабочего процесса.</param>
      <param name="instanceId">Значение <see cref="T:System.Guid" />, указывающее экземпляр <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="runtime" /> является пустой ссылкой (Nothing в Visual Basic). илиПараметр <paramref name="instanceId" /> является пустым значением <see cref="T:System.Guid" />.</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState">
      <summary>Возвращает выполняющееся в данный момент действие <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Текущий объект <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName">
      <summary>Возвращает имя текущего действия <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Имя текущего действия <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)">
      <summary>Отправляет сообщение в экземпляр <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" />.</summary>
      <param name="queueName">Имя очереди рабочего процесса.</param>
      <param name="item">Объект для постановки в очередь.</param>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
      <summary>Отправляет сообщение в экземпляр <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" />.</summary>
      <param name="queueName">Имя очереди рабочего процесса.</param>
      <param name="item">Объект для постановки в очередь.</param>
      <param name="pendingWork">Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, позволяющий отправителю получить уведомление при доставке элемента.</param>
      <param name="workItem">Объект, подлежащий передаче в методы <see cref="T:System.Workflow.Runtime.IPendingWork" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId">
      <summary>Возвращает значение <see cref="T:System.Guid" />, указывающее текущий экземпляр <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</summary>
      <returns>Значение <see cref="T:System.Guid" />, указывающее текущий экземпляр <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions">
      <summary>Возвращает коллекцию переходов между состояниями, которые может выполнять текущее действие <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <returns>Коллекция переходов между состояниями, которые может выполнять текущее действие <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)">
      <summary>Обеспечивает переход к заданному действию <see cref="T:System.Workflow.Activities.StateActivity" />, используя имя действия <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <param name="targetStateName">Имя действия <see cref="T:System.Workflow.Activities.StateActivity" />, к которому должен быть осуществлен переход.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetStateName" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Действие <see cref="T:System.Workflow.Activities.StateActivity" />, заданное параметром <paramref name="targetStateName" />, является пустой ссылкой (Nothing).</exception>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)">
      <summary>Обеспечивает переход к заданному действию <see cref="T:System.Workflow.Activities.StateActivity" />.</summary>
      <param name="targetState">Действие <see cref="T:System.Workflow.Activities.StateActivity" />, к которому должен быть осуществлен переход.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetState" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory">
      <summary>Возвращает коллекцию связанных с состояниями действий, через которые прошел экземпляр рабочего процесса конечного автомата.</summary>
      <returns>Коллекция переходов, выполненных действием <see cref="T:System.Workflow.Activities.StateActivity" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow">
      <summary>Возвращает самое последнее определение <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</summary>
      <returns>Самое последнее определение <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</returns>
      <exception cref="T:System.InvalidOperationException">Если рабочий процесс уже завершен, текущее действие <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> получить невозможно, поэтому извлекается предыдущее определение.</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.States">
      <summary>Возвращает список классов <see cref="T:System.Workflow.Activities.StateActivity" /> в рабочем процессе <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />.</summary>
      <returns>Список классов <see cref="T:System.Workflow.Activities.StateActivity" /> в рабочем процессе <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />.</returns>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance">
      <summary>Возвращает текущий объект <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</summary>
      <returns>Текущий объект <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceFaultActivity">
      <summary>Позволяет из рабочего процесса отправлять клиенту веб-службы сообщение об ошибке.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceFaultActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceFaultActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceFaultActivity.Fault">
      <summary>Возвращает или задает исключение, вызвавшее остановку веб-службы.</summary>
      <returns>Исключение, вызвавшее остановку веб-службы.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty">
      <summary>Содержит значение исключения, которое было создано при возникновении ошибки в выполнении действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName">
      <summary>Возвращает или задает имя предыдущего действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <returns>Имя предыдущего действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty">
      <summary>Представляет имя действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />, связанного с ошибкой.Ошибка возникает в методе, связанном с действием <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault">
      <summary>Происходит перед отправкой клиенту сообщения об ошибке и позволяет добавить к этому сообщению информацию.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent">
      <summary>Определяет делегат события, который выполняется перед отправкой сообщения об ошибке объекту, вызвавшему метод.В этом обработчике можно задать значение свойства ошибки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceInputActivity">
      <summary>Разрешает прием данных из веб-службы в рабочем процессе.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived">
      <summary>Происходит при получении действием <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> входных данных.</summary>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent">
      <summary>Определяет делегат события, который выполняется после того, как действие получает ожидаемый вызов в результате вызова веб-службы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType">
      <summary>Возвращает или задает тип интерфейса, который определяет метод, по которому данное действие ожидает передачи данных.</summary>
      <returns>Тип интерфейса.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty">
      <summary>Соответствует имени интерфейса, используемого в качестве контракта веб-службы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating">
      <summary>Возвращает или задает значение, указывающее, должен ли при приеме данных запускаться рабочий процесс.</summary>
      <returns>true, если при приеме данных должен запускаться рабочий процесс; в противном случае — false.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.MethodName">
      <summary>Возвращает или задает имя метода в интерфейсе, указанном свойством <see cref="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />, которое представляется данным действием <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <returns>Имя метода в интерфейсе, указанном свойством <see cref="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />, которое представляется данным действием <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />. </returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty">
      <summary>Соответствует имени одного из методов, содержащихся в интерфейсе, используемом в качестве контракта веб-службы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязок, связанных с входными параметрами для метода, указанного в свойстве <see cref="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />.</summary>
      <returns>Коллекция свойств, используемых в качестве входных параметров в методе, указанном свойством <see cref="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.Roles">
      <summary>Возвращает или задает коллекцию ролей, которым разрешается передавать данные в действие <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" />, содержащая роли веб-службы, которым разрешается передавать данные в действие <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty">
      <summary>Идентифицирует допустимые роли пользователя, которым разрешается отправлять сообщения из клиента веб-службы в действие <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.Поддерживаются роли двух типов — Active Directory и ASP.NET.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>Возвращает имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных.</summary>
      <returns>Имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных. </returns>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Создает подписку действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> на событие.</summary>
      <param name="parentContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Отменяет подписку действия <see cref="T:System.Workflow.ComponentModel.Activity" /> на событие.</summary>
      <param name="parentContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</param>
      <param name="parentEventHandler">Объект <see cref="T:System.EventHandler" /> для родительского события.</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип доступа для заданного свойства.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
      <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName " />. </returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceOutputActivity">
      <summary>Разрешает передачу данных в веб-службу из рабочего процесса.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName">
      <summary>Возвращает или задает имя предшествующего класса <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <returns>Имя предшествующего класса <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty">
      <summary>Определяет имя действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />, с которым сопоставляется данное действие <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязок, связанных с аргументом ref или out и возвращаемым значением соответствующего метода <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</summary>
      <returns>Эта коллекция используется для привязки исходящих параметров к расположениям в рабочем процессе.Когда выполняется действие <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" />, оно извлекает значения из расположений, к которым осуществлена привязка, и возвращает их в блокированный метод веб-службы.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput">
      <summary>Происходит перед тем, как действие <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> передает выходные данные клиенту.</summary>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent">
      <summary>Определяет делегат события, который выполняется перед тем, как действие передает выходные данные вызова веб-службы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип доступа для заданного свойства.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
      <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName " />. </returns>
      <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
      <param name="propertyName">Имя свойства. </param>
    </member>
    <member name="T:System.Workflow.Activities.WebWorkflowRole">
      <summary>Представляет роль рабочего процесса, обеспечиваемую поставщиком <see cref="T:System.Web.Security.RoleProvider" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Workflow.Activities.WebWorkflowRole" />, используя указанное имя роли. </summary>
      <param name="roleName">Строка, которая определяет имя роли.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> содержит ссылку на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Workflow.Activities.WebWorkflowRole" />, используя указанное имя роли и поставщика ролей. </summary>
      <param name="roleName">Строка, которая определяет имя роли.</param>
      <param name="provider">Строка, которая определяет поставщик ролей.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> содержит ссылку на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities">
      <summary>Возвращает универсальный список учетных записей ASP.NET, связанных с ролью <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</summary>
      <returns>Универсальный список строковых значений, представляющих учетные записи ASP.NET, связанные с ролью <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли коллекция <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> указанное удостоверение.</summary>
      <returns>Значение true, если коллекция <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> содержит указанный идентификатор; в противном случае — false.</returns>
      <param name="identity">Имя удостоверения, наличие которое требуется проверить.</param>
    </member>
    <member name="P:System.Workflow.Activities.WebWorkflowRole.Name">
      <summary>Возвращает или задает имя <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</summary>
      <returns>Строка, содержащая имя класса <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Workflow.Activities.WebWorkflowRole.Name" /> была присвоена пустая ссылка (Nothing в Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider">
      <summary>Возвращает или задает поставщик ролей для <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</summary>
      <returns>Строка, содержащая поставщик ролей для <see cref="T:System.Workflow.Activities.WebWorkflowRole" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.WhileActivity">
      <summary>Многократно выполняет дочернее действие, пока остается истинным заданное условие.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WhileActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WhileActivity" />, используя имя действия.</summary>
      <param name="name">Пользовательское имя действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.WhileActivity.Condition">
      <summary>Возвращает или задает условие, определяющее, должно действие<see cref="T:System.Workflow.Activities.WhileActivity" /> выполняться или завершаться.</summary>
      <returns>Если свойство <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> оказывается равным true, то выполнение <see cref="T:System.Workflow.Activities.WhileActivity" /> продолжается.Если свойство <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> оказывается равным false, то выполнение <see cref="T:System.Workflow.Activities.WhileActivity" /> завершается.</returns>
    </member>
    <member name="F:System.Workflow.Activities.WhileActivity.ConditionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.WhileActivity.Condition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WhileActivity.DynamicActivity">
      <summary>Возвращает динамические дочерние действия в действии <see cref="T:System.Workflow.Activities.WhileActivity" />.</summary>
      <returns>Динамические дочерние действия в действии <see cref="T:System.Workflow.Activities.WhileActivity" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Определяет процедуру обработки при возникновении события, для которого создана подписка.</summary>
      <param name="sender">Объект, создавший событие.</param>
      <param name="e">Ранее введенные аргументы события.</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowAuthorizationException">
      <summary>Исключение, которое вызывается при сбое проверки роли из–за отсутствия указанного идентификатора в <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />, используя сериализованные данные.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />, используя указанное сообщение и <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее исключение <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" />, используя имя действия и участника.</summary>
      <param name="activityName">Имя действия <see cref="T:System.Workflow.ComponentModel.Activity" />, в котором произошло исключение.</param>
      <param name="principalName">Имя пользователя или сущности, от имени которой было вызвано исключение авторизации рабочего процесса.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowRole">
      <summary>Абстрактный базовый класс, производными которого являются роли рабочего процесса.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowRole" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
      <summary>Если реализован в производном классе, возвращает идентификации, содержащиеся в этом классе <see cref="T:System.Workflow.Activities.WorkflowRole" />.</summary>
      <returns>Список имен идентификаций, содержащихся в этом классе <see cref="T:System.Workflow.Activities.WorkflowRole" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
      <summary>При реализации в производном классе возвращает значение, указывающее, содержит ли эта роль указанную идентификацию.</summary>
      <returns>true, если параметр <paramref name="identity" /> содержится в этом классе <see cref="T:System.Workflow.Activities.WorkflowRole" />; в противном случае — false.</returns>
      <param name="identity">Имя идентификации, наличие которой требуется проверить.</param>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowRole.Name">
      <summary>Если реализован в производном классе, возвращает или задает имя этого класса <see cref="T:System.Workflow.Activities.WorkflowRole" />.</summary>
      <returns>Имя класса <see cref="T:System.Workflow.Activities.WorkflowRole" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowRoleCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Workflow.Activities.WorkflowRole" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли коллекция <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> указанное удостоверение.</summary>
      <returns>Принимает значение true, если коллекция <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> содержит идентификатор, и значение false — в противном случае. </returns>
      <param name="identity">Строка, содержащая удостоверение, которое требуется найти.</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowSubscriptionService">
      <summary>Предоставляет методы для службы подписки, позволяющие управлять подписками для среды выполнения рабочих процессов.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)">
      <summary>При переопределении в производном классе уведомляет службу <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" /> о том, что среда выполнения рабочего процесса создала заданную подписку <see cref="T:System.Workflow.Activities.MessageEventSubscription" />. </summary>
      <param name="subscription">Класс <see cref="T:System.Workflow.Activities.MessageEventSubscription" />, созданный средой выполнения рабочего процесса.</param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)">
      <summary>При переопределении в производном классе уведомляет службу <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" /> о том, что среда выполнения рабочего процесса удалила подписку, связанную с заданным значением GUID. </summary>
      <param name="subscriptionId">Идентификатор GUID подписки, удаленной средой выполнения рабочего процесса.</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowWebService">
      <summary>Представляет базовый класс для всех веб-служб рабочего процесса.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowWebService" />.</summary>
      <param name="workflowType">Тип <see cref="T:System.Type" /> рабочего процесса. </param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])">
      <summary>Вызывает связанный рабочий процесс и получает ответ.</summary>
      <returns>Объект, возвращаемый веб-службой.</returns>
      <param name="interfaceType">Тип интерфейса.</param>
      <param name="methodName">Имя метода.</param>
      <param name="isActivation">Указывает, активирует ли веб-служба рабочий процесс.</param>
      <param name="parameters">Параметры метода, заданные параметром <paramref name="methodName" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime">
      <summary>Предоставляет доступ к текущему свойству <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, которое выполняет рабочий процесс.</summary>
      <returns>Текущее свойство <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration">
      <summary>Представляет раздел в файле конфигурации, посвященный классу ролей.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DirectReports">
      <summary>Возвращает или задает имена подчиненных.</summary>
      <returns>Имена подчиненных.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DistinguishedName">
      <summary>Возвращает или задает различающееся имя экземпляра.</summary>
      <returns>Различающееся имя экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Group">
      <summary>Возвращает или задает имя группы для данного экземпляра.</summary>
      <returns>Имя группы для данного экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Manager">
      <summary>Возвращает или задает имя руководителя, связанного с данным экземпляром.</summary>
      <returns>Имя руководителя, связанного с данным экземпляром.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Member">
      <summary>Возвращает или задает член для данного экземпляра.</summary>
      <returns>Член для данного экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.RootPath">
      <summary>Возвращает или задает корневой путь для данного экземпляра.</summary>
      <returns>Корневой путь для данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.AddedConditionAction">
      <summary>Представляет добавление набора правил <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> в рабочий процесс во время динамического обновления.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.AddedConditionAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.AddedConditionAction" />, используя определение добавляемого условия.</summary>
      <param name="addedConditionDefinition">Условие, добавляемое в рабочий процесс.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedConditionDefinition" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition">
      <summary>Возвращает или задает объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для добавления в рабочий процесс.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для добавления в рабочий процесс.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionName">
      <summary>Возвращает строку, содержащую имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, добавленного в рабочий процесс.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, добавленного в рабочий процесс.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.AddedRuleSetAction">
      <summary>Представляет добавление набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> во время динамического обновления.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.AddedRuleSetAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.AddedRuleSetAction" />, используя новый набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="addedRuleSetDefinition">Новый набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetDefinition">
      <summary>Возвращает или задает новый набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Новый набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetName">
      <summary>Возвращает имя нового набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Имя нового набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.IRuleExpression">
      <summary>Представляет базовый класс, от которого должны наследоваться модули записи пользовательских выражений.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>При переопределении в производном классе предоставляет сведения о том, как объект использует поля и свойства в типе контекста.</summary>
      <param name="analysis">Метод <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> для хранения полей и свойств, считываемых условием или действием.</param>
      <param name="isRead">Значение true, если выполняется чтение из выражения; значение false, если чтение из выражения не выполняется.</param>
      <param name="isWritten">Значение true, если выполняется запись в выражение; значение false, если запись в выражение не выполняется.</param>
      <param name="qualifier">Путь поля или свойства.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Clone">
      <summary>При переопределении в производном классе создает глубокую копию текущего экземпляра <see cref="T:System.CodeDom.CodeExpression" />.</summary>
      <returns>Глубокая копия текущего экземпляра <see cref="T:System.CodeDom.CodeExpression" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)">
      <summary>При переопределении в производном классе декомпилирует пользовательское выражение в формат строки.</summary>
      <param name="stringBuilder">Изменяемая строка для декомпилированного выражения.Этот метод должен добавлять декомпилированный синтаксис для данной части выражения.</param>
      <param name="parentExpression">Родительское кодовое выражение.Его можно использовать для определения приоритета операторов и необходимости заключать часть выражения в скобки.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>При переопределении в производном классе вычисляет пользовательское выражение.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />, определяющий результат выполнения правила.</returns>
      <param name="execution">Объект <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> для выполнения выражения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)">
      <summary>Сравнивает текущее выражение с другим выражением, чтобы определить, равны ли они.</summary>
      <returns>Значение true, если выражения равны, в противном случае значение false.</returns>
      <param name="expression">Выражение для сравнение с текущим выражением.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <summary>При переопределении в производном классе проверяет, что выражение настроено правильно и не содержит ошибок.</summary>
      <returns>Класс <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> для выражения.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <param name="isWritten">Значение true, если выполняется запись в выражение; значение false, если запись в выражение не выполняется.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RemovedConditionAction">
      <summary>Представляет удаление набора правил <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> из рабочего процесса во время динамического обновления.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RemovedConditionAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RemovedConditionAction" />, используя определение удаляемого условия.</summary>
      <param name="removedConditionDefinition">Условие, удаляемое из рабочего процесса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedConditionDefinition" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition">
      <summary>Возвращает или задает объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для удаления из рабочего процесса.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для удаления из рабочего процесса.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionName">
      <summary>Возвращает строку, содержащую имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для удаления из рабочего процесса.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для удаления из рабочего процесса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RemovedRuleSetAction">
      <summary>Представляет удаление набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> во время динамического обновления.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />, используя объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленный из рабочего процесса.</summary>
      <param name="removedRuleSetDefinition">Объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленный из рабочего процесса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="removedRuleSetDefinition" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetDefinition">
      <summary>Возвращает или задает объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленный из рабочего процесса.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленный из рабочего процесса.</returns>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для удаления из рабочего процесса является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetName">
      <summary>Возвращает имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленного из рабочего процесса.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, удаленного из рабочего процесса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Rule">
      <summary>Определяет условие и связанный с ним набор действий, которые необходимо выполнить.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Rule" />, используя имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <param name="name">Имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Rule" />, используя имя правила Rule, условие правила и список действий THEN.</summary>
      <param name="name">Имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
      <param name="condition">
        <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
      <param name="thenActions">Коллекция объектов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для вычисления, если условие истинно.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Rule" />, используя имя правила Rule, условие правила, список действий THEN и список действий ELSE.</summary>
      <param name="name">Имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
      <param name="condition">
        <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
      <param name="thenActions">Коллекция объектов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для вычисления, если условие истинно.</param>
      <param name="elseActions">Коллекция объектов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для вычисления, если условие ложно.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Active">
      <summary>Возвращает или задает значение, указывающее, требуется ли вычислять правило <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Значение true, если требуется вычислять правило, в противном случае значение false.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.Rule" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Condition">
      <summary>Возвращает или задает объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для вычисляемого правила <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для вычисляемого правила <see cref="T:System.Workflow.Activities.Rules.Rule" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Description">
      <summary>Возвращает или задает описание объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Описание объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ElseActions">
      <summary>Возвращает коллекцию классов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для выполнения блока ELSE.</summary>
      <returns>Коллекция классов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для выполнения блока ELSE.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)">
      <summary>Определяет, имеют ли одинаковые значения экземпляр <see cref="T:System.Workflow.Activities.Rules.Rule" /> и объект, переданный в качестве параметра.</summary>
      <returns>Значение true, если текущий объект и объект <paramref name="obj" /> совпадают, в противном случае значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Priority">
      <summary>Возвращает или задает значение, указывающее порядок выполнения <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Значение, указывающее порядок выполнения <see cref="T:System.Workflow.Activities.Rules.Rule" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior">
      <summary>Возвращает или задает значение, показывающее, разрешено ли повторное вычисление правила <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Значение <see cref="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" />, показывающее, разрешено ли повторное вычисления правила <see cref="T:System.Workflow.Activities.Rules.Rule" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ThenActions">
      <summary>Возвращает коллекцию классов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для выполнения блока THEN.</summary>
      <returns>Коллекция классов <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> для выполнения блока THEN.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAction">
      <summary>Представляет абстрактный класс, определяющий действие, которое следует выполнить, если результатом связанного выражения <see cref="P:System.Workflow.Activities.Rules.Rule.Condition" /> является значение true для свойства <see cref="P:System.Workflow.Activities.Rules.Rule.ThenActions" /> или false для свойства <see cref="P:System.Workflow.Activities.Rules.Rule.ElseActions" />.Этот класс должен наследоваться.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Выполняет действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> с использованием указанного экземпляра <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />.</summary>
      <param name="context">Состояние среды выполнения, в котором выполняется действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает поля и свойства, обновленные с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Коллекция строк, представляющая имена полей и свойств, которые изменяются действием <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, который ранее использовался при вызове метода <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Проверяет, что действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> настроено правильно и не содержит ошибок.</summary>
      <returns>Значение true, если объект <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> проходит проверку и не содержит ошибок, в противном случае — значение false.</returns>
      <param name="validator">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent">
      <summary>Содержит имя, ИД экземпляра и результат вычисления условия правила.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.ConditionResult">
      <summary>Возвращает результат вычисления условия.</summary>
      <returns>Результат вычисления условия правила: true или false.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.RuleName">
      <summary>Возвращает имя объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />, вызвавшего исключение <see cref="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" />.</summary>
      <returns>Правило <see cref="T:System.Workflow.Activities.Rules.Rule" />, вызывавшее выполнение одного или нескольких действий.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAnalysis">
      <summary>Сохраняет поля и свойства, считываемые условием или записываемые действием. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <param name="forWrites">Значение типа Boolean, которое указывает, проводится ли анализ операций записи (в случае объектов <see cref="T:System.Workflow.Activities.Rules.RuleAction" />) или чтения (в случае объектов <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)">
      <summary>Добавляет поля и свойства, используемые выражением в качестве символов, в экземпляр <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
      <param name="symbol">Строка, представляющая путь к полю или свойству.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites">
      <summary>Возвращает значение, которое указывает, проводится ли анализ для операций записи и чтения. </summary>
      <returns>Значение true, если анализ проводится для операций записи (в случае объектов <see cref="T:System.Workflow.Activities.Rules.RuleAction" />); значение false, если анализ проводится для операций чтения (в случае объектов <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols">
      <summary>Возвращает список символов из экземпляра <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />. </summary>
      <returns>Список символов экземпляра <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAttribute">
      <summary>Представляет базовый класс для настраиваемых атрибутов <see cref="T:System.Workflow.Activities.Rules.Rule" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAttribute.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleAttribute" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAttributeTarget">
      <summary>Указывает, относится ли путь в атрибуте <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> или <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> к параметру метода или к данному (this) классу.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleAttributeTarget.Parameter">
      <summary>Указывает, что путь является абсолютным путем и начинается с имени параметра, за которым может следовать путь к внутреннему элементу.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleAttributeTarget.This">
      <summary>Указывает, что путь является относительным или абсолютным и начинается с ключевого слова this.</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleChainingBehavior">
      <summary>Задает прямые логические цепочки выполнения для объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.None">
      <summary>Указывает, что цепочки не используются.Каждое правило выполняется только один раз.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.UpdateOnly">
      <summary>Указывает, что цепочки используются, если выполняемые действия явным образом требуют этого при помощи действия <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.Full">
      <summary>Указывает, что при изменении полей или свойств с помощью действий, задании атрибутов <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> для методов, которые вызываются действиями, или при выполнении действия <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> выполнение правил осуществляется по логической цепочке.</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleCondition">
      <summary>Базовый тип для <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> и условий, создаваемых пользователями.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Clone">
      <summary>При переопределении в производном классе создает глубокую копию текущего экземпляра <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>При переопределении в производном классе проверяет условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <returns>Значение true, если результатом выражения <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> является значение true, в противном случае — значение false.</returns>
      <param name="execution">Контекст среды выполнения правила. </param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>При переопределении в производном классе возвращает зависимости условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <returns>Список символов, представляющих сущности, считываемые условием.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, который ранее использовался при вызове метода <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleCondition.Name">
      <summary>Возвращает или задает имя <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized">
      <summary>Вызывается, если всем свойствам были присвоены значения.После этого вызова свойства невозможно изменить.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>При переопределении в производном классе проверяет, что объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> настроен правильно и не содержит ошибок.</summary>
      <returns>Значение true, если объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> не содержит ошибок, в противном случае — значение false.</returns>
      <param name="validation">Экземпляр <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, который используется для управления проверкой правил и условий правил.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <summary>Представляет абстрактный базовый класс, от которого должны наследоваться все уведомления динамического обновления об изменениях условий <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
      <summary>При переопределении в производном классе возвращает имя условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, которое требуется изменить.</summary>
      <returns>Имя условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, которое требуется изменить.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>При переопределении в производном классе проверяет, что объект <see cref="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" /> настроен правильно и не содержит ошибок.</summary>
      <returns>Новая коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />.</returns>
      <param name="activity">Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, в котором происходят изменения <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionCollection">
      <summary>Содержит коллекцию классов <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, определенных в рабочем процессе.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>Добавляет условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> в коллекцию <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />.</summary>
      <param name="item">Условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, добавляемое в коллекцию <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />.</param>
      <exception cref="T:System.Data.ReadOnlyException">Правило <see cref="T:System.Workflow.Activities.Rules.Rule" /> инициализируется во время выполнения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равен null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)">
      <summary>Определяет различие между двумя классами <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />.</summary>
      <returns>Список классов <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" />, которые отвечают за различия между значениями <paramref name="originalDefinition" /> и <paramref name="changedDefinition" />.</returns>
      <param name="originalDefinition">Исходный объект <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />.</param>
      <param name="changedDefinition">Коллекция <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" /> с предлагаемыми изменениями.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionReference">
      <summary>Представляет объект <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> в коллекции условий и позволяет программным образом вычислять условие.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleConditionReference.ConditionName">
      <summary>Возвращает или задает имя условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> для вычисления.</summary>
      <returns>Вычисляемое выражение <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>Вычисляет соответствующее условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />.</summary>
      <returns>Значение true, если условие принимает значение true, в противном случае значение false. </returns>
      <param name="activity">Объект <see cref="T:System.Workflow.ComponentModel.Activity" />, связанный с данным условием.</param>
      <param name="provider">Объект <see cref="T:System.IServiceProvider" /> для вычисления условия.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.InitializeProperties">
      <summary>Задает свойства члена на основании условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, на которое указывает <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleDefinitions">
      <summary>Представляет корень файлов RULES и содержит все наборы правил <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> и условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />, связанные с рабочим процессом.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleDefinitions" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions">
      <summary>Возвращает коллекцию условий правил в рабочем процессе.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />, которая содержит все условия <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> в рабочем процессе.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)">
      <summary>Определяет различие между свойствами <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions" /> и <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> в исходном определении и измененном определении.</summary>
      <returns>Список классов <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" />, которые отличают значение <paramref name="originalDefinition" /> от значения <paramref name="changedDefinition" />.</returns>
      <param name="originalDefinition">Исходное определение правила.</param>
      <param name="changedDefinition">Новое определение правила.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleDefinitions.RuleDefinitionsProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="T:System.Workflow.Activities.Rules.RuleDefinitions" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets">
      <summary>Возвращает коллекцию наборов правил <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> в рабочем процессе.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />, которая содержит все наборы правил <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> в рабочем процессе.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEngine">
      <summary>Позволяет выполнить вычисление набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEngine" /> с набором правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для вычисления и типом правил для создания нового экземпляра <see cref="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" />, который будет использоваться для вычисления выражений правил.</summary>
      <param name="ruleSet">Задает набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для вычисления.</param>
      <param name="objectType">Задает тип <see cref="T:System.Type" /> правила <see cref="T:System.Workflow.Activities.Rules.Rule" />, используемый для создания нового экземпляра <see cref="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEngine" /> с набором правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для вычисления с помощью <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />.</summary>
      <param name="ruleSet">Задает набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для вычисления.</param>
      <param name="validation">Задает объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, используемый для вычисления выражений правил.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)">
      <summary>Выполняет текущий объект, используя метод <see cref="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)" />.</summary>
      <param name="thisObject">Текущий объект для выполнения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Выполняет текущий набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> для экземпляра объекта (который в данном случае, скорее всего, будет действием <see cref="T:System.Workflow.ComponentModel.Activity" />).</summary>
      <param name="thisObject">Текущий объект для выполнения.</param>
      <param name="executionContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для текущего действия. </param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEvaluationException">
      <summary>Представляет базовый класс для всех исключений, вызываемых проблемами вычисления правил.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> с сериализованными данными.</summary>
      <param name="serializeInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение <see cref="T:System.Exception" />, которое стало причиной данного исключения <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="ex">Исключение <see cref="T:System.Exception" />, являющееся причиной текущего исключения <see cref="T:System.Exception" />.Если параметр <paramref name="innerException" /> не является ссылкой на null (Nothing в Visual Basic), текущее исключение <see cref="T:System.Exception" /> вызывается в блоке catch, обрабатывающем внутреннее исключение <see cref="T:System.Exception" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <summary>Исключение, которое создается при вычислении правила, когда происходит попытка применения оператора к несовместимым операндам.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> с сериализованными данными.</summary>
      <param name="serializeInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializeInfo" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Имя класса является ссылкой на null (Nothing в Visual Basic) или свойство <see cref="P:System.Exception.HResult" /> равно нулю.</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Значение типа string, которое содержит сообщение об ошибке, связанной с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение <see cref="T:System.Exception" />, которое стало причиной данного исключения <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
      <param name="ex">Экземпляр <see cref="T:System.Exception" />, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />, используя сведения о нарушении совместимости.</summary>
      <param name="message">Сообщение, описывающее текущее исключение <see cref="T:System.Exception" />.</param>
      <param name="left">Тип <see cref="T:System.Type" /> в левой части оператора.</param>
      <param name="op">Тип <see cref="T:System.CodeDom.CodeBinaryOperatorType" />, представляющий оператор, совместимость которого нарушена.</param>
      <param name="right">Тип <see cref="T:System.Type" /> в правой части оператора.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />, используя сведения о нарушении совместимости.Включает свойство <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="message">Сообщение, описывающее текущее исключение <see cref="T:System.Exception" />.</param>
      <param name="left">Тип <see cref="T:System.Type" /> в левой части оператора.</param>
      <param name="op">Тип <see cref="T:System.CodeDom.CodeBinaryOperatorType" />, представляющий оператор, совместимость которого нарушена.</param>
      <param name="right">Тип <see cref="T:System.Type" /> в правой части оператора.</param>
      <param name="ex">Экземпляр <see cref="T:System.Exception" />, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в <see cref="T:System.Runtime.Serialization.SerializationInfo" /> информацию об исключении.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left">
      <summary>Возвращает или задает тип <see cref="T:System.Type" /> левого аргумента выражения, которое вызывает исключение.</summary>
      <returns>Тип <see cref="T:System.Type" /> левого аргумента выражения, которое вызывает исключение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator">
      <summary>Возвращает или задает тип <see cref="T:System.CodeDom.CodeBinaryOperatorType" />, представляющий оператор, который вызвал исключение. </summary>
      <returns>Тип <see cref="T:System.CodeDom.CodeBinaryOperatorType" />, представляющий оператор, который вызвал исключение. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right">
      <summary>Возвращает или задает тип <see cref="T:System.Type" /> правого аргумента выражения, которое вызывает исключение.</summary>
      <returns>Тип <see cref="T:System.Type" /> правого аргумента выражения, которое вызывает исключение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleException">
      <summary>Представляет базовый класс для всех исключений, вызываемых вычислением или проверкой правил.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleException" />, используя сериализованные данные.</summary>
      <param name="serializeInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение <see cref="T:System.Exception" />, которое стало причиной данного исключения <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="ex">Исключение <see cref="T:System.Exception" />, являющееся причиной текущего исключения <see cref="T:System.Exception" />.Если параметр <paramref name="innerException" /> не является ссылкой на null (Nothing в Visual Basic), текущее исключение <see cref="T:System.Exception" /> вызывается в блоке catch, обрабатывающем внутреннее исключение <see cref="T:System.Exception" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExecution">
      <summary>Сохраняет сведения о состоянии во время выполнения классов <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> и <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />, используя объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> и объект для выполнения.</summary>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, гарантирующий, что выражение настроено правильно.</param>
      <param name="thisObject">Текущий объект для выполнения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="validation" /> или <paramref name="thisObject" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />, используя объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, объект для выполнения и контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для текущего действия.</summary>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, гарантирующий, что выражение настроено правильно.</param>
      <param name="thisObject">Текущий объект для выполнения.</param>
      <param name="activityExecutionContext">Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для текущего действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Activity">
      <summary>Возвращает действие <see cref="T:System.Workflow.ComponentModel.Activity" />, в котором выполняется правило.</summary>
      <returns>Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, в котором выполняется правило.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.ActivityExecutionContext">
      <summary>Возвращает контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для текущего действия.</summary>
      <returns>Контекст <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для текущего действия.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Halted">
      <summary>Возвращает или задает значение, указывающее, было ли остановлено выполнение правила.</summary>
      <returns>Значение true, если выполнение правила было остановлено, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.ThisObject">
      <summary>Возвращает текущий объект для выполнения.</summary>
      <returns>Объект для выполнения.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Validation">
      <summary>Возвращает или задает экземпляр проверки для выражения, которое требуется выполнить.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для выражения, которое требуется выполнить.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <summary>Определяет условие, связанное с <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />, используя указанное кодовое выражение.</summary>
      <param name="expression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, используемое для инициализации объекта <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />, используя указанное имя.</summary>
      <param name="conditionName">Имя условия для вычисления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="conditionName" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />, используя указанное имя и кодовое выражение.</summary>
      <param name="conditionName">Имя условия для вычисления.</param>
      <param name="expression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, используемое для инициализации объекта <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>Возвращает значение true, если экземпляры объектов равны, в противном случае значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, который требуется сравнить с текущим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Вычисляет выражение.</summary>
      <returns>Значение true, если результатом выражения является значение true, в противном случае значение false.</returns>
      <param name="execution">Экземпляр контекста среды выполнения, в котором выполняется условие <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Expression">
      <summary>Возвращает или задает условие выражения для вычисления. </summary>
      <returns>Условие выражения для вычисления.</returns>
      <exception cref="T:System.Data.ReadOnlyException">Действие, выполняющее набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, инициализируется средой выполнения.</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает зависимости условия <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />.</summary>
      <returns>Список зависимостей.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Name">
      <summary>Возвращает или задает имя условия для вычисления.</summary>
      <returns>Имя условия для вычисления.</returns>
      <exception cref="T:System.Data.ReadOnlyException">Действие, выполняющее набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, инициализируется средой выполнения.</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized">
      <summary>Вызывается, если всем свойствам были присвоены значения. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.ToString">
      <summary>Возвращает строковое значение условия выражения. </summary>
      <returns>Строковое значение условия выражения.Пустая строка, если выражение условия имеет значение null.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Проверяет, что выражение настроено правильно и не содержит ошибок.</summary>
      <returns>Значение true, если выражение не содержит ошибок, в противном случае значение false.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="validator" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionInfo">
      <summary>Экземпляр этого класса возвращается методом <see cref="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" /> выражения <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />.</summary>
      <param name="expressionType">Тип <see cref="T:System.Type" /> выражения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType">
      <summary>Возвращает тип выражения.</summary>
      <returns>Тип <see cref="T:System.Type" /> выражения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionResult">
      <summary>Абстрактный класс, являющийся базовым для классов, которые представляют результат пользовательского выражения, основанного на интерфейсе <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionResult.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value">
      <summary>При переопределении в производном классе возвращает или задает результат выражения.</summary>
      <returns>Результат выражения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
      <summary>Распространяет текущую функциональность выражения на дочерние узлы.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>Определяет поля и свойства, используемые выражением, и добавляет их в качестве символов в экземпляр <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
      <param name="analysis">Экземпляр <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />, в котором хранятся символы, представляющие свойства и поля, используемые действиями и условиями правил.</param>
      <param name="expression">Выполняемое выражение.</param>
      <param name="isRead">Значение true, если поля и свойства, считываемые классом <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, должны быть добавлены в объект <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />, в противном случае — значение false.</param>
      <param name="isWritten">Значение true, если поля и свойства, записываемые классом <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, должны быть добавлены в объект <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />, в противном случае — значение false.</param>
      <param name="qualifier">Путь к полю или свойству, определенный до этой точки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="analysis" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
      <summary>Создает глубокую копию дочерних узлов текущего объекта <see cref="T:System.CodeDom.CodeExpression" />.</summary>
      <returns>Выражение <see cref="T:System.CodeDom.CodeExpression" />, идентичное данному экземпляру.</returns>
      <param name="originalExpression">Выражение, на котором основана копия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>Декомпилирует дочерние узлы выражения в формат строки.</summary>
      <param name="stringBuilder">Объект <see cref="T:System.Text.StringBuilder" />, содержащий изменяемую строку символов.</param>
      <param name="expression">Текущий объект <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <param name="parentExpression">Родительский объект <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
      <summary>Вычисляет выражение и все дочерние выражения.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />, определяющий результат оценки выражения.</returns>
      <param name="execution">Объект <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> для выполнения выражения.</param>
      <param name="expression">Вычисляемое выражение <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="execution" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>Сравнивает текущее выражение и дочерние узлы с другим выражением, чтобы определить, равны ли они.</summary>
      <returns>Возвращает значение true, если выражения равны; в противном случае — значение false.</returns>
      <param name="firstExpression">Первое выражение <see cref="T:System.CodeDom.CodeExpression" /> для сравнения.</param>
      <param name="secondExpression">Второе выражение <see cref="T:System.CodeDom.CodeExpression" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Проверяет, что выражение и дочерние узлы настроены правильно и не содержат ошибок.</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> для <see cref="T:System.CodeDom.CodeExpression" />.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <param name="expression">Вычисляемое выражение <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <param name="isWritten">Значение true, если поля и свойства, записываемые классом <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, сохраняются в объекте <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />, в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="validation" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="expression" /> содержит значение null, а коллекция ошибок в объекте <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> является ссылкой на null (Nothing).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleHaltAction">
      <summary>Вызывает остановку выполнения набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> и возврат управления вызывающему методу.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleHaltAction" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>Возвращает значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Object" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Выполняет действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> с использованием указанного объекта <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />.</summary>
      <param name="context">Контекст <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />, используемый для выполнения действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает поля и свойства, обновленные с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Список полей и свойств, измененных с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.ПримечаниеПоскольку у объекта <see cref="T:System.Workflow.Activities.Rules.RuleHaltAction" /> нет параметров, возвращаемое значение всегда будет представлять собой пустой список.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.ToString">
      <summary>Возвращает строку "Halt".</summary>
      <returns>Строка "Halt".</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает значение true, проверка не выполнена.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="validator">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleInvokeAttribute">
      <summary>Указывает, что метод вызван с помощью условия.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />.</summary>
      <param name="methodInvoked">Метод, вызываемый правилом.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked">
      <summary>Возвращает метод, вызываемый условием.</summary>
      <returns>Метод, вызываемый условием.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleLiteralResult">
      <summary>Представляет литеральный результат пользовательского выражения, созданного с использованием интерфейса <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" />. </summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleLiteralResult.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleLiteralResult" />.</summary>
      <param name="literal">Литеральный результат выражения.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value">
      <summary>Возвращает результат выражения.  </summary>
      <returns>Результат выражения.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" /> задано.</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RulePathQualifier">
      <summary>Строит путь поля или свойства.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RulePathQualifier.#ctor(System.String,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RulePathQualifier" />.</summary>
      <param name="name">Имя текущей сущности в пути.</param>
      <param name="next">Следующая сущность, поле или свойство для пути.Значение null, если <paramref name="name" /> является именем свойства или поля в корне пути.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RulePathQualifier.Name">
      <summary>Возвращает имя текущего поля или свойства.</summary>
      <returns>Имя текущей сущности в пути.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RulePathQualifier.Next">
      <summary>Возвращает следующее поле или свойство для пути.</summary>
      <returns>Следующая сущность, поле или свойство для пути.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReadAttribute">
      <summary>Указывает, что свойство считывается правилом <see cref="T:System.Workflow.Activities.Rules.Rule" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" />.</summary>
      <param name="path">Логический путь к члену, который считывается условием.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" />.</summary>
      <param name="path">Логический путь к члену, который считывается условием.</param>
      <param name="target">Перечисление <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> указывает, является ли путь относительным для данного (this) класса или параметра метода.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute">
      <summary>Представляет базовый класс для классов <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> и <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" />.</summary>
      <param name="path">Путь к целевому объекту атрибута.</param>
      <param name="target">Значение перечисления <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" />, которое определяет, как следует использовать путь для поиска целевого объекта.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path">
      <summary>Возвращает путь к целевому объекту атрибута.</summary>
      <returns>Строка <see cref="T:System.String" />, которая содержит путь.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target">
      <summary>Возвращает значение перечисления <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" />, которое определяет, как следует использовать путь для поиска целевого объекта.</summary>
      <returns>Значение перечисления <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" />, которое определяет, как следует использовать указанный путь для поиска целевого объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior">
      <summary>Определяет, можно ли выполнить повторное вычисление правила <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Never">
      <summary>Указывает, что правило <see cref="T:System.Workflow.Activities.Rules.Rule" /> выполняется один раз.Условие может вычисляться несколько раз, пока правило выполняет действия, но правило не будет вычисляться снова.</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always">
      <summary>Указывает, что правило <see cref="T:System.Workflow.Activities.Rules.Rule" /> можно повторно вычислять несколько раз.По умолчанию устанавливается значение <see cref="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSet">
      <summary>Содержит коллекцию классов <see cref="T:System.Workflow.Activities.Rules.Rule" />, а также семантику для создания прямой логической цепочки выполнения этих правил.Набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> можно выполнить непосредственно в коде или с помощью действия <see cref="T:System.Workflow.Activities.PolicyActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, используя имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="name">Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, используя имя и описание объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="name">Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
      <param name="description">Описание объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.ChainingBehavior">
      <summary>Возвращает или задает прямую логическую цепочку для выполнения классов <see cref="T:System.Workflow.Activities.Rules.Rule" /> в объекте <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleChainingBehavior" /> для классов <see cref="T:System.Workflow.Activities.Rules.Rule" /> в объекте <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Description">
      <summary>Возвращает или задает описание объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Описание объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>Возвращает значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Object" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Вычисляет экземпляры <see cref="T:System.Workflow.Activities.Rules.Rule" /> в объекте <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="ruleExecution">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, связанный с действием <see cref="T:System.Workflow.ComponentModel.Activity" />, которое вызывает <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ruleExecution" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно проверить кэшированный объект <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />.</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Rules">
      <summary>Возвращает список классов <see cref="T:System.Workflow.Activities.Rules.Rule" /> в наборе правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Список классов <see cref="T:System.Workflow.Activities.Rules.Rule" /> в наборе правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Проверяет атрибуты <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> и классы <see cref="T:System.Workflow.Activities.Rules.Rule" /> в объекте <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> ошибок, обнаруженных в ходе проверки.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> для управления процессом проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="validation" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <summary>Представляет абстрактный базовый класс, от которого должны наследоваться все уведомления динамического обновления об изменениях наборов правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetChangeAction.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetChangeAction" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
      <summary>При переопределении в производном классе возвращает имя набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, который требуется изменить.</summary>
      <returns>Имя набора правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, который требуется изменить.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>При переопределении в производном классе проверяет, что объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> настроен правильно и не содержит ошибок.</summary>
      <returns>Новая коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />.</returns>
      <param name="activity">Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, в котором происходят изменения <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetCollection">
      <summary>Содержит коллекцию классов <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, определенных в рабочем процессе.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)">
      <summary>Перегружен.Добавляет в коллекцию объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="item">Объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, добавляемый в список <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)">
      <summary>Определяет различие между двумя объектами <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />.</summary>
      <returns>Список классов <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" />, которые отличают значение <paramref name="originalDefinition" /> от значения <paramref name="changedDefinition" />.</returns>
      <param name="originalDefinition">Начальное определение <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />.</param>
      <param name="changedDefinition">Измененное определение <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetReference">
      <summary>Содержит имя набора <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> в коллекции <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> в рабочем процессе.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" />, используя имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="ruleSetName">Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, значение которого вычисляется в данном действии.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetReference.RuleSetName">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, значение которого вычисляется в данном действии.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, значение которого вычисляется в данном действии.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <summary>Представляет исключение, которое возникает, когда обработка не может продолжаться, так как набор правил не может быть проверен.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> из сериализованных данных.</summary>
      <param name="serializeInfo">Ссылка на объект, содержащий данные, необходимые для десериализации исключения.</param>
      <param name="context">Предоставляет средства для десериализации данных исключения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="ex">Внутреннее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="errors">Коллекция ошибок, возникших при проверке набора правил.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetValidationException.Errors">
      <summary>Возвращает коллекцию ошибок, возникших при проверке набора правил.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая ошибки по результатам проверки.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
      <param name="info">Ссылка на объект, который содержит данные, необходимые для сериализации и десериализации исключения.</param>
      <param name="context">Предоставляет средства для сериализации данных исключения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleStatementAction">
      <summary>Задает свойство или метод для обновления или метод для выполнения с помощью типов CodeDom.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeExpression)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" />, используя выражение <see cref="T:System.CodeDom.CodeExpression" />.</summary>
      <param name="codeDomExpression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, задающее действие, которое требуется выполнить.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeStatement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" />, используя оператор <see cref="T:System.CodeDom.CodeStatement" />.</summary>
      <param name="codeDomStatement">Оператор <see cref="T:System.CodeDom.CodeStatement" />, задающий действие, которое требуется выполнить.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleStatementAction.CodeDomStatement">
      <summary>Возвращает или задает оператор кода, указывающий действие, которое требуется выполнить.</summary>
      <returns>Оператор <see cref="T:System.CodeDom.CodeStatement" />, задающий действие, которое требуется выполнить.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>Возвращает значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Object" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Выполняет действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> с использованием указанного объекта <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />.</summary>
      <param name="context">Контекст <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />, используемый для выполнения действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает поля и свойства, обновленные с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Список полей и свойств, измененных с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.ToString">
      <summary>Возвращает строковое значение действия. </summary>
      <returns>Строковое значение действия.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Проверяет, что действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> настроено правильно и не содержит ошибок.</summary>
      <returns>Значение true, если выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> не содержит ошибок; в противном случае — значение false.</returns>
      <param name="validator">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <summary>Указывает, что правило обновляет переменную, чтобы вызвать повторное вычисление соответствующих правил.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" />.</summary>
      <param name="path">Строка, представляющая имя измененного поля или свойства.В качестве разделителя используется символ "/".</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Clone">
      <summary>Создает глубокую копию текущего объекта <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, идентичное данному экземпляру.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>Возвращает значение true, если объекты равны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Object" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>Выполняет действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> с использованием указанного объекта <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />.</summary>
      <param name="context">Контекст <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />, используемый для выполнения действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Возвращает поля и свойства, обновленные с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</summary>
      <returns>Список полей и свойств, измененных с помощью действия <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</returns>
      <param name="validation">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path">
      <summary>Возвращает или задает путь объекта <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" />.</summary>
      <returns>Путь объекта <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" />.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.ToString">
      <summary>Возвращает строку, которая указывает поле или свойство, которые обновляются с помощью объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>Строка «Update &lt;<see cref="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path" />&gt;».</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>Проверяет, что действие <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> настроено правильно и не содержит ошибок.</summary>
      <returns>Значение true, если выражение <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> не содержит ошибок; в противном случае — значение false.</returns>
      <param name="validator">Объект <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> для управления процессом проверки.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleValidation">
      <summary>Проверяет условия выражения. </summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, используя тип <see cref="T:System.Type" /> объекта <see cref="T:System.Workflow.Activities.Rules.Rule" />. </summary>
      <param name="thisType">Тип объекта, для которого будут выполняться это условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> или набор правил <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.Обычно это рабочий процесс, но на его месте может быть объект любого допустимого типа.</param>
      <param name="typeProvider">Необязательная реализация интерфейса <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />, которая позволяет определить, какие типы <see cref="T:System.Type" /> доступны в условии.Если тип не задан, будут доступны только типы из сборки, определяемой действием, и сборок, на которые она ссылается.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="thisType" /> является ссылкой на null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, используя указанное действие <see cref="T:System.Workflow.ComponentModel.Activity" /> и поставщик типов. </summary>
      <param name="activity">Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, в контексте которого выполняется условие <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> или набор <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.В большинстве случаев это объект рабочего процесса.</param>
      <param name="typeProvider">Необязательная реализация интерфейса <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />, которая позволяет определить, какие типы <see cref="T:System.Type" /> доступны в условии.Если тип не задан, будут доступны только типы из сборки, определяемой действием, и сборок, на которые она ссылается.</param>
      <param name="checkStaticType">Если значение равно true, типы, используемые всеми условиями <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> или наборами <see cref="T:System.Workflow.Activities.Rules.RuleSet" />, которые проверяются с помощью этого объекта, должны входить в ограниченный список разрешенных типов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="activity" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleValidation.Errors">
      <summary>Возвращает ошибки, связанные с объектом <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />, содержащая объекты <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />, которые были созданы во время проверки правил.</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)">
      <summary>Определяет тип кодового выражения.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> для объекта.Он определяет тип объекта.</returns>
      <param name="expression">Вычисляемое выражение <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression">
      <summary>Удаляет и возвращает родительские выражения в верхней части стека <see cref="T:System.Collections.Stack" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)">
      <summary>Вставляет объект как верхний элемент стека <see cref="T:System.Collections.Stack" />. </summary>
      <returns>Значение true, если объект <paramref name="newParent" /> был добавлен в стек, в противном случае значение false.</returns>
      <param name="newParent">Объект <see cref="T:System.CodeDom.CodeExpression" />, добавляемый в стек <see cref="T:System.Collections.Stack" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="newParent" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleValidation.ThisType">
      <summary>Возвращает тип объекта.</summary>
      <returns>Тип <see cref="T:System.Type" /> объекта.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleWriteAttribute">
      <summary>Показывает, что свойство или поле записывается с помощью метода или свойства, к которым применяется этот атрибут.Эти сведения используются обработчиком правил для определения зависимостей между правилами.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />. </summary>
      <param name="path">Поле или свойство, которые относятся к тому же классу, что и метод или свойство, к которым применяется этот атрибут.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />. </summary>
      <param name="path">Поле или свойство, которые относятся к тому же классу, что и метод или свойство, к которым применяется этот атрибут.</param>
      <param name="target">Значение перечисления <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" />, которое определяет, как следует использовать путь для поиска целевого объекта.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.UpdatedConditionAction">
      <summary>Представляет изменение объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> при динамическом обновлении.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.UpdatedConditionAction" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.UpdatedConditionAction" /> со старым и новым условиями изменения.</summary>
      <param name="conditionDefinition">Заменяемое условие.</param>
      <param name="newConditionDefinition">Заменяющее условие.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="conditionDefinition" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="newConditionDefinition" /> является пустой ссылкой (Nothing).</exception>
      <exception cref="T:System.ArgumentException">Имя <paramref name="conditionDefinition" /> не равно имени <paramref name="newConditionDefinition." /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionDefinition">
      <summary>Возвращает или задает условие, заменяемое этим действием.</summary>
      <returns>Условие, заменяемое этим действием.</returns>
      <exception cref="T:System.ArgumentNullException">Попытка присвоить этому свойству ссылку на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionName">
      <summary>Возвращает имя заменяемого условия.</summary>
      <returns>Имя заменяемого условия.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.NewConditionDefinition">
      <summary>Возвращает или задает условие, которое заменит имеющееся условие.</summary>
      <returns>Условие, которое заменит имеющееся условие.</returns>
      <exception cref="T:System.ArgumentNullException">Попытка присвоить этому свойству ссылку на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction">
      <summary>Представляет изменение объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> при динамическом обновлении.Наследовать этот класс нельзя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />, используя исходный и обновленный классы <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <param name="originalRuleSetDefinition">Исходный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
      <param name="updatedRuleSetDefinition">Обновленный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение RuleSetDefinition или updatedRuleSetDefinition равно null</exception>
      <exception cref="T:System.ArgumentException">Имена двух объектов RuleSet не совпадают</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.OriginalRuleSetDefinition">
      <summary>Возвращает или задает исходный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Исходный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">Исходный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.RuleSetName">
      <summary>Возвращает имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Имя объекта <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.UpdatedRuleSetDefinition">
      <summary>Возвращает или задает обновленный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>Обновленный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">Обновленный объект <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> является ссылкой на null (Nothing в Visual Basic).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <summary>Обычно это диалоговое окно используется действиями <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />, <see cref="T:System.Workflow.Activities.WhileActivity" />, <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> и <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> для изменения декларативных условий.Однако если требуется использовать условия за пределами этих действий (например, изменить условие, чтобы применять его вне рабочего процесса), изменить условие можно с помощью этого диалогового окна.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" /> с заданными типом действия, поставщиком типа и выражением.</summary>
      <param name="activityType">Тип объекта, для которого выполняется это условие.Обычно это рабочий процесс, но на его месте может быть объект любого допустимого типа.</param>
      <param name="typeProvider">Необязательная реализация интерфейса <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />, которая позволяет определить, какие типы доступны в условии.Если тип не задан, доступны только типы из сборки, определяемой параметром <paramref name="activityType" />, и сборок, на которые она ссылается.</param>
      <param name="expression">Начальный <see cref="T:System.CodeDom.CodeExpression" /> для отображения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />.</summary>
      <param name="activity">Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, для которого выполняется это условие.Обычно это рабочий процесс, но это может быть любое допустимое действие.</param>
      <param name="expression">Начальный <see cref="T:System.CodeDom.CodeExpression" /> для отображения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />.</summary>
      <param name="disposing">Укажите значение true, чтобы освободить управляемые и неуправляемые ресурсы, или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Expression">
      <summary>Возвращает выражение <see cref="T:System.CodeDom.CodeExpression" />, измененное пользователем диалогового окна.</summary>
      <returns>Набор правил <see cref="T:System.CodeDom.CodeExpression" />, измененный пользователем диалогового окна.</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <summary>Обычно это диалоговое окно используется действием <see cref="T:System.Workflow.Activities.PolicyActivity" /> для изменения наборов правил.Однако если требуется использовать набор правил за пределами этого действия (например, изменить набор правил, чтобы применять его вне рабочего процесса), изменить набор правил можно с помощью этого диалогового окна.</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />.</summary>
      <param name="activityType">Тип объекта, для которого выполняется это условие.Обычно это рабочий процесс, но на его месте может быть объект любого допустимого типа.</param>
      <param name="typeProvider">Необязательная реализация интерфейса <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />, которая позволяет определить, какие типы Types доступны в условии.Если тип не задан, доступны только типы из сборки, определяемой параметром <paramref name="activityType" />, и сборок, на которые она ссылается.</param>
      <param name="ruleSet">Начальный <see cref="T:System.Workflow.Activies.Rules.RuleSet" /> для отображения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />.</summary>
      <param name="activity">Действие <see cref="T:System.Workflow.ComponentModel.Activity" />, для которого выполняется данный объект <see cref="T:System.Workflow.Activies.Rules.RuleSet" />.Обычно это действие Workflow (как в случае <see cref="T:System.Workflow.Activities.PolicyActivity" />), но на его месте может быть любое допустимое действие.</param>
      <param name="ruleSet">Начальный <see cref="T:System.Workflow.Activies.Rules.RuleSet" /> для отображения.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />.</summary>
      <param name="disposing">Укажите значение true, чтобы освободить управляемые и неуправляемые ресурсы, или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>Обрабатывает клавишу для команд.</summary>
      <returns>Значение true, если нажатие клавиши было обработано и получено элементом управления; или значение false, чтобы разрешить дополнительную обработку.</returns>
      <param name="msg">Передаваемый по ссылке объект <see cref="T:System.Windows.Forms.Message" />, представляющий сообщение Win32 для обработки.</param>
      <param name="keyData">Одно из значений <see cref="T:System.Windows.Forms.Keys" />, представляющее обрабатываемую клавишу.</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Design.RuleSetDialog.RuleSet">
      <summary>Возвращает набор правил <see cref="T:System.Workflow.Activies.Rules.RuleSet" />, подтвержденный пользователем диалогового окна.</summary>
      <returns>Возвращает набор правил <see cref="T:System.Workflow.Activies.Rules.RuleSet" />, подтвержденный пользователем диалогового окна.</returns>
    </member>
  </members>
</doc>