<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.UriTemplate">
      <summary>Класс, представляющий шаблон универсального кода ресурса (URI).</summary>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplate" /> с указанной строкой шаблона.</summary>
      <param name="template">Шаблон.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplate" />.</summary>
      <param name="template">Строка шаблона.</param>
      <param name="ignoreTrailingSlash">Значение, указывающее, учитываются ли символы косой черты "/" в конце строки шаблона.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplate" />.  
</summary>
      <param name="template">Строка шаблона.</param>
      <param name="ignoreTrailingSlash">Это логическое значение указывает, учитываются ли символы косой черты "/" в конце строки шаблона.</param>
      <param name="additionalDefaults">Словарь, содержащий список значений по умолчанию для параметров шаблона.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplate" />.</summary>
      <param name="template">Строка шаблона.</param>
      <param name="additionalDefaults">Словарь, содержащий список значений по умолчанию для параметров шаблона.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Создает новый универсальный код ресурса (URI) на основании шаблона и коллекции параметров.
</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">Объект <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
      <param name="parameters">Словарь, содержащий коллекцию пар "имя-значение" параметров.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
      <summary>Создает новый универсальный код ресурса (URI) на основании шаблона и коллекции параметров.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">URI, содержащий базовый адрес.</param>
      <param name="parameters">Словарь, содержащий коллекцию пар "имя-значение" параметров.</param>
      <param name="omitDefaults">Значение, указывающее, учитываются ли значения по умолчанию.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <summary>Создает новый универсальный код ресурса (URI) на основании шаблона и коллекции параметров.</summary>
      <returns>Новый экземпляр <see cref="T:System.Uri" />.</returns>
      <param name="baseAddress">Объект <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
      <param name="parameters">Экземпляр <see cref="T:System.Collections.Specialized.NameValueCollection" />, содержащий значения параметров.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)">
      <summary>Создает новый универсальный код ресурса (URI) на основании шаблона и коллекции параметров.
</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">Объект <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
      <param name="parameters">Коллекция пар "имя-значение" параметров. </param>
      <param name="omitDefaults">Значение, указывающее, учитываются ли значения по умолчанию.</param>
    </member>
    <member name="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])">
      <summary>Создает новый универсальный код ресурса (URI) на основании массива значений параметров.</summary>
      <returns>Новый экземпляр <see cref="T:System.Uri" />.</returns>
      <param name="baseAddress">Объект <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
      <param name="values">Значения параметров.</param>
    </member>
    <member name="P:System.UriTemplate.Defaults">
      <summary>Набор пар «имя-значение» для значений параметров по умолчанию.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.Generic.IDictionary`2" />.
</returns>
    </member>
    <member name="P:System.UriTemplate.IgnoreTrailingSlash">
      <summary>Указывает, учитываются ли символы косой черты "/" в конце строки шаблона при сравнении с потенциальными URI.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
    </member>
    <member name="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)">
      <summary>Показывает, эквивалентна ли структура шаблона <see cref="T:System.UriTemplate" /> структуре другого шаблона.</summary>
      <returns>Значение, указывающее о том, эквивалентны ли шаблоны URI.</returns>
      <param name="other">Сравниваемый шаблон <see cref="T:System.UriTemplate" />.</param>
    </member>
    <member name="M:System.UriTemplate.Match(System.Uri,System.Uri)">
      <summary>Проверяет соответствие объекта <see cref="T:System.URI" /> шаблону <see cref="T:System.UriTemplate" />.</summary>
      <returns>Экземпляр <see cref="T:System.UriTemplateMatch" />.</returns>
      <param name="baseAddress">Базовый адрес.</param>
      <param name="candidate">
        <see cref="T:System.Uri" />, сравниваемый с шаблоном.</param>
    </member>
    <member name="P:System.UriTemplate.PathSegmentVariableNames">
      <summary>Возвращает коллекцию имен переменных, используемых в сегментах пути в шаблоне.</summary>
      <returns>Коллекция имен переменных, находящихся в сегменте пути шаблона.</returns>
    </member>
    <member name="P:System.UriTemplate.QueryValueVariableNames">
      <summary>Возвращает коллекцию имен переменных, используемых в строке запроса в шаблоне.</summary>
      <returns>Коллекция имен переменных шаблона, находящихся в части строки шаблона, содержащей запрос.</returns>
    </member>
    <member name="M:System.UriTemplate.ToString">
      <summary>Возвращает строковое представление экземпляра <see cref="T:System.UriTemplate" />.</summary>
      <returns>Представление экземпляра <see cref="T:System.UriTemplate" />.</returns>
    </member>
    <member name="T:System.UriTemplateEquivalenceComparer">
      <summary>Класс, используемый для сравнения экземпляров класса <see cref="T:System.UriTemplate" /> для проверки их структурной (а не ссылочной) эквивалентности.</summary>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateEquivalenceComparer" />.</summary>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.Equals(System.UriTemplate,System.UriTemplate)">
      <summary>Проверяет равенство двух экземпляров класса <see cref="T:System.UriTemplate" />.</summary>
      <returns>Значение, указывающее о том, равны ли два экземпляра класса <see cref="T:System.UriTemplate" />.</returns>
      <param name="x">Экземпляр класса <see cref="T:System.UriTemplate" />.</param>
      <param name="y">Экземпляр класса <see cref="T:System.UriTemplate" />.</param>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.GetHashCode(System.UriTemplate)">
      <summary>Получает хэш-код для указанного экземпляра класса <see cref="T:System.UriTemplate" />.</summary>
      <returns>Хэш-код.</returns>
      <param name="obj">Экземпляр класса <see cref="T:System.UriTemplate" />.</param>
    </member>
    <member name="T:System.UriTemplateMatch">
      <summary>Класс, представляющий результаты операции поиска соответствий для экземпляра класса <see cref="T:System.UriTemplate" />.</summary>
    </member>
    <member name="M:System.UriTemplateMatch.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateMatch" />.</summary>
    </member>
    <member name="P:System.UriTemplateMatch.BaseUri">
      <summary>Возвращает и задает базовый универсальный код ресурса (URI) для элемента, соответствующего шаблону.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" />, представляющий базовый URI для элемента, соответствующего шаблону.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.BoundVariables">
      <summary>Возвращает коллекцию BoundVariables для элемента, соответствующего шаблону.</summary>
      <returns>Экземпляр класса <see cref="T:System.Collections.Specialized.NameValueCollection" />, содержащий значения переменных шаблона, извлеченные из URI при сопоставлении.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.Data">
      <summary>Возвращает и задает объект, связанный с экземпляром класса <see cref="T:System.UriTemplateMatch" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.QueryParameters">
      <summary>Возвращает коллекцию параметров строки запроса и их значений.</summary>
      <returns>Экземпляр класса <see cref="T:System.Collections.Specialized.NameValueCollection" />, содержащий параметры строки запроса и их значения.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.RelativePathSegments">
      <summary>Возвращает коллекцию сегментов относительного пути.</summary>
      <returns>Коллекция сегментов относительного пути.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.RequestUri">
      <summary>Возвращает или задает универсальный код ресурса (URI), для которого обнаружено соответствие.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.Template">
      <summary>Возвращает или задает экземпляр <see cref="T:System.UriTemplate" />, связанный с этим экземпляром <see cref="T:System.UriTemplateMatch" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.UriTemplate" />.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.WildcardPathSegments">
      <summary>Возвращает коллекцию сегментов пути, соответствующих подстановочному знаку в шаблоне URI.</summary>
      <returns>Коллекция сегментов пути, соответствующих подстановочному знаку в шаблоне URI.</returns>
    </member>
    <member name="T:System.UriTemplateMatchException">
      <summary>Представляет ошибку при сопоставлении <see cref="T:System.Uri" /> шаблону <see cref="T:System.UriTemplateTable" />.</summary>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateMatchException" />.</summary>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateMatchException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованный объект данных.</param>
      <param name="context">Контекстная информация об источнике или назначении.</param>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateMatchException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateMatchException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения. </param>
    </member>
    <member name="T:System.UriTemplateTable">
      <summary>Класс, представляющий ассоциативный набор объектов <see cref="T:System.UriTemplate" />.</summary>
    </member>
    <member name="M:System.UriTemplateTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateTable" />.</summary>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateTable" /> с указанной коллекцией пар "ключ-значение".</summary>
      <param name="keyValuePairs">Коллекция пар "ключ-значение", содержащая шаблоны URI и связанные с ними данные.</param>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateTable" /> с указанным базовым адресом.</summary>
      <param name="baseAddress">Экземпляр <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriTemplateTable" /> с указанным базовым адресом и коллекцией пар "ключ-значение".</summary>
      <param name="baseAddress">Экземпляр <see cref="T:System.Uri" />, содержащий базовый адрес.</param>
      <param name="keyValuePairs">Коллекция пар "ключ-значение", содержащая шаблоны URI и связанные с ними данные.</param>
    </member>
    <member name="P:System.UriTemplateTable.BaseAddress">
      <summary>Возвращает или задает базовый адрес экземпляра <see cref="T:System.UriTemplateTable" />.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий базовый адрес.</returns>
    </member>
    <member name="P:System.UriTemplateTable.IsReadOnly">
      <summary>Возвращает значение, которое показывает, является ли объект <see cref="T:System.UriTemplateTable" /> доступным только для чтения.</summary>
      <returns>Возвращает значение true, если свойство <see cref="T:System.UriTemplateTable" /> доступно только для чтения, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.UriTemplateTable.KeyValuePairs">
      <summary>Возвращает коллекцию пар "ключ-значение", содержащую объекты <see cref="T:System.UriTemplate" /> и связанные с ними данные.</summary>
      <returns>Коллекция пар "ключ-значение", содержащая объекты <see cref="T:System.UriTemplate" /> и связанные с ними данные.</returns>
    </member>
    <member name="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
      <summary>Делает объект <see cref="T:System.UriTemplateTable" /> доступным только для чтения.</summary>
      <param name="allowDuplicateEquivalentUriTemplates">Указывает, допускаются ли эквивалентные дубликаты экземпляров <see cref="T:System.UriTemplate" /> в таблице <see cref="T:System.UriTemplateTable" />.</param>
    </member>
    <member name="M:System.UriTemplateTable.Match(System.Uri)">
      <summary>Сопоставляет потенциальный <see cref="T:System.Uri" /> с таблицей <see cref="T:System.UriTemplateTable" />.</summary>
      <returns>Коллекция экземпляров класса <see cref="T:System.UriTemplateMatch" />.</returns>
      <param name="uri">Потенциальный URI.</param>
    </member>
    <member name="M:System.UriTemplateTable.MatchSingle(System.Uri)">
      <summary>Сопоставляет потенциальный <see cref="T:System.Uri" /> с таблицей <see cref="T:System.UriTemplateTable" />.</summary>
      <returns>Единственный экземпляр <see cref="T:System.UriTemplateMatch" />.</returns>
      <param name="uri">Потенциальный URI.</param>
    </member>
    <member name="P:System.UriTemplateTable.OriginalBaseAddress">
      <summary>Получает исходный базовый адрес.</summary>
      <returns>Исходный базовый адрес.</returns>
    </member>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Предоставляет коллекцию, элементами которой являются типы, используемые в качестве ключей.</summary>
      <typeparam name="TItem">Типы элементов, содержащиеся в коллекции, которые также используются в качестве ключей для нее.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> для указанного перечисления объектов.</summary>
      <param name="items">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> универсального типа <see cref="T:System.Object" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="items" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Возвращает первый элемент в коллекции указанного типа.</summary>
      <returns>Объект типа <paramref name="T" />, если это ссылочный тип, и значение типа <paramref name="T" />, если это тип значения.Если в коллекции нет ни одного объекта типа <paramref name="T" />, возвращается значение по умолчанию для этого типа: значение null, если это ссылочный тип, и значение 0, это тип значения.</returns>
      <typeparam name="T">Тип элемента, который требуется найти в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Возвращает коллекцию объектов типа <paramref name="T" />, содержащихся в объекте <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <paramref name="T" />, содержащая объекты типа <paramref name="T" /> из исходной коллекции.</returns>
      <typeparam name="T">Тип элемента, который требуется найти в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Возвращает тип элемента, содержащегося в коллекции.</summary>
      <returns>Тип указанного элемента (<paramref name="item" />) коллекции.</returns>
      <param name="item">Элемент коллекции, тип которого требуется извлечь.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="item" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию в указанное местоположение.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</param>
      <param name="item">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="item" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Удаляет объект указанного типа из коллекции.</summary>
      <returns>Объект, удаляемый из коллекции.</returns>
      <typeparam name="T">Тип элемента, удаляемого из коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Удаляет все элементы указанного типа из коллекции.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" />, содержащая объекты типа <paramref name="T" /> из исходной коллекции.</returns>
      <typeparam name="T">Тип элемента, удаляемого из коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Заменяет элемент по указанному индексу новым объектом.</summary>
      <param name="index">Отсчитываемый от нуля индекс заменяемого элемента (<paramref name="item" />).</param>
      <param name="item">Объект для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="item" /> равно null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedCollection`1">
      <summary>Предоставляет потокобезопасную коллекцию, содержащую объекты типа, заданного универсальным параметром, в качестве элементов.</summary>
      <typeparam name="T">Тип объектов, содержащихся как элементы в потокобезопасной коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />, используя объект для синхронизации доступа к потокобезопасной коллекции.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> из указанного перечислимого списка элементов, при этом объект используется для синхронизации доступа к потокобезопасной коллекции.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <param name="list">Коллекция элементов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемая для инициализации потокобезопасной коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> или <paramref name="list" /> равно null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> из указанного массива элементов, используя объект для синхронизации доступа к потокобезопасной коллекции.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <param name="list">Массив <see cref="T:System.Array" /> элементов типа <paramref name="T" /> используется для инициализации потокобезопасной коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> или <paramref name="list" /> равно null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)">
      <summary>Добавляет элемент в потокобезопасную коллекцию только для чтения.</summary>
      <param name="item">Элемент, который необходимо добавить в коллекцию.</param>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным значением.</summary>
      <returns>Значение true, если значение элемента найдено в коллекции; в противном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в коллекции.</param>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует элементы коллекции в указанный массив, начиная с заданного индекса.</summary>
      <param name="array">Целевой массив <see cref="T:System.Array" /> элементов типа <paramref name="T " />, копируемых из коллекции.</param>
      <param name="index">Отсчитываемый от нуля индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Count">
      <summary>Возвращает количество элементов в потокобезопасной коллекции.</summary>
      <returns>Количество элементов в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию элементов синхронизированной коллекции.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" /> для объектов типов, хранящихся в коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)">
      <summary>Возвращает индекс первого вхождения значения в коллекции.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения значения в коллекции.</returns>
      <param name="item">Удаляет все элементы из коллекции.</param>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <param name="item">Объект, вставляемый в коллекцию в качестве элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс позиции в коллекции, в которую вставляется объект.</param>
      <param name="item">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)">
      <summary>Возвращает элемент из потокобезопасной коллекции с указанным индексом.</summary>
      <returns>Объект в коллекции с указанным индексом (<paramref name="index" />).</returns>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Items">
      <summary>Возвращает список элементов в потокобезопасной коллекции.</summary>
      <returns>Список <see cref="T:System.Collections.Generic.IList`1" /> элементов, содержащихся в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)">
      <summary>Удаляет из коллекции первое вхождение указанного элемента.</summary>
      <returns>В случае успешного удаления элемента из коллекции возвращается значение true, в противном случае — значение false.</returns>
      <param name="item">Объект, удаляемый из коллекции.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)">
      <summary>Удаляет из коллекции элемент по указанному индексу <paramref name="index" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)">
      <summary>Заменяет элемент по указанному индексу другим элементом.</summary>
      <param name="index">Отсчитываемый от нуля индекс заменяемого объекта.</param>
      <param name="item">Заменяемый объект </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot">
      <summary>Возвращает объект, используемый для синхронизации доступа к потокобезопасной коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Получает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции в указанный массив, начиная с заданного индекса.</summary>
      <param name="array">Целевой массив <see cref="T:System.Array" /> элементов типа <paramref name="T" />, копируемых из коллекции.</param>
      <param name="index">Отсчитываемый от нуля индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли коллекция потокобезопасной.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Возвращает объект, используемый для синхронизации доступа к потокобезопасной коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию элементов синхронизированной коллекции.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" /> для объектов типов, хранящихся в коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в коллекцию.</summary>
      <returns>Позиция, на которую вставлен новый элемент.</returns>
      <param name="value">Объект для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным значением.</summary>
      <returns>Значение true, если элемент <paramref name="value" /> найден в коллекции; в противном случае — значение false.</returns>
      <exception cref="T:System.ArgumentException">Объект <paramref name="value" /> не является объектом типа, содержащегося в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет отсчитываемый от нуля индекс элемента коллекции.</summary>
      <returns>Индекс элемента <paramref name="value" />, если элемент найден в коллекции; в противном случае -1.</returns>
      <param name="value">Элемент коллекции, индекс которого требуется определить.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет объект в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="value" /> установлено значение null, или он является неправильным универсальным типом <paramref name="T" /> для коллекции.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу, отсчитываемому от нуля.</summary>
      <returns>Элемент с указанным индексом <paramref name="index" />.</returns>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.ArgumentException">Задано значение null, или значение имеет неправильный универсальный тип <paramref name="T" /> для коллекции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет из коллекции элемент, являющийся первым вхождением указанного объекта.</summary>
      <param name="value">Объект, удаляемый из коллекции.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedKeyedCollection`2">
      <summary>Предоставляет потокобезопасную коллекцию, содержащую объекты типа, заданного универсальным параметром, сгруппированные по ключам.</summary>
      <typeparam name="K">Тип ключа, по которому группируются элементы коллекции.</typeparam>
      <typeparam name="T">Тип элементов, содержащихся в потокобезопасной коллекции с ключом.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" />, при этом доступ синхронизируется с помощью явно указанного объекта.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" />, при этом доступ синхронизируется с помощью явно указанного объекта и ключей, сравниваемых указанным способом. </summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <param name="comparer">Параметр <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, принадлежащий к типу <paramref name="K" />, используется для проверки равенства объектов ключей типа <paramref name="K" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> равно null или значение параметра <paramref name="comparer" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" />, при этом доступ синхронизируется с помощью явно указанного объекта и ключей, сравниваемых указанным способом. </summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции.</param>
      <param name="comparer">Параметр <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, принадлежащий к типу <paramref name="K" />, используется для проверки равенства объектов ключей типа <paramref name="K" />.</param>
      <param name="dictionaryCreationThreshold">Количество элементов, необходимое для создания словаря для коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> равно null или значение параметра <paramref name="comparer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="dictionaryCreationThreshold" /> меньше -1.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)">
      <summary>Изменяет ключ для указанного элемента синхронизированной коллекции.</summary>
      <param name="item">Элемент, ключ которого изменяется.</param>
      <param name="newKey">Новый ключ для указанного элемента.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)">
      <summary>Возвращает значение, которое указывает, содержит ли коллекция элемент с заданным ключом.</summary>
      <returns>Значение true, если коллекция содержит элемент с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Ключ типа <paramref name="K" />, наличие которого проверяется.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary">
      <summary>Получает словарь, связанный с коллекцией.</summary>
      <returns>Словарь <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий пары "ключ-элемент" для коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)">
      <summary>Если этот метод переопределен в производном классе, он возвращает ключ указанного элемента.</summary>
      <returns>Ключ типа K для указанного элемента (<paramref name="item" />) типа <paramref name="T" />.</returns>
      <param name="item">Элемент типа <paramref name="T" />, ключ которого извлекается.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)">
      <summary>Вставляет элемент в коллекцию в указанное местоположение.</summary>
      <param name="index">Отсчитываемый от нуля индекс, указывающий позицию вставки элемента в коллекцию.</param>
      <param name="item">Элемент типа <paramref name="T" />, вставляемый в коллекцию.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)">
      <summary>Возвращает из коллекции элементы с указанным ключом.</summary>
      <returns>Элемент типа <paramref name="T" /> из коллекции с указанным ключом.</returns>
      <param name="key">Ключ извлекаемого элемента.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)">
      <summary>Удаляет из коллекции элемент с указанным ключом и возвращает значение, показывающее, успешно ли выполнено удаление элемента.</summary>
      <returns>Значение true, если элемент с указанным ключом удален; в противном случае — значение false.</returns>
      <param name="key">Ключ удаляемого элемента.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)">
      <summary>Удаляет из коллекции элемент с указанным местоположением.</summary>
      <param name="index">Отсчитываемый от нуля индекс, задающий местоположение удаляемого элемента коллекции.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)">
      <summary>Заменяет элемент коллекции с указанным местоположением на новый элемент.</summary>
      <param name="index">Отсчитываемый от нуля индекс, указывающий позицию вставки элемента в коллекцию.</param>
      <param name="item">Элемент типа <paramref name="T" />, вставляемый в коллекцию.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Предоставляет потокобезопасную коллекцию только для чтения, содержащую объекты типа, заданного универсальным параметром, в качестве элементов.</summary>
      <typeparam name="T">Тип объектов, содержащихся как элементы в потокобезопасной коллекции только для чтения.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />, используя объект для синхронизации доступа к потокобезопасной коллекции только для чтения.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции только для чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> равно null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> из указанного перечислимого списка элементов, при этом объект используется для синхронизации доступа к потокобезопасной коллекции только для чтения.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции только для чтения.</param>
      <param name="list">Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" /> элементов, используемых для инициализации потокобезопасной коллекции только для чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> или <paramref name="list" /> равно null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> из указанного массива элементов, используя объект для синхронизации доступа к потокобезопасной коллекции только для чтения.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции только для чтения.</param>
      <param name="list">Массив <see cref="T:System.Array" /> элементов типа <paramref name="T" />, используемых для инициализации потокобезопасной коллекции только для чтения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="syncRoot" /> или <paramref name="list" /> равно null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным значением.</summary>
      <returns>Значение true, если элемент <paramref name="value" /> найден в коллекции; в противном случае — значение false.</returns>
      <param name="value">Объект, который требуется найти в коллекции.</param>
      <exception cref="T:System.ArgumentException">Объект <paramref name="value" /> не является объектом типа, содержащегося в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует элементы коллекции в указанный массив, начиная с заданного индекса.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы коллекции.</param>
      <param name="index">Отсчитываемый от нуля индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Возвращает количество элементов в потокобезопасной коллекции только для чтения.</summary>
      <returns>Количество элементов в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию элементов синхронизированной коллекции только для чтения.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" /> для объектов типов, хранящихся в коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Возвращает индекс первого вхождения значения в коллекции.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения значения (<paramref name="value" />) в коллекции.</returns>
      <param name="value">Элемент, индекс которого требуется извлечь.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Возвращает элемент из потокобезопасной коллекции только для чтения с указанным индексом.</summary>
      <returns>Объект в коллекции с указанным индексом (<paramref name="index" />).</returns>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Возвращает список элементов в потокобезопасной коллекции только для чтения.</summary>
      <returns>Список <see cref="T:System.Collections.Generic.IList`1" /> элементов, содержащихся в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>При вызове выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Невозможно задать элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>При вызове выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Невозможно очистить элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Возвращает значение false и формирует исключение <see cref="T:System.NotSupportedException" /> при вызове.</summary>
      <returns>false</returns>
      <param name="value">Значение, удаляемое из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>При вызове выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Нельзя вставлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>При вызове выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы коллекции.</param>
      <param name="index">Отсчитываемый от нуля индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <param name="value">Элемент, который необходимо добавить в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Невозможно задать элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <exception cref="T:System.NotSupportedException">Невозможно очистить элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <param name="value">Объект, который требуется найти в коллекции.</param>
      <exception cref="T:System.ArgumentException">Объект <paramref name="value" /> не является объектом типа, содержащегося в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">Элемент, индекс которого требуется извлечь.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Нельзя вставлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Невозможно задать элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index">Отсчитываемый от нуля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="T:System.IO.PipeException">
      <summary>Создается при ошибке в именованном канале.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.PipeException" />.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.PipeException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.PipeException" /> с указанным сообщением об ошибке. </summary>
      <param name="message">Строка, содержащая сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.PipeException" /> с указанным сообщением об ошибке и внутренним исключением.  </summary>
      <param name="message">Строка, содержащая сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> с указанным сообщением об ошибке и кодом ошибки. </summary>
      <param name="message">Строка, содержащая сообщение об ошибке с объяснением причин исключения.</param>
      <param name="errorCode">Целое число, содержащее код ошибки.</param>
    </member>
    <member name="P:System.IO.PipeException.ErrorCode">
      <summary>Получает код ошибки, возвращаемый с исключением. </summary>
      <returns>Целое число с кодом ошибки, возвращаемым с исключением. </returns>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Это исключение обычно создается на стороне клиента, когда действие, связанное с вызываемой операцией, не соответствует ни одному действию операций на сервере.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ActionNotSupportedException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ActionNotSupportedException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ActionNotSupportedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ActionNotSupportedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAccessDeniedException">
      <summary>Исключение, вызываемое при отказе в доступе к адресу.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAccessDeniedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> с указанным сообщением об ошибке. </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAlreadyInUseException">
      <summary>Исключение, вызываемое, если адрес является недоступным, так как уже используется.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.AddressFilterMode">
      <summary>Задает тип семантики соответствия, используемый диспетчером для маршрутизации входящих сообщений в правильную конечную точку.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Exact">
      <summary>Задает фильтр, выдающий точное соответствие по адресу входящего сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Prefix">
      <summary>Задает фильтр, выдающий соответствия самого длинного префикса по адресу входящего сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Any">
      <summary>Задает фильтр, соответствующий любому адресу входящего сообщения.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLevel">
      <summary>Указывает, когда выполнять аудит событий безопасности. </summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.None">
      <summary>Запись событий не выполняется.Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Success">
      <summary>Выполняется запись только успешных событий, связанных с безопасностью.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Failure">
      <summary>Выполняется запись только событий, связанных с безопасностью, в которых произошел сбой.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.SuccessOrFailure">
      <summary>Выполняется запись успешно выполненных событий, связанных с безопасностью, и событий, в которых произошел сбой.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLogLocation">
      <summary>Задает местоположение для записи журналов событий, относящихся к безопасности.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Default">
      <summary>Задает местоположение по умолчанию, определяемое операционной системой.Если запись в журнал безопасности поддерживается (как в  и  и на более поздних платформах), местоположением журнала по умолчанию является журнал безопасности.В противном случае (например, в ), местоположением журнала по умолчанию является журнал приложений.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Application">
      <summary>Задает журнал приложений в журнале событий.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Security">
      <summary>Задает журнал безопасности в журнале событий.Для записи в журнал безопасности вызывающий поток должен иметь разрешение SeAuditPrivilege.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Представляет собой привязку, которую служба  может использовать для настройки и предоставления конечных точек, которые могут взаимодействовать с веб-службами и клиентами ASMX, а также с другими службами, соответствующими требованиям WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpBinding" /> привязкой, заданной именем ее конфигурации. </summary>
      <param name="configurationName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Привязка с именем конфигурации <paramref name="configurationName" /> не найдена.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</summary>
      <returns>Значение true — для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых в <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.Значение всегда — SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает число, определяющее максимальный объем памяти, выделяемый диспетчером буфера сообщений, принимающим сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524288 (0x80000) байт.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буфера, который получает сообщения из канала.</summary>
      <returns>Целое значение, указывающее максимальный размер (в байтах) буфера, хранящего сообщения во время их обработки для конечной точки, настроенной с этой привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, которое можно получить по каналу, настроенному с этой привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
      <summary>Возвращает или задает значение, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или текст).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, в котором указывается формат для кодирования сообщений SOAP (MTOM или текст/XML).Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>Значение "https", если режиму безопасности в элементе привязки транспорта присвоено значение <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> или <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; в противном случае — значение "http".</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой.  </summary>
      <returns>Объект <see cref="T:System.ServiceModel.BasicHttpSecurity" />, используемый с этой привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, которое указывает, нужно ли сериализовать ограничения по значению, заданные для структуры сообщения SOAP.</summary>
      <returns>Значение true, если квоты средства чтения следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее, должны ли быть сериализованы параметры безопасности в зависимости от того, происходит ли уже сериализация, например, на уровне сообщений или транспорта. </summary>
      <returns>Значение true, если безопасность следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeTextEncoding">
      <summary>Возвращает значение, которое указывает, должны ли быть сериализованы параметры для кодировки текста.</summary>
      <returns>Значение true, если кодировку текста следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>Всегда имеет значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать отправляемые сообщения или передавать их потоком.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, следует ли буферизировать отправляемые сообщения или передавать их потоком.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpContextBinding">
      <summary>Обеспечивает контекстную привязку для привязки <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpContextBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpContextBinding" /> с заданным объектом <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. </summary>
      <param name="securityMode">Режим безопасности HTTP.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpContextBinding" /> с заданной конфигурацией привязки.</summary>
      <param name="configName">Имя конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.BasicHttpContextBinding.ContextManagementEnabled">
      <summary>Возвращает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.CreateBindingElements">
      <summary>Создает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых в <see cref="T:System.ServiceModel.BasicHttpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Перечисляет типы учетных данных, которые можно использовать для проверки подлинности клиента, если в привязке BasicHttpBinding включена безопасность.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Указывает, что проверка подлинности клиента осуществляется с помощью имени пользователя. </summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Указывает, что проверка подлинности клиента осуществляется с помощью сертификата. </summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageSecurity">
      <summary>Настраивает параметры безопасности на уровне сообщений для <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite">
      <summary>Указывает набор алгоритмов, используемых с классом <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType">
      <summary>Указывает тип учетных данных, на основании которых выполняется проверка подлинности клиента.</summary>
      <returns>Элемент перечисления <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" />.Значение по умолчанию — <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite">
      <summary>Возвращает значение, указывающее, должен ли быть сериализован набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP.</summary>
      <returns>Значение true, если набор алгоритмов следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType">
      <summary>Возвращает значение, которое указывает, должен ли быть сериализован тип учетных данных клиента.</summary>
      <returns>Значение true, если тип учетных данных клиента следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Настраивает параметры безопасности привязки basicHttpBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Message">
      <summary>Возвращает параметры безопасности уровня сообщений для привязки basicHttpBinding.</summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" /> отражает параметры безопасности уровня сообщений для этой привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Возвращает или задает режим безопасности для привязки basicHttpBinding.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.Значение по умолчанию для этого свойства — <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение является недопустимым значением для <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeMessage">
      <summary>Возвращает значение, которое указывает, должен ли быть сериализован элемент сообщения.</summary>
      <returns>true если сообщение должно быть сериализовано, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeTransport">
      <summary>Возвращает значение, которое указывает, должен ли быть сериализован элемент транспорта.</summary>
      <returns>Значение true, если элемент транспорта должен быть сериализован; в противном случае ― значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Transport">
      <summary>Возвращает параметры безопасности транспортного уровня для привязки basicHttpBinding.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.HttpTransportSecurity" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Задает типы безопасности, которые можно использовать с предоставленной системой привязкой <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>Во время передачи сообщение SOAP незащищено.Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Безопасность обеспечивается с помощью протокола HTTPS.Служба должна быть настроена с использованием SSL-сертификатов.Сообщение SOAP защищается как единое целое с помощью HTTPS.Служба проходит проверку подлинности в клиенте с использованием SSL-сертификата.Проверка подлинности клиента контролируется <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Message">
      <summary>Безопасность обеспечивается с помощью средств безопасности сообщений SOAP.Для привязки <see cref="T:System.ServiceModel.BasicHttpBinding" /> система требует, чтобы клиенту был отдельно предоставлен сертификат сервера.Допустимые типы учетных данных клиента для этой привязки — UserName и Certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Целостность, конфиденциальность и проверка подлинности сервера обеспечиваются с помощью HTTPS.Служба должна быть настроена с использованием сертификата.Проверка подлинности клиента осуществляется при помощи механизма безопасности сообщений SOAP.Данный режим может использоваться, когда проверка подлинности клиента осуществляется с учетными данными типа имени пользователя или сертификата и существует развернутый канал HTTPS с обеспечением безопасности при передаче сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Данный режим не обеспечивает целостности и конфиденциальности сообщений.Он обеспечивает только проверку подлинности клиента на основе HTTP.Этот режим следует использовать с осторожностью.Он должен применяться в тех средах, где безопасность передачи обеспечивается другими средствами (например IPSec), а инфраструктура  обеспечивает только проверку подлинности клиента.</summary>
    </member>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Настраивает реализацию службы обратного вызова в клиентском приложении.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Указывает, необходимо ли автоматически закрывать сеанс при закрытии службой дуплексного сеанса.</summary>
      <returns>Значение true, если объекты дуплексного обратного вызова автоматически закрывают сеанс при закрытии службой дуплексного сеанса; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
      <summary>Возвращает или задает поддержку службой одного потока, нескольких потоков или повторных входящих вызовов.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.ConcurrencyMode" />; значение по умолчанию — <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.ConcurrencyMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Возвращает или задает значение, которое указывает, требуется ли передавать по линии связи неизвестные данные сериализации.</summary>
      <returns>true, если неизвестные данные сериализации никогда не передаются; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, указывающее, что общие необработанные исключения выполнения должны преобразовываться в исключения <see cref="T:System.ServiceModel.FaultException`1" /> типа <see cref="T:System.String" /> и отправляться как сообщения об ошибке.Задавайте значение true только во время разработки для устранения неполадок службы.</summary>
      <returns>true, если необработанные исключения должны возвращаться в виде ошибок SOAP; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Возвращает или задает максимальное количество элементов, допустимое в сериализованном объекте.</summary>
      <returns>Максимальное количество элементов, разрешенное в объекте.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Настраивает элементы привязки для поддержки поведения обратного вызова.</summary>
      <param name="serviceEndpoint">Конечная точка объекта обратного вызова.</param>
      <param name="parameters">Коллекция настраиваемых параметров привязки.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Настраивает среду выполнения клиента для поддержки объекта обратного вызова.</summary>
      <param name="serviceEndpoint">Конечная точка, настраиваемая атрибутом.</param>
      <param name="clientRuntime">Объект среды выполнения клиента, настраиваемый атрибутом.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />.Данная реализация не используется.</summary>
      <param name="serviceEndpoint">Изменяемая конечная точка.   </param>
      <param name="endpointDispatcher">Изменяемый методом диспетчер конечной точки.   </param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Проверяет описание конечной точки до построения среды выполнения.</summary>
      <param name="serviceEndpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
      <summary>Указывает уровень изоляции транзакции.</summary>
      <returns>Значение <see cref="T:System.Transactions.IsolationLevel" />, задающее уровень изоляции транзакции.Значение по умолчанию — <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.Transactions.IsolationLevel" />.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
      <summary>Возвращает или задает период времени, в течение которого транзакция должна быть завершена.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время, в течение которого транзакция должна быть завершена; по истечении этого времени транзакция будет прервана автоматически.Значение по умолчанию — <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Возвращает или задает значение, определяющее, следует ли использовать текущий контекст синхронизации для выбора потока исполнения.</summary>
      <returns>true, если все вызовы службы должны запускаться в потоке, указанном контекстом <see cref="T:System.Threading.SynchronizationContext" />; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
      <summary>Возвращает или задает значение, определяющее, кем выполняется принудительная обработка заголовка SOAP MustUnderstand: системой или приложением.</summary>
      <returns>true, если обработка заголовка SOAP MustUnderstand должна выполняться системой; в противном случае — false, что означает, что эта обработка выполняется приложением.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Создает и управляет каналами, которые используются клиентами для отправки сообщений в конечные точки службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Инициализирует фабрику каналов с поведениями, предоставляемыми в заданном файле конфигурации, и с поведениями в конечной точке службы фабрики каналов.</summary>
      <param name="configurationName">Имя файла конфигурации.</param>
      <exception cref="T:System.InvalidOperationException">Конечная точка службы фабрики каналов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Если реализован в производном классе, создает описание конечной точки службы, связанной с фабрикой каналов.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, связанная с фабрикой каналов.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Создает фабрику каналов для текущей конечной точки фабрики.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> для конечной точки текущей фабрики.</returns>
      <exception cref="T:System.InvalidOperationException">Конечная точка службы, к которой подключаются каналы фабрики, имеет значение null, или привязка конечной точки имеет значение null, или отсутствует элемент с заданным именем конфигурации.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Возвращает учетные данные, используемые клиентами для взаимодействия с конечной точкой службы по каналам, создаваемым фабрикой.</summary>
      <returns>Учетные данные <see cref="T:System.ServiceModel.Description.ClientCredentials" />, используемые клиентами, если они настроены для фабрики или если конечная точка имеет значение, отличное от null, а также находится в состоянии Created, либо в состоянии Opening. В противном случае значение равно null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции закрытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции открытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Возвращает конечную точку службы, к которой подключаются создаваемые фабрикой каналы.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которой подключаются создаваемые фабрикой каналы.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Открывает текущую фабрику каналов, если она еще не открыта.</summary>
      <exception cref="T:System.ObjectDisposedException">Текущая фабрика либо закрывается, либо уже закрыта, поэтому ее невозможно открыть.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Возвращает запрашиваемый типизированный объект, если он имеется, из соответствующего уровня стека каналов или значение null, если он отсутствует.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует конечную точку службы фабрики каналов с заданной привязкой и адресом.</summary>
      <param name="binding">Адрес <see cref="T:System.ServiceModel.Channels.Binding" />, с помощью которого выполняется инициализация фабрики каналов.</param>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, с помощью которого выполняется инициализация фабрики каналов.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует конечную точку службы фабрики каналов с заданной конечной точкой.</summary>
      <param name="endpoint">Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, с помощью которой выполняется инициализация фабрики каналов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует конечную точку службы фабрики каналов с заданным адресом и конфигурацией.</summary>
      <param name="configurationName">Имя файла конфигурации, используемого для инициализации фабрики каналов.</param>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, с помощью которого выполняется инициализация фабрики каналов.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Завершает работу фабрики внутренних каналов текущей фабрики каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия в фабрике внутренних каналов текущей фабрики каналов, содержащей объект состояния, связанный с ней. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия в фабрике внутренних каналов текущей фабрики каналов, содержащей объект состояния, связанный с ней. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Вызывает операцию закрытия в фабрике внутренних каналов с заданным временем ожидания для завершения операции.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия в фабрике внутренний каналов текущей фабрики каналов. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия в фабрике внутренний каналов текущей фабрики каналов. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Вызывает операцию открытия в фабрике внутренних каналов текущей фабрики каналов с заданным временем ожидания для завершения операции.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Внутренний канал текущего канала имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Инициализирует доступную только для чтения копию объекта <see cref="T:System.ServiceModel.Description.ClientCredentials" /> для фабрики каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Создает фабрику внутренних каналов для текущего канала.</summary>
      <exception cref="T:System.InvalidOperationException">Фабрика внутренних каналов для фабрики каналов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Закрывает текущую фабрику каналов.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Фабрика, создающая каналы различных типов, которые используются клиентами для отправки сообщений в конечные точки службы, настроенные по-разному.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.Этот тип должен быть либо <see cref="T:System.ServiceModel.Channels.IOutputChannel" />, либо <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" />. </summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, заданный для каналов, создаваемых фабрикой.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> с указанными привязкой и адресом конечной точки.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для настройки конечной точки.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> с указанными привязкой и удаленным адресом.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для настройки конечной точки.</param>
      <param name="remoteAddress">Адрес, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteAddress" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" />, который создает каналы с указанной конечной точкой.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для каналов, создаваемых фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">Объект <paramref name="endpoint" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> с указанным именем конфигурации конечной точки.</summary>
      <param name="endpointConfigurationName">Имя конфигурации, используемой для конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" />, связанный с указанным именем конфигурации конечной точки и удаленным адресом.</summary>
      <param name="endpointConfigurationName">Имя конфигурации, используемой для конечной точки.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> или <paramref name="remoteAddress" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" />. </summary>
      <param name="channelType">Тип <see cref="T:System.Type" /> канала, создаваемого фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">Объект <paramref name="channelType" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="channelType" /> — это тип класса или значения и не является интерфейсом.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Создает канал заданного типа, связанный с заданным адресом конечной точки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Создает канал заданного типа, используемый для отправки сообщений в конечную точку службы, настраиваемую с помощью указанной привязки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для настройки конечной точки.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.ServiceModel.ChannelFactory" /> имеет дуплексные операции, которые он не поддерживает.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал заданного типа, используемый для отправки сообщений в настраиваемую с помощью указанной привязки конечную точку службы по заданному адресу транспортировки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для настройки конечной точки.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Код <see cref="T:System.Uri" />, содержащий адрес транспортировки, по которому канал отправляет сообщения.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.ServiceModel.ChannelFactory" /> имеет дуплексные операции, которые он не поддерживает.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал, используемый для отправки сообщений в службу по конкретному адресу конечной точки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал, используемый для отправки сообщений в службу по конкретному адресу конечной точки через указанный адрес транспортировки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Код <see cref="T:System.Uri" />, содержащий адрес транспортировки, по которому канал отправляет сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.ServiceModel.ChannelFactory" /> имеет дуплексные операции, которые он не поддерживает.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)">
      <summary>Создает канал, используемый для отправки сообщений в службу, конечная точка которой настраивается заданным способом.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="endpointConfigurationName">Имя используемой для службы конфигурации конечной точки.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.ServiceModel.ChannelFactory" /> имеет дуплексные операции, которые он не поддерживает.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Создает описание конечной точки службы.</summary>
      <returns>Описание <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> службы.</returns>
      <exception cref="T:System.InvalidOperationException">Контракт обратного вызова имеет значение null, а для конечной точки службы требуется контракт, значение которого отличается от значения null.</exception>
    </member>
    <member name="T:System.ServiceModel.ChannelTerminatedException">
      <summary>Это исключение обычно вызывается на стороне клиента, если канал закрывается из–за закрытия сервером соответствующего подключения.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelTerminatedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelTerminatedException" /> с указанными сведениями о сериализации и контекстом потоковой передачи. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelTerminatedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelTerminatedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Предоставляет базовую реализацию, используемую для создания объектов клиента , которые могут вызывать службы.</summary>
      <typeparam name="TChannel">Канал, используемый для подключения к службе.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя целевую конечную точку по умолчанию из файла конфигурации приложения. </summary>
      <exception cref="T:System.InvalidOperationException">Информация о конечной точке по умолчанию в файле конфигурации отсутствует, в файле конфигурации несколько конечных точек, или файл конфигурации отсутствует.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя указанную привязку и целевой адрес. </summary>
      <param name="binding">Привязка, с помощью которой вызывается служба.</param>
      <param name="remoteAddress">Адрес конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Привязка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" /> с помощью указанного объекта <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <param name="endpoint">Конечная точка для службы, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя параметр <paramref name="callbackInstance" /> в качестве объекта обратного вызова в дуплексном диалоге. </summary>
      <param name="callbackInstance">Объект обратного вызова, который клиентское приложение использует для прослушивания сообщений из подключенной службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Информация о конечной точке по умолчанию в файле конфигурации отсутствует, в файле конфигурации несколько конечных точек, или файл конфигурации отсутствует.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />. </summary>
      <param name="callbackInstance">Служба обратного вызова.</param>
      <param name="binding">Привязка, с помощью которой вызывается служба.</param>
      <param name="remoteAddress">Адрес конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Привязка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя указанные объекты <see cref="T:System.ServiceModel.InstanceContext" /> и <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <param name="callbackInstance">Объект обратного вызова, который клиентское приложение использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpoint">Конечная точка для службы, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя указанную службу обратного вызова и информацию о конфигурации конечной точки. </summary>
      <param name="callbackInstance">Объект обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения. </param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="callbackInstance">Объект обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="callbackInstance">Объект обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя информацию о конфигурации, указанную в файле конфигурации приложения с помощью параметра <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <exception cref="T:System.ArgumentNullException">Указанная информация о конечной точке имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя указанный целевой адрес и информацию о конечной точке. </summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Вызывает мгновенный переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Возвращает внутренний канал, используемый для отправки сообщений в настроенные различным образом конечные точки служб.</summary>
      <returns>Канал указанного типа.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Возвращает базовый объект <see cref="T:System.ServiceModel.ChannelFactory`1" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Возвращает учетные данные клиента, используемые для вызова операции.</summary>
      <returns>Возвращает учетные данные <see cref="T:System.ServiceModel.Description.ClientCredentials" />, которые представляют доказательство идентификации, предоставленное клиентом.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Close">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Возвращает новый канал к службе.</summary>
      <returns>Канал, принадлежащий к типу контракта службы.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
      <summary>Указывает внутреннему каналу отображать пользовательский интерфейс, если он необходим для инициализации канала перед его использованием.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Возвращает целевую конечную точку службы, к которой может подключиться клиент .</summary>
      <returns>Целевая конечная точка.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Реплицирует поведение ключевого слова по умолчанию в C#.</summary>
      <returns>Возвращает значение null, если T является ссылочным типом, и значение ноль, если T является типом числового значения.</returns>
      <typeparam name="T">Тип, определенный ключевым словом как ссылочный или числовой.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Возвращает базовую реализацию <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
      <returns>Канал клиента для объекта клиента .</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Обеспечивает поддержку реализации асинхронной модели, основанной на событиях.Дополнительные сведения о 
  б этой модели см. в разделе Обзор асинхронной модели, основанной на событиях.</summary>
      <param name="beginOperationDelegate">Делегат, используемый для вызова асинхронной операции.</param>
      <param name="inValues">Входные значения асинхронного вызова.</param>
      <param name="endOperationDelegate">Делегат, используемый для завершения асинхронного вызова после его выполнения.</param>
      <param name="operationCompletedCallback">Предоставляемый клиентом обратный вызов, который вызывается по завершении асинхронного метода.Обратный вызов передается методу <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Объект <paramref name="userState" />, который связывается с асинхронным вызовом.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Open">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Возвращает текущее состояние объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Значение состояния <see cref="T:System.ServiceModel.CommunicationState" /> объекта.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
      <summary>Явная реализация метода <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" /> с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию начала закрытия.</returns>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
      <param name="callback">Объект обратного вызова, вызванный по завершении операции.</param>
      <param name="state">Данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" /> в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия.</returns>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Обработчик событий, вызываемый после перехода объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, используемый для завершения асинхронной операции закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, используемый для завершения асинхронной операции завершения открытия.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Обработчик событий, вызываемый при возникновении ошибки во время выполнения операции в объекте <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Делегат, используемый методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> для вызова асинхронных операций в клиенте. </summary>
      <returns>Результат асинхронного вызова.</returns>
      <param name="inValues">Входные значения асинхронного вызова.</param>
      <param name="asyncCallback">Ссылка на метод, который должен вызываться при завершении соответствующей асинхронной операции.</param>
      <param name="state">Объект <see cref="T:System.Object" />, позволяющий клиенту различать разные асинхронные вызовы.Этот объект предоставляется клиенту в параметре arguments обратного вызова при завершении события.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Делегат, вызываемый методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> после успешного выполнения вызова, сделанного методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />, делегата <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>Массив объекта <see cref="T:System.Object" />, в котором содержатся результаты вызова асинхронного метода.Операция может иметь несколько возвращаемых значений, которые возвращаются в этот массив объекта.</returns>
      <param name="result">Результат, возвращаемый вызовом, сделанным методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />,делегата <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Сохраняет результаты асинхронного вызова, сделанного клиентом.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Возвращает результаты асинхронного вызова, сделанного клиентом.</summary>
      <returns>Массив объекта <see cref="T:System.Object" />, содержащий результаты асинхронного вызова, сделанного клиентом.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <summary>Управляет маркерами безопасности для клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />.</summary>
      <param name="clientCredentials">Объект <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="clientCredentials" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
      <summary>Возвращает учетные данные клиента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Создает структуру проверки подлинности маркеров безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />.</returns>
      <param name="tokenRequirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <param name="outOfBandTokenResolver">Когда этот метод возвращает управление, он содержит объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="tokenRequirement" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Создает поставщик маркеров безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />.</returns>
      <param name="tokenRequirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="tokenRequirement" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Создает сериализатор маркеров безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">Версия (<see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />) маркера безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
      <summary>Создает сериализатор маркеров безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">Версия (<see cref="T:System.ServiceModel.Security.SecurityVersion" />) маркера безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Возвращает значение, которое указывает, является ли заданное требование к маркеру требованием выданного маркера безопасности.</summary>
      <returns>Значение true, если заданное требование к маркеру является требованием выданного маркера безопасности; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="requirement" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Представляет ошибку связи либо в службе, либо в клиентском приложении.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />, используя указанные сведения о сериализации и контекстные объекты. </summary>
      <param name="info">Сведения о процессе десериализации.</param>
      <param name="context">Контекст процесса десериализации.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />, используя указанное сообщение.</summary>
      <param name="message">Описание условия ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />, используя указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Описание условия ошибки.</param>
      <param name="innerException">Используемое внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Исключение, создаваемое при вызове объекта <see cref="T:System.ServiceModel.ICommunicationObject" />, работа которого прервана.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, используемый для десериализации данных в объект <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, используя указанное сообщение. </summary>
      <param name="message">Сообщение, передаваемое в исключении.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, используя указанное сообщение и внутреннее исключение. </summary>
      <param name="message">Сообщение исключения.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Исключение, которое выдается в случае вызова сбойного объекта связи. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> во время десериализации потока с использованием указанных объектов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Информация о сериализации, используемая для создания объекта исключения.</param>
      <param name="context">Контекст, в рамках которого создается объект исключения.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />, используя указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Определяет состояния, в которых может находиться интерфейс <see cref="T:System.ServiceModel.ICommunicationObject" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Указывает, что коммуникационный объект создан и может быть настроен, но еще не открыт и не готов к использованию.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Указывает, что коммуникационный объект переходит из состояния <see cref="F:System.ServiceModel.CommunicationState.Created" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Указывает, что коммуникационный объект сейчас открыт и готов к использованию. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Указывает, что коммуникационный объект переходит в состояние <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Указывает, что коммуникационный объект закрыт и больше непригоден для использования. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Указывает, что коммуникационный объект обнаружил ошибку или сбой, после которого он не может восстановиться и стал непригоден для использования. </summary>
    </member>
    <member name="T:System.ServiceModel.ConcurrencyMode">
      <summary>Указывает, какой режим выполнения операции поддерживается классом службы — однопотоковый или многопотоковый. </summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Single">
      <summary>Экземпляр службы является однопотоковым и не допускает повторные входящие вызовы.Если свойство <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> имеет значение <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> и во время обслуживания вызова экземпляром поступают дополнительные сообщения, эти сообщения должны ждать освобождения службы или истечения времени ожидания.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Reentrant">
      <summary>Экземпляр службы является однопотоковым и допускает повторные входящие вызовы.Служба, допускающая повторные входящие вызовы, принимает вызовы при вызове другой службы; следовательно, разработчик должен обеспечить сохранение согласованного состояния объекта до вызовов и подтвердить допустимость данных локальной операции после вызовов.Обратите внимание, что экземпляр службы разблокируется только путем вызова другой службы по каналу .В этом случае вызванная служба может повторно войти в первую службу через обратный вызов.Если первая служба не допускает повторные входящие вызовы, последовательность вызовов приводит к взаимоблокировке.Дополнительные сведения см. в разделе <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Multiple">
      <summary>Экземпляр службы является многопотоковым.Гарантии синхронизации не предоставляются.Поскольку другие потоки могут в любое время изменить объект службы, необходимо всегда обеспечивать синхронизацию и согласованность состояний.</summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Указывает инфраструктуре  использовать сериализатор <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Возвращает или задает стиль SOAP сериализованных данных.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.OperationFormatStyle" />.Значение по умолчанию — <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.DeadLetterQueue">
      <summary>Задает тип используемой очереди недоставленных сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.None">
      <summary>Очередь недоставленных сообщений не используется.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.System">
      <summary>Используется системная очередь недоставленных сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.Custom">
      <summary>Пользовательская очередь недоставленных сообщений.</summary>
    </member>
    <member name="T:System.ServiceModel.DeliveryRequirementsAttribute">
      <summary>Задает требования к функциям, которые должны поддерживаться привязками для реализации службы или клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements">
      <summary>Указывает, должна ли привязка для службы поддерживать контракты с формированием очереди.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" />; значение по умолчанию — <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</returns>
      <exception cref="T:System.ArgumentException">Значение не является одним из значений <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery">
      <summary>Указывает, должна ли привязка поддерживать упорядоченные сообщения.</summary>
      <returns>Значение true дает указание системе  проверить, что привязка должна поддерживать упорядочение сообщений; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> для правильного присоединения параметров привязки.</summary>
      <param name="description">Описание контракта.</param>
      <param name="endpoint">Конечная точка службы для контракта.</param>
      <param name="parameters">Параметры привязки.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> для поддержки клиента.</summary>
      <param name="description">Описание контракта, для которого применяется поведение.</param>
      <param name="endpoint">Конечная точка для контракта.</param>
      <param name="proxy">Среда выполнения клиента, в которой действует поведение.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Реализация метода <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />, который разрешает поддержку службы.</summary>
      <param name="description">Описание контракта, для которого применяется поведение.</param>
      <param name="endpoint">Конечная точка для контракта.</param>
      <param name="dispatch">Среда выполнения распределения, которая поддерживает конечную точку.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> для разрешения поддержки проверки.</summary>
      <param name="description">Описание контракта.</param>
      <param name="endpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract">
      <summary>Возвращает или задает тип, для которого применяется атрибут.</summary>
      <returns>Тип <see cref="T:System.Type" />, для которого применяется атрибут.</returns>
    </member>
    <member name="T:System.ServiceModel.DnsEndpointIdentity">
      <summary>Указывает идентификатор DNS сервера.</summary>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DnsEndpointIdentity" /> на основании утверждения.</summary>
      <param name="identity">Объект <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса на основании DNS-имени.</summary>
      <param name="dnsName">DNS-имя.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Значение типа утверждения <paramref name="dnsName" /> отлично от <see cref="P:System.IdentityModel.Claims.ClaimTypes.Dns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Предоставляет средства для создания дуплексных каналов различных типов, используемых клиентами для передачи сообщений в конечные точки служб и приема сообщений из конечных точек служб, и управления этими каналами.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанной привязкой.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> или <paramref name="binding" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанными привязкой и адресом конечной точки.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными объектом обратного вызова, привязкой и удаленным адресом.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Удаленный адрес, предоставляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанной конечной точкой.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpoint">Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которой подключаются создаваемые фабрикой каналы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанной конфигурацией.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя конфигурации, используемой для конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> или <paramref name="endpointConfigurationName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанными конфигурацией и адресом конечной точки.</summary>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" />, <paramref name="endpointConfigurationName" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанным контекстом экземпляра.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> контекстом, реализующим контракт обратного вызова, и указанной привязкой.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> или <paramref name="binding" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанными привязкой и адресом конечной точки.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными контекстом экземпляра, привязкой и удаленным адресом.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Удаленный адрес, предоставляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанной конечной точкой.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpoint">Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которой подключаются создаваемые фабрикой каналы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанной конфигурацией.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> или <paramref name="endpointConfigurationName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> объектом, реализующим контракт обратного вызова, и указанными конфигурацией и адресом конечной точки.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="endpointConfigurationName" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанным типом экземпляра обратного вызова.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова и привязкой.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> или <paramref name="binding" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова, привязкой и удаленным адресом.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова, привязкой и удаленным адресом.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="remoteAddress">Удаленный адрес, предоставляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="callbackInstanceType" />, <paramref name="binding" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова и конечной точкой службы.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова и конфигурацией.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> или <paramref name="endpointConfigurationName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> указанными типом экземпляра обратного вызова, конфигурацией и удаленным адресом.</summary>
      <param name="callbackInstanceType">Объект <see cref="T:System.Type" />, предоставляющий экземпляр обратного вызова, который клиент использует для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <param name="remoteAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" />, <paramref name="endpointConfigurationName" /> или <paramref name="remoteAddress" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> или <paramref name="endpointAddress" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> или <paramref name="endpointAddress" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackObject">Объект <see cref="T:System.Object" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Дуплексный канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Дуплексный канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> или <paramref name="endpointAddress" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для подключения к службе по каналам, созданным фабрикой.</param>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> или <paramref name="endpointAddress" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Дуплексный канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
      <summary>Создает дуплексный канал между службой и экземпляром обратного вызова на клиенте.</summary>
      <returns>Канал типа <paramref name="TChannel" /> (универсальный параметр для фабрики) между клиентом и службой.</returns>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, используемый клиентом для прослушивания сообщений из подключенной службы.</param>
      <param name="endpointConfigurationName">Имя, используемое для конфигурации конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="callbackInstance" /> или <paramref name="callbackInstance" />.UserObject равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Используется для создания канала для дуплексной службы и связи этого канала с объектом обратного вызова.</summary>
      <typeparam name="TChannel">Тип создаваемого канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанный объект обратного вызова.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, привязку и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="binding">Привязка, с помощью которой вызывается служба.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Привязка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" /> с указанными объектом обратного вызова и конечной точкой службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpoint">Конечная точка службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Конечная точка службы не определена.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова и имя конфигурации.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, имя конфигурации и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, имя конфигурации конечной точки и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанный объект обратного вызова.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, связывающий объект обратного вызова с каналом к службе.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, привязку и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="binding">Привязка, с помощью которой вызывается служба.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" /> с указанными объектом обратного вызова и конечной точкой службы.</summary>
      <param name="callbackInstance">Объект <see cref="T:System.ServiceModel.InstanceContext" />, связывающий объект обратного вызова с каналом к службе.</param>
      <param name="endpoint">Конечная точка службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Конечная точка службы не определена.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова и имя конфигурации.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, имя конфигурации и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DuplexClientBase`1" />, используя указанные объект обратного вызова, имя конфигурации и адрес конечной точки службы.</summary>
      <param name="callbackInstance">Объект, используемый для создания контекста экземпляра, связывающего объект обратного вызова с каналом к службе.</param>
      <param name="endpointConfigurationName">Имя конечной точки клиента в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес используемой конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Экземпляр обратного вызова имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Имя конфигурации имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.CreateChannel">
      <summary>Возвращает канал в службу, связанную с объектом обратного вызова, передаваемого конструктору.</summary>
      <returns>Канал для службы типа интерфейса контракта службы.</returns>
    </member>
    <member name="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel">
      <summary>Возвращает внутренний дуплексный канал.</summary>
      <returns>Внутренний дуплексный канал.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Предоставляет уникальный сетевой адрес, используемый клиентом для взаимодействия с конечной точкой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанной строкой универсального кода ресурса (URI).</summary>
      <param name="uri">Универсальный код ресурса (URI), идентифицирующий конечную точку.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанными универсальным кодом ресурса (URI) и заголовками.</summary>
      <param name="uri">Код <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки.</param>
      <param name="addressHeaders">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий адресную информацию, используемую для взаимодействия с конечной точкой.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанными универсальным кодом ресурса (URI), удостоверением и заголовками.</summary>
      <param name="uri">Код <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки.</param>
      <param name="identity">Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> для конечной точки.</param>
      <param name="addressHeaders">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий адресную информацию, используемую для взаимодействия с конечной точкой.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанными универсальным кодом ресурса (URI), удостоверением и коллекцией заголовков.</summary>
      <param name="uri">Код <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки.</param>
      <param name="identity">Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> для конечной точки.</param>
      <param name="headers">Коллекция <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, содержащая адресную информацию, используемую для взаимодействия с конечной точкой.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанными универсальным кодом ресурса (URI), удостоверением, коллекцией заголовков и средствами чтения метаданных и расширений.</summary>
      <param name="uri">Код <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки.</param>
      <param name="identity">Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> для конечной точки.</param>
      <param name="headers">Коллекция <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, содержащая адресную информацию, используемую для взаимодействия с конечной точкой.</param>
      <param name="metadataReader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимаются метаданные конечной точки.</param>
      <param name="extensionReader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимаются расширения.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Возвращает не зависящее от версии представление анонимного универсального кода ресурса (URI).</summary>
      <returns>Код <see cref="T:System.Uri" /> со значением http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Присваивает универсальный код ресурса (URI) и свойства адреса конечной точки значениям заголовков указанного сообщения.</summary>
      <param name="message">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, заголовкам которого присваиваются значения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, эквивалентен ли указанный объект текущему адресу конечной точки.</summary>
      <returns>Значение true, если указанный объект эквивалентен текущему адресу; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с текущим адресом конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Предоставляет уникальный хэш-код для текущего адреса конечной точки. </summary>
      <returns>Уникальный хэш-код для текущего адреса конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions">
      <summary>Возвращает средство чтения словаря XML, обеспечивающее доступ к расширениям.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, обеспечивающий доступ к расширениям.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata">
      <summary>Возвращает средство чтения словаря XML, обеспечивающее доступ к метаданным конечной точки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, обеспечивающий доступ к метаданным конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Возвращает коллекцию заголовков адресов для конечных точек, которые может создать построитель.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, содержащий адресную информацию для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Возвращает удостоверение конечной точки, используемое для проверки ее подлинности.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Возвращает значение, указывающее, является ли конечная точка анонимной.</summary>
      <returns>Значение true,если конечная точка — <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Возвращает значение, указывающее, имеет ли универсальный код ресурса (URI) конечной точки значение <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>Значение true, если URI конечной точки — <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Возвращает не зависящий от версии универсальный код ресурса (URI), используемый для адреса конечной точки, по которому сообщение не должно отправляться.</summary>
      <returns>Код <see cref="T:System.Uri" /> со значением http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Возвращает значение, указывающее, являются ли заданные адреса конечных точек неравнозначными.</summary>
      <returns>Значение true, если адреса конечных точек равнозначны; в противном случае — значение false.</returns>
      <param name="address1">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
      <param name="address2">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Возвращает значение, указывающее, являются ли заданные адреса конечных точек неравнозначными.</summary>
      <returns>Значение true, если адреса конечных точек не равнозначны; в противном случае — значение false.</returns>
      <param name="address1">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
      <param name="address2">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Осуществляет чтение адреса конечной точки для заданной версии адреса из указанного средства чтения словаря XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, считанный из средства чтения словаря XML.</returns>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимается адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Осуществляет чтение адреса конечной точки для заданной версии адреса с указанным полным именем из указанного средства чтения словаря XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> с полным именем, считанный из средства чтения XML.</returns>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимается адрес конечной точки.</param>
      <param name="localName">Содержит локальное имя узла XML, который должен содержать адрес конечной точки.</param>
      <param name="ns">Содержит пространство имен имя узла XML, который должен содержать адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)">
      <summary>Осуществляет чтение адреса конечной точки для заданной версии адреса из указанного средства чтения XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, считанный из средства чтения XML.</returns>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, от которого принимается адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)">
      <summary>Осуществляет чтение адреса конечной точки для заданной версии адреса с указанным полным именем из указанного средства чтения XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> с полным именем, считанный из средства чтения XML.</returns>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, от которого принимается адрес конечной точки.</param>
      <param name="localName">Содержит локальное имя узла XML, который должен содержать адрес конечной точки.</param>
      <param name="ns">Содержит пространство имен имя узла XML, который должен содержать адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)">
      <summary>Считывает адрес конечной точки из указанного средства чтения словаря XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, считанный из средства чтения словаря XML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимается адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Осуществляет чтение адреса конечной точки с заданным полным именем из указанного средства чтения словаря XML.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> с полным именем, считанный из средства чтения словаря XML.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, от которого принимается адрес конечной точки.</param>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая локальное имя узла XML, который должен содержать адрес конечной точки.</param>
      <param name="ns">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая пространство имен узла XML, который должен содержать адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Возвращает каноническое представление строки универсального кода ресурса (URI), содержащегося в адресе конечной точки.</summary>
      <returns>Универсальный код ресурса (URI), идентифицирующий конечную точку.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Возвращает универсальный код ресурса (URI) для конечной точки.</summary>
      <returns>Удостоверение <see cref="T:System.Uri" /> конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Сохраняет все дочерние узлы определенного узла в указанном модуле записи словаря XML.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, в котором сохраняется адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> или <paramref name="addressingVersion" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы определенного узла в указанном модуле записи XML.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором сохраняется адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> или <paramref name="addressingVersion" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Сохраняет текущий адрес конечной точки заданной версии в указанном модуле записи словаря XML.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, в котором сохраняется адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> или <paramref name="addressingVersion" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Сохраняет текущий адрес конечной точки заданной версии в модуле записи словаря XML с указанными пространством имен и локальным именем.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, в котором сохраняется адрес конечной точки.</param>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая локальное имя узла XML, который должен содержать адрес конечной точки.</param>
      <param name="ns">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая пространство имен узла XML, который должен содержать адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" />, <paramref name="addressingVersion" />, <paramref name="localName" /> или <paramref name="ns" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Сохраняет текущий адрес конечной точки заданной версии в указанном модуле записи XML.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором сохраняется адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> или <paramref name="addressingVersion" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)">
      <summary>Сохраняет текущий адрес конечной точки заданной версии в модуле записи XML с указанными пространством имен и локальным именем.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором сохраняется адрес конечной точки.</param>
      <param name="localName">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая локальное имя узла XML, который должен содержать адрес конечной точки.</param>
      <param name="ns">Строка <see cref="T:System.Xml.XmlDictionaryString" />, содержащая пространство имен узла XML, который должен содержать адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" />, <paramref name="addressingVersion" />, <paramref name="localName" /> или <paramref name="ns" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress10">
      <summary>Предоставляет сериализуемый тип адреса конечной точки, который совместим с первой версией спецификации WS-Addressing и может представляться в качестве части контракта службы.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress10" /> с указанным адресом конечной точки.</summary>
      <returns>Класс <see cref="T:System.ServiceModel.EndpointAddress10" />, содержащий адрес для указанной конечной точки.</returns>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, используемый для инициализации экземпляра этого класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает полное имя XML, описывающее XML-представление адреса конечной точки версии 1.0 из указанной кэшированной схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, описывающий XML-представление адреса конечной точки.</returns>
      <param name="xmlSchemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, содержащий кэш схем языка XSD для адреса конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Возвращает значение null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Этот член поддерживает инфраструктуру платформы .NET Framework и не предназначен для непосредственного использования из кода.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, от которого принимается адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Этот член поддерживает инфраструктуру платформы .NET Framework и не предназначен для непосредственного использования из кода.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором сохраняется адрес текущей конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress">
      <summary>Извлекает адрес конечной точки, содержащийся в этом сериализуемом типе.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />, используемый для инициализации экземпляра этого класса.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressAugust2004">
      <summary>Выводит сериализуемый тип адреса конечной точки, совместимый с версией WS-Addressing, опубликованной в августе 2004 г. Этот тип можно представлять как часть контракта службы.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress10" /> с указанным адресом конечной точки.</summary>
      <returns>Класс <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />, содержащий адрес для указанной конечной точки.</returns>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, используемый для инициализации экземпляра этого класса.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает полное имя XML, описывающее XML-представление адреса конечной точки версии 1 из указанной кэшированной схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, описывающий XML-представление адреса конечной точки.</returns>
      <param name="xmlSchemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, содержащий кэш схем языка XSD для адреса конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Возвращает значение null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Этот член поддерживает инфраструктуру платформы .NET Framework и не предназначен для непосредственного использования из кода.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, от которого принимается адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Этот член поддерживает инфраструктуру платформы .NET Framework и не предназначен для непосредственного использования из кода.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором сохраняется адрес текущей конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress">
      <summary>Извлекает адрес конечной точки, содержащийся в этом сериализуемом типе.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.EndpointAddress" />, содержащий не зависящий от версии адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Фабрика создания новых (неизменяемых) адресов конечных точек с определенными значениями свойств.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddressBuilder" />. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> из существующего адреса конечной точки.</summary>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, значения свойств которого используются для инициализации значений свойств данного экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions">
      <summary>Возвращает средство чтения словаря XML, содержащее расширения адреса конечной точки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, осуществляющий чтение расширений адреса конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata">
      <summary>Возвращает средство чтения, содержащее метаданные, связанные с адресом конечной точки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, осуществляющий чтение метаданных, связанных с адресом конечной точки, если он существует; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Возвращает список заголовков адресов для конечных точек, которые может создать конструктор.</summary>
      <returns>Список <see cref="T:System.Collections.Generic.List`1" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий заголовки адресов для конечных точек, которые может создать конструктор.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Возвращает или задает идентификатор для конечных точек, которые может создать конструктор.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)">
      <summary>Задает средство чтения словаря XML, содержащее расширения адреса конечной точки.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, осуществляющий чтение расширений конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)">
      <summary>Задает средство чтения словаря XML, содержащее метаданные, связанные с адресом конечной точки.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, осуществляющий чтение метаданных, связанных с конечной точкой.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Создает новый адрес конечной точки, инициализируемый со значениями свойств построителя адреса текущей конечной точки.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, свойства которого инициализируются со значениями конструктора адреса текущей конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Возвращает или задает универсальный код ресурса (URI) для конечных точек, которые может создать конструктор.</summary>
      <returns>Код <see cref="T:System.Uri" />, определяющий адрес конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>Абстрактный класс, после реализации предоставляющий идентификацию, которая позволяет выполнять проверку подлинности конечной точки другими клиентами, обменивающимися с ней сообщениями.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Создает пустой экземпляр <see cref="T:System.ServiceModel.EndpointIdentity" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
      <summary>Создает идентификатор DNS с указанным именем DNS.</summary>
      <returns>DNS <see cref="T:System.ServiceModel.EndpointIdentity" />, связанный с заданным классом <paramref name="dnsName" />.</returns>
      <param name="dnsName">Имя удостоверения DNS.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dnsName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
      <summary>Создает идентификацию с указанным утверждением.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointIdentity" />, связанная с заданным параметром <paramref name="identity" />.</returns>
      <param name="identity">
        <see cref="T:System.IdentityModel.Claims.Claim" />, используемое для создания новой идентификации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Создает удостоверение RSA с указанным сертификатом X.509.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> RSA, связанное с заданным параметром <paramref name="certificate" />.</returns>
      <param name="certificate">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат для удостоверения RSA.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="certificate" /> не является сертификатом RSA.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
      <summary>Создает удостоверение RSA с указанным открытым ключом.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointIdentity" /> RSA, связанное с заданным параметром <paramref name="publicKey" />.</returns>
      <param name="publicKey">Открытый ключ для удостоверения RSA.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
      <summary>Создает удостоверение имени участника на уровне сервера (SPN) с указанным именем.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> SPN, связанное с указанным <paramref name="spnName" />.</returns>
      <param name="spnName">Имя удостоверения SPN.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="spnName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
      <summary>Создает удостоверение имени участника-пользователя (UPN) с указанным именем.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> UPN, связанное с указанным <paramref name="upnName" />.</returns>
      <param name="upnName">Имя удостоверения UPN.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="upnName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Создает удостоверение X509Certificate с указанным сертификатом.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> X509Certificate, связанное с заданным <paramref name="certificate" />.</returns>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий сертификат для удостоверения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Создает удостоверение X509Certificate с указанным основным и поддерживающим сертификатом.</summary>
      <returns>Защищенный клиент , подключающийся к конечной точке с использованием этого удостоверения, проверяет, что среди утверждений, представленных сервером, есть утверждение, содержащее отпечаток сертификата, который используется для конструирования этого удостоверения.<see cref="T:System.ServiceModel.EndpointIdentity" /> X509Certificate, связанное с заданными параметрами <paramref name="primaryCertificate" /> и<paramref name=" supportingCertificates." /></returns>
      <param name="primaryCertificate">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, содержащий основной сертификат для удостоверения.</param>
      <param name="supportingCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />, содержащий поддерживающие сертификаты для удостоверения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="primaryCertificate" /> или <paramref name="supportingCertificates" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Возвращает значение, определяющее, равен ли указанный объект текущему объекту удостоверения или имеют ли одинаковые свойства безопасности.</summary>
      <returns>Значение true, если указанный объект <paramref name="obj" /> эквивалентен текущему удостоверению или содержит такие же свойства безопасности; в противном случае — значение false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> в сравнении с текущим свойством.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Предоставляет хэш-код для текущего экземпляра удостоверения.</summary>
      <returns>Хэш-код для текущего удостоверения.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
      <summary>Возвращает идентификационное утверждение, соответствующее идентификации. </summary>
      <returns>
        <see cref="T:System.IdentityModel.Claims.Claim" />, представляющее идентификационное утверждение.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует <see cref="T:System.ServiceModel.EndpointIdentity" /> с указанным утверждением.</summary>
      <param name="identityClaim">Объект <see cref="T:System.IdentityModel.Claims.Claim" />, который используется для инициализации <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Инициализирует <see cref="T:System.ServiceModel.EndpointIdentity" /> с указанным утверждением и интерфейсом, а также проверяет равенство.</summary>
      <param name="identityClaim">Объект <see cref="T:System.IdentityModel.Claims.Claim" />, который используется для инициализации <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
      <param name="claimComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> используется для сравнения утверждений.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Возвращает удостоверение.</summary>
      <returns>
        <see cref="T:System.String" /> формы "identity(string)" (удостоверение(строка)), где строка = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Исключение возникает, когда удаленная конечная точка не может быть найдена или достигнута.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Возвращает строку, содержащую имя URI для роли SOAP, связанной с текущей версией сообщения, для конечной точки назначения.</summary>
      <returns>Пустая строка, если используется SOAP1.1; строка, содержащая "http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver", если используется SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Возвращает строку, содержащую имя URI для роли SOAP, связанной с текущей версией сообщения, для следующей точки назначения.</summary>
      <returns>Строка, содержащая "http://schemas.xmlsoap.org/soap/actor/next", если используется SOAP1.1; строка, содержащая "http://www.w3.org/2003/05/soap-envelope/role/next", если используется SOAP1.2; пустая строка, если версия сообщения — None.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Возвращает версию конверта, если не используется ни одна из версий SOAP.</summary>
      <returns>Версия конверта сообщения, в котором не используется форматирование SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Возвращает версию конверта SOAP1.1.</summary>
      <returns>Версия конверта (<see cref="T:System.ServiceModel.EnvelopeVersion" />) SOAP1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Возвращает версию конверта SOAP1.2.</summary>
      <returns>Версия конверта (<see cref="T:System.ServiceModel.EnvelopeVersion" />) SOAP1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Возвращает строку, представляющую текущую версию конверта.</summary>
      <returns>Текущая версия конверта.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Представляет сведения об ошибке.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ExceptionDetail" /> на основании исключения. </summary>
      <param name="exception">Исключение, сериализуемое как объект <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="exception" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Возвращает или задает ссылку на справку из исключения, переданного конструктору.</summary>
      <returns>Ссылка на справку исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.ExceptionDetail" />, представляющий внутреннее исключение.</summary>
      <returns>Информация о внутреннем исключении.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Возвращает или задает сообщение из исключения, переданного конструктору.</summary>
      <returns>Сообщение исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Возвращает или задает трассировку стека из исключения, переданного конструктору.</summary>
      <returns>Трассировка стека исключения.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Возвращает сведения об исключении для исключения, переданного конструктору.</summary>
      <returns>Сообщение и трассировка стека исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Возвращает или задает строку типа для исключения, переданного конструктору.</summary>
      <returns>Строка типа для исключения, переданного конструктору.</returns>
    </member>
    <member name="T:System.ServiceModel.ExtensionCollection`1">
      <summary>Представляет коллекцию расширений.</summary>
      <typeparam name="T">Тип коллекции.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ExtensionCollection`1" /> с указанным владельцем.</summary>
      <param name="owner">Владелец коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ExtensionCollection`1" /> с указанными владельцем и корнем синхронизации.</summary>
      <param name="owner">Владелец коллекции.</param>
      <param name="syncRoot">Объект, используемый для синхронизации.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.Find``1">
      <summary>Возвращает расширение, если оно находится в коллекции.</summary>
      <returns>Расширение искомого типа или значение null, если данный тип не реализуется ни одним расширением.Если данный тип реализуется несколькими расширениями, возвращается последнее добавленное расширение.</returns>
      <typeparam name="E">Тип искомого расширения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.FindAll``1">
      <summary>Возвращает коллекцию расширений, если они найдены в коллекции.</summary>
      <returns>Коллекция расширений искомого типа.Если этот тип не реализуется никакими расширениями, возвращается неопределенная пустая коллекция.</returns>
      <typeparam name="E">Тип, для которого ищется коллекция расширений.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Возвращает информацию о том, является ли коллекция доступной только для чтения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ExtensionCollection`1" /> всегда возвращает значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Представляет код ошибки SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Имя кода ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" />.</summary>
      <param name="name">Имя кода ошибки.</param>
      <param name="subCode">Дополнительный код ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" /> указанными именем и пространством имен. </summary>
      <param name="name">Локальное имя кода ошибки. </param>
      <param name="ns">Имя пространства имен кода ошибки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="ns" /> равно null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> равен пустой строке. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" /> указанными именем, пространством имен и дополнительным кодом ошибки. </summary>
      <param name="name">Локальное имя кода ошибки. </param>
      <param name="ns">Имя пространства имен кода ошибки. </param>
      <param name="subCode">Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="ns" /> равно null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> равен пустой строке. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)">
      <summary>Создает код ошибки получателя с заданным дополнительным кодом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" /> с созданным дополнительным кодом ошибки SOAP в свойстве <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="subCode" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)">
      <summary>Создает код ошибки получателя с заданным дополнительным кодом. </summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.FaultCode" /> с созданным дополнительным кодом ошибки SOAP в свойстве <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="name">Локальное имя дополнительного кода ошибки. </param>
      <param name="ns">Имя пространства имен дополнительного кода ошибки. </param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Создает код ошибки отправителя с заданным дополнительным кодом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" /> с созданным дополнительным кодом ошибки SOAP в свойстве <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> равен null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)">
      <summary>Создает код ошибки отправителя с заданным дополнительным кодом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" /> с созданным дополнительным кодом ошибки SOAP в свойстве <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="name">Локальное имя дополнительного кода ошибки. </param>
      <param name="ns">Имя пространства имен дополнительного кода ошибки. </param>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой SOAP 1.1 или SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой SOAP 1.1 или SOAP 1.2; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой сервера SOAP 1.1 или ошибкой получателя SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой сервера SOAP 1.1 или ошибкой получателя SOAP 1.2; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой клиента SOAP 1.1 или ошибкой отправителя SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой клиента SOAP 1.1 или ошибкой отправителя SOAP 1.2; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Возвращает локальное имя кода ошибки. </summary>
      <returns>Локальное имя кода ошибки. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Возвращает пространство имен кода ошибки. </summary>
      <returns>Универсальный код ресурса (URI) пространства имен. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Возвращает дополнительный код ошибки. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Задает одну или несколько ошибок протокола SOAP, сообщения о которых возвращаются, когда операция службы обнаруживает ошибки обработки.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultContractAttribute" />. </summary>
      <param name="detailType">Сериализуемый тип, который содержит информацию об ошибке для вызывающего объекта.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="detailType" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Возвращает или задает действие сообщения об ошибке SOAP, которое задается как компонент контракта операции.</summary>
      <returns>Значение действия для сообщения об ошибке SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Возвращает тип сериализуемого объекта, который содержит информацию об ошибке.</summary>
      <returns>Тип, представляющий сериализуемый класс ошибки.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, присвоен ли сообщению об ошибке SOAP уровень защиты.</summary>
      <returns>Значение true, если сообщению об ошибке присвоен уровень защиты; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Возвращает или задает имя сообщения об ошибке в языке WSDL.</summary>
      <returns>Имя сообщения об ошибке.Значение по умолчанию — имя типа, используемого в качестве сведений об ошибке.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен ошибки SOAP.</summary>
      <returns>Пространство имен ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
      <summary>Задает уровень защиты, который требуется от привязки для ошибки SOAP.</summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Представляет ошибку SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" /> на основе указанных сведений о сериализации и контекста при десериализации потока в объект <see cref="T:System.ServiceModel.FaultException" />.</summary>
      <param name="info">Сведения о сериализации, необходимые для воссоздания объекта <see cref="T:System.ServiceModel.FaultException" /> из потока.</param>
      <param name="context">Контекст потоковой передачи, необходимый для восстановления объекта <see cref="T:System.ServiceModel.FaultException" />.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанные значения ошибок сообщения.</summary>
      <param name="fault">Ошибка сообщения, содержащая значения ошибки SOAP по умолчанию.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя заданные значения ошибки сообщения и предоставленную строку действия.</summary>
      <param name="fault">Ошибка сообщения, содержащая используемые значения ошибки SOAP по умолчанию.</param>
      <param name="action">Действие ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину и код ошибки.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину, код ошибки и значение действия.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Значение действия для ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" /> с заданной причиной ошибки.</summary>
      <param name="reason">Причина ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину и код ошибки SOAP.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки SOAP для ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину, код ошибки и значение действия.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Значение действия для ошибки SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Возвращает значение действия SOAP для сообщения об ошибке.</summary>
      <returns>Значение действия SOAP для сообщения об ошибке.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Возвращает код ошибки для ошибки SOAP.</summary>
      <returns>Код ошибки для ошибки SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.FaultException" /> из заданной ошибки сообщения, действия и массива типов сведений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultException" />, который можно создать для указания того, что сообщение об ошибке SOAP получено.</returns>
      <param name="messageFault">Ошибка сообщения, содержащая сведения об ошибке SOAP по умолчанию.</param>
      <param name="action">Значение действия ошибки.</param>
      <param name="faultDetailTypes">Массив типов, содержащий сведения об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.FaultException" /> из заданной ошибки сообщения и массива типов сведений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultException" />, который можно создать для указания того, что сообщение об ошибке SOAP получено.</returns>
      <param name="messageFault">Ошибка сообщения, содержащая сведения об ошибке SOAP по умолчанию.</param>
      <param name="faultDetailTypes">Массив типов, содержащий сведения об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Хранимое в памяти представление ошибки SOAP, которое можно передать в <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" />, чтобы создать сообщение, содержащее ошибку.Для исключений <see cref="T:System.ServiceModel.FaultException" />, являющихся результатом сообщений об ошибках, объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> является первичной ошибкой.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализация метода <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />, вызываемая при сериализации объекта в поток.</summary>
      <param name="info">Сведения о сериализации, к которым добавляются данные объекта при сериализации.</param>
      <param name="context">Назначение сериализованного объекта.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Возвращает сообщение исключения.</summary>
      <returns>Сообщение исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Возвращает причину <see cref="T:System.ServiceModel.FaultReason" /> для ошибки SOAP.</summary>
      <returns>Причина ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Используется в клиентских приложениях для перехвата заданных в контракте ошибок SOAP.</summary>
      <typeparam name="TDetail">Сериализуемый тип сведений об ошибке.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" /> на основе указанных сведений о сериализации и контекста при десериализации потока в объект <see cref="T:System.ServiceModel.FaultException" />.</summary>
      <param name="info">Сведения о сериализации, необходимые для воссоздания объекта <see cref="T:System.ServiceModel.FaultException" /> из параметра <paramref name="context" />.</param>
      <param name="context">Поток, из которого воссоздается объект <see cref="T:System.ServiceModel.FaultException" />.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанный объект сведений. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений и причину ошибки. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений, причину ошибки и код ошибки. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений, причину ошибки SOAP и значения кода и действий. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Действие ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений и причину ошибки. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений, причину ошибки и код ошибки. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанные объект сведений, причину ошибки SOAP и значения кода и действий. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Действие ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Создает объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, который можно использовать для создания объекта <see cref="T:System.ServiceModel.Channels.Message" />, представляющего ошибку SOAP.</summary>
      <returns>Созданное сообщение-ошибка.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Возвращает объект, содержащий сведения об ошибке.</summary>
      <returns>Объект ошибки, являющийся параметром типа объекта <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализация метода <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />, вызываемая при сериализации объекта в поток.</summary>
      <param name="info">Сведения о сериализации, к которым добавляются данные объекта при сериализации.</param>
      <param name="context">Назначение сериализованного объекта.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Возвращает строку для объекта <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Строка для ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultImportOptions">
      <summary>Указывает, должен ли для чтения и записи сбоев использоваться сериализатор <see cref="T:System.Xml.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultImportOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultImportOptions" />. </summary>
    </member>
    <member name="P:System.ServiceModel.FaultImportOptions.UseMessageFormat">
      <summary>Возвращает или задает значение, указывающее, следует ли для чтения и записи сбоев использовать сериализатор <see cref="T:System.Xml.XmlSerializer" />.</summary>
      <returns>true, если для чтения и записи сбоев должен использоваться сериализатор <see cref="T:System.Xml.XmlSerializer" />; false, если должен использоваться сериализатор <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Предоставляет текстовое описание ошибки SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" />, используя указанный список преобразований ошибок. </summary>
      <param name="translations">Список объектов <see cref="T:System.ServiceModel.FaultReasonText" />, в котором каждый объект описывает ошибку на определенном языке. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> равен null. </exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="translations" /> пуст, либо один или несколько элементов имеют значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" />, используя указанный элемент текста, описывающий ошибку на определенном языке. </summary>
      <param name="translation">Массив объектов <see cref="T:System.ServiceModel.FaultReasonText" />, соответствующих описаниям ошибок на разных языках. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" />, используя заданное описание ошибки. </summary>
      <param name="text">Описание причины возникновения ошибки. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Возвращает описание ошибки на языке, используемом текущим потоком. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultReasonText" />, содержащий описание ошибки. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Возвращает описание ошибки на определенном языке. </summary>
      <returns>Текст ошибки на определенном языке.</returns>
      <param name="cultureInfo">Объект <see cref="T:System.Globalization.CultureInfo" />, указывающий язык описания ошибки. </param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Globalization.CultureInfo" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Возвращает причину ошибки в виде строки.</summary>
      <returns>Строка, содержащая причину ошибки.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Возвращает коллекцию описаний ошибок на разных языках. </summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.FaultReasonText" />, в которой каждый объект описывает ошибку на другом языке. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Представляет текст причины ошибки SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReasonText" />, который использует заданный текст ошибки.</summary>
      <param name="text">Текст, который представляет причину ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReasonText" />, использующий заданный текст ошибки SOAP и заданный объект <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="text">Текст, который представляет причину ошибки SOAP.</param>
      <param name="cultureInfo">Объект <see cref="T:System.Globalization.CultureInfo" />, описывающий язык описания.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReasonText" />.</summary>
      <param name="text">Текст причины ошибки.</param>
      <param name="xmlLang">Язык ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Возвращает значение, указывающее, соответствует ли язык описания предоставленному объекту <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>Значение true, если указанный объект <see cref="T:System.Globalization.CultureInfo" /> соответствует; в противном случае — значение false.</returns>
      <param name="cultureInfo">Объект <see cref="T:System.Globalization.CultureInfo" />, который требуется сравнить с языком описания.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Возвращает текст причины ошибки SOAP.</summary>
      <returns>Текст причины ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Возвращает язык причины ошибки SOAP.</summary>
      <returns>Язык причины ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <summary>Настраивает безопасность привязки WSFederationHttpBinding на уровне сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />.</summary>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite">
      <summary>Возвращает и задает набор алгоритмов, в котором указываются алгоритмы шифрования сообщений и ключей.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements">
      <summary>Возвращает коллекцию экземпляров <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> для этой привязки.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.ObjectModel.Collection`1" />, принадлежащий к типу <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />.Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Возвращает или задает значение, указывающее, требуется ли, чтобы контекст безопасности был помещен на место.</summary>
      <returns>Значение true, если контекст безопасности должен быть помещен, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType">
      <summary>Задает тип выдаваемого ключа.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.Значение по умолчанию — <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым объектом <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType">
      <summary>Задает тип маркера, который должна выдать служба маркеров безопасности.</summary>
      <returns>Тип маркера, который требуется выдать.Значение по умолчанию — null, которое приводит к тому, что WCF запрашивает маркер безопасности SAML у службы маркеров безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress">
      <summary>Возвращает или задает адрес конечной точки службы маркеров безопасности, выдающей учетные данные для службы.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> службы маркеров безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding">
      <summary>Возвращает или задает привязку, используемую клиентом при взаимодействии со службой маркеров безопасности, адрес конечной точки которой имеет значение <see cref="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />.</summary>
      <returns>Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая клиентом при взаимодействии со службой маркеров безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress">
      <summary>Возвращает или задает адрес конечной точки для взаимодействия со службой маркеров безопасности по внештатному каналу.</summary>
      <returns>Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая при взаимодействии со службой маркеров безопасности по внештатному каналу.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Указывает, выполнено ли согласование SSL на уровне сообщений для получения сертификата службы.</summary>
      <returns>Значение true, если сертификат службы согласован. Значение false, если сертификат службы доступен по внештатному каналу.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <summary>Возвращает значение, указывающее, должен ли быть сериализован набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP.</summary>
      <returns>Значение true, если набор алгоритмов следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements">
      <summary>Возвращает значение, указывающее, что существующие требования к типу утверждения могут быть сериализованы. </summary>
      <returns>Принимает значение true, если имеются требования, которые должны быть сериализованы, и значение false — в противном случае.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext">
      <summary>Возвращает индикатор, указывающий, действительно ли контекст безопасности не является контекстом по умолчанию и поэтому должен быть сериализован.</summary>
      <returns>Значение true, если контекст должен быть сериализован, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType">
      <summary>Возвращает индикатор, указывающий, действительно ли тип выданного ключа не является типом по умолчанию и поэтому должен быть сериализован.</summary>
      <returns>Значение true, если тип должен быть сериализован, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <summary>Возвращает индикатор, указывающий, действительно ли процесс согласования учетных данных службы не является процессом по умолчанию и поэтому должен быть сериализован.</summary>
      <returns>Значение true, если процесс должен быть сериализован, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters">
      <summary>Возвращает индикатор, указывающий, что существующие параметры запроса маркера могут быть сериализованы. </summary>
      <returns>Значение true, если имеются параметры, которые должны быть сериализованы; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters">
      <summary>Возвращает коллекцию XML-элементов, отправляемых в тексте сообщения службе маркеров безопасности при запросе маркера.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.ObjectModel.Collection`1" />, принадлежащий к типу <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.HostNameComparisonMode">
      <summary>Указывает способ использования имени узла в сравнениях универсального кода ресурса (URI) при диспетчеризации входящего сообщения в конечную точку службы.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard">
      <summary>Пропускает имя узла при диспетчеризации входящих сообщений в эту конечную точку.Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.Exact">
      <summary>Использует имя узла при диспетчеризации входящих сообщений в эту конечную точку, если строгое соответствие не найдено.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard">
      <summary>Если строгое или точное соответствие не найдено, пропускает имя узла при поиске соответствий.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpClientCredentialType">
      <summary>Перечисляет допустимые типы учетных данных для клиентов HTTP.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.None">
      <summary>Задает анонимную проверку подлинности.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Basic">
      <summary>Задает обычную проверку подлинности.Дополнительные сведения см. в разделе RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Digest">
      <summary>Задает дайджест-проверку подлинности.Дополнительные сведения см. в разделе RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Ntlm">
      <summary>Задает проверку подлинности клиента с использованием NTLM.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Windows">
      <summary>Задает проверку подлинности клиента с использованием Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Certificate">
      <summary>Задает проверку подлинности клиента с использованием сертификата.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpProxyCredentialType">
      <summary>Перечисляет допустимые типы учетных данных для проверки подлинности прокси-сервера HTTP.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.None">
      <summary>Задает анонимную проверку подлинности.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Basic">
      <summary>Задает обычную проверку подлинности.Дополнительные сведения см. в разделе RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Digest">
      <summary>Задает дайджест-проверку подлинности. Дополнительные сведения см. на странице (RFC 2617 – HTTP Authentication: Basic and Digest Authentication).</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Ntlm">
      <summary>Указывает проверку подлинности NTLM.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Windows">
      <summary>Задает проверку подлинности Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpTransportSecurity">
      <summary>Представляет параметры безопасности транспортного уровня для привязки <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.HttpTransportSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности.</summary>
      <returns>Возвращает <see cref="T:System.ServiceModel.HttpClientCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Задает для свойства неопределенное значение.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты.</summary>
      <returns>Расширенная политика защиты.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.LegacyExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты прежних версий.</summary>
      <returns>Расширенная политика защиты прежних версий.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности на прокси-сервере.</summary>
      <returns>Возвращает <see cref="T:System.ServiceModel.HttpProxyCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Задает для свойства неопределенное значение.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.Realm">
      <summary>Возвращает или задает область проверки подлинности, используемую для дайджест-проверки подлинности или обычной проверки подлинности.</summary>
      <returns>Область проверки подлинности.Значение по умолчанию — «».</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeClientCredentialType">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> и должно ли оно быть сериализовано..Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" /> и должно ли оно быть сериализовано.Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Возвращает значение, показывающее, следует ли сериализовать расширенную политику защиты прежних версий.</summary>
      <returns>Значение true, если расширенную политику защиты прежних версий следует сериализовать; в противном случае ― значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeProxyCredentialType">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> и должно ли оно быть сериализовано.Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeRealm">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> и должно ли оно быть сериализовано..Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Определяет поведение исходящего запроса и каналов типа "запрос-ответ", используемых клиентскими приложениями.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Возвращает или задает значение, указывающее, пытается интерфейс <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> вызвать объекты <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> в свойстве <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> или создает исключение, если коллекция не пуста. </summary>
      <returns>Значение true, если  разрешается вызывать интерактивные инициализаторы канала, в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</returns>
      <param name="callback">Метод, вызываемый по завершении этого метода.</param>
      <param name="state">Сведения о состоянии канала.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Возвращает значение, указывающее, был ли вызван пользовательский интерфейс для получения учетных данных. </summary>
      <returns>Значение true, если был вызван метод <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (или методы <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> и <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />), в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Вызов пользовательского интерфейса для получения учетных данных.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Вызывается после завершения вызова <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Зарезервировано. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, по которому отправляются сообщения по каналу клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляются сообщения по каналу.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Определяет контракт для конечного компьютера для всех объектов связи в системе, включая каналы, диспетчеры каналов, фабрики, прослушиватели, диспетчеры и узлы служб.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Вызывает мгновенный переход объекта связи из текущего состояния в состояние Closed.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта связи.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания по умолчанию истекло до верного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта связи с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до верного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта связи.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания открытия по умолчанию истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта связи в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Вызывает переход объекта связи из текущего состояния в состояние Closed.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания закрытия по умолчанию истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Вызывает переход объекта связи из текущего состояния в состояние Closed.  </summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до верного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Происходит после завершения перехода объекта связи из состояния Closing в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Происходит, если объект связи сначала переходит в состояние Closing.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до верного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Происходит, если объект связи сначала переходит в состояние Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Вызывает переход объекта связи из состояния Created в состояние Opened.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания открытия по умолчанию истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Вызывает переход объекта связи из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Происходит после завершения перехода объекта связи из состояния Opening в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Происходит, если объект связи сначала переходит в состояние Opening.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Возвращает текущее состояние объекта связи.</summary>
      <returns>Значение состояния <see cref="T:System.ServiceModel.CommunicationState" /> объекта.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Определяет интерфейс управления контекстом канала.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Возвращает или задает значение, указывающее службе  сохранять набор сообщений перед передачей сообщений транспорту.</summary>
      <returns>Значение true, если пакетирование исходящих сообщений разрешено; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Возвращает входящий сеанс для канала.</summary>
      <returns>Сеанс <see cref="T:System.ServiceModel.Channels.IInputSession" /> для канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Возвращает локальную конечную точку канала.</summary>
      <returns>Локальный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Возвращает или задает период времени, в течение которого операция должна быть завершена, или выдается исключение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, задающий период времени, в течение которого операция должна быть завершена.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Возвращает выходной сеанс, связанный каналом, при его наличии.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Channels.IOutputSession" />, если входящий сеанс существует; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Возвращает удаленный адрес, связанный с каналом.</summary>
      <returns>Удаленный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Возвращает идентификатор текущего сеанса, при его наличии.</summary>
      <returns>Идентификатор текущего сеанса, при его наличии.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Определяет интерфейс определения времени ожидания связи, используемый каналами и диспетчерами каналов, например прослушивателями каналов, фабриками каналов и узлами служб.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода открытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода получения, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода отправки, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени до времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.IDuplexContextChannel">
      <summary>Определяет интерфейс, который должен реализовать канал клиента для обмена сообщениями в дуплексном сеансе. </summary>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown">
      <summary>Возвращает или задает значение, указывающее, завершается ли работа входящего сеанса автоматически.</summary>
      <returns>Значение true, если работа входящего сеанса завершается автоматически; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия выходного сеанса на стороне клиента с заданным временем ожидания и объектом состояния, связанным с ним. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance">
      <summary>Возвращает или задает контекст экземпляра, связанный с дуплексным обменом сообщениями.</summary>
      <returns>Контекст <see cref="T:System.ServiceModel.InstanceContext" />, связанный с дуплексным обменом сообщениями.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)">
      <summary>Закрывает выходной сеанс на стороне клиента, связанный с дуплексным каналом. </summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия выходного сеанса на стороне клиента.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Позволяет объекту участвовать в пользовательском поведении, таком как регистрация событий или наблюдение за переходами между состояниями.</summary>
      <typeparam name="T">Тип класса расширения.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Возвращает коллекцию объектов расширения для расширяемого объекта.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.IExtensionCollection`1" /> объектов расширения.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Позволяет объекту расширять другой объект путем агрегирования.</summary>
      <typeparam name="T">Объект, который принимает участие в пользовательском поведении.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Позволяет объекту расширения обнаружить, когда он был агрегирован.Вызывается при добавлении расширения в свойство <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Расширяемый объект, агрегирующий это расширение.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Позволяет объекту обнаружить, когда он перестает быть агрегированным.Вызывается при удалении расширения из свойства <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Расширяемый объект, агрегирующий это расширение.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.IExtension`1" />, позволяющая извлекать объекты <see cref="T:System.ServiceModel.IExtension`1" /> по типу.</summary>
      <typeparam name="T">Тип объектов расширения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Находит заданный объект расширения в коллекции.</summary>
      <returns>Найденный объект расширения.</returns>
      <typeparam name="E">Тип объекта расширения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Находит все объекты расширения в коллекции, заданной параметром <paramref name="E" />.</summary>
      <returns>Коллекция всех объектов расширения в коллекции, реализующих заданный тип.</returns>
      <typeparam name="E">Тип объекта расширения.</typeparam>
    </member>
    <member name="T:System.ServiceModel.ImpersonationOption">
      <summary>Задает поведение олицетворения для операции службы в экземпляре службы.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.NotAllowed">
      <summary>Олицетворение не выполняется.Если свойству <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> присвоено значение true, выдается исключение проверки во время запуска службы.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Allowed">
      <summary>Олицетворение выполняется, если доступны учетные данные, а свойству <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> присвоено значение true.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Required">
      <summary>Требуется олицетворение. </summary>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Представляет сведения контекста экземпляра службы.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InstanceContext" /> для заданного объекта, который реализует экземпляр службы.</summary>
      <param name="implementation">Объект, реализующий экземпляр службы.</param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InstanceContext" /> для службы, размещенной в заданном узле.</summary>
      <param name="host">Объект класса <see cref="T:System.ServiceModel.ServiceHostBase" />, в котором размещается служба.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InstanceContext" /> для заданного объекта, который реализует экземпляр службы и размещается в заданном узле.</summary>
      <param name="host">Объект класса <see cref="T:System.ServiceModel.ServiceHostBase" />, в котором размещается служба.</param>
      <param name="implementation">Объект, реализующий экземпляр службы.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Extensions">
      <summary>Возвращает коллекцию расширений, связанную с экземпляром службы, если таковая имеется.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.IExtensionCollection`1" /> типа <see cref="T:System.ServiceModel.InstanceContext" />, содержащая контексты экземпляра для расширений экземпляра службы.</returns>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы, связанный с данным контекстом, закрыт, однако он не был прерван.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы, связанный с данным контекстом, находится в состоянии сбоя.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance">
      <summary>Возвращает экземпляр службы для контекста экземпляра.</summary>
      <returns>Объект, представляющий экземпляр службы.</returns>
      <exception cref="T:System.InvalidOperationException">Экземпляр службы находится в состоянии создания или открытия, либо он не инициализирован.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">Экземпляр службы прерван.</exception>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы уже закрыт и не может быть изменен в этом состоянии.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы находится в состоянии сбоя и не может быть изменен в этом состоянии.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Возвращает экземпляр службы для контекста экземпляра в ответ на входящее сообщение.</summary>
      <returns>Объект, представляющий экземпляр службы.</returns>
      <param name="message">Входящее сообщение, вызвавшее создание объекта службы.</param>
      <exception cref="T:System.InvalidOperationException">Экземпляр службы находится в состоянии создания или открытия, либо он не инициализирован.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">Экземпляр службы прерван.</exception>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы уже закрыт и не может быть изменен в этом состоянии.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы находится в состоянии сбоя и не может быть изменен в этом состоянии.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Host">
      <summary>Возвращает узел для экземпляра службы.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.ServiceHostBase" />, в котором размещается экземпляр службы.</returns>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы, связанный с данным контекстом, закрыт, однако он не был прерван.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы, связанный с данным контекстом, находится в состоянии сбоя.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.IncomingChannels">
      <summary>Возвращает каналы сеанса, входящие в экземпляр службы.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, которая содержит каналы сеанса, входящие в экземпляр службы.</returns>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы закрыт и не может быть использован.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы находится в состоянии сбоя.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Увеличивает число сообщений, которые могут быть обработаны экземпляром службы.</summary>
      <returns>Новое ограничение количества сообщений, которые могут быть обработаны экземпляром службы, после добавления значения параметра <paramref name="incrementBy" />.</returns>
      <param name="incrementBy">Дополнительное число сообщений, которые могут быть обработаны экземпляром службы.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit">
      <summary>Возвращает или задает ограничение количества сообщений, которые могут быть обработаны контекстом экземпляра.  </summary>
      <returns>Количество сообщений, которые могут быть обработаны контекстом экземпляра. </returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.OutgoingChannels">
      <summary>Возвращает каналы сеанса, исходящие из экземпляра службы.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, которая содержит каналы сеанса, исходящие из экземпляра службы.</returns>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы закрыт и не может быть использован.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы находится в состоянии сбоя.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance">
      <summary>Освобождает экземпляр службы.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр службы находится в состоянии создания или открытия и не может быть использован.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">Экземпляр службы прерван.</exception>
      <exception cref="T:System.ObjectDisposedException">Экземпляр службы в данный момент закрывается или уже закрыт и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Экземпляр службы находится в состоянии сбоя и не может быть изменен в этом состоянии.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Возвращает или задает контекст, используемый для синхронизации потоков с текущим контекстом экземпляра.</summary>
      <returns>Объект <see cref="T:System.Threading.SynchronizationContext" />, используемый для синхронизации потоков с текущим контекстом экземпляра.</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии открытия или закрытия и не может быть изменен в этих состояниях.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">Объект связи прерван и не может быть изменен в этом состоянии.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи уже закрыт и не может быть изменен в этом состоянии.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии сбоя и не может быть изменен в этом состоянии.</exception>
    </member>
    <member name="T:System.ServiceModel.InstanceContextMode">
      <summary>Задает число экземпляров службы, доступных для обработки вызовов, содержащихся во входящих сообщениях.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerSession">
      <summary>Для каждого сеанса создается новый объект <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerCall">
      <summary>Новый объект <see cref="T:System.ServiceModel.InstanceContext" /> создается перед каждым вызовом и удаляется после него.Если канал не создает сеанс, это значение ведет себя так, как если бы оно было <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.Single">
      <summary>Для всех входящих вызовов используется только один объект <see cref="T:System.ServiceModel.InstanceContext" />, который не удаляется после этих вызовов.Если объект службы отсутствует, он создается.</summary>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Представляет контракт сообщения, не являющийся допустимым.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" /> при десериализации из потока в объект.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Поток, из которого требуется выполнить десериализацию.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />, используя указанное сообщение.</summary>
      <param name="message">Текст сообщения данного исключения.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />, в котором используется указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.IOnlineStatus">
      <summary>Определяет свойства и события, используемые сетевыми объектами для индикации доступности по сети.</summary>
    </member>
    <member name="P:System.ServiceModel.IOnlineStatus.IsOnline">
      <summary>Возвращает информацию о том, имеет ли экземпляр сетевое подключение и подключен ли он к ресурсу.</summary>
      <returns>Значение true, если текущий экземпляр доступен по сети; в противном случае — значение false.</returns>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Offline">
      <summary>Указывает, что экземпляр отключен от сетевого ресурса.</summary>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Online">
      <summary>Указывает, что экземпляр подключен к сетевому ресурсу.</summary>
    </member>
    <member name="T:System.ServiceModel.IServiceChannel">
      <summary>Определяет интерфейс канала службы.</summary>
    </member>
    <member name="P:System.ServiceModel.IServiceChannel.ListenUri">
      <summary>Возвращает универсальный код ресурса (URI), по которому служба осуществляет прослушивание входящих запросов.</summary>
      <returns>
        <see cref="T:System.Uri" />, по которому служба осуществляет прослушивание входящих запросов по каналу.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Указывает, что член сериализуется как элемент в тексте SOAP-сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Возвращает или задает значение, указывающее позицию, в которой член сериализуется в текст SOAP-сообщения.</summary>
      <returns>Расположение элемента в тексте SOAP-сообщения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение, переданное методу задания свойства, является отрицательным целым числом.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Определяет строго типизированный класс, соответствующий сообщению SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, присвоен ли сообщению уровень защиты. </summary>
      <returns>Значение true, если сообщение должно шифроваться, подписываться или подписываться и шифроваться; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Возвращает или задает значение, указывающее, имеет ли текст сообщения элемент программы-оболочки.</summary>
      <returns>Значение true, если текст сообщения имеет элемент программы-оболочки, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel">
      <summary>Возвращает или задает значение, указывающее, необходимо ли шифровать сообщение, подписывать его или и то и другое. </summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение, переданное свойству, когда параметр отличен от одного из значений <see cref="T:System.Net.Security.ProtectionLevel" />. </exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Возвращает или задает имя элемента программы-оболочки текста сообщения.</summary>
      <returns>Имя элемента программы-оболочки в тексте сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Возвращает или задает пространство имен элемента программы-оболочки текста сообщения.</summary>
      <returns>Пространство имен элемента программы-оболочки.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Объявляет базовые члены для <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> и <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
      <summary>При переопределении в производном классе возвращает значение, указывающее наличие у члена примененного уровня защиты. </summary>
      <returns>Значение true, если элементу присвоен уровень защиты; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Задает имя элемента, соответствующего этому члену. </summary>
      <returns>Имя элемента, соответствующего этому члену.Эта строка должна быть допустимым именем XML-элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Задает пространство имен элемента, соответствующего этому члену. </summary>
      <returns>Универсальный код ресурса пространства имен элемента, соответствующего этому члену. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
      <summary>Задает значение, указывающее, должен ли член передаваться «как есть», подписанным или подписанным и зашифрованным. </summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Перечисляет допустимые типы учетных данных сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Задает анонимную проверку подлинности.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Задает проверку подлинности клиента с использованием Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Задает проверку подлинности клиента с использованием UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Задает проверку подлинности клиента с использованием сертификата.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Задает проверку подлинности клиента с использованием выданного маркера.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Представляет содержимое заголовка SOAP.</summary>
      <typeparam name="T">Тип заголовка сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeader`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeader`1" /> с указанным содержимым заголовка.</summary>
      <param name="content">Содержимое нового заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeader`1" /> с указанным содержимым заголовка и метаданными. </summary>
      <param name="content">Содержимое нового заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
      <param name="relay">Значение, указывающее, требуется ли ретранслировать заголовок.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Возвращает или задает целевой получатель заголовка сообщения.</summary>
      <returns>Целевой получатель заголовка сообщения.Значение по умолчанию — пустая строка («»).</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Возвращает или задает содержимое заголовка.</summary>
      <returns>Содержимое заголовка.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Возвращает заголовок сообщения с указанным пространством имен и локальным именем.</summary>
      <returns>Заголовок сообщения с указанным пространством имен и локальным именем.</returns>
      <param name="name">Локальное имя XML-элемента заголовка</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Возвращает или задает значение, указывающее, должен ли заголовок быть понят в соответствии со спецификацией протокола SOAP версий 1.1 и 1.2. </summary>
      <returns>Значение true, если заголовок необходимо понять; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Возвращает значение, указывающее, требуется ли ретранслировать заголовок.</summary>
      <returns>Значение true, если требуется ретранслировать заголовок, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderArrayAttribute">
      <summary>Указывает, что элемент программы-оболочки по умолчанию в сообщении SOAP не должен перезаписываться в типах массивов в элементе заголовка.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderArrayAttribute" />. </summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderAttribute">
      <summary>Указывает, что член данных является заголовком сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Actor">
      <summary>Возвращает или задает универсальный код ресурса (URI), указывающий узел, на который нацелен заголовок.Сопоставляется с атрибутом заголовка Role при использовании SOAP 1.2 и с атрибутом заголовка Actor при использовании SOAP 1.1.</summary>
      <returns>Универсальный код ресурса (URI), указывающий узел, на который нацелен заголовок.Этот универсальный код ресурса (URI) сопоставляется с атрибутом заголовка Role при использовании URI SOAP 1.2 и с атрибутом заголовка Actor при использовании SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand">
      <summary>Указывает, должен ли узел, выступающий в роли <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" />, понимать этот заголовок.Сопоставляется с атрибутом заголовка SOAP mustUnderstand.</summary>
      <returns>Значение true, если узел, выступающий в роли <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" />, должен понимать этот заголовок; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Relay">
      <summary>Указывает, должен ли этот заголовок ретранслироваться на следующие узлы.Сопоставляется с атрибутом заголовка SOAP relay.</summary>
      <returns>Значение true, если этот заголовок должен ретранслироваться на следующие узлы; в противном случае — значение false. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Исключение, вызываемое, если ожидания относительно заголовков сообщения SOAP не удовлетворены после обработки сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используемый для десериализации данных в объект <see cref="T:System.ServiceModel.MessageHeaderException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение, передаваемое в исключении.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение и значение, указывающее, является ли заголовок сообщения дубликатом или заголовок отсутствует.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение и внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка, а также значение, указывающее, является ли заголовок сообщения дубликатом или заголовок отсутствует.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка, значение, указывающее, является ли заголовок сообщения дубликатом или заголовок отсутствует, а также внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка, а также внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Возвращает имя заголовка SOAP, которое стало причиной текущего исключения.</summary>
      <returns>Имя заголовка SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Возвращает пространство имен заголовка SOAP, которое стало причиной текущего исключения.</summary>
      <returns>Пространство имен заголовка SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Возвращает значение, указывающее, имеется ли несколько заголовков сообщений или заголовки сообщений отсутствуют.</summary>
      <returns>Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Управляет именем запроса и именами параметров ответа.Не может использоваться с <see cref="T:System.ServiceModel.Channels.Message" /> или контрактами сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Возвращает или задает атрибут имени параметра в схеме XML (XSD).</summary>
      <returns>Атрибут имени параметра в XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.MessagePropertyAttribute">
      <summary>Представляет данные, передаваемые локально с пользовательским типом сообщений, но не сериализуемые в сообщение SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessagePropertyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessagePropertyAttribute.Name">
      <summary>Возвращает или задает имя свойства.</summary>
      <returns>Имя атрибута <see cref="T:System.ServiceModel.MessagePropertyAttribute" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverHttp">
      <summary>Позволяет задать для привязки wsDualHttpBinding свойства безопасности на уровне сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageSecurityOverHttp" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite">
      <summary>Указывает набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значением свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType">
      <summary>Задает тип учетных данных клиента, используемый для проверки подлинности клиента в привязках wsHttpBinding или wsDualHttpBinding.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.MessageCredentialType" />.Значение по умолчанию — <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> не является допустимым значением <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled">
      <summary>Используется только в сценариях расширяемости для указания того, настроен ли экземпляр наследуемого от <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> класса на осуществление защищенного диалога в соответствии со спецификацией WS-SecurityConversation. </summary>
      <returns>Всегда возвращает значение true, если не переопределен в производном классе.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Возвращает или задает значение, указывающее, предоставляются учетные данные службы клиенту по внештатному каналу, или же клиент получает их от службы в процессе согласования.</summary>
      <returns>Значение true, если учетные данные службы предоставляются клиенту в процессе согласования, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverMsmq">
      <summary>Позволяет задать для привязки <see cref="T:System.ServiceModel.NetMsmqBinding" /> свойства безопасности на уровне сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite">
      <summary>Указывает набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP.</summary>
      <returns>Параметр <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> для сообщений, отправляемых через привязку <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType">
      <summary>Возвращает или задает параметры безопасности <see cref="T:System.ServiceModel.MessageCredentialType" /> для сообщений, отправляемых посредством транспорта MSMQ.</summary>
      <returns>Параметры безопасности <see cref="T:System.ServiceModel.MessageCredentialType" /> для сообщений, отправляемых посредством транспорта MSMQ.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverTcp">
      <summary>Настраивает безопасность на уровне сообщений для сообщения, отправленного с помощью транспорта TCP. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverTcp.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageSecurityOverTcp" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite">
      <summary>Указывает набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значением свойства <see cref="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType">
      <summary>Задает тип учетных данных клиента, который клиент использует для подтверждения своей подлинности службе на уровне SOAP. </summary>
      <returns>Значение <see cref="T:System.ServiceModel.MessageCredentialType" />.Значение по умолчанию — <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" /> не является допустимым значением <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityVersion">
      <summary>Абстрактный класс-контейнер, содержащий сведения о версии компонентов безопасности, в случае, когда он реализован несколькими из своих статических свойств. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion">
      <summary>Возвращает сведения о версии для основного профиля безопасности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.Default">
      <summary>Возвращает сведения о версии безопасности сообщений по умолчанию.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion">
      <summary>Возвращает версию WS-SecureConversation, соответствующую версии безопасности сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion">
      <summary>Возвращает версию WS-SecurityPolicy, соответствующую версии безопасности сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion">
      <summary>Возвращает версию маркера безопасности, соответствующую версии безопасности сообщения.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion">
      <summary>Возвращает версию WS-Security, соответствующую версии безопасности сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.TrustVersion">
      <summary>Возвращает версию WS-Trust, соответствующую версии безопасности сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Возвращает версию безопасности сообщений, которая требует основной профиль безопасности версии 1.0, основанный на спецификациях безопасности WS-Security 1.0, WS-Trust 1.3, WS-SecureConversation 1.3 и WS-SecurityPolicy 1.2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Возвращает версию безопасности сообщений, которая требует основной профиль безопасности версии 1.0, основанный на спецификациях безопасности WS-Security 1.0, WS-Trust 2005 от февраля 2005 г., WS-SecureConversation от февраля 2005 г. и WS-SecurityPolicy 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12">
      <summary>Возвращает версию безопасности сообщений, которая требует спецификации безопасности WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3 и WS-SecurityPolicy 1.2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Возвращает версию безопасности сообщений, которая требует спецификации безопасности WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3, WS-SecurityPolicy 1.2 и BasicSecurityProfile 1.0.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11">
      <summary>Возвращает версию безопасности сообщений, которая требует спецификации безопасности WS-Security 1.1, WS-Trust от февраля 2005 г., WS-SecureConversation от февраля 2005 г. и WS-SecurityPolicy 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Возвращает версию безопасности сообщений, которая требует основной профиль безопасности версии, основанный на спецификациях безопасности WS-Security 1.1, WS-Trust 2005 от февраля 2005 г., WS-SecureConversation от февраля 2005 г. и WS-SecurityPolicy 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqAuthenticationMode">
      <summary>Задает тип проверки подлинности, используемый для привязки.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.None">
      <summary>Режим безопасности с данной привязкой не используется.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.WindowsDomain">
      <summary>Для проверки подлинности используется Kerberos.Клиент и сервер должны входить в состав доверенного домена.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.Certificate">
      <summary>Проверка подлинности клиента выполняется с использованием сертификатов X.509.Сертификат клиента должен присутствовать в хранилище сертификатов сервера.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqBindingBase">
      <summary>Базовый класс для элементов привязки <see cref="T:System.ServiceModel.NetMsmqBinding" /> и <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqBindingBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqBindingBase" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue">
      <summary>Возвращает или задает универсальный код ресурса (URI), содержащий информацию о расположении очереди недоставленных сообщений для каждого приложения; в этой очереди размещаются просроченные сообщения или сообщения, которые не удалось передать или доставить.</summary>
      <returns>Код <see cref="T:System.Uri" />, содержащий информацию о расположении очереди недоставленных сообщений для каждого приложения.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue">
      <summary>Возвращает или задает значение перечисления, указывающее тип используемой очереди недоставленных сообщений.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.DeadLetterQueue" />, указывающее тип используемой очереди недоставленных сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Durable">
      <summary>Возвращает или задает значение, указывающее, устойчивыми или неустойчивыми являются сообщения, обрабатываемые этой привязкой.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce">
      <summary>Возвращает или задает значение, указывающее, принимаются ли сообщения, обрабатываемые этой привязкой, только один раз.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, принимаются только один раз; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого данной привязкой.</summary>
      <returns>Максимальный размер сообщения (в байтах), обрабатываемого данной привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles">
      <summary>Возвращает или задает максимальное число циклов повторных попыток доставки сообщений принимающему приложению.</summary>
      <returns>Максимальное число циклов повторных попыток доставки сообщений приложению.Значение по умолчанию — 2.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли возможность обработки для конкурирующих потребителей очереди.</summary>
      <returns>Значение true, если контекст получения включен. В противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling">
      <summary>Возвращает или задает значение перечисления, указывающее способ обработки подозрительных сообщений.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее способ обработки подозрительных сообщений и других сообщений, которые не удается доставить.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount">
      <summary>Возвращает или задает максимальное число немедленных попыток доставки сообщения, считанного из очереди приложения.</summary>
      <returns>Максимальное число немедленных попыток доставки.Значение по умолчанию — 5.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay">
      <summary>Возвращает или задает значение, указывающее время задержки между циклами повторных попыток при попытке доставить сообщение, которое не удалось доставить немедленно.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению.Значение по умолчанию — 10 минут.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Scheme">
      <summary>Возвращает схему для этой привязки.</summary>
      <returns>Схема для этой привязки.Возвращаемая схема зависит от реализации объекта <see cref="T:System.ServiceModel.MsmqBindingBase" />.Реализация <see cref="T:System.ServiceModel.NetMsmqBinding" /> возвращает схему "net.msmq".Реализация <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> возвращает схему "msmq.formatname".</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее наиболее эффективный способ обработки входящих запросов: синхронный или асинхронный.</summary>
      <returns>Значение true, если наиболее эффективна синхронная обработка запросов; в противном случае — значение  false.Значение по умолчанию — false (асинхронная обработка запросов).</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.TimeToLive">
      <summary>Возвращает или задает промежуток времени, определяющий срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.Значение по умолчанию — 1 день.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing">
      <summary>Возвращает или задает значение, указывающее, должна ли выполняться трассировка сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если необходимо отслеживать сообщения, обрабатываемые данной привязкой; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal">
      <summary>Возвращает или задает значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если копии сообщений, обрабатываемых этой привязкой, должны сохраняться в очереди журнала источника; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ValidityDuration">
      <summary>Возвращает или задает значение, указывающее время ожидания соединения при работе с каналами, поставленными в очередь. </summary>
      <returns>Объект timespan.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqEncryptionAlgorithm">
      <summary>Содержит ряд алгоритмов шифрования, которые могут использоваться для шифрования сообщений в сети.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.RC4Stream">
      <summary>Потоковый шифр, определенный стандартом RSA Security.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.Aes">
      <summary>Стандарт AES, определенный Национальным институтом стандартов и технологий США (NIST).</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqException">
      <summary>Инкапсулирует ошибки, возвращаемые службой очередей сообщений (MSMQ).Это исключение выводится транспортом службы очередей сообщений и каналом интеграции службы очередей сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" /> с дополнительной сериализуемой информацией об исключении.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.ServiceModel.MsmqException" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.ServiceModel.MsmqException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" /> с предоставленным сообщением.</summary>
      <param name="message">Сообщение, с которым требуется инициализировать новый экземпляр.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" /> с указанными сообщением и внутренним исключением.</summary>
      <param name="message">Сообщение, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" />.</param>
      <param name="inner">Внутреннее исключение, которое инкапсулируется новым экземпляром класса <see cref="T:System.ServiceModel.MsmqException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" /> с предоставленным сообщением и кодом ошибки.</summary>
      <param name="message">Сообщение, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" />.</param>
      <param name="error">Код ошибки, выводимый инфраструктурой очереди сообщений (MSMQ), с помощью которой инициализируется новый экземпляр класса <see cref="T:System.ServiceModel.MsmqException" />.</param>
    </member>
    <member name="T:System.ServiceModel.MsmqPoisonMessageException">
      <summary>Инкапсулирует исключение, вызываемое при обнаружении каналом подозрительного сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, используя заданный идентификатор поиска подозрительного сообщения.</summary>
      <param name="messageLookupId">Идентификатор поиска подозрительного сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, используя заданный идентификатор поиска подозрительного сообщения и внутреннее исключение.</summary>
      <param name="messageLookupId">Идентификатор поиска подозрительного сообщения.</param>
      <param name="innerException">Внутреннее исключение, которое инкапсулируется новым экземпляром класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> с дополнительной сериализуемой информацией об исключении.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с исключением <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализованного потока, связанного с исключением <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, используя заданный текст сообщения.</summary>
      <param name="message">Сообщение, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, используя указанный текст сообщения и внутреннее исключение.</summary>
      <param name="message">Сообщение, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="innerException">Внутреннее исключение, которое инкапсулируется новым экземпляром класса <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Извлекает сериализованные данные, связанные с исключением <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, а также источник и назначение сериализованного потока, связанного с объектом <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с исключением <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализованного потока, связанного с исключением<see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId">
      <summary>Возвращает идентификатор поиска подозрительного сообщения.</summary>
      <returns>Идентификатор поиска подозрительного сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqSecureHashAlgorithm">
      <summary>Содержит хэш-алгоритмы, которые очередь сообщений (MSMQ) может использовать для подписывания сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.MD5">
      <summary>Объект Message Digest Algorithm 5 (MD5).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha1">
      <summary>Объект Secure Hash Algorithm (SHA-1).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha256">
      <summary>Алгоритм SHA-256.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha512">
      <summary>Алгоритм SHA 512.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqTransportSecurity">
      <summary>Класс <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> инкапсулирует параметры безопасности транспорта для транспортов очереди.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, используя существующий экземпляр.</summary>
      <param name="other">Существующий экземпляр класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, который необходимо использовать при инициализации нового экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqAuthenticationMode" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Режим <see cref="T:System.ServiceModel.MsmqAuthenticationMode" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.MsmqAuthenticationMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Алгоритм <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel">
      <summary>Возвращает или задает <see cref="T:System.Net.Security.ProtectionLevel" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Алгоритм <see cref="T:System.Net.Security.ProtectionLevel" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Алгоритм <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" />.</exception>
    </member>
    <member name="T:System.ServiceModel.NamedPipeTransportSecurity">
      <summary>Определяет свойства, которые управляют уровнем защиты именованного канала.</summary>
    </member>
    <member name="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel">
      <summary>Задает способ защиты именованного канала.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым уровнем <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="T:System.ServiceModel.NetMsmqBinding">
      <summary>Представляет привязку с очередью, пригодную для обмена данными между компьютерами.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetMsmqBinding" />, используя указанный режим безопасности.</summary>
      <param name="securityMode">Режим безопасности для инициализации нового экземпляра.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetMsmqBinding" /> на основе параметров указанного элемента привязки конфигурации.</summary>
      <param name="configurationName">Значение атрибута configurationName, идентифицирующее элемент binding, параметры которого используются для инициализации привязки.</param>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Упорядоченная коллекция элементов привязки, описываемых привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.Значение по умолчанию — SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемый для диспетчера буферов, принимающего сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524288 (0x80000) байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol">
      <summary>Возвращает или задает значение перечисления, которое указывает использующий очереди транспорт коммуникационного канала, используемый данной привязкой.</summary>
      <returns>Транспорт между диспетчерами очереди, которые использует эта привязка.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с этой привязкой.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.Security">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.NetMsmqSecurity" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.NetMsmqSecurity" />, связанный с данной привязкой.</returns>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory">
      <summary>Возвращает или задает значение, указывающее, следует ли преобразовывать адреса очередей с помощью Active Directory.</summary>
      <returns>Значение true, если адреса очередей необходимо преобразовывать с помощью Active Directory; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurity">
      <summary>Класс <see cref="T:System.ServiceModel.NetMsmqSecurity" /> инкапсулирует функции безопасности MSMQ, доступные при использовании привязки <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetMsmqSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Message">
      <summary>Возвращает или задает значение <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" />, связанное с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Mode">
      <summary>Возвращает или задает значение <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />, связанное с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />, связанное с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является одним из значений <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Transport">
      <summary>Возвращает или задает значение <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанное с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurityMode">
      <summary>Перечисление <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> указывает режимы безопасности, которые могут использоваться транспортом MSMQ.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.None">
      <summary>Отключает безопасность транспорта MSMQ и безопасность SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Transport">
      <summary>Включает безопасность транспорта MSMQ.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Message">
      <summary>Включает безопасность SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Both">
      <summary>Поддерживает безопасность транспорта MSMQ и безопасность SOAP.</summary>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeBinding">
      <summary>Предоставляет безопасную и надежную привязку, оптимизированную для обмена данными в пределах одного компьютера.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetNamedPipeBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> с указанным режимом безопасности.</summary>
      <param name="securityMode">Значение перечисления <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" />, указывающее, используется ли для именованных каналов безопасность Windows.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> с указанным именем конфигурации.</summary>
      <param name="configurationName">Имя конфигурации привязки объекта netNamedPipeBinding Element.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements">
      <summary>Создает коллекцию с элементами привязки для привязки.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, принадлежащий к типу <see cref="T:System.ServiceModel.Channels.BindingElement" /> и составляющий привязку.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой. </summary>
      <returns>
        <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла при сопоставлении не учитывается.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений в памяти.</summary>
      <returns>Максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize">
      <summary>Возвращает или задает максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений в памяти.  </summary>
      <returns>Максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение свойства меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections">
      <summary>Возвращает или задает максимальное количество подключений (как входящих, так и исходящих), допускаемое для конечных точек, настроенных с использованием привязки именованных каналов.</summary>
      <returns>Максимальное количество подключений по именованным каналам, допустимое при использовании этой привязки.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер полученного сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) полученного сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для участвующих в обмене сообщений SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>Возвращает "net.pipe".</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Security">
      <summary>Возвращает объект, указывающий тип безопасности, который используется со службами, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.NetNamedPipeSecurity" />, используемый с данной привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> и должно ли оно быть сериализовано.Используется  для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> и должно ли оно быть сериализовано.Используется  для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> и должно ли оно быть сериализовано.Используется  для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>Значение false, если входящие запросы должны обрабатываться асинхронно.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow">
      <summary>Возвращает или задает значение, определяющее, должны ли транзакции передаваться службе потоком.</summary>
      <returns>Значение true, если транзакции клиента должны передаваться службе потоком; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol">
      <summary>Возвращает или задает протокол транзакций, используемый службой для передачи транзакций.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, используемый службой для передачи транзакций.По умолчанию используется протокол <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransferMode">
      <summary>Возвращает или задает значение, указывающее, какой режим передачи сообщений использует настроенная с этой привязкой служба: потоковый (в одном или в обоих направлениях) или буферизованный.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" /> указывающее, какой режим передачи сообщений использует настроенная с этой привязкой служба: потоковый (в одном или в обоих направлениях) или буферизованный.Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurity">
      <summary>Обеспечивает доступ к параметрам безопасности для конечных точек, настроенных с привязкой именованного канала.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetNamedPipeSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Mode">
      <summary>Возвращает или задает режим безопасности для привязки именованного канала.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> для привязки именованного канала.Значение по умолчанию — <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport">
      <summary>Возвращает значение, указывающее, изменено ли значение свойства <see cref="P:System.ServiceModel.NetNamedPipeSecurity.Transport" /> и должно ли оно быть сериализовано.Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetNamedPipeSecurity.Transport" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Transport">
      <summary>Получает параметры защиты транспорта для привязки именованного канала.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> для привязки именованного канала.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurityMode">
      <summary>Указывает, используются ли для именованных каналов средства обеспечения безопасности транспортного уровня.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.None">
      <summary>Указывает, что при передаче по именованным каналам средства обеспечения безопасности не используются.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport">
      <summary>Указывает, что при передаче по именованным каналам используются средства обеспечения безопасности транспортного уровня.</summary>
    </member>
    <member name="T:System.ServiceModel.NetPeerTcpBinding">
      <summary>Предоставляет безопасную привязку для приложений одноранговой сети.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.NetPeerTcpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> с указанным именем конфигурации. </summary>
      <param name="configurationName">Значение атрибута configurationName, идентифицирующее элемент binding, параметры которого используются для инициализации привязки.</param>
      <exception cref="T:System.Configuration.ConfigurationException">Конфигурация недопустима.</exception>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements">
      <summary>Создает коллекцию с элементами привязки для привязки.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, принадлежащий к типу <see cref="T:System.ServiceModel.Channels.BindingElement" /> и составляющий привязку.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемую с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, указывающий версию протокола SOAP, используемую с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable">
      <summary>Возвращает логическое значение, указывающее, установлена ли и доступна служба PNRP на компьютере.</summary>
      <returns>Значение true, если служба PNRP установлена и настроена; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress">
      <summary>Возвращает или задает IP-адрес, используемый для прослушивания локальным одноранговым узлом.</summary>
      <returns>Значение <see cref="T:System.String" />, содержащее правильно сформированный IPv4- или IPv6-адрес, по которому локальный одноранговый узел ожидает передачи данных.</returns>
      <exception cref="T:System.ArgumentException">Предоставленный адрес недопустим или неправильно сформирован.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальное значение пула памяти, используемого для буфера TCP одноранговых подключений.</summary>
      <returns>Значение <see cref="T:System.Int32" />, указывающее максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений в памяти.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщений TCP, обрабатываемых создаваемыми данной привязкой одноранговыми каналами.</summary>
      <returns>Объект <see cref="T:System.Int32" />, содержащий максимальный размер (в байтах) сообщений TCP, пересылаемых по создаваемым данной привязкой одноранговым каналам.Значение по умолчанию — 65 536 байт (64 КБ).</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Port">
      <summary>Возвращает или задает сетевой порт, к которому выполняется привязка.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее сетевой порт, на котором данный экземпляр привязки будет обрабатывать сообщения TCP, относящиеся к одноранговой сети. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с данной привязкой.</returns>
      <exception cref="T:System.ArgumentNullException">Приложение предприняло попытку присвоить этому свойству значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Resolver">
      <summary>Возвращает распознаватель одноранговых узлов <see cref="T:System.ServiceModel.PeerResolver" />, используемый данной привязкой для разрешения идентификатора сетки одноранговых узлов в IP-адреса конечных точек узлов этой сетки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolver" />, используемый для разрешения идентификатора сетки одноранговых узлов в набор экземпляров <see cref="T:System.ServiceModel.PeerNodeAddress" />, представляющих набор узлов, участвующих в сетке.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Scheme">
      <summary>Возвращает схему URI для транспортного протокола, связанного с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.String" />, указывающий схему URI для транспортного протокола, используемого для данной привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Security">
      <summary>Возвращает или параметры безопасности для задания в создаваемых данной привязкой одноранговых каналах.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerSecuritySettings" />, указывающее параметры безопасности для задания в создаваемых в данной привязке одноранговых каналах.Безопасность может определяться как на уровне сообщений, так и на уровне транспорта.</returns>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, показывающее, следует ли сериализовать данные квоты средства чтения для привязки.</summary>
      <returns>Возвращает значение типа <see cref="T:System.Boolean" />, равное true, если данные квоты средства чтения должны быть сериализованы, и false, если они не должны быть сериализованы.</returns>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, показывающее, следует ли сериализовать сведения о безопасности для привязки.</summary>
      <returns>Возвращает значение типа <see cref="T:System.Boolean" />, равное true, если сведения о безопасности для привязки должны быть сериализованы, и false, если они не должны быть сериализованы.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает логическое значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы, поступающие по создаваемым данной привязкой одноранговым каналам.</summary>
      <returns>Если true, входящие запросы обрабатываются синхронно; если false, входящие запросы обрабатываются асинхронно.Значение по умолчанию — false (запросы обрабатываются асинхронно).</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpBinding">
      <summary>Безопасная и надежная привязка, которая подходит для обмена данными между компьютерами.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpBinding" /> с указанным используемый типом безопасности.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с привязкой.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpBinding" /> с указанным используемым типом безопасности и значением, указывающим, разрешены ли в явном виде надежные сеансы.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с привязкой.</param>
      <param name="reliableSessionEnabled">Значение true, если надежные сеансы разрешены; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpBinding" /> с указанным именем конфигурации.</summary>
      <param name="configurationName">Имя конфигурации привязки объекта netTcpBinding element.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
      <summary>Создает коллекцию с элементами привязки для привязки.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, принадлежащий к типу <see cref="T:System.ServiceModel.Channels.BindingElement" /> и составляющий привязку.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой. </summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.Значение равно SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла при сопоставлении не учитывается.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ListenBacklog">
      <summary>Возвращает или задает максимально допустимое количество ожидающих запросов на подключение в очереди.</summary>
      <returns>Возвращает максимально допустимое количество ожидающих запросов на подключение в очереди.Значение по умолчанию — 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не может быть меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула, в котором хранятся сообщения TCP, обработанные привязкой.</summary>
      <returns>Максимальный размер буферного пула, в котором хранятся сообщения TCP, обработанные привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferSize">
      <summary>Возвращает или задает значение, указывающее максимальный размер буфера, используемого для хранения сообщений в памяти (в байтах).</summary>
      <returns>Максимальный размер буфера, используемого для хранения сообщений в памяти (в байтах).Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxConnections">
      <summary>Возвращает или задает значение, которое определяет максимальное количество подключений, помещаемых в пул для последующего повторного использования на стороне клиента, и максимальное количество подключений, которые могут ожидать перенаправления на стороне сервера.</summary>
      <returns>На стороне клиента максимальное количество подключений, помещаемых в пул для последующего повторного использования. На стороне сервера максимальное количество подключений, которые могут ожидать перенаправления.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер полученного сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) полученного сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled">
      <summary>Возвращает или задает значение, определяющее, включено ли совместное использование порта TCP для соединения, настроенного с этой привязкой.</summary>
      <returns>Значение true, если совместное использование порта TCP включено; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для обмена сообщениями SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReliableSession">
      <summary>Возвращает объект, указывающий, установлен ли надежный сеанс между конечными точками канала.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.OptionalReliableSession" />, указывающий, установлен ли надежный сеанс WS-RM между конечными точками канала.Значение <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Схема универсального кода ресурса (URI) для транспорта, в данном случае "net.tcp".</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Security">
      <summary>Возвращает объект, указывающий тип безопасности, который используется со службами, настроенными с этой привязкой.</summary>
      <returns>Свойство <see cref="T:System.ServiceModel.NetTcpSecurity" />, содержащее типы безопасности, используемые с этой привязкой.Режимом безопасности по умолчанию для привязки NetTCPBinding является <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>true, если входящие запросы обрабатываются синхронно. false, если входящие запросы обрабатываются асинхронно.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionFlow">
      <summary>Возвращает или задает значение, определяющее, включен ли поток транзакций.</summary>
      <returns>Значение true, если поток транзакций включен; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionProtocol">
      <summary>Возвращает или задает протокол транзакций, используемый службой для передачи транзакций.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, используемый службой для передачи транзакций.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransferMode">
      <summary>Возвращает или задает значение, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, которое определяет, используется ли в службе, настроенной с помощью привязки, потоковый или буферизованный режим передачи сообщений (или оба режима).</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpContextBinding">
      <summary>Обеспечивает контекстную привязку для привязки <see cref="T:System.ServiceModel.NetTcpContextBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpContextBinding" /> с заданным объектом <see cref="T:System.ServiceModel.SecurityMode" />.</summary>
      <param name="securityMode">Режим безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpContextBinding" /> с заданным <see cref="T:System.ServiceModel.SecurityMode" /> и параметром надежного сеанса.</summary>
      <param name="securityMode">Режим безопасности.</param>
      <param name="reliableSessionEnabled">Значение true, чтобы разрешить надежные сеансы; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpContextBinding" /> с заданной конфигурацией привязки.</summary>
      <param name="configName">Имя конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента.</summary>
      <returns>Адрес обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ContextManagementEnabled">
      <summary>Возвращает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ContextProtectionLevel">
      <summary>Возвращает или задает уровень защиты контекста для данной привязки.</summary>
      <returns>Уровень защиты для привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.CreateBindingElements">
      <summary>Создает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых в <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpSecurity">
      <summary>Указывает типы безопасности транспортного уровня и уровня сообщений, используемые конечной точкой, настроенной с помощью <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NetTcpSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Message">
      <summary>Получает тип требований безопасности уровня сообщений для служб, настроенных с привязкой <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> указывает тип требований безопасности уровня сообщений для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Mode">
      <summary>Возвращает или задает значение, определяющее, используется ли безопасность уровня сообщений и безопасность транспортного уровня конечной точкой, настроенной с параметром <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее, используется ли конечной точкой безопасность транспортного уровня или безопасность уровня сообщений.Значение по умолчанию — <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не определено.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Transport">
      <summary>Получает тип требований безопасности уровня сообщений для конечных точек, настроенных с привязкой <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.TcpTransportSecurity" /> указывает тип требований безопасности транспортного уровня для конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <summary>Представляет параметры безопасности привязки wsHttpBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Возвращает или задает значение, указывающее, устанавливается ли маркер контекста безопасности.</summary>
      <returns>Значение true, если маркер контекста безопасности устанавливается; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationBehaviorAttribute">
      <summary>Задает поведение локального выполнения метода службы. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters">
      <summary>Возвращает или задает значение, определяющее, следует ли автоматически удалять параметры.</summary>
      <returns>Значение true, если параметры следует автоматически удалять; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation">
      <summary>Возвращает или задает значение, указывающее уровень олицетворения вызывающей стороны, поддерживаемый операцией.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.ImpersonationOption" />.Значение по умолчанию — <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode">
      <summary>Возвращает или задает значение, указывающее, когда удалять объект службы в процессе вызова операции.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.ReleaseInstanceMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.ReleaseInstanceMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
      <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
      <param name="parameters">Параметры привязки, переданные для поддержки поведений привязки.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализует поведение операций клиента.</summary>
      <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
      <param name="proxy">Точка доступа расширяемости для вставки пользовательских клиентских изменений для этой операции.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует поведение операций службы.</summary>
      <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
      <param name="dispatch">Точка расширяемости для вставки изменений пользовательских служб для этой операции.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализует поведение проверки.</summary>
      <param name="description">Описание операции для проверки.</param>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete">
      <summary>Возвращает или задает значение, указывающее, следует ли автоматически завершать текущую область транзакции при отсутствии необработанных исключений.</summary>
      <returns>Значение true для автоматического завершения области транзакции при успешном выполнении операции, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired">
      <summary>Возвращает или задает значение, указывающее, требуется ли методу область транзакции для исключения.</summary>
      <returns>Значение true, если методу для выполнения требуется область транзакции, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Предоставляет доступ к контексту выполнения метода службы.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContext" />, использующий указанный канал <see cref="T:System.ServiceModel.IContextChannel" /> в клиентском приложении. </summary>
      <param name="channel">Канал <see cref="T:System.ServiceModel.IContextChannel" />, используемый для создания нового клиента <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Канал имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Channel">
      <summary>Получает канал, связанный с текущим объектом <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Канал <see cref="T:System.ServiceModel.IContextChannel" />, сопоставленный с текущим контекстом <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Возвращает или задает контекст выполнения текущего потока.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" />, представляющий контекст сообщений и выполнения текущего метода.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.EndpointDispatcher">
      <summary>Возвращает или задает диспетчер конечной точки для проверяемой или изменяемой конечной точки.</summary>
      <returns>Диспетчер конечной точки для проверяемой или изменяемой конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Возвращает коллекцию расширений службы из контекста текущего сообщения.</summary>
      <returns>Коллекция расширений <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
      <summary>Возвращает канал экземпляру клиента, вызвавшему текущую операцию.</summary>
      <returns>Экземпляр канала к клиенту, вызвавшего операцию типа, указанного в свойстве <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />.</returns>
      <typeparam name="T">Тип канала, использованный для обратного вызова клиента.</typeparam>
    </member>
    <member name="P:System.ServiceModel.OperationContext.HasSupportingTokens">
      <summary>Получает значение, указывающее, имеет ли входящее сообщение вспомогательные маркеры.</summary>
      <returns>Значение true, если входящее сообщение имеет вспомогательные маркеры; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Host">
      <summary>Возвращает значение <see cref="T:System.ServiceModel.ServiceHost" /> для объекта текущей службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHost" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Получает заголовки входящих сообщений для <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, содержащий заголовки входящих сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Получает свойства для входящего сообщения в контексте <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий свойства входящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Получает свойства для SOAP-версии входящего сообщения в контексте <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>SOAP-версия входящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.InstanceContext">
      <summary>Получает объект <see cref="T:System.ServiceModel.InstanceContext" />, управляющих текущим экземпляром службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.InstanceContext" /> для текущей службы.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Это свойство предназначено для системных целей и не должно вызываться пользователями.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Создается по завершении операции. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Получает заголовки исходящих сообщений для активного контекста <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, содержащий заголовки исходящих сообщений для активного контекста <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Получает свойства для исходящего сообщения в активном контексте <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий свойства исходящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Возвращает или задает реализацию <see cref="T:System.ServiceModel.Channels.RequestContext" /> для этого метода.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Channels.RequestContext" /> или нулевое значение при отсутствии контекста запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
      <summary>Возвращает или задает контекст <see cref="T:System.ServiceModel.ServiceSecurityContext" />, в котором выполняется этот метод.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SessionId">
      <summary>Получает строку <see cref="T:System.String" />, используемую для идентификации текущего сеанса.</summary>
      <returns>Идентификатор сеанса.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.SetTransactionComplete">
      <summary>Фиксирует выполняемую транзакцию.</summary>
      <exception cref="T:System.InvalidOperationException">В контексте нет транзакции.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SupportingTokens">
      <summary>Получает коллекцию <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
      <returns>Коллекция маркеров безопасности.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Создает блок, в котором объект <see cref="T:System.ServiceModel.OperationContext" /> является областью.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" />, использующего указанный канал <see cref="T:System.ServiceModel.IContextChannel" /> для создания нового контекста <see cref="T:System.ServiceModel.OperationContext" /> для области действия.</summary>
      <param name="channel">Канал, который следует использовать при создании области для нового контекста <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" /> для создания области для указанного объекта <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <param name="context">Активный контекст <see cref="T:System.ServiceModel.OperationContext" /> в созданной области.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Восстанавливает первоначальный контекст <see cref="T:System.ServiceModel.OperationContext" /> в активное состояние и удаляет объект <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Указывает, что метод определяет операцию, которая является частью контракта службы в приложении . </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Возвращает или задает действие WS-Addressing сообщения запроса. </summary>
      <returns>Действие, которое должно использоваться при создании заголовка действия WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Указывает, что операция реализуется асинхронно с помощью пары методов Begin&lt;имя_метода&gt; и End&lt;имя_метода&gt; контракта службы. </summary>
      <returns>Значение true, если метод Begin&lt;имя_метода&gt; сопоставляется методу End&lt;имя_метода&gt; и может трактоваться инфраструктурой как операция, реализуемая в качестве пары асинхронных методов в интерфейсе службы; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, должны ли сообщения этой операции шифроваться, подписываться или шифроваться и подписываться.</summary>
      <returns>Значение true, если для свойства <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> задано значение, отличное от <see cref="F:System.Net.Security.ProtectionLevel.None" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
      <summary>Возвращает или задает значение, указывающее, реализует ли метод операцию, которая может инициировать сеанс на сервере (если такой сеанс существует). </summary>
      <returns>Значение true, если операции разрешено инициировать сеанс на сервере; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Возвращает или задает значение, указывающее, возвращает ли операция ответное сообщение.</summary>
      <returns>Значение true, если этот метод получает сообщение запроса и не возвращает ответное сообщение; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
      <summary>Возвращает или задает значение, указывающее, приводит ли операция службы к закрытию сеанса сервером после отправки ответного сообщения, если оно есть.</summary>
      <returns>Значение true, если операция приводит к закрытию сеанса сервером; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Возвращает или задает имя операции.</summary>
      <returns>Имя операции.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
      <summary>Возвращает или задает значение, указывающее, должны ли сообщения операции шифроваться, подписываться или шифроваться и подписываться. </summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является одним из значений <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Возвращает или задает значение действия SOAP для ответного сообщения операции.</summary>
      <returns>Значение действия SOAP для ответного сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Представляет стиль SOAP, который определяет форматирование метаданных WSDL для службы.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>WSDL-представление содержит единственный элемент, представляющий документ, которым осуществляется обмен в ходе операции.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>WSDL-представление сообщений, которыми осуществляется обмен в ходе операции, содержит параметры, соответствующие удаленному вызову процедур.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationFormatUse">
      <summary>Определяет формат сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Literal">
      <summary>Подразумевает, что сообщение представляет собой литеральный экземпляр схемы в WSDL.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Encoded">
      <summary>Подразумевает, что схемы в WSDL являются абстрактными спецификациями, кодированными в соответствии с правилами в разделе 5 спецификации SOAP 1.1.</summary>
    </member>
    <member name="T:System.ServiceModel.OptionalReliableSession">
      <summary>Обеспечивает удобный доступ к сведениям о включении надежного сеанса при использовании одной из заданных привязок, где включение надежного сеанса не является обязательным.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OptionalReliableSession" />.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OptionalReliableSession" /> из элемента привязки надежного сеанса.</summary>
      <param name="reliableSessionBindingElement">Элемент <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />, чье значение свойства используется для инициализации надежного сеанса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="reliableSessionBindingElement" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.OptionalReliableSession.Enabled">
      <summary>Возвращает или задает значение, указывающее, разрешен ли надежный сеанс.</summary>
      <returns>Значение true, если надежный сеанс разрешен; в противном случае — значение false.Значение по умолчанию зависит от используемой привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerHopCountAttribute">
      <summary>Задает член "число прыжков между одноранговыми узлами" блока заголовка сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerHopCountAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerHopCountAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Actor">
      <summary>Возвращает универсальный код ресурса (URI), указывающий узел, на который нацелен заголовок.</summary>
      <returns>Значение <see cref="T:System.String" />, содержащее имя узла-субъекта, на который нацелено это значение заголовка.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand">
      <summary>Указывает, должен ли узел, выступающий в роли <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" />, понимать этот заголовок.</summary>
      <returns>Значение true, если узел, выступающий в роли <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" />, должен понимать этот заголовок; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Name">
      <summary>Задает имя элемента, соответствующего члену числа прыжков между одноранговыми узлами.</summary>
      <returns>Значение <see cref="T:System.String" />, содержащее имена XML-элемента в сообщении SOAP, соответствующего числу прыжков между одноранговыми узлами.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Namespace">
      <summary>Возвращает пространство имен элемента, соответствующего члену числа прыжков между одноранговыми узлами.</summary>
      <returns>Значение <see cref="T:System.String" />, содержащее пространство имен XML-элемента в сообщении SOAP, соответствующего числу прыжков между одноранговыми узлами.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel">
      <summary>Возвращает значение, указывающее, должен ли член числа прыжков между одноранговыми узлами передаваться "как есть", подписанным, или подписанным и зашифрованным.</summary>
      <returns>Значение перечисления <see cref="T:System.Net.Security.ProtectionLevel" />, указывающее уровень защиты.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Relay">
      <summary>Возвращает логическое значение, указывающее, ретранслируется ли данное число прыжков между одноранговыми узлами на следующие узлы по направлению трафика.</summary>
      <returns>Значение true, если данное число прыжков между одноранговыми узлами ретранслируется на следующие узлы; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerMessageOrigination">
      <summary>Указывает источник сообщения одноранговых каналов в сети.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Local">
      <summary>Сообщение создано на локальном компьютере.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Remote">
      <summary>Сообщение создано на удаленном компьютере.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagation">
      <summary>Указывает получатель сообщения, отправленного по одноранговому каналу.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.None">
      <summary>Получатель сообщения неизвестен или недоступен.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Local">
      <summary>Сообщение предназначено для локального однорангового узла.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Remote">
      <summary>Сообщение предназначено для удаленного однорангового узла в одноранговой сетке.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.LocalAndRemote">
      <summary>Сообщение предназначено для локального и удаленного однорангового узла в одноранговой сетке.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagationFilter">
      <summary>Определяет базовый класс для фильтров сообщений одноранговых каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)">
      <summary>Возвращает значение, показывающее следует ли распространять сообщение, полученное по одноранговому каналу, и если да, назначение сообщения.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerMessagePropagation" />, указывающее назначение сообщения (локальное, удаленное, локально и удаленное или отсутствие распространения).</returns>
      <param name="message">Сообщение для оценки с целью распространения. </param>
      <param name="origination">Значение перечисления <see cref="T:System.ServiceModel.PeerMessageOrigination" />, указывающее источник (локальный или удаленный) сообщения, оценка которого выполняется.</param>
    </member>
    <member name="T:System.ServiceModel.PeerNode">
      <summary>Определяет экземпляр однорангового узла, используемого приложением, участвующим в конкретной сетке узлов.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.IsOnline">
      <summary>Возвращает значение, указывающее подключен ли одноранговый узел и может ли он отправлять сообщения в соседние узлы в сетке узлов.</summary>
      <returns>Значение true, если одноранговый узел подключен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNode.MessagePropagationFilter">
      <summary>Возвращает или задает настраиваемый фильтр для сообщений, полученных по одноранговому каналу.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" />, содержащий настраиваемый фильтр сообщений.</returns>
      <exception cref="T:System.InvalidOperationException">Канал, открытый для передачи данных, отсутствует.</exception>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Offline">
      <summary>Сигнализирует об отключении однорангового узла от сетки узлов.</summary>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Online">
      <summary>Сигнализирует о подключении однорангового узла к сетке узлов.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.Port">
      <summary>Возвращает сетевой порт, по которому одноранговый узел ожидает передачи данных.</summary>
      <returns>Значение <see cref="T:System.Int32" />, указывающее сетевой порт, по которому одноранговый узел ожидает передачи данных.</returns>
      <exception cref="T:System.InvalidOperationException">Канал, открытый для передачи данных, отсутствует.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.RefreshConnection">
      <summary>Обновляет подключение к сетке узлов.</summary>
      <exception cref="T:System.InvalidOperationException">Канал, открытый для передачи данных, отсутствует.</exception>
      <exception cref="T:System.TimeOutException">Время ожидания операции обновления истекло.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">При попытке обновления произошла сетевая ошибка.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">Прервано подключение при попытке обновления.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Сбой подключения при попытке обновления.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.ToString">
      <summary>Обеспечивает строковое представление однорангового узла.</summary>
      <returns>Значение <see cref="T:System.String" />, содержащее идентификатор сетки для однорангового узла, если идентификатор сетки задан; в противном случае возвращается тип.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerNodeAddress">
      <summary>Задает тип, содержащий адрес <see cref="T:System.ServiceModel.EndpointAddress" /> для однорангового узла, а также необязательную коллекцию IP-адресов с множественной адресацией.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerNodeAddress" /> с предоставленным адресом <see cref="T:System.ServiceModel.EndpointAddress" /> и коллекцией IP-адресов с множественной адресацией, также настроенных для локального компьютера.</summary>
      <param name="endpointAddress">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий адрес однорангового узла в сетке. </param>
      <param name="ipAddresses">Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащий IP-адреса, настроенные для локального компьютера, который можно использовать для подключения к одноранговому узлу.</param>
      <exception cref="T:System.ArgumentNullException">Один из аргументов, предоставляемых конструктору, имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.EndpointAddress">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.EndpointAddress" />, связанный с этим объектом <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />, связанный с этим объектом <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.IPAddresses">
      <summary>Возвращает коллекцию IP-адресов с множественной адресацией для этого объекта <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>Коллекция IP-адресов с множественной адресацией, связанная с этим объектом <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolver">
      <summary>Задает базовый тип, используемый для определения контракта для регистрации и разрешения идентификатора сетки одноранговых узлов для адресов конечной точки узлов, входящих в сетку.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolver" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolver.CanShareReferrals">
      <summary>Возвращает значение, указывающее, открыт ли совместный доступ арбитра имен одноранговых узлов к ссылкам.</summary>
      <returns>Значение true, если совместный доступ арбитра имен одноранговых узлов к ссылкам открыт; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <summary>Инициализирует текущий экземпляр арбитра одноранговых узлов с новым поддерживаемым адресом конечной точки и параметрами.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />, содержащий новый адрес конечной точки этого экземпляра арбитра одноранговых узлов.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, задающая новую сетевую привязку для этого арбитра одноранговых узлов.</param>
      <param name="credentials">Значение <see cref="T:System.ServiceModel.Description.ClientCredentials" />, задающее новые учетные данные клиента для этого арбитра одноранговых узлов.</param>
      <param name="referralPolicy">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающая новую политику ссылок для этого арбитра одноранговых узлов.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Регистрирует <see cref="T:System.ServiceModel.PeerNodeAddress" /> для определенной сетки одноранговых узлов.</summary>
      <returns>Объект <see cref="T:System.Object" />, который представляет идентификатор регистрации.Объект идентификатора регистрации передается методам <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> и <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />.</returns>
      <param name="meshId">Идентификатор сетки одноранговых узлов, в которой регистрируется такой узел.</param>
      <param name="nodeAddress">
        <see cref="T:System.ServiceModel.PeerNodeAddress" /> для регистрации в сетке одноранговых узлов. </param>
      <param name="timeout">Продолжительность времени ожидания успешного завершения перед прекращением попытки регистрации в сетке одноранговых узлов.В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
      <summary>Разрешает для передаваемого идентификатора сетки нулевое или иное число адресов конечной точки узлов, входящих в сетку одноранговых узлов.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая объекты <see cref="T:System.ServiceModel.PeerNodeAddress" />, представляющие узлы, входящие в сетку одноранговых узлов.</returns>
      <param name="meshId">Идентификатор сетки одноранговых узлов, в пределах которой необходимо получить объекты <see cref="T:System.ServiceModel.PeerNodeAddress" />, представляющие входящие в эту сетку узлы.</param>
      <param name="maxAddresses">Число возвращаемых адресов конечных точек.</param>
      <param name="timeout">Продолжительность времени ожидания успешного завершения перед прекращением попытки разрешения адресов конечных точек в сетке одноранговых узлов.В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
      <summary>Удаляет из сетки одноранговых узлов регистрационную запись узла.</summary>
      <param name="registrationId">Регистрационный идентификатор узла, полученный во время предыдущего вызова <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
      <param name="timeout">Период ожидания успешного удаления регистрации из сетки одноранговых узлов.В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Обновляет <see cref="T:System.ServiceModel.PeerNodeAddress" /> для узла, зарегистрированного в определенной сетке одноранговых узлов.</summary>
      <param name="registrationId">Маркер регистрационного идентификатора узла, полученный во время предыдущего вызова <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
      <param name="updatedNodeAddress">Обновленный адрес конечной точки (и другие IP-адреса с множественной адресацией). </param>
      <param name="timeout">Продолжительность времени ожидания успешного завершения перед прекращением попытки обновления регистрации узла в сетке одноранговых узлов.В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="T:System.ServiceModel.PeerSecuritySettings">
      <summary>Содержит параметры безопасности, связанные с одноранговым каналом, включая используемый тип проверки подлинности и механизм безопасности, применяемый при транспортировке сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerSecuritySettings" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Mode">
      <summary>Возвращает и задает значение, указывающее режим безопасности однорангового канала.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.SecurityMode" />, указывающее режим безопасности однорангового канала. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение не является перечислимым значением из объекта <see cref="T:System.ServiceModel.SecurityMode" /></exception>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeMode">
      <summary>Возвращает значение, показывающее, следует ли сериализовать сведения о режиме безопасности.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, которое задает true (если сведения о режиме безопасности должны быть сериализованы) или false (если они не должны быть сериализованы).</returns>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeTransport">
      <summary>Возвращает значение, показывающее, следует ли сериализовать сведения о транспорте.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />, которое задает true (если сведения о транспорте должны быть сериализованы) или false (если они не должны быть сериализованы).</returns>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Transport">
      <summary>Возвращает значение, указывающее параметры безопасности транспорта, используемые для сообщений, передаваемых по одноранговому каналу.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerTransportSecuritySettings" />, содержащий параметры безопасности транспорта для однорангового канала.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerTransportCredentialType">
      <summary>Задает набор типов учетных данных, используемых для проверки подлинности однорангового транспорта канала.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Password">
      <summary>Для проверки подлинности однорангового транспорта канала необходим правильный пароль.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Certificate">
      <summary>Для проверки подлинности однорангового транспорта канала необходим сертификат X509.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerTransportSecuritySettings">
      <summary>Содержит параметры безопасности для однорангового транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor">
      <summary>Создает экземпляр типа <see cref="T:System.ServiceModel.PeerTransportSecuritySettings" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType">
      <summary>Возвращает или задает тип учетных данных, используемых для проверки подлинности однорангового транспорта.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerTransportCredentialType" />, указывающее тип учетных данных, которые нужно предоставлять для проверки подлинности.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Тип учетных данных является недопустимым значением перечисления <see cref="T:System.ServiceModel.PeerTransportCredentialType" />.</exception>
    </member>
    <member name="T:System.ServiceModel.PoisonMessageException">
      <summary>Исключение, которое возникает, если сообщение считается подозрительным.Сообщение считается подозрительным, если множественные попытки его доставить завершаются с ошибкой.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PoisonMessageException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PoisonMessageException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта об исключении. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PoisonMessageException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PoisonMessageException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Исключение, видимое на стороне клиента и возникающее, когда связь с удаленной стороной невозможна из-за несовпадения протоколов передачи данных.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.  </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.QueuedDeliveryRequirementsMode">
      <summary>Перечисление <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> задает требования к доставке с формированием очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed">
      <summary>Доставка с формированием очереди разрешена.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required">
      <summary>Требуется доставка с формированием очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed">
      <summary>Доставка с формированием очереди не разрешена.</summary>
    </member>
    <member name="T:System.ServiceModel.QueueTransferProtocol">
      <summary>Указывает протокол, используемый при передаче сообщений между диспетчерами очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Native">
      <summary>Используйте собственный протокол MSMQ.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Srmp">
      <summary>Используйте протокол надежного обмена сообщениями SOAP (SRMP).</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.SrmpSecure">
      <summary>Используйте безопасный транспорт протокола надежного обмена сообщениями SOAP (SRMPS).</summary>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Исключение, вызываемое при превышении квоты сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.QuotaExceededException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.QuotaExceededException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.QuotaExceededException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.QuotaExceededException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <summary>Этот атрибут можно применять к операциям служб для включения поведения контекста получения.</summary>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Настраивает элементы привязки для поддержки поведения контекста получения.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="bindingParameters">Параметры привязки.</param>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="clientOperation">Объект среды выполнения клиента.</param>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />. </summary>
      <param name="operationDescription">Описание операции.</param>
      <param name="dispatchOperation">Операция для перенаправления.</param>
    </member>
    <member name="P:System.ServiceModel.ReceiveContextEnabledAttribute.ManualControl">
      <summary>Возвращает или задает значение, определяющее, сигнализируется ли явно методом службы прием подтверждения для этой операции.</summary>
      <returns>Значение true, если прием подтверждения для этой операции сигнализируется явно, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />.</summary>
      <param name="operationDescription">Описание операции.</param>
    </member>
    <member name="T:System.ServiceModel.ReceiveErrorHandling">
      <summary>Перечисление, указывающее обработку подозрительного сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Fault">
      <summary>Этот параметр отправляет ошибку прослушивателю, который привел к сбою ServiceHost.Сообщение должно быть удалено из очереди приложения при помощи внешнего механизма, прежде чем приложение сможет продолжить обработку сообщений из очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Drop">
      <summary>Этот параметр удаляет подозрительное сообщение.Сообщение не доставляется в приложение.Если к этому моменту срок жизни сообщения уже истек, сообщение может появиться в очереди недоставленных сообщений отправителя.Если срок жизни не истек, сообщение нигде не появляется.Этот параметр указывает, что пользователю неважно, потеряно ли сообщение.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Reject">
      <summary>Тем самым очереди сообщений (MSMQ) дается указание отправлять диспетчеру передающей очереди уведомление о том, что сообщение не может быть получено приложением.Сообщение помещается в очередь недоставленных сообщений диспетчера передающей очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Move">
      <summary>Подозрительное сообщение перемещается в очередь подозрительных сообщений для дальнейшей обработки приложением для обработки подозрительных сообщений. </summary>
    </member>
    <member name="T:System.ServiceModel.ReleaseInstanceMode">
      <summary>Указывает, когда система удаляет объект службы в процессе вызова операции.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.None">
      <summary>Удаляет объект в соответствии со значением свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeCall">
      <summary>Удаляет объект перед вызовом операции.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.AfterCall">
      <summary>Удаляет объект после завершения операции.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall">
      <summary>Удаляет объект перед вызовом операции и после завершения операции.</summary>
    </member>
    <member name="T:System.ServiceModel.ReliableMessagingVersion">
      <summary>Содержит параметры для поддерживаемых версий протокола WS-ReliableMessaging.Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.Default">
      <summary>Возвращает версию протокола WS-ReliableMessaging по умолчанию.</summary>
      <returns>Экземпляр, унаследованный от <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> и представляющий собой версию протокола WS-ReliableMessaging по умолчанию, используемую элементом конфигурации.По умолчанию используется версия WS-ReliableMessagingFebruary2005.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11">
      <summary>Возвращает версию 1.1 протокола WS-ReliableMessaging.</summary>
      <returns>Экземпляр, унаследованный от <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> и представляющий собой версию протокола WS-ReliableMessaging1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005">
      <summary>Возвращает версию February 2005 протокола WS-ReliableMessaging.</summary>
      <returns>Экземпляр, унаследованный от <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> и представляющий собой версию WS-ReliableMessagingFebruary2005.</returns>
    </member>
    <member name="T:System.ServiceModel.ReliableSession">
      <summary>Обеспечивает удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ReliableSession" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ReliableSession" /> из элемента привязки надежного сеанса.</summary>
      <param name="reliableSessionBindingElement">Элемент <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />, значения свойств которого используются для инициализации надежного сеанса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="reliableSessionBindingElement" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.InactivityTimeout">
      <summary>Возвращает или задает интервал времени, в течение которого служба остается неактивной, перед тем как будет закрыта.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается интервал времени, в течение которого служба остается неактивной, перед тем как будет закрыта.Значение по умолчанию — 10 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.Ordered">
      <summary>Возвращает или задает значение, указывающее, должен ли при доставке сохраняться порядок отправки сообщений.</summary>
      <returns>Значение true, если следует доставлять сообщения в порядке отправки; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.RsaEndpointIdentity">
      <summary>Указывает удостоверение RSA для конечной точки службы.</summary>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> на основании утверждения.</summary>
      <param name="identity">Объект <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Значение типа утверждения <paramref name="identity" /> отлично от <see cref="P:System.IdentityModel.Claims.ClaimTypes.Rsa" />.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.RsaEndpointIdentity" />.</summary>
      <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">Значение открытого ключа <paramref name="certificate" /> — null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Невозможно получить доступ к открытому ключу сертификата.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> на основании открытого ключа.</summary>
      <param name="publicKey">Открытый ключ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> равен null.
</exception>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Определяет параметры безопасности для привязки.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>Режим безопасности отключен.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>Безопасность обеспечивается с помощью средств защиты транспортного уровня (например, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>Безопасность обеспечивается с помощью средств безопасности сообщений SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>Средства защиты транспортного уровня (например, HTTPS) обеспечивают целостность, конфиденциальность и проверку подлинности, а механизм защиты сообщений SOAP обеспечивает проверку подлинности клиента.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Исключение, которое возникает, когда сервер слишком занят, чтобы принять сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServerTooBusyException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServerTooBusyException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServerTooBusyException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServerTooBusyException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Исключение, выдаваемое при сбое активации службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceActivationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceActivationException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceActivationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ServiceActivationException" /> с указанным сообщением об ошибке и внутренним исключением.  </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceAuthenticationManager">
      <summary>Представляет диспетчер проверки подлинности службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthenticationManager.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.ServiceAuthenticationManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)">
      <summary>Проверяет подлинность указанного сообщения.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
      <param name="authPolicy">Политика авторизации.</param>
      <param name="listenUri">Номер URI, на который пришло сообщение.</param>
      <param name="message">Сообщение, подлинность которого проверяется.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceAuthorizationManager">
      <summary>Обеспечивает проверку для предоставления доступа к операциям службы (авторизации).</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
      <summary>Проверяет авторизацию для данного контекста операции.</summary>
      <returns>Значение true, если доступ предоставляется; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <param name="operationContext">Объект <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
      <summary>Проверяет авторизацию для данного контекста операции, когда требуется доступ к сообщению.</summary>
      <returns>Значение true, если доступ предоставляется; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <param name="operationContext">Объект <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который требуется проанализировать для принятия решения об авторизации.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
      <summary>Проверяет авторизацию для данного контекста операции на основе оценки политики по умолчанию.</summary>
      <returns>Значение true, если доступ предоставляется; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <param name="operationContext">Объект <see cref="T:System.ServiceModel.OperationContext" /> для текущего запроса авторизации.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
      <summary>Возвращает набор политик, участвующих в оценке политики.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, принадлежащий к типу <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
      <param name="operationContext">Объект <see cref="T:System.ServiceModel.OperationContext" /> текущего запроса авторизации.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceBehaviorAttribute">
      <summary>Задает поведение внутреннего выполнения реализации контракта службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.AddressFilterMode" />, используемый диспетчером для маршрутизации входящих сообщений на правильную конечную точку.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.AddressFilterMode" />, используемый диспетчером для маршрутизации входящих сообщений на правильную конечную точку.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.AddressFilterMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Указывает, следует ли автоматически завершать сеанс, когда клиент закрывает выходной сеанс.</summary>
      <returns>Значение true, если служба автоматически завершает сеанс при закрытии клиентом выходящего сеанса; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
      <summary>Возвращает или задает поддержку службой одного потока, нескольких потоков или повторных входящих вызовов.  </summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.ConcurrencyMode" />; значение по умолчанию — <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.ConcurrencyMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
      <summary>Возвращает или задает значение, используемое для поиска элемента службы в файле конфигурации приложения.</summary>
      <returns>Значение, которое требуется найти в файле конфигурации.Значением по умолчанию является полное имя типа без информации о сборке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
      <summary>Извлекает объект, реализующий службу и используемый в качестве одноэлементного экземпляра службы, или выводит null, если одноэлементный экземпляр отсутствует.</summary>
      <returns>Реализация службы.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Возвращает или задает значение, которое указывает, требуется ли передавать по линии связи неизвестные данные сериализации.</summary>
      <returns>true, если неизвестные данные сериализации никогда не передаются; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, указывающее, что общие необработанные исключения выполнения должны преобразовываться в исключения <see cref="T:System.ServiceModel.FaultException`1" /> типа <see cref="T:System.ServiceModel.ExceptionDetail" /> и отправляться как сообщения об ошибке.Задавайте значение true только во время разработки для устранения неполадок службы.</summary>
      <returns>true, если необработанные исключения должны возвращаться в виде ошибок SOAP; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
      <summary>Возвращает или задает значение, которое указывает, когда создаются новые объекты службы.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.InstanceContextMode" />; значением по умолчанию является <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.InstanceContextMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Возвращает или задает максимальное количество элементов, допустимое в сериализованном объекте.</summary>
      <returns>Максимальное количество элементов, разрешенное в объекте.Значение по умолчанию — 65 536 байт (64 КБ).</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
      <summary>Возвращает или задает значение атрибута имени в элементе службы в языке WSDL.</summary>
      <returns>Значение атрибута имени в элементе &lt;wsdl:service&gt; при экспорте. </returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
      <summary>Возвращает или задает значение целевого пространства имен для службы в языке WSDL.</summary>
      <returns>Значение атрибута targetNamespace для элемента &lt;wsdl:definitions&gt;, содержащего элемент &lt;wsdl:service&gt;.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
      <summary>Возвращает или задает значение, указывающее, будет ли объект службы освобождаться после успешного выполнения текущей транзакции.</summary>
      <returns>Значение true, если объект службы должен освобождаться; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
      <summary>Задает объект, реализующий службу и используемый в качестве одноэлементного экземпляра службы.</summary>
      <param name="value">Одноэлементный экземпляр службы. </param>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Передает пользовательские объекты данных в привязки, поддерживающие свойства поведения.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
      <param name="endpoints">Конечные точки службы.</param>
      <param name="parameters">Объекты данных, необходимые для привязок для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Настраивает среду выполнения службы для поддержки свойств поведения.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Подтверждает, что описание службы и ее узел способны поддерживать поведение.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
      <summary>Возвращает или задает значение, которое указывает, завершаются ли автоматически ожидающие транзакции при завершении текущего сеанса без ошибок.</summary>
      <returns>Значение true, если ожидающие транзакции должны завершаться при закрытии текущего сеанса без ошибок; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
      <summary>Задает уровень изоляции транзакции для новых транзакций, созданных в службе, и входящих транзакций, передаваемых от клиента.</summary>
      <returns>Значение <see cref="T:System.Transactions.IsolationLevel" />, задающее уровень изоляции транзакции.Значение по умолчанию — <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.Transactions.IsolationLevel" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
      <summary>Возвращает или задает период времени, в течение которого транзакция должна быть завершена.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время, в течение которого транзакция должна быть завершена; по истечении этого времени транзакция будет прервана автоматически.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше <see cref="F:System.TimeSpan.Zero" /> или больше <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
      <summary>Возвращает или задает значение, определяющее, следует ли использовать текущий контекст синхронизации для выбора потока исполнения.</summary>
      <returns>true, если все вызовы службы должны запускаться в потоке, указанном контекстом <see cref="T:System.Threading.SynchronizationContext" />; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
      <summary>Возвращает или задает значение, определяющее, кем выполняется принудительная обработка заголовка SOAP MustUnderstand: системой или приложением.</summary>
      <returns>true, если обработка заголовка SOAP MustUnderstand должна выполняться системой; в противном случае — false, что означает, что эта обработка выполняется приложением.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Показывает, что интерфейс или класс определяет контракт службы в приложении . </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Возвращает или задает тип контракта обратного вызова, если контракт является дуплексным.</summary>
      <returns>Тип <see cref="T:System.Type" />, указывающий контракт обратного вызова.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Возвращает или задает имя, используемое для поиска службы в файле конфигурации приложения.</summary>
      <returns>Имя, используемое для поиска элемента службы в файле конфигурации приложения.По умолчанию — это имя класса реализации службы.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, присвоен ли участнику уровень защиты.</summary>
      <returns>Значение true, если свойство <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> не равно <see cref="F:System.Net.Security.ProtectionLevel.None" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Возвращает или задает имя элемента &lt;portType&gt; в языке WSDL. </summary>
      <returns>В качестве значения по умолчанию используется имя класса или интерфейса, к которому применен атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен элемента &lt;portType&gt; в языке WSDL.</summary>
      <returns>Пространство имен WSDL элемента &lt;portType&gt;.Значение по умолчанию — "http://tempuri.org".</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
      <summary>Указывает, должна ли привязка для контракта поддерживать значение свойства <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />.</summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
      <summary>Возвращает или задает значение, указывающее, разрешены, запрещены или требуются ли сеансы.</summary>
      <returns>Режим <see cref="T:System.ServiceModel.SessionMode" /> указывает, разрешены, запрещены или требуются ли сеансы.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.SessionMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.ServiceHost">
      <summary>Предоставляет основное приложение для служб.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceHost" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceHost" /> с указанными экземпляром службы и базовыми адресами.</summary>
      <param name="singletonInstance">Экземпляр размещенной службы.</param>
      <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="singletonInstance" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceHost" /> с указанными типом службы и базовыми адресами.</summary>
      <param name="serviceType">Тип размещенной службы.</param>
      <param name="baseAddresses">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и адресом конечной точки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес для добавленной конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="implementedContract" />, <paramref name="binding" /> или <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой, адресом конечной точки и универсальным кодом ресурса, по которому служба выполняет прослушивание.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес конечной точки для службы.</param>
      <param name="listenUri">URI <see cref="T:System.Uri" />, который может прослушиваться конечными точками службы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="implementedContract" />, <paramref name="binding" /> или <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и универсальным кодом ресурса, в котором содержится адрес конечной точки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="implementedContract" />, <paramref name="binding" /> или <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой, универсальным кодом ресурса, содержащим адрес конечной точки, и универсальным кодом ресурса, по которому служба выполняет прослушивание.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
      <param name="listenUri">URI <see cref="T:System.Uri" />, который может прослушиваться конечными точками службы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="implementedContract" />, <paramref name="binding" /> или <paramref name="address" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Контракты не инициализированы, или ключи контрактов не найдены.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>Создает описание размещенной службы.</summary>
      <returns>Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы.</returns>
      <param name="implementedContracts">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> с парами ключей типа (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />), которые содержат контракты с ключами реализованной размещенной службы.</param>
      <exception cref="T:System.InvalidOperationException">Тип размещенной службы — null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Инициализирует описание службы, размещенной на основе ее экземпляра и указанных базовых адресов.</summary>
      <param name="singletonInstance">Экземпляр размещенной службы.</param>
      <param name="baseAddresses">Коллекция <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />, содержащая базовые адреса размещенной службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="singletonInstance" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Инициализирует описание службы, размещенной на основе ее типа и указанных базовых адресов.</summary>
      <param name="serviceType">Тип <see cref="T:System.Type" /> размещенной службы.</param>
      <param name="baseAddresses">Коллекция <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />, содержащая базовые адреса размещенной службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serviceType" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.OnClosed">
      <summary>Удаляет службы с возможностью удаления, размещенные во время закрытия узла службы.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHost.SingletonInstance">
      <summary>Возвращает одноэлементный экземпляр размещенной службы.</summary>
      <returns>Объект размещенной службы.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceHostBase">
      <summary>Расширяет класс <see cref="T:System.ServiceModel.ServiceHostBase" /> для реализации узлов, предоставляющих пользовательские модели программирования.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceHostBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
      <summary>Добавляет базовый адрес в узел службы.</summary>
      <param name="baseAddress">Объект <see cref="T:System.Uri" />, содержащий базовый адрес службы, размещенной на текущем узле.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="baseAddress" /> невозможно вызвать.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
      <summary>Добавляет конечные точки службы для всех базовых адресов в каждом контракте, найденных в узле службы, имеющих привязку по умолчанию.</summary>
      <returns>Коллекция только для чтения конечных точек по умолчанию.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Добавляет заданную конечную точку службы в размещенную службу.</summary>
      <param name="endpoint">Конечная точка службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Endpoint" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Узел не находится в состоянии Created или Opening либо отсутствует описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы.</exception>
      <exception cref="T:System.ArgumentException">Значением свойства <paramref name="Address" />, <paramref name="Binding" /> или <paramref name="Contract" /> является null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и адресом конечной точки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Контракт, реализованный конечной точкой.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес для добавленной конечной точки.Он может представлять собой как абсолютный, так и относительный универсальный код ресурса (URI).Если он представляет собой относительный универсальный код ресурса (URI), один из базовых адресов <see cref="T:System.ServiceModel.ServiceHost" /> (в зависимости от протокола привязки) используется в качестве базового адреса конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> или <paramref name="binding" />, или <paramref name="address" />, или имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Узел не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> либо отсутствует описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы, поэтому невозможно добавить конечную точку или в привязке отсутствует транспорт схемы привязки.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой, адресом конечной точки и универсальным кодом ресурса (URI), содержащим адрес, по которому служба выполняет прослушивание.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Контракт, реализованный конечной точкой.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес для добавленной конечной точки.Этот адрес может быть как абсолютным, так и относительным универсальным кодом ресурса (URI).Если он представляет собой относительный универсальный код ресурса (URI), один из базовых адресов <see cref="T:System.ServiceModel.ServiceHost" /> (в зависимости от протокола привязки) используется в качестве базового адреса конечной точки.</param>
      <param name="listenUri">Объект <see cref="T:System.Uri" />, содержащий адрес, по которому конечная точка прослушивает входящие сообщения.URI может быть относительным или абсолютным.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> или <paramref name="binding" />, или <paramref name="address" />, или имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Узел не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> либо отсутствует описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы, поэтому невозможно добавить конечную точку.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и универсальным кодом ресурса (URI), содержащим адрес конечной точки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.</returns>
      <param name="implementedContract">Контракт, реализованный конечной точкой.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.Он может представлять собой как абсолютный, так и относительный универсальный код ресурса (URI).Если он представляет собой относительный универсальный код ресурса (URI), один из базовых адресов <see cref="T:System.ServiceModel.ServiceHost" /> (в зависимости от протокола привязки) используется в качестве базового адреса конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> или <paramref name="binding" />, или <paramref name="address" />, или имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Узел не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> либо отсутствует описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы, поэтому невозможно добавить конечную точку.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и универсальными кодами ресурса (URI), содержащими адреса конечных точек и прослушивания.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленный в размещенную службу.URI может быть относительным или абсолютным.</returns>
      <param name="implementedContract">Контракт, реализованный конечной точкой.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.Если он представляет собой относительный универсальный код ресурса (URI), один из базовых адресов <see cref="T:System.ServiceModel.ServiceHost" /> (в зависимости от протокола привязки) используется в качестве базового адреса конечной точки.</param>
      <param name="listenUri">Объект <see cref="T:System.Uri" />, содержащий адрес, по которому конечная точка прослушивает входящие сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> или <paramref name="binding" />, или <paramref name="address" />, или имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Узел не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> либо отсутствует описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> размещенной службы, поэтому невозможно добавить конечную точку.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
      <summary>Загружает описание службы из файла конфигурации и применяет его к создаваемой среде выполнения.</summary>
      <exception cref="T:System.InvalidOperationException">Значение описания размещенной службы — null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Authentication">
      <summary>Возвращает поведение проверки подлинности службы.</summary>
      <returns>Поведение проверки подлинности службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Authorization">
      <summary>Возвращает поведение авторизации для размещенной службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> для размещенной службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
      <summary>Возвращает базовые адреса, используемые размещенной службой.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, принадлежащий к типу <see cref="T:System.Uri" /> и содержащий базовые адреса размещенной службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
      <summary>Возвращает коллекцию диспетчеров каналов, используемых узлом службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />, содержащий диспетчеры каналов, используемые узлом службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
      <summary>Возвращает или задает интервал времени, выделенный для операции закрытия узла службы.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает интервал времени, выделенный для операции закрытия узла службы.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля или больше, чем значение <see cref="F:System.Int32.MaxValue" />, в миллисекундах (2 147 483 647 или 0X7FFFFFFF в шестнадцатеричном формате).</exception>
      <exception cref="T:System.InvalidOperationException">Узел находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Closing" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Узел уже находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Узел находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>При реализации в производном классе создает описание размещенной службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceDescription" /> для размещенной службы.</returns>
      <param name="implementedContracts">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий объекты <see cref="T:System.ServiceModel.Description.ContractDescription" /> для службы.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Credentials">
      <summary>Возвращает учетные данные для размещенной службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> для размещенной службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для операции закрытия узла службы.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает интервал времени по умолчанию, выделенный для операции закрытия узла службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для операции открытия узла службы.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает интервал времени по умолчанию, выделенный для операции открытия узла службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Description">
      <summary>Возвращает описание размещенной службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceDescription" /> для размещенной службы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Extensions">
      <summary>Возвращает расширения для текущего заданного узла службы.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.IExtensionCollection`1" /> типа <see cref="T:System.ServiceModel.ServiceHostBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
      <summary>Извлекает контракты, реализованные размещенной службой.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий объекты <see cref="T:System.ServiceModel.Description.ContractDescription" /> для службы.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Увеличивает значение предела скорости потока сообщений в размещенную службу на заданную величину.</summary>
      <returns>Новый предел после увеличения значения.</returns>
      <param name="incrementBy">Количество сообщений, на которое увеличивается предел управления потоками.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Создает и инициализирует узел службы с описаниями контрактов и служб.</summary>
      <param name="baseAddresses">Объект <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
      <summary>Инициализирует среду выполнения для узла службы.</summary>
      <exception cref="T:System.InvalidOperationException">Значение описания размещенной службы — null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
      <summary>Загружает элемент службы из файла конфигурации размещенной службы.</summary>
      <param name="serviceSection">Элемент <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> для загрузки из конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceSection" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение описания размещенной службы — null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
      <summary>Возвращает или задает предел управления потоками для сообщений, полученных размещенной службой.</summary>
      <returns>Предел управления потоками для сообщений, полученных размещенной службой.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnAbort">
      <summary>Прерывает работу службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию, вызванную закрытием узла службы.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию, вызванную открытием узла службы.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
      <summary>Закрывает размещенную службу, включая диспетчеры каналов и связанные контексты и прослушиватели экземпляра.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnClosed">
      <summary>Освобождает ресурсы, используемые узлом службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, вызванную закрытием узла службы.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, вызванную открытием узла службы.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
      <summary>Открывает диспетчеры каналов.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpened">
      <summary>Возвращает учетные данные службы, проверку подлинности службы и поведение авторизации для размещенной службы.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
      <summary>Возвращает или задает интервал времени, выделенный для операции открытия узла службы.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает интервал времени, выделенный для операции открытия узла службы.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля или больше, чем значение <see cref="F:System.Int32.MaxValue" /> (2 147 483 647 или 0X7FFFFFFF в шестнадцатеричном формате).</exception>
      <exception cref="T:System.InvalidOperationException">Узел находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Closing" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Узел уже находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Узел находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
      <summary>Задает в качестве адреса указанной конечной точки указанный адрес.</summary>
      <param name="endpoint">Конечная точка службы.</param>
      <param name="relativeAddress">Адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
      <summary>Закрывает узел службы.</summary>
    </member>
    <member name="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
      <summary>Происходит при получении неизвестного сообщения.</summary>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Задает известные типы, которые должны использоваться службой при сериализации или десериализации.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> и задает имя метода, который возвращает известные типы.</summary>
      <param name="methodName">Имя метода, который возвращает известные типы.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> с именем метода, который возвращает известные типы и тип, содержащий метод (или методы), возвращающий известные типы.</summary>
      <param name="methodName">Имя метода, который возвращает известные типы.</param>
      <param name="declaringType">Тип, который может использовать известные типы в своем графе объектов.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> с заданным известным типом.</summary>
      <param name="type">Задает известный тип, который может использоваться в параметре или возвращаемом значении, определенном службой.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Возвращает тип, который содержит методы, возвращающие известные типы.</summary>
      <returns>Тип <see cref="T:System.Type" />, который содержит методы, возвращающие известные типы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Возвращает имя метода, возвращающего коллекцию известных типов.</summary>
      <returns>Имя метода, который возвращает известные типы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Известный тип, который может быть включен в граф объектов.</summary>
      <returns>Объект <see cref="T:System.Type" /> известного типа.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceSecurityContext">
      <summary>Представляет контекст безопасности удаленной стороны.На клиенте представляет удостоверение службы, а на службе представляет удостоверение клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> коллекцией объектов политик.</summary>
      <param name="authorizationPolicies">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая политики авторизации.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> указанными параметрами авторизации.</summary>
      <param name="authorizationContext">Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий информацию об авторизации.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> указанными параметрами авторизации и коллекцией политик.</summary>
      <param name="authorizationContext">Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий параметры авторизации.</param>
      <param name="authorizationPolicies">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая политики авторизации.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
      <summary>Возвращает экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" />, содержащий пустую коллекцию утверждений, удостоверений и других данных контекста, которые обычно используются для представления анонимной стороны.</summary>
      <returns>Пустой экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
      <summary>Возвращает информацию об авторизации для экземпляра этого класса.Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> содержит коллекцию объектов <see cref="T:System.IdentityModel.Claims.ClaimSet" />, которые приложение может запрашивать и получать сведения о конкретной стороне.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий параметры авторизации.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
      <summary>Возвращает коллекцию политик, связанную с экземпляром этого класса.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая политики.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Current">
      <summary>Возвращает текущий объект <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</summary>
      <returns>Текущий объект <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
      <summary>Возвращает значение, указывающее, предоставил ли текущий клиент учетные данные службе.</summary>
      <returns>Значение true, если клиент предоставил учетные данные; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
      <summary>Возвращает первичное удостоверение, связанное с текущим параметром.</summary>
      <returns>Интерфейс <see cref="T:System.Security.Principal.IIdentity" />, связанный с текущим параметром.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
      <summary>Возвращает удостоверение Windows текущего параметра. </summary>
      <returns>Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя домена Windows.</returns>
    </member>
    <member name="T:System.ServiceModel.SessionMode">
      <summary>Задает значения для указания поддержки для надежных сеансов, которые требует или поддерживает контракт.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Allowed">
      <summary>Указывает, что контракт поддерживает сеансы, если входящая привязка их поддерживает.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Required">
      <summary>Указывает, что для контракта требует привязка, связанная с сеансом.Если привязка не настроена для поддержки сеанса, выдается исключение.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.NotAllowed">
      <summary>Указывает, что контракт не поддерживает привязки, инициирующие сеансы.</summary>
    </member>
    <member name="T:System.ServiceModel.SpnEndpointIdentity">
      <summary>Представляет имя участника-службы (SPN) для удостоверения, когда в привязке используется протокол Kerberos.</summary>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> в соответствии с указанным идентификационным утверждением.</summary>
      <param name="identity">Удостоверение для данного имени участника-службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Значение типа утверждения <paramref name="identity" /> отлично от <see cref="P:System.IdentityModel.Claims.ClaimTypes.Spn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> с заданным именем участника-службы.</summary>
      <param name="spnName">Имя участника-службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime">
      <summary>Задает максимально допустимое время для поиска имени участника-службы.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />.Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству задано значение меньше 0.</exception>
    </member>
    <member name="T:System.ServiceModel.TcpClientCredentialType">
      <summary>Перечисляет допустимые типы учетных данных для клиентов TCP.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.None">
      <summary>Задает анонимную проверку подлинности.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Windows">
      <summary>Задает проверку подлинности клиента с использованием Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Certificate">
      <summary>Задает проверку подлинности клиента с использованием сертификата.</summary>
    </member>
    <member name="T:System.ServiceModel.TcpTransportSecurity">
      <summary>Предоставляет свойства, которые управляют параметрами проверки подлинности и уровнем защиты для транспорта TCP.</summary>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.TcpTransportSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности.</summary>
      <returns>Возвращает <see cref="T:System.ServiceModel.TcpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты для транспорта TCP.</summary>
      <returns>Расширенная политика защиты для транспорта TCP.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.LegacyExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты прежних версий.</summary>
      <returns>Расширенная политика защиты прежних версий.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel">
      <summary>Возвращает или задает <see cref="T:System.Net.Security.ProtectionLevel" /> для потока TCP.</summary>
      <returns>Возвращает <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" /> и должно ли оно быть сериализовано.Это используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Возвращает значение, показывающее, следует ли сериализовать расширенную политику защиты прежних версий.</summary>
      <returns>Значение true, если расширенную политику защиты прежних версий следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowAttribute">
      <summary>Указывает, принимает ли операция службы входящие транзакции от клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.TransactionFlowAttribute" />. </summary>
      <param name="transactions">
        <see cref="T:System.ServiceModel.TransactionFlowOption" />.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет дополнительные параметры в контекст привязок для поддержки поведения этой операции.Наследовать этот метод нельзя.</summary>
      <param name="description">Описание операции, для которой атрибут добавляет функциональные возможности.</param>
      <param name="parameters">Коллекция объектов параметров для контекста привязок.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Передает функциональность атрибута объекту ProxyOperation для метода, отмечаемого атрибутом.Наследовать этот метод нельзя.</summary>
      <param name="description">Операция, которой атрибут передает функциональные возможности.</param>
      <param name="proxy">Объект <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, представляющий текущую операцию.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Передает функциональность атрибута объекту <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> для метода, отмечаемого атрибутом.Наследовать этот метод нельзя.</summary>
      <param name="description">Описание этой операции.</param>
      <param name="dispatch">Объект <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> для этой операции.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Проверяет, поддерживает ли операция это поведение.Наследовать этот метод нельзя.</summary>
      <param name="description">Проверяемая операция.</param>
    </member>
    <member name="P:System.ServiceModel.TransactionFlowAttribute.Transactions">
      <summary>Возвращает значение, указывающее, поддерживается ли входящая транзакция.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransactionFlowOption" />, указывающее, поддерживается ли входящая транзакция.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowOption">
      <summary>Перечисление, используемое с атрибутом <see cref="T:System.ServiceModel.TransactionFlowAttribute" />, чтобы задать политику потока транзакций для операции службы.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.NotAllowed">
      <summary>Не следует создавать поток транзакций.Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Allowed">
      <summary>Возможно, требуется создать поток транзакций.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Mandatory">
      <summary>Необходимо создать поток транзакций.</summary>
    </member>
    <member name="T:System.ServiceModel.TransactionProtocol">
      <summary>Задает протокол транзакций, используемый при передаче транзакций потоком.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionProtocol.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.TransactionProtocol" />. </summary>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.Default">
      <summary>Возвращает значение протокола транзакций по умолчанию.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransactionProtocol" />, указывающее протокол транзакций по умолчанию, используемый при передаче транзакций потоком.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.OleTransactions">
      <summary>Возвращает значение протокола транзакций OleTransactions.</summary>
      <returns>Значение <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11">
      <summary>Возвращает значение протокола транзакций WSAtomicTransaction11.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransactionProtocol" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004">
      <summary>Возвращает значение протокола транзакций WSAtomicTransactionOctober2004.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransactionProtocol" />.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Указывает, использует ли канал для передачи сообщений запросов и ответов потоковый режим или режим буферизации.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>Сообщения запроса и ответа буферизуются.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>Сообщения запроса и ответа передаются потоком.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>Сообщение запроса передается потоком, а сообщение ответа буферизуется.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>Сообщение запроса буферизуется, а сообщение ответа передается потоком.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Содержит сообщение, полученное по каналу и не связанное с какой-либо операцией обратного вызова или ожидающим запросом.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Возвращает неизвестное сообщение, вызвавшее событие.</summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, вызвавшее событие.</returns>
    </member>
    <member name="T:System.ServiceModel.UpnEndpointIdentity">
      <summary>Представляет имя участника-пользователя (UPN) для удостоверения, используемое при использовании привязкой режима проверки подлинности SSPINegotiate.</summary>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> на основании утверждения.</summary>
      <param name="identity">Объект <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Значение типа утверждения <paramref name="identity" /> отлично от <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.UpnEndpointIdentity" />.</summary>
      <param name="upnName">Имя участника-пользователя.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Значение типа утверждения <paramref name="upnName" /> отлично от <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="T:System.ServiceModel.UriSchemeKeyedCollection">
      <summary>Предоставляет потокобезопасную коллекцию, которая содержит универсальные коды ресурса (URI) с ключами, соответствующими их имени схемы транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />. </summary>
      <param name="addresses">Массив <see cref="T:System.Array" /> переменной длины, состоящий из объектов <see cref="T:System.Uri" />, используемых для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="addresses" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)">
      <summary>Возвращает ключ для указанного универсального кода ресурса (URI) из коллекции.</summary>
      <returns>Ключ для заданного универсального кода ресурса (URI) из коллекции.</returns>
      <param name="item">Код <see cref="T:System.Uri" />, ключ которого извлекается.</param>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)">
      <summary>Вставляет универсальный код ресурса (URI) в указанную позицию коллекции.</summary>
      <param name="index">Отсчитываемый от нуля индекс, указывающий позицию вставки элемента в коллекцию.</param>
      <param name="item">Код <see cref="T:System.Uri" />, который необходимо вставить в коллекцию.</param>
      <exception cref="T:System.InvalidOperationException">Универсальный код ресурса (URI) параметра<paramref name=" item" /> не является абсолютным универсальным кодом ресурса (URI).</exception>
      <exception cref="T:System.ArgumentException">Универсальный код ресурса (URI) параметра <paramref name="item" /> уже содержит имя схемы в коллекции.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)">
      <summary>Заменяет универсальный код ресурса (URI) в указанной позиции коллекции на новый универсальный код ресурса (URI).</summary>
      <param name="index">Отсчитываемый от нуля индекс, указывающий позицию вставки универсального кода ресурса (URI) в коллекцию.</param>
      <param name="item">Код <see cref="T:System.Uri" />, который необходимо поместить в коллекцию.</param>
      <exception cref="T:System.InvalidOperationException">Универсальный код ресурса (URI) параметра<paramref name=" item" /> не является абсолютным универсальным кодом ресурса (URI).</exception>
      <exception cref="T:System.ArgumentException">Универсальный код ресурса (URI) параметра <paramref name="item" /> уже содержит имя схемы в коллекции.</exception>
    </member>
    <member name="T:System.ServiceModel.WS2007FederationHttpBinding">
      <summary>Безопасная привязка с возможностью взаимодействия, которая наследуется от <see cref="T:System.ServiceModel.WS2007HttpBinding" /> и поддерживает федеративную безопасность.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> с указанным типом безопасности, используемым привязкой. </summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> с указанием типа безопасности, используемого привязкой, и значения, указывающего, разрешены ли надежные сеансы. </summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
      <param name="reliableSessionEnabled">Значение true, если надежный сеанс разрешен; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> привязкой, заданной именем ее конфигурации. </summary>
      <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configurationName" /> не найден.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity">
      <summary>Создает элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />, использующий параметры, предоставляемые этим экземпляром.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />, использующий параметры, предоставляемые этим экземпляром.</returns>
    </member>
    <member name="T:System.ServiceModel.WS2007HttpBinding">
      <summary>Представляет привязку с возможностью взаимодействия, которая наследуется из класса <see cref="T:System.ServiceModel.WSHttpBinding" /> и обеспечивает поддержку обновленных версий элементов привязки <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" /> и <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007HttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007HttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007HttpBinding" /> с указанием типа безопасности, используемого привязкой, и значения, указывающего, разрешены ли надежные сеансы.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
      <param name="reliableSessionEnabled">Значение true, если надежный сеанс разрешен; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WS2007HttpBinding" /> привязкой, заданной именем ее конфигурации. </summary>
      <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configName" /> не найден.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity">
      <summary>Возвращает элемент привязки безопасности для текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpBinding">
      <summary>Безопасная привязка с возможностью взаимодействия, предназначенная для использования с дуплексными контрактами служб и позволяющая и службам, и клиентам отправлять и получать сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" /> привязкой, заданной именем ее конфигурации.</summary>
      <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configurationName" /> не найден.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</summary>
      <returns>Значение true — для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
      <summary>Возвращает или задает базовый адрес клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, представляющий базовый адрес клиента.Значение по умолчанию — null.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, включающий объект <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> и, поскольку для привязки <see cref="T:System.ServiceModel.WSDualHttpBinding" /> требуются надежные сеансы, объект <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.Значение всегда должно быть SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла при сопоставлении не учитывается.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой для диспетчера буферов сообщений, которые принимают сообщения на конечных точках, настроенных с этой привязкой.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 524 288 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, которое можно получить по каналу, настроенному с этой привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
      <summary>Возвращает или задает значение, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или Text/XML).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или Text/XML).Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
      <summary>Возвращает объект, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ReliableSession" />, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>Схема транспорта: "http".</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Security">
      <summary>Возвращает объект, в котором указываются параметры безопасности, используемые с данной привязкой. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.WSDualHttpSecurity" />, в котором указываются параметры безопасности, используемые с данной привязкой.Значением <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> по умолчанию является <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>Значение true, если входящие запросы обрабатываются синхронно. Значение false, если входящие запросы обрабатываются асинхронно.Возвращаемое значение — всегда false, чтобы запросы обрабатывались асинхронно.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
      <summary>Возвращает или задает значение, указывающее, должна ли эта привязка поддерживать поточные WS-транзакции.</summary>
      <returns>Значение true, если поддерживается движение транзакций; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurity">
      <summary>Задает параметры безопасности для привязки <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Message">
      <summary>Возвращает свойства безопасности на уровне сообщений для привязки <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.MessageSecurityOverHttp" />.Допустимы следующие значения по умолчанию: свойству<see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> присвоено значение <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, свойству <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> присвоено значение<see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, а свойству <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> присвоено значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Mode">
      <summary>Возвращает или задает режим безопасности для родительской привязки <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMessage">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpSecurity.Message" /> и должно ли оно быть сериализовано.Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpSecurity.Message" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMode">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpSecurity.Mode" /> и должно ли оно быть сериализовано.Используется WCF для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpSecurity.Mode" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurityMode">
      <summary>Задает различные режимы безопасности для привязки <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.None">
      <summary>Механизм безопасности не используется.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.Message">
      <summary>Используется безопасность уровня сообщений SOAP и параметры в свойстве <see cref="P:System.ServiceModel.WsDualHttpSecurity.Message" /> вступают в силу.</summary>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpBinding">
      <summary>Безопасная привязка с возможностью взаимодействия, поддерживающая федеративную безопасность.</summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSFederationHttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> с указанием типа безопасности, используемого привязкой, и значения, указывающего, разрешены ли надежные сеансы.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
      <param name="reliableSessionEnabled">Значение true, если надежный сеанс разрешен; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> привязкой, заданной именем ее конфигурации.</summary>
      <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configurationName" /> не найден.</exception>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements">
      <summary>Создает коллекцию с элементами привязки для привязки.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, принадлежащий к типу <see cref="T:System.ServiceModel.Channels.BindingElement" /> и составляющий привязку.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity">
      <summary>Создает объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />, разрешающий надежные сеансы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />, разрешающий надежные сеансы.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.GetTransport">
      <summary>Возвращает элемент привязки транспорта для текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt">
      <summary>Возвращает или задает универсальный код ресурса (URI), по которому расположено уведомление о конфиденциальности.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому расположено уведомление о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion">
      <summary>Возвращает или задает номер версии уведомления о конфиденциальности для привязки.</summary>
      <returns>Номер версии уведомления о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.Security">
      <summary>Возвращает или задает тип безопасности, используемой с данной привязкой.  </summary>
      <returns>Объект <see cref="T:System.ServiceModel.WSFederationHttpSecurity" />, указывающий режим безопасности, используемый с данной привязкой.Значением <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> по умолчанию для данной привязки является <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSFederationHttpBinding.Security" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSFederationHttpBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurity">
      <summary>Задает параметры безопасности для привязки <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSFederationHttpSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Message">
      <summary>Указывает параметры безопасности сообщений для привязки <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Mode">
      <summary>Возвращает или задает применяемый тип безопасности.</summary>
      <returns>
        <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMessage">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Message" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Message" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMode">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Mode" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Mode" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurityMode">
      <summary>Задает различные режимы безопасности для привязки <see cref="T:System.ServiceModel.WsFederationHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.None">
      <summary>Во время передачи сообщение SOAP незащищено.Обращение к службе маркеров безопасности не выполняется.Этот режим эквивалентен использованию привязки wsHttpBinding с режимом безопасности SecurityMode.None.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.Message">
      <summary>Целостность, конфиденциальность, проверка подлинности сервера и проверка подлинности клиента обеспечиваются с помощью средств безопасности сообщений SOAP.По умолчанию текст сообщений шифруется и подписывается.Служба должна быть настроена с использованием сертификата.Проверка подлинности клиента основана на маркере, выданного клиенту службой маркеров безопасности.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.TransportWithMessageCredential">
      <summary>Целостность, конфиденциальность и проверка подлинности сервера обеспечиваются с помощью HTTPS.Служба должна быть настроена с использованием сертификата.Проверка подлинности клиента выполняется с помощью средств безопасности сообщений SOAP и основана на маркере, выданном клиенту службой маркеров безопасности.</summary>
    </member>
    <member name="T:System.ServiceModel.WSHttpBinding">
      <summary>Представляет привязку с возможностью взаимодействия, поддерживающую распределенные транзакции и безопасные надежные сеансы.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> с указанным типом безопасности, используемым привязкой. </summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> с указанием типа безопасности, используемого привязкой, и значения, указывающего, разрешены ли надежные сеансы. </summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
      <param name="reliableSessionEnabled">Значение true, если надежный сеанс разрешен; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> привязкой, заданной именем ее конфигурации.</summary>
      <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configName" /> не найден.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых привязкой <see cref="T:System.ServiceModel.WSHttpBinding" />.</returns>
      <exception cref="T:System.InvalidOperationException">Заданный режим безопасности транспорта не может обеспечить надежный сеанс, который включен.</exception>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
      <summary>Возвращает элемент привязки безопасности для текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.GetTransport">
      <summary>Возвращает элемент привязки транспорта для текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.Security">
      <summary>Возвращает параметры безопасности, используемые с данной привязкой.  </summary>
      <returns>Объект <see cref="T:System.ServiceModel.WSHttpSecurity" />, используемый с данной привязкой.Значение по умолчанию свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> — <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpBindingBase">
      <summary>Предоставляет базовый класс, члены которого являются общими для классов <see cref="T:System.ServiceModel.WSHttpBinding" /> и <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBindingBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBindingBase" /> со значением, указывающим, разрешен ли надежный сеанс.</summary>
      <param name="reliableSessionEnabled">Значение true, если надежный сеанс разрешен; в противном случае — значение false.</param>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</summary>
      <returns>Значение true — для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая объекты <see cref="T:System.ServiceModel.Channels.BindingElement" /> для привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
      <summary>Если реализован в производном классе, возвращает элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> из текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.Значение всегда — SOAP 1,2.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
      <summary>Если реализован в производном классе, возвращает элемент привязки транспорта из текущей привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> текущей привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой диспетчеру буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 524 288 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Размер сообщения превышает максимально допустимый.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding">
      <summary>Возвращает или задает значение, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или Text/XML).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, в котором указывается формат для кодирования сообщений SOAP (MTOM или Text/XML).Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReliableSession">
      <summary>Возвращает объект, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ReliableSession" />, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>Значение «http», если режиму безопасности элемента привязки транспорта присвоено значение <see cref="F:System.ServiceModel.SecurityMode.None" /> или <see cref="F:System.ServiceModel.SecurityMode.Message" />; в противном случае — значение «https».</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</summary>
      <returns>Значение true, если входящие запросы обрабатываются синхронно. Значение false, если входящие запросы обрабатываются асинхронно.Значение по умолчанию — false (асинхронная обработка запросов).</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow">
      <summary>Возвращает или задает значение, указывающее, должна ли эта привязка поддерживать поточные WS-транзакции.</summary>
      <returns>Значение true, если поддерживается движение транзакций; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpContextBinding">
      <summary>Обеспечивает контекстную привязку <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpContextBinding" /> с использованием заданного объекта <see cref="T:System.ServiceModel.SecurityMode" />. </summary>
      <param name="securityMode">Режим безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpContextBinding" /> с заданным <see cref="T:System.ServiceModel.SecurityMode" /> и параметром надежного сеанса. </summary>
      <param name="securityMode">Режим безопасности.</param>
      <param name="reliableSessionEnabled">Значение true, чтобы разрешить надежные сеансы; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpContextBinding" /> с заданной конфигурацией привязки.</summary>
      <param name="configName">Имя конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента.</summary>
      <returns>Адрес обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled">
      <summary>Возвращает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel">
      <summary>Возвращает или задает уровень защиты контекста для данной привязки.</summary>
      <returns>Уровень защиты для привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements">
      <summary>Создает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Упорядоченный стек элементов привязки, описываемых в <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpSecurity">
      <summary>Представляет параметры безопасности привязки <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Message">
      <summary>Возвращает параметры безопасности на уровне сообщений для этой привязки.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />. Значение по умолчанию включает в себя: <see cref="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" /> со значением по умолчанию true, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> — <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, а <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> — true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Mode">
      <summary>Задает режим <see cref="T:System.ServiceModel.SecurityMode" /> сообщения для этой привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.SecurityMode" /> для этой привязки.Значение по умолчанию — <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение набора <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> не определено.</exception>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Message" /> и должно ли оно быть сериализовано.Используется  для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Message" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMode">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> и должно ли оно быть сериализовано.Используется  для интеграции XAML.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Transport" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Transport" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Transport">
      <summary>Возвращает объект, содержащий параметры безопасности транспортного уровня для этой привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.HttpTransportSecurity" /> для этой привязки. Значение по умолчанию содержит <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> для <see cref="F:System.ServiceModel.HttpClientCredentialType.None" /> и <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> для <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSMessageEncoding">
      <summary>Задает, что используется для кодирования сообщений SOAP — подсистема оптимизации передачи сообщений MTOM или текст.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Text">
      <summary>Для кодирования сообщений SOAP используется текст.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Mtom">
      <summary>Для кодирования сообщений SOAP используется подсистема оптимизации передачи сообщений MTOM.</summary>
    </member>
    <member name="T:System.ServiceModel.X509CertificateEndpointIdentity">
      <summary>Представляет удостоверение сертификата для конечной точки службы.Клиенты, пытающиеся связаться с этой конечной точкой службы, должны проверить подлинность службы на основании сертификата в удостоверении конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Инициализирует новый экземпляр объекта <see cref="T:System.ServiceModel.X509CertificateEndpointIdentity" />, используя существующий сертификат.</summary>
      <param name="certificate">Копируемый сертификат.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Инициализирует новый экземпляр этого класса с помощью основного (второстепенного) сертификата и сертификатов, входящих в его цепь доверия.</summary>
      <param name="primaryCertificate">Основной сертификат, представляющий удостоверение службы.</param>
      <param name="supportingCertificates">Сертификаты, входящие в цепь доверия основного сертификата.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="supportingCertificates" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates">
      <summary>Возвращает коллекцию сертификатов для этого удостоверения.</summary>
      <returns>Коллекция <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />. </returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Требует, чтобы инфраструктура  использовала <see cref="T:System.Xml.Serialization.XmlSerializer" /> вместо <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Возвращает или задает стиль SOAP сериализатора <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.OperationFormatStyle" />.Значение по умолчанию — <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Возвращает или задает значение, указывающее, должен ли для чтения и записи сбоев использоваться сериализатор <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
      <returns>true, если для чтения и записи сбоев должен использоваться сериализатор <see cref="T:System.Xml.Serialization.XmlSerializer" />; false, если должен использоваться сериализатор <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Use">
      <summary>Возвращает или задает значение, указывающее используемый формат.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.OperationFormatUse" />.Значение по умолчанию — <see cref="F:System.ServiceModel.OperationFormatUse.Literal" />.</returns>
    </member>
    <member name="T:System.ServiceModel.XPathMessageQuery">
      <summary>Запрос сообщения, оценивающий выражения Xpath для получения данных из сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XPathMessageQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XPathMessageQuery" /> указанным выражением XPath.</summary>
      <param name="expression">Выражение XPath.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XPathMessageQuery" /> с указанным выражением XPath и <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="expression">Выражение XPath.</param>
      <param name="namespaces">Диспетчер пространства имен XML.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XPathMessageQuery" /> с указанным выражением XPath и <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
      <param name="expression">Выражение XPath.</param>
      <param name="context">Контекст XSLT.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.CreateMessageQueryCollection">
      <summary>Создает коллекцию запросов сообщений, позволяющую оптимизировать выполнение нескольких запросов к сообщению.</summary>
      <returns>Коллекция запросов сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>Проверка запроса XPath относительно заданного <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Данные, полученные из сообщения.</returns>
      <param name="message">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип получаемых данных.</typeparam>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Проверка запроса XPath относительно заданного <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</summary>
      <returns>Данные, полученные из буфера сообщений.</returns>
      <param name="buffer">Буфер сообщений для запроса.</param>
      <typeparam name="TResult">Тип получаемых данных.</typeparam>
    </member>
    <member name="P:System.ServiceModel.XPathMessageQuery.Expression">
      <summary>Возвращает или задает выражение Xpath для экземпляра <see cref="T:System.ServiceModel.XPathMessageQuery" />.</summary>
      <returns>Выражение XPath.</returns>
    </member>
    <member name="P:System.ServiceModel.XPathMessageQuery.Namespaces">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlNamespaceManager" />, связанный с данным экземпляром <see cref="T:System.ServiceModel.XPathMessageQuery" />.</summary>
      <returns>Диспетчер пространства имен XML.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
      <summary>Освобождает счетчики производительности диспетчера каналов и служб для размещенной службы.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute">
      <summary>Применяется к службе , чтобы указать, можно ли запустить эту службу в ASP.NET-совместимом коде.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode">
      <summary>Возвращает или задает уровень совместимости с ASP.NET, необходимый для службы.</summary>
      <returns>Режим <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" />, указывающий уровень совместимости с ASP.NET, необходимый для служб.Значением по умолчанию является <see cref="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed" />, поэтому пользователи могут явно разрабатывать службу , работающую в режиме совместимости.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданное значение является недопустимым для перечисления<see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет пользовательские данные, к которым имеют доступ элементы привязки с целью поддержки реализации контракта.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы. </param>
      <param name="serviceHostBase">
        <see cref="T:System.ServiceModel.ServiceHostBase" />, используемая для размещения службы.</param>
      <param name="endpoints">Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, содержащая конечные точки службы.</param>
      <param name="parameters">Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, содержащая параметры, к которым имеют доступ элементы привязки службы.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет, что тип размещения согласован с требованиями к совместимости с ASP.NET.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы. </param>
      <param name="serviceHostBase">
        <see cref="T:System.ServiceModel.ServiceHostBase" /> для размещения службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="description" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Это размещение службы не соответствует требованиям к совместимости с ASP.NET.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет поведение службы.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы. </param>
      <param name="serviceHostBase">
        <see cref="T:System.ServiceModel.ServiceHostBase" /> для размещения службы.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode">
      <summary>Указывает, работает ли служба  или может ли работать в режиме, совместимом с ASP.NET.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed">
      <summary>Службы  должны работать в домене приложения с режимом совместимости с ASP.NET, имеющим значение false. </summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed">
      <summary>Службы  могут работать в домене приложения с режимом совместимости с ASP.NET, имеющим значение true или false.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required">
      <summary>Службы  должны работать в домене приложения с режимом совместимости с ASP.NET, имеющим значение true.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceHostFactoryBase">
      <summary>Обеспечивает базовую реализацию фабрики, благодаря которой код приложения может принимать участие в создании узлов служб в управляемых средах размещения, где экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceHostFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
      <summary>При переопределении в унаследованном классе создает <see cref="T:System.ServiceModel.ServiceHostBase" /> с определенным базовым адресом с использованием пользовательских данных инициации. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> с указанными базовыми адресами, инициализированный пользовательскими данными инициации.</returns>
      <param name="constructorString">Данные инициации, передаваемые в экземпляр <see cref="T:System.ServiceModel.ServiceHostBase" />, созданный фабрикой. </param>
      <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса узла.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.VirtualPathExtension">
      <summary>Содержит виртуальный путь службы, когда служба размещена в службах IIS или службе активации Windows (WAS).</summary>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.ApplicationVirtualPath">
      <summary>Получает виртуальный путь приложения IIS или WAS, в котором размещена служба .</summary>
      <returns>Возвращает виртуальный путь приложения IIS или WAS, в котором размещена служба.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Этот метод предназначен для поддержки инфраструктуры .</summary>
      <param name="owner">
        <see cref="T:System.ServiceModel.ServiceHostBase" /> с использованием виртуального пути.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Этот метод предназначен для поддержки инфраструктуры .</summary>
      <param name="owner">
        <see cref="T:System.ServiceModel.ServiceHostBase" /> с использованием виртуального пути.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.SiteName">
      <summary>Получает имя узла приложения IIS или WAS, в котором размещена служба .</summary>
      <returns>Имя узла приложения IIS или WAS, в котором размещена служба.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.VirtualPath">
      <summary>Возвращает виртуальный путь, используемый службой.</summary>
      <returns>Виртуальный путь, используемый службой.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.DiagnosticSection">
      <summary>Представляет элемент конфигурации для указания функциональных возможностей диагностики прослушивателя WCF.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.DiagnosticSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.DiagnosticSection.PerformanceCountersEnabled">
      <summary>Возвращает или задает логическое значение, определяющее, включены ли счетчики производительности для целей диагностики.</summary>
      <returns>Значение true, если счетчики производительности включены; в противном случае — значение false. </returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetPipeSection">
      <summary>Содержит элементы конфигурации для совместно используемых служб NetPipeActivator.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetPipeSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.AllowAccounts">
      <summary>Возвращает учетные записи пользователей для процессов служб , которые имеют доступ к совместно используемым службам.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" />, содержащий учетные записи пользователей для процессов служб , которые имеют доступ к совместно используемым службам.Возвращаемыми по умолчанию значениями являются LocalSystem, Admin, NS, LS и IIS USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingAccepts">
      <summary>Возвращает или задает максимальное количество одновременных необработанных принимающих потоков в конечной точке для общей службы.</summary>
      <returns>Максимальное количество одновременных необработанных принимающих потоков в конечной точке для общей службы.Значение по умолчанию — 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingConnections">
      <summary>Возвращает или задает максимальное число ожидающих подключений для этой совместно используемой службы.</summary>
      <returns>Максимальное число ожидающих подключений для этой совместно используемой службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.ReceiveTimeout">
      <summary>Возвращает или задает время ожидания для совместно используемых служб NetPipeActivator. </summary>
      <returns>Значение по умолчанию — 00:00:60.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetTcpSection">
      <summary>Содержит элементы конфигурации для совместно используемых служб NetTcpPortSharing.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts">
      <summary>Возвращает учетные записи пользователей для процессов служб , которые имеют доступ к совместно используемым службам.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" />, содержащий учетные записи пользователей для процессов служб , которые имеют доступ к совместно используемым службам.Возвращаемыми по умолчанию значениями являются LocalSystem, Admin, NS, LS и IIS USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog">
      <summary>Возвращает или задает максимальное количество необработанных соединений, принятых от общего соединения, но еще не переданных службам .</summary>
      <returns>Максимальное количество необработанных соединений, принятых от общего соединения, но еще не переданных службам .Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts">
      <summary>Возвращает или задает максимальное количество одновременных необработанных принимающих потоков в конечной точке для общей службы.</summary>
      <returns>Максимальное количество одновременных необработанных принимающих потоков в конечной точке для общей службы.Значение по умолчанию — 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections">
      <summary>Возвращает или задает максимальное число ожидающих подключений для этой совместно используемой службы.</summary>
      <returns>Максимальное число ожидающих подключений для этой совместно используемой службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout">
      <summary>Возвращает или задает время ожидания для совместно используемых служб NetTcpPortSharing.</summary>
      <returns>Значение по умолчанию — 00:00:60.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled">
      <summary>Возвращает или задает логическое значение, которое указывает, использует ли служба общего доступа к портам службу Microsoft Teredo для прослушивания TCP портов от имени служб .</summary>
      <returns>Значение true, если служба общего доступа к портам использует службу Microsoft Teredo для прослушивания TCP-портов от имени служб ; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement">
      <summary>Представляет элемент конфигурации, содержащий учетные записи пользователей для процессов служб WCF, которые имеют доступ к совместно используемым службам.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor(System.Security.Principal.SecurityIdentifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> с указанным идентификатором безопасности.</summary>
      <param name="sid">Идентификатор безопасности.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.SecurityIdentifier">
      <summary>Возвращает или задает идентификатор безопасности, с которым связан этот элемент.</summary>
      <returns>Идентификатор безопасности, с которым связан этот элемент.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection">
      <summary>Содержит коллекцию экземпляров <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup">
      <summary>Содержит раздел конфигурации для средства SMSvcHost.exe.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.Diagnostics">
      <summary>Возвращает раздел конфигурации диагностики.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" />, содержащий раздел конфигурации диагностики.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Возвращает группу разделов конфигурации System.ServiceModel.Activation из указанного файла конфигурации. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" />, который представляет параметры в файле конфигурации System.ServiceModel.Activation.</returns>
      <param name="config">Объект <see cref="T:System.Configuration.Configuration" />, представляющий файл конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetPipe">
      <summary>Возвращает параметры конфигурации для совместно используемых служб NetPipeActivator.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" />, содержащий параметры конфигурации для совместно используемых служб NetPipeActivator.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetTcp">
      <summary>Возвращает параметры конфигурации для совместно используемых служб NetTcpPortSharing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" />, содержащий параметры конфигурации для совместно используемых служб NetTcpPortSharing.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Представляет заголовок, содержащий элемент адреса, который служит для идентификации конечной точки или взаимодействия с ней.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с указанным значением.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий информацию, заданную в параметре <paramref name="value" />.</returns>
      <param name="value">Информация для адресного заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с использованием заданного модуля форматирования для сериализации информации из указанного объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий информацию, заданную в параметре value.</returns>
      <param name="value">Информация для адресного заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, используемый для сериализации объекта, заданного в параметре <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="formatter" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданными значением, именем и пространством имен.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданным именем <paramref name="name" /> и пространством имен <paramref name="ns" />, содержащий информацию, заданную в параметре <paramref name="value" />.</returns>
      <param name="name">Имя адресного заголовка.</param>
      <param name="ns">Пространство имен адресного заголовка.</param>
      <param name="value">Информация для адресного заголовка.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null или <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданными именем и пространством имен и с использованием заданного модуля форматирования для сериализации информации из указанного объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданным именем <paramref name="name" /> и пространством имен <paramref name="ns" />, содержащий информацию, заданную в параметре <paramref name="value" />.</returns>
      <param name="name">Имя адресного заголовка.</param>
      <param name="ns">Пространство имен адресного заголовка.</param>
      <param name="value">Информация для адресного заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, используемый для сериализации объекта, заданного в параметре <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="serializer" /> равно null или <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Определяет, совпадает ли информация в заданном объекте с объектом, который содержится в текущем адресном заголовке.</summary>
      <returns>Значение true, если информация, заданная параметром <paramref name="obj" />, совпадает с информацией, которая содержится в текущем адресном заголовке; в противном случае — значение false.В частности, если параметр <paramref name="obj" /> имеет значение null, возвращается значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с объектом, который содержится в текущем адресном заголовке.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Возвращает средство чтения XML, которое может сериализовать объект текущего адресного заголовка.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />, который может сериализовать объект текущего адресного заголовка.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Предоставляет уникальный хэш-код для адресного заголовка. </summary>
      <returns>Уникальный хэш-код для текущего адресного заголовка.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Десериализует информацию из текущего адресного заголовка в объект заданного типа.</summary>
      <returns>Экземпляр класса типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего адресного заголовка.</returns>
      <typeparam name="T">Класс типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего адресного заголовка.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Десериализует информацию из текущего адресного заголовка в объект заданного типа, использующий заданный модуль форматирования для сериализации этой информации.</summary>
      <returns>Экземпляр класса типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего адресного заголовка.</returns>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, используемый для десериализации информации из объекта текущего адресного заголовка.</param>
      <typeparam name="T">Класс типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего адресного заголовка.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializer" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>При реализации возвращает имя адресного заголовка.</summary>
      <returns>Имя адресного заголовка.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>При реализации возвращает пространство имен адресного заголовка.</summary>
      <returns>Пространство имен адресного заголовка.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в производном классе вызывается в момент записи в поток или файл содержимого адресного заголовка.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи содержимого адресного заголовка в поток или файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в производном классе вызывается в момент начала записи в поток или файл содержимого адресного заголовка.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи адресного заголовка в поток или файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Создает оболочку для адресного заголовка в виде заголовка сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeader" />, выступающий как оболочка текущего адресного заголовка.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает адресный заголовок в поток или файл при помощи заданного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи адресного заголовка в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Записывает адресный заголовок в поток или файл при помощи заданного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который используется для записи адресного заголовка в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает содержимое адресного заголовка в поток или файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи содержимого адресного заголовка в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Начинает запись содержимого адресного заголовка в поток или файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи адресного заголовка в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Представляет потокобезопасную, доступную только для чтения коллекцию заголовков адресов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> из перечисляемого набора заголовков адреса.</summary>
      <param name="addressHeaders">Набор <see cref="T:System.Collections.Generic.IEnumerable`1" /> объектов <see cref="T:System.ServiceModel.Channels.AddressHeader" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentException">Значение одного из заголовков адреса в параметре <paramref name="addressHeaders" /> — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Добавляет заголовки в коллекции к заголовкам указанного сообщения.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, к которому добавляются заголовки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Находит все заголовки адреса в коллекции с указанными именем и пространством имен.</summary>
      <returns>Объект <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, в котором содержатся все заголовки из коллекции с указанными именем и пространством имен.</returns>
      <param name="name">Имя искомого заголовка адреса.</param>
      <param name="ns">Пространство имен искомого заголовка адреса.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="ns" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Находит первый заголовок адреса в коллекции с указанными именем и пространством имен.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> в коллекции с указанными именем и пространством имен.</returns>
      <param name="name">Имя искомого заголовка адреса.</param>
      <param name="ns">Пространство имен искомого заголовка адреса.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="ns" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Указанные значения <paramref name="name" /> и <paramref name="ns" /> присутствуют в нескольких заголовках.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Версия WS-Addressing, связанная с сообщением SOAP или поддерживаемая конечной точкой.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Возвращает версию адресацию, которая указывает, что не используется ни одна из существующих версий WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, не использующий ни одну из версий WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Строка, представляющая текущую версию адресации.</summary>
      <returns>Текущая версия адресации.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Получает идентификатор версии адресации, связанной с WS-Addressing 1.0.</summary>
      <returns>Одноэлементный экземпляр, определяющий объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, который связан с WS-Addressing 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressingAugust2004">
      <summary>Возвращает версию адресации WS-Addressing, связанную с WS-Addressing от августа 2004 года.</summary>
      <returns>Одноэлементный экземпляр, определяющий объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, который связан с WS-Addressing от августа 2004.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement">
      <summary>Представляет элемент пользовательской привязки, поддерживающий безопасность канала с помощью асимметричного шифрования.Этот элемент привязки подписывает сообщение с помощью маркера проверки подлинности отправителя и шифрует сообщение с помощью маркера получателя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor">
      <summary>Создает экземпляр этого класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> с заданными параметрами маркера получателя.</summary>
      <param name="recipientTokenParameters">Определяет маркер получателя (например, сертификат X.509 сервера).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> с заданными параметрами маркеров получателя и инициатора.</summary>
      <param name="recipientTokenParameters">Определяет маркер получателя (например, сертификат X.509 сервера).</param>
      <param name="initiatorTokenParameters">Определяет маркер инициатора (например, сертификат X.509 клиента).</param>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply">
      <summary>Возвращает или задает значение, указывающее, разрешена ли сериализация маркера подписи для ответного сообщения. </summary>
      <returns>Значение true, если сериализация маркера подписи для ответного сообщения разрешена; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone">
      <summary>Создает новый экземпляр этого класса, инициализированный из текущего.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" /> со значениями свойств, равными значениям свойств текущего экземпляра.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Тип возвращаемого объекта.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters">
      <summary>Задает определение маркера для инициатора.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />, который содержит определение маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder">
      <summary>Возвращает или задает порядок шифрования и подписи сообщений для данной привязки.</summary>
      <returns>Одно из значений объекта <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" />, указывающих, как защищается сообщение.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым элементом перечисления.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters">
      <summary>Задает определение маркера для получателя.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />, который содержит определение маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation">
      <summary>Возвращает или задает значение, показывающее, необходимо ли подтверждать сигнатуры сообщений. </summary>
      <returns>Значение true, если сигнатуры сообщений необходимо подтверждать; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Задает значение, показывающее, необходимы ли производные ключи. </summary>
      <param name="requireDerivedKeys">Значение true, если производные ключи необходимы; в противном случае — значение false. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует связанное с привязками утверждение пользовательской политики, добавляемое в информацию WSDL.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString">
      <summary>Возвращает строку, представляющую данный экземпляр <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</summary>
      <returns>Текущий экземпляр <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Элемент привязки, который задает двоичный формат .NET для XML, используемого для кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы заданного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов на стороне службы, принимающей заданный тип канала для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение прослушивателя заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />, инициализированный из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику для двоичных кодировщиков сообщений, которые используют версии SOAP и WS-Addressing и кодировку символов, заданную текущим элементом привязки кодирования.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, создаваемая этим элементом привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрашиваемый типизированный объект, если он имеется, из соответствующего уровня стека элементов привязки.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Уровень <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Возвращает или задает максимальное число средств чтения XML, выделенных пулу и готовых к обработке входящих сообщений.</summary>
      <returns>Максимальное число хранимых в пуле средств чтения.Значение по умолчанию — 64 средства чтения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Возвращает или задает максимальный объем доступной в сеансе памяти для оптимизации процедур передачи.</summary>
      <returns>Максимальный размер сеанса в байтах.Значение по умолчанию — 2048 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Возвращает или задает максимальное число модулей записи XML, выделенных пулу и готовых к обработке исходящих сообщений.</summary>
      <returns>Максимальное число хранимых в пуле модулей записи.Значение по умолчанию — 16 модулей записи.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает используемые или ожидаемые версии сообщения SOAP и WS-Addressing.</summary>
      <returns>Используемая или ожидаемая версия <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение является неподдерживаемой версией конверта.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Возвращает ограничения по сложности сообщений XML, которые могут обрабатываться конечными точками, настроенными с использованием этого элемента привязки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для участвующих в обмене сообщений SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ShouldSerializeMessageVersion">
      <summary>Возвращает значение, которое указывает, должна ли версия структуры сообщения SOAP быть сериализована.</summary>
      <returns>Значение true, если версию структуры сообщения SOAP нужно сериализовать, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, которое указывает, должны ли значения ограничений, заданные для структуры сообщения SOAP, быть сериализованы.</summary>
      <returns>Значение true, если квоты средства чтения следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Записывает пользовательские элементы двоичного кодирования сообщений в созданные метаданные для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, экспортирующий метаданные.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы двоичного кодирования сообщений в созданный WSDL для контракта.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы двоичного кодирования сообщений в созданный WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Содержит элементы привязки, которые задают протоколы, транспорты и кодировщики сообщений, используемые для взаимодействия между клиентами и службами.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Binding" /> с именем и пространством имен по умолчанию. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Binding" /> из заданной привязки службы.</summary>
      <param name="name">Имя привязки (свойство <see cref="P:System.ServiceModel.Channels.Binding.Name" />).</param>
      <param name="ns">Пространство имен привязки (свойство <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />).</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или является пустой строкой.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="ns" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Выполняет построение на клиенте стека фабрики каналов, создающего каналы заданного типа и удовлетворяющего заданным массивом объектов параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным коллекцией параметрам.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на клиенте стека фабрики каналов, создающего каналы заданного типа и удовлетворяющего заданным коллекцией привязки параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным коллекцией параметрам.</returns>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным коллекцией привязки параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="listenUriRelativeAddress">Адрес, относящийся к базовому адресу, по которому служба производит прослушивание.</param>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="listenUriRelativeAddress">Адрес, относящийся к базовому адресу, по которому служба производит прослушивание.</param>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="listenUriRelativeAddress">Адрес, относящийся к базовому адресу, по которому служба производит прослушивание.</param>
      <param name="listenUriMode">Значение <see cref="T:System.ServiceModel.Description.ListenUriMode" />, которое указывает, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных, или URI может быть использован без изменений.</param>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на стороне службы прослушивателя каналов, принимающего каналы заданного типа и удовлетворяющего заданным параметрам.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, удовлетворяющий заданным параметрам.</returns>
      <param name="listenUriBaseAddress">Объект <see cref="T:System.Uri" />, предоставляющий базовый адрес, по которому служба производит прослушивание.</param>
      <param name="listenUriRelativeAddress">Адрес, относящийся к базовому адресу, по которому служба производит прослушивание.</param>
      <param name="listenUriMode">Значение <see cref="T:System.ServiceModel.Description.ListenUriMode" />, которое указывает, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных, или URI может быть использован без изменений.</param>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, либо используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на клиенте стека фабрики каналов, удовлетворяющего заданным массивом объектов требованиям.</summary>
      <returns>Значение true, если заданный стек фабрики каналов может быть построен на клиенте; в противном случае — значение false.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется фабрика.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на клиенте стека фабрики каналов, удовлетворяющего заданной коллекции параметров привязки.</summary>
      <returns>Значение true, если заданный стек фабрики каналов может быть построен на клиенте; в противном случае — значение false.</returns>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется фабрика.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на стороне службы стека прослушивателя каналов, удовлетворяющего заданным в массиве объектов критериям.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется прослушиватель.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на стороне службы стека прослушивателя каналов, удовлетворяющего заданной коллекции параметров привязки.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется прослушиватель.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Возвращает или задает интервал времени для закрытия подключения до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или слишком велико.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>При переопределении в производном классе создает коллекцию, содержащую элементы привязки, которые являются частью текущей привязки. </summary>
      <returns>Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий элементы привязки из текущего объекта привязки в правильном порядке.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающий требования для прослушивателя каналов, построение которого выполняется.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Возвращает версию сообщения, используемую клиентами и службами, настроенными с использованием привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый клиентами и службами, настроенными с использованием привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Возвращает или задает имя привязки.</summary>
      <returns>Имя привязки.По умолчанию используется имя null.</returns>
      <exception cref="T:System.ArgumentException">Заданным значением не может быть null или пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Возвращает или задает пространство имен XML привязки.</summary>
      <returns>Пространство имен XML привязки.Значение по умолчанию — «http://tempuri.org/».</returns>
      <exception cref="T:System.ArgumentNullException">Заданным значением не может быть null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Возвращает или задает интервал времени для открытия подключения до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или слишком велико.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Возвращает или задает интервал времени бездействия подключения, в течение которого сообщения приложения не получаются, до его сброса.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для получения приложением сообщения до истечения времени ожидания.Значение по умолчанию — 10 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или слишком велико.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>При реализации в производном классе задает схему URI, которая указывает транспорт, используемый фабриками каналов и прослушивателей, построенными привязками.</summary>
      <returns>Схема URI, используемая каналами и прослушивателями, которые созданы фабриками, построенными текущей привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Возвращает или задает интервал времени для завершения операции записи до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции записи до истечения времени ожидания.Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или слишком велико.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.ShouldSerializeName">
      <summary>Возвращает значение, которое указывает, должно ли быть сериализовано имя привязки.</summary>
      <returns>Значение true, если имя привязки следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace">
      <summary>Возвращает значение, которое указывает, должно ли быть сериализовано пространство имен привязки.</summary>
      <returns>Значение true, если пространство имен привязки следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Предоставляет сведения об адресах, привязках, элементах и параметрах привязок, которые нужны для создания прослушивателей и фабрик каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingContext" /> для указанной привязки и коллекции параметров привязки.</summary>
      <param name="binding">Сеанс <see cref="T:System.ServiceModel.Channels.CustomBinding" /> для канала.</param>
      <param name="parameters">Сеанс <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> для канала.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection,System.Uri,System.String,System.ServiceModel.Description.ListenUriMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingContext" /> для указанной привязки и коллекции параметров привязки и адрес конечной точки, в которой служба ожидает передачи данных.</summary>
      <param name="binding">Сеанс <see cref="T:System.ServiceModel.Channels.CustomBinding" /> для канала.</param>
      <param name="parameters">Сеанс <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> для канала.</param>
      <param name="listenUriBaseAddress">Адрес <see cref="T:System.Uri" />, по которому конечная точка службы ожидает передачи данных.</param>
      <param name="listenUriRelativeAddress">Относительный адрес, по которому конечная точка службы ожидает передачи данных.</param>
      <param name="listenUriMode">
        <see cref="T:System.ServiceModel.Description.ListenUriMode" />, указывающий, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Объект <see cref="T:System.ServiceModel.Description.ListenUriMode" /> не определен.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Получает привязку для канала, встроенного в текущий контекст.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.CustomBinding" /> для канала, встроенного в текущий контекст..</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Получает коллекцию параметров привязки для канала, встроенного в текущий контекст.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> для канала, встроенного в текущий контекст..</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Создает внутреннюю фабрику каналов для каналов определенного типа под текущей фабрикой каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, представляющий внутреннюю фабрику каналов текущей фабрики каналов.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, создаваемого внутренней фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelListener``1">
      <summary>Создает внутренний прослушиватель каналов, который прослушивает определенный тип каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, представляющий внутренний прослушиватель каналов текущей фабрики каналов.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, который прослушивает внутренний прослушиватель каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Возвращает значение, указывающее, может ли внутренняя фабрика каналов создавать каналы указанного типа.</summary>
      <returns>Значение true, если внутренняя фабрика каналов может создавать <paramref name="TChannel" /> указанного типа, в противном случае — значение false.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, создаваемого внутренней фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelListener``1">
      <summary>Возвращает значение, указывающее, можно ли создать внутренний прослушиватель каналов для заданного типа каналов.</summary>
      <returns>Значение true, если для прослушивания <paramref name="TChannel" /> может быть создан внутренний прослушиватель каналов; в противном случае — значение false.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, который прослушивает внутренний прослушиватель каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Возвращает копию текущего контекста построения канала.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, являющийся копией текущего контекста построения канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriBaseAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI), предоставляющий базовый адрес, по которому конечная точка службы ожидает передачи данных.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому конечная точка службы ожидает передачи данных.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriMode">
      <summary>Возвращает или задает значение, указывающее, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ListenUriMode" />, указывающий, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriRelativeAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI), предоставляющий относительный адрес, по которому конечная точка службы ожидает передачи данных.</summary>
      <returns>Относительный адрес, по которому конечная точка службы ожидает передачи данных.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Возвращает элементы привязки, которые используются другими элементами привязки для создания стека каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащий элементы привязки, которые используются другими элементами привязки для создания стека каналов.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Элементы привязок, создающие фабрики каналов и прослушиватели каналов для различных типов каналов, используемых для обработки исходящих и входящих сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" /> из заданного элемента привязки.</summary>
      <param name="elementToBeCloned">Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, точную копию которого необходимо создать.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует фабрику каналов для создания каналов заданного типа из контекста привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки. </param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует прослушиватель каналов для приема каналов заданного типа из контекста привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</param>
      <typeparam name="TChannel">Тип канала, принимаемый прослушивателем.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, показывающее, может ли элемент привязки создавать фабрику каналов для заданного типа канала.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> можно создать с помощью элемента привязки; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки. </param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, показывающее, может ли элемент привязки создать прослушиватель для заданного типа канала.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" /> можно создать с помощью элемента привязки; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки. </param>
      <typeparam name="TChannel">Принимаемый прослушивателем тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>При переопределении в производном классе возвращает копию объекта элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, который является глубокой копией оригинала.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При переопределении в производном классе возвращает запрашиваемый типизированный объект, если таковой имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Уровень <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Представляет коллекцию элементов конфигурации, используемых в привязке.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> из перечислимого набора элементов привязки.</summary>
      <param name="elements">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> универсального типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> из массива элементов привязки.</summary>
      <param name="elements">Объект <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Добавляет элементы привязки из массива в коллекцию элементов привязки.</summary>
      <param name="elements">Объект <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, добавляемый к коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Создает копию текущей коллекции элементов привязки.</summary>
      <returns>Копия объекта <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Возвращает значение, указывающее, принадлежит ли заданный тип элемента привязки к коллекции элементов привязки.</summary>
      <returns>Значение true, если коллекция содержит заданный тип элемента привязки; в противном случае — значение false.</returns>
      <param name="bindingElementType">Тип элемента привязки, который проверяется на наличие в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Возвращает первый элемент заданного типа из коллекции элементов привязки.</summary>
      <returns>Элемент типа <see cref="T:System.Type" />, если найден; в противном случае — значение 0, если <paramref name="T" /> является типом значения, и значение null, если <paramref name="T" /> является ссылочным типом.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> элемента, который нужно искать.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Возвращает все элементы заданного типа из коллекции элементов привязки.</summary>
      <returns>Все элементы <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.Type" />, если найдены; в противном случае — значение 0, если <paramref name="T" /> является типом значения, и значение null, если <paramref name="T" /> является ссылочным типом.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> элемента, который нужно искать.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Вставляет элемент привязки в заданное расположение в коллекции элементов привязки.</summary>
      <param name="index">Расположение, в которое вставляется элемент привязки в коллекции.</param>
      <param name="item">Вставляемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Удаляет элемент привязки заданного типа из коллекции элементов привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> удаляемого элемента.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> элемента, который нужно искать.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Удаляет все элементы привязки заданного типа из коллекции элементов привязки.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> всех найденных элементов типа <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> элемента, который нужно искать.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Заменяет элемент привязки в заданном индексе в коллекции элементов привязки.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение для объекта <see cref="T:System.ServiceModel.Channels.BindingElement" /> по указанному индексу <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Представляет коллекцию параметров привязки, хранящих сведения, которые используются элементами привязки для создания фабрик.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Представляет модуль записи текста сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BodyWriter" />, который явно указывает, следует ли использовать буферизацию.</summary>
      <param name="isBuffered">Значение true, если модуль записи содержимого может вызываться несколько раз; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Создает буферизованную копию текста сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BodyWriter" />, в котором содержится копия данного объекта.</returns>
      <param name="maxBufferSize">Максимальный размер буфера для текста сообщения.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxBufferSize" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Текст уже был записан, и повторная запись невозможна, либо модуль записи текста не поддерживает буферизацию.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Возвращает значение, указывающее на возможность вызова метода записи несколько раз.</summary>
      <returns>Значение true, если модуль записи содержимого может вызываться несколько раз; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Предоставляет точку расширения при записи содержимого текста сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BodyWriter" /> с заданным максимальным размером буфера.</returns>
      <param name="maxBufferSize">Максимальный размер буфера для текста сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>При реализации предоставляет точку расширения при записи содержимого текста сообщения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает содержимое текста сообщения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Многие функции  требуют использования буферов, создание и удаление которых сопряжено с большими затратами.Для управления буферным пулом можно использовать класс <see cref="T:System.ServiceModel.Channels.BufferManager" />.Пул и буферы создаются при формировании этого класса и удаляются при очистке буферного пула во время сборки мусора.Если необходимо воспользоваться буфером, берется один буфер из пула, используется и возвращается в пул после выполнения всех необходимых действий.Это требует гораздо меньше времени, чем создание и удаление буфера всякий раз, когда необходимо им воспользоваться.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BufferManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Освобождает буферы, которые в настоящее время кэшированы в диспетчере.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Создает новый BufferManager с заданным максимальным размером буферного пула и максимальным размером каждого буфера в пуле.</summary>
      <returns>Возвращает объект <see cref="T:System.ServiceModel.Channels.BufferManager" /> с заданными параметрами.</returns>
      <param name="maxBufferPoolSize">Максимальный размер пула.</param>
      <param name="maxBufferSize">Максимальный размер отдельного буфера.</param>
      <exception cref="T:System.InsufficientMemoryException">Недостаточно памяти для создания запрошенного буферного пула.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxBufferPoolSize" /> или <paramref name="maxBufferSize" /> — меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Возвращает буфер в пул.</summary>
      <param name="buffer">Ссылка на возвращаемый буфер.</param>
      <exception cref="T:System.ArgumentNullException">Ссылка на параметр <paramref name="buffer" /> не может иметь значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина параметра <paramref name="buffer" /> не соответствует значению свойства длины буфера пула.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Возвращает из пула буфер, размер которого не меньше заданного. </summary>
      <returns>Массив байтов, представляющий запрашиваемый размер буфера.</returns>
      <param name="bufferSize">Размер запрашиваемого буфера в байтах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="bufferSize" /> не может иметь значение меньше нуля.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CallbackContextMessageProperty">
      <summary>Представляет содержимое заголовка сообщения wsc:CallbackContext при использовании канала, который поддерживает протокол обмена контекстом.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> с указанным контекстом.</summary>
      <param name="context">Сведения, содержащиеся в сообщении, опознаваемые клиентом и экземпляром службы, между которыми установлено соединение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> с указанным объектом <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="callbackAddress">Адрес обратного вызова.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> с указанными объектами <see cref="T:System.ServiceModel.EndpointAddress" /> и <see cref="T:System.Collections.Generic.IDictionary{System.String,System.String}" />, который содержит контекстные сведения.</summary>
      <param name="listenAddress">Адрес конечной точки, который прослушивает клиент.</param>
      <param name="context">Сведения, содержащиеся в сообщении, опознаваемые клиентом и экземпляром службы, между которыми установлено соединение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> с указанными сведениями об адресе прослушивания и контексте.</summary>
      <param name="listenAddress">Адрес конечной точки, который прослушивает клиент.</param>
      <param name="context">Сведения, содержащиеся в сообщении, опознаваемые клиентом и экземпляром службы, между которыми установлено соединение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> с указанными сведениями об адресе прослушивания и контексте.</summary>
      <param name="listenAddress">Адрес конечной точки, который прослушивает клиент.</param>
      <param name="context">Сведения, содержащиеся в сообщении, опознаваемые клиентом и экземпляром службы, между которыми установлено соединение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)">
      <summary>Добавляет или заменяет текущий экземпляр <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> на указанное сообщение.</summary>
      <param name="message">Сообщение для добавления или замены свойства сообщения контекста обратного вызова.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Добавляет или заменяет текущий экземпляр <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> на указанную коллекцию свойств сообщения.</summary>
      <param name="properties">Коллекция свойств сообщения, к которому добавляется свойство сообщения контекста обратного вызова.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress">
      <summary>Возвращает адрес обратного вызова.</summary>
      <returns>Код <see cref="T:System.ServiceModel.EndpointAddress" />, содержащий адрес обратного вызова.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Context">
      <summary>Возвращает контекст, ассоциированный с этим экземпляром <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      <returns>Контекст.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)">
      <summary>Объединяет listenAddress клиента и его контекст в единый адрес обратного вызова, который отправляется службе.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
      <param name="listenAddress">URI прослушивания</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy">
      <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      <returns>Копия экземпляра <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
      <summary>Возвращает адрес прослушивания и данные контекста от экземпляра <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      <param name="listenAddress">Ссылка для сохранения адреса прослушивания.</param>
      <param name="context">Сведения, содержащиеся в сообщении, опознаваемые клиентом и экземпляром службы, между которыми установлено соединение.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Name">
      <summary>Возвращает имя свойства для класса <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)">
      <summary>Пытается получить экземпляр <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> из указанного сообщения.</summary>
      <returns>Значение true, если свойство сообщения контекста обратного вызова успешно возвращено. В противном случае — значение false.</returns>
      <param name="message">Сообщение, из которого возвращается свойство сообщения контекста обратного вызова.</param>
      <param name="contextMessageProperty">Ссылка для сохранения экземпляра свойства сообщения контекста обратного вызова.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)">
      <summary>Пытается возвратить экземпляр <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> из свойств указанного сообщения.</summary>
      <returns>Значение true, если свойство сообщения контекста обратного вызова успешно возвращено. В противном случае — значение false.</returns>
      <param name="properties">Коллекция свойств сообщения, из которой возвращается свойство сообщения контекста обратного вызова.</param>
      <param name="contextMessageProperty">Ссылка для сохранения экземпляра свойства сообщения контекста обратного вызова.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Предоставляет базовую реализацию пользовательских каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelBase" />. </summary>
      <param name="channelManager">Объект <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, предоставляющий время ожидания по умолчанию для операций канала (отправка, получение, открытие и закрытие).</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="channelManager" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции закрытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции открытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции получения до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Получает диспетчер канала, связанный с текущим каналом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, связанный с текущим каналом.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Использует диагностическую трассировку во время перехода в состояние закрытия.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода открытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода получения, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода отправки, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени до времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Предоставляет общую базовую реализацию для всех пользовательских фабрик каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> с заданными по умолчанию значениями времени ожидания подключений.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции закрытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции открытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции получения до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект T, если он имеется, или значение null, если он отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Вставляет операции обработки объекта связи после перехода объекта в состояние закрытия в связи с вызовом синхронной операции прерывания.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия каждого канала, открытого фабрикой.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию при закрытии. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при закрытии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Вставляет операцию обработки объекта связи после перехода объекта в состояние открытия, которое должно быть выполнено в течение указанного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия каналов, открытых фабрикой.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Предоставляет общую базовую реализацию фабрик каналов клиента, позволяющую создавать каналы определенного типа, соединенные с определенным адресом.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> с заданными по умолчанию значениями времени ожидания связи.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал определенного типа с заданным адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с указанным адресом <paramref name="address" />.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал определенного типа с заданными транспортом и адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с заданными адресами удаленной конечной точки и транспорта.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <param name="via">
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Прерывает все каналы, управляемые фабрикой каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия всех каналов, связанных с фабрикой каналов в течение указанного временного интервала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Закрывает все каналы, связанные с фабрикой каналов в течение указанного временного интервала.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>При реализации в производном классе предоставляет точку расширения при создании каналов.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с указанными адресами.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <param name="via">
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия всех каналов, связанных с фабрикой каналов в течение указанного временного интервала.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Подтверждает, что фабрика каналов открыта и готова создавать каналы.</summary>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущая фабрика каналов находится не в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase">
      <summary>Предоставляет общую базовую реализацию для прослушивателей каналов службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> с заданными по умолчанию значениями времени ожидания подключений.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе начинает асинхронную операцию ожидания прихода канала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ожидания канала. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции ожидания канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ожидания канала.</param>
      <exception cref="T:System.InvalidOperationException">Прослушиватель каналов не был открыт и не может быть использован.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции закрытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени, выделенный для успешного завершения операции открытия по умолчанию.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции получения до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)">
      <summary>При реализации в производном классе завершает асинхронную операцию ожидания прихода каналов.</summary>
      <returns>Значение true, если сообщение пришло; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект T, если он имеется, или значение null, если он отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе предоставляет точку расширения в момент начала ожидания прихода канала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию, выполняемую в момент начала ожидания. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, в котором указывается время, выделенное для завершения операции, выполняемой в момент начала ожидания, до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, получающий уведомление об асинхронном завершении операции, выполняемой в момент начала ожидания.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией, выполняемой в момент начала ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)">
      <summary>При реализации в производном классе предоставляет точку расширения в момент завершения ожидания прихода канала.</summary>
      <returns>Значение true, если выполнение метода завершилось до истечения времени, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)">
      <summary>При переопределении в производном классе предоставляет точку расширения во время ожидания прихода канала.</summary>
      <returns>Значение true, если выполнение метода завершилось до истечения времени, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции, выполняемой во время ожидания канала, до истечения времени ожидания.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.Uri">
      <summary>При реализации в производном классе возвращает универсальный код ресурса (URI), который прослушиватель каналов прослушивает на предмет входящих каналов.</summary>
      <returns>
        <see cref="T:System.Uri" />, который прослушиватель каналов прослушивает на предмет входящих каналов.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)">
      <summary>При реализации в производном классе ожидает прихода канала.</summary>
      <returns>Значение true, если канал получен до истечения времени, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase`1">
      <summary>Предоставляет общую базовую реализацию прослушивателей каналов в службе, позволяющую принимать каналы, созданные фабриками клиентов.</summary>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателями каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> с заданными по умолчанию значениями времени ожидания подключений.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel">
      <summary>Принимает канал типа, заданного текущим прослушивателем каналов.</summary>
      <returns>Принимаемый прослушивателем канал <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)">
      <summary>Принимает канал типа, заданного текущим прослушивателем каналов, в течение заданного промежутка времени.</summary>
      <returns>Принимаемый прослушивателем канал <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время ожидания до завершения операции принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию принятия канала типа, заданного текущим прослушивателем каналов.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию принятия канала. </returns>
      <param name="callback">Значение <see cref="T:System.Timespan" />, которое задает время ожидания до завершения операции принятия канала.</param>
      <param name="state">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе начинает асинхронную операцию принятия канала типа, заданного текущим прослушивателем каналов, в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию принятия канала. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время ожидания до завершения операции принятия канала.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции принятия канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)">
      <summary>При реализации в производном классе завершает асинхронную операцию принятия канала.</summary>
      <returns>Принимаемый прослушивателем канал <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="Overload:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)">
      <summary>При реализации в производном классе предоставляет точку расширяемости для принятия канала.</summary>
      <returns>Принятый объект <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время ожидания до завершения операции принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе предоставляет асинхронную точку расширяемости, когда начинается принятие канала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию принятия канала. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время ожидания до завершения операции принятия канала.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции принятия канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)">
      <summary>При реализации в производном классе предоставляет асинхронную точку расширяемости, когда завершается принятие канала.</summary>
      <returns>Принимаемый прослушивателем канал <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Предоставляет базовую реализацию для управления временем ожидания по умолчанию, связанным с фабриками каналов и прослушивателей.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>При переопределении в производном классе возвращает промежуток времени по умолчанию, в течение которого канал должен завершить получение сообщения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает промежуток времени, в течение которого канал должен завершить получение сообщения до истечения времени ожидания после того, как был вызван метод получения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>При переопределении в производном классе возвращает промежуток времени по умолчанию, в течение которого канал должен завершить отправку сообщения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает промежуток времени, в течение которого канал должен завершить отправку сообщения до истечения времени ожидания после того, как был вызван метод отправки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода открытия, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода получения, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени до времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода отправки, вызванного объектом связи.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени до времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Представляет коллекцию объектов параметров канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
      <param name="channel">Канал, параметры которого представлены в данной коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Получает канал, параметры которого представлены в данной коллекции. </summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.IChannel" />, параметры которого представлены в данной коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Очищает коллекцию параметров.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Вставляет указанный элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс элемента коллекции.</param>
      <param name="item">Элемент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Добавляет параметры в текущей коллекции в объект <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> для указанного канала.</summary>
      <param name="innerChannel">Канал, который получает параметры из текущей коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Удаляет параметр из коллекции.</summary>
      <param name="index">Индекс удаляемого параметра.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Заменяет элемент в коллекции по указанному индексу.</summary>
      <param name="index">Индекс заменяемого элемента.</param>
      <param name="item">Значение заменяющего элемента.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelPoolSettings">
      <summary>Задает квоты для каналов, принадлежащих пулу каналов, который используется конечной точкой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelPoolSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого каналы в пуле могут оставаться в бездействии, прежде чем будут закрыты.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который указывает максимальный промежуток времени, в течение которого каналы в пуле могут оставаться в бездействии, прежде чем будут закрыты.Значение по умолчанию — 2 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля или больше, чем значение T:System.Int32.MaxValue в миллисекундах.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout">
      <summary>Возвращает или задает время существования канала, по истечении которого канал закрывается.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который задает время существования канала, по истечении которого канал закрывается.Значение по умолчанию — 10 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint">
      <summary>Возвращает или задает максимальное число каналов, подключающихся к удаленным конечным точкам, которое может быть инициировано службой.</summary>
      <returns>Положительное целое число, указывающее максимальное количество каналов в пуле, подключающихся к конечной точке, которое может быть инициировано службой.Значение по умолчанию — 10 каналов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Предоставляет общую базовую реализацию основного конечного автомата, общего для всех объектов связи в системе, включая каналы, прослушиватели и фабрики каналов и прослушивателей.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> с взаимно исключающей блокировкой для защиты заданных переходов между состояниями.</summary>
      <param name="mutex">Взаимно исключающая блокировка, которая защищает экземпляр класса в процессе перехода между состояниями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Вызывает мгновенный переход объекта связи из текущего состояния в состояние закрытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта связи.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта связи с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта связи.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта связи в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Вызывает переход объекта связи из текущего состояния в состояние Closed.</summary>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Вызывает переход объекта связи из его текущего состояния в состояние Closed в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Происходит при переходе объекта связи в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Происходит при переходе объекта связи в состояние закрытия.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>При переопределении в производном классе возвращает интервал времени по умолчанию, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>При переопределении в производном классе возвращает интервал времени по умолчанию, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Вызывает переход объекта связи из текущего состояния в состояние Faulted.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Происходит при переходе объекта связи в состояние Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Возвращает тип объекта связи.</summary>
      <returns>Тип объекта связи.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Возвращает значение, указывающее, удален ли объект связи.</summary>
      <returns>Значение true, если объект связи находится в состоянии Closed; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Вставляет операции обработки объекта связи после перехода объекта в состояние закрытия в связи с вызовом синхронной операции прерывания.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вставляет операции обработки объекта связи после перехода объекта в состояние закрытия в связи с вызовом асинхронной операции закрытия.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию при закрытии. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции при закрытии.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при закрытии.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вставляет операцию обработки объекта связи после перехода объекта в состояние открытия в связи с вызовом асинхронной операции открытия.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию при открытии. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при открытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции при открытии.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при открытии.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Вставляет операцию обработки объекта связи после перехода объекта в состояние закрытия в связи с вызовом синхронной операции закрытия.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">При закрытии объекта возникла ошибка связи.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Вызывается в процессе перехода объекта связи в состояние закрытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Вызывается в процессе перехода объекта связи в состояние закрытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию при закрытии объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию при открытии объекта связи.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Вставляет операцию обработки объекта связи после перехода объекта в состояние Faulted в связи с вызовом синхронной операции ошибки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Вставляет операцию обработки объекта связи после перехода объекта в состояние открытия, которое должно быть выполнено в течение указанного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при открытии до истечения времени ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Вызывается в процессе перехода объекта связи в состояние Opened.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Вызывается в процессе перехода объекта связи в состояние открытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Вызывает переход объекта связи из состояния Created в состояние Opened.</summary>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Вызывает переход объекта связи из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Происходит при переходе объекта связи в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Происходит при переходе объекта связи в состояние открытия.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Возвращает значение, которое указывает на текущее состояние объекта связи.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.CommunicationState" />, которое указывает на текущее состояние объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Возвращает взаимно исключающую блокировку, которая защищает экземпляр класса в процессе перехода между состояниями.</summary>
      <returns>Взаимно исключающая блокировка, которая защищает экземпляр класса в процессе перехода между состояниями.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Вызывает исключение, если объект связи удален.</summary>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Создает исключение, если для свойства объекта связи <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> не установлено значение <see cref="F:System.ServiceModel.CommunicationState.Created" />.</summary>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Создает исключение, если объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</summary>
      <exception cref="T:System.InvalidOperationException">Объект связи не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может использоваться.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
      <summary>Представляет элемент привязки, который используется, если клиенту необходимо предоставить службе конечную точку для отправки сообщений обратно клиенту. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает фабрику каналов, которая может создавать составной дуплексный канал.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />, создающий составной дуплексный канал типа <paramref name="TChannel" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий необходимый для построения фабрики каналов контекст.</param>
      <typeparam name="TChannel">Создаваемый фабрикой объект <see cref="T:System.ServiceModel.Channels.IChannel" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="TChannel" /> не принадлежит к типу <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> и не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает прослушиватель каналов, который может принимать составной дуплексный канал.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />, принимающий составной дуплексный канал типа <paramref name="TChannel" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий необходимый для построения прослушивателя каналов контекст.</param>
      <typeparam name="TChannel">Канал <see cref="T:System.ServiceModel.Channels.IChannel" />, принимаемый прослушивателем.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="TChannel" /> не принадлежит к типу <see cref="T:System.ServiceModel.Channels.IInputChannel" /> и не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли привязка выполнить построение фабрики каналов, создающей канал заданного типа, который удовлетворяет требованиям контекста.</summary>
      <returns>Значение true, если привязка может создать фабрику каналов; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий необходимый для построения прослушивателя каналов контекст.</param>
      <typeparam name="TChannel">Создаваемый фабрикой каналов объект <see cref="T:System.ServiceModel.Channels.IChannel" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли привязка выполнить построение прослушивателя каналов, принимающего канал заданного типа, который удовлетворяет требованиям контекста.</summary>
      <returns>Значение true, если для построения, необходимого для приема заданного типа канала, можно создать прослушиватель каналов; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий необходимый для построения прослушивателя каналов контекст.</param>
      <typeparam name="TChannel">Канал <see cref="T:System.ServiceModel.Channels.IChannel" />, принимаемый прослушивателем.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
      <summary>Возвращает или задает базовый адрес клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий базовый адрес клиента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
      <summary>Возвращает глубокую копию элемента текущей привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />, являющийся глубокой копией элемента текущей привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект из соответствующего уровня одного из стеков каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если он поддерживается, или значение null, если он не поддерживается.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий необходимый для построения канала контекст.</param>
      <typeparam name="T">Типизированный объект, поддержка которого тестируется в настоящее время.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждения пользовательской политики, связанные с привязками, представляющими присутствие составных дуплексных элементов в привязке.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter">
      <summary>Предоставляет расширение импорта политики для сопоставления утверждений политики с привязками , в которых клиент должен предоставить службе конечную точку, чтобы та смогла отправлять сообщения обратно клиенту. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует утверждения пользовательской политики для составных дуплексных привязок.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, импортирующий сведения о метаданных.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий импортируемые утверждения политики и коллекции элементов привязки, в которые могут быть добавлены реализующие эту политику элементы пользовательской привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="importer" /> или <paramref name="context" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement">
      <summary>Абстрактный класс, дополняющий базовый класс <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> дополнительными свойствами, характерными для транспортов, ориентированных на подключение, таких как протокол TCP и именованные каналы.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
      <summary>Возвращает или задает ограничение по времени для приема инициализации канала. </summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, обозначающий время ожидания запроса на инициализацию канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>Возвращает или задает размер буфера, используемого для передачи фрагмента сериализованного сообщения от клиента серверу по сети.</summary>
      <returns>Размер буфера подключения.Значение по умолчанию — 8192 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойства из стека привязок, если они имеются.</summary>
      <returns>Объект <paramref name="T" /> из стека привязок, если имеется.</returns>
      <param name="context">Контекст привязок.</param>
      <typeparam name="T">Тип свойства.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по универсальному коду ресурса (URI).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostNameComparisonMode" />, указывающее, включается ли имя узла при маршрутизации входящих запросов на URI конечной точки.Значение по умолчанию — <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, при котором имя узла и номер порта не учитываются при сравнении.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым <see cref="T:System.ServiceModel.HostnameComparisonMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер используемого буфера.Для потоковых сообщений это значение не должно быть меньше максимального возможного размера заголовков сообщения, считываемых в режиме буферизации.</summary>
      <returns>Максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений.Значение по умолчанию — 65 536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого фрагмент сообщения или все сообщение может оставаться в буфере перед отправкой.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее максимальный промежуток времени, в течение которого часть сообщения или все сообщение может оставаться в буфере перед отправкой.Значение по умолчанию — 2 секунды.Это свойство имеет смысл, только если свойству <see cref="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching" /> исходящего сообщения присвоено значение true.В противном случае это значение пропускается и сообщения отправляются немедленно.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
      <summary>Возвращает или задает максимальное число ожидающих асинхронных операций приема, доступных для обработки входящих подключений к службе.  </summary>
      <returns>Максимальное число одновременно принимаемых службой подключений.Значение по умолчанию — 1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
      <summary>Возвращает или задает максимальное число подключений, ожидающих распределения в службе.</summary>
      <returns>Максимальное число входящих подключений, ожидающих распределения в службе.Значение по умолчанию — 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exporter" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для контракта.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="endpointContext">Обеспечивает сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли помещать сообщения в буфер или передавать их потоком с использованием транспорта, ориентированного на подключение.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, какой режим передачи сообщений используется в канале (буферизированный или потоковый).Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым <see cref="T:System.ServiceModel.TransferMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ContextBindingElement">
      <summary>Обеспечивает уровень защиты и механизм обмена в качестве составной части контекста элемента привязки, а также функциональность для построения прослушивателей и фабрик каналов. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> с указанным уровнем защиты.</summary>
      <param name="protectionLevel">Уровень <see cref="T:System.Net.Security.ProtectionLevel" /> для элемента привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимое значение <paramref name="protectionLevel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> с указанными уровнем защиты и механизмом обмена.</summary>
      <param name="protectionLevel">Уровень <see cref="T:System.Net.Security.ProtectionLevel" /> для элемента привязки.</param>
      <param name="contextExchangeMechanism">Объект <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" />, определяющий механизм, используемый для обмена контекстом для элемента привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимое значение параметра <paramref name="protectionLevel" /> или <paramref name="contextExchangeMechanism" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> с указанным уровнем защиты, механизмом обмена контекстом и адресом обратного вызова клиента.</summary>
      <param name="protectionLevel">Уровень защиты для элемента привязки.</param>
      <param name="contextExchangeMechanism">Механизм, используемый для обмена контекстом для элемента привязки.</param>
      <param name="clientCallbackAddress">Адрес обратного вызова клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> с указанным уровнем защиты, механизмом обмена контекстом, адресом обратного вызова клиента и значением, которое указывает, включен ли контекст управления.</summary>
      <param name="protectionLevel">Уровень защиты для элемента привязки.</param>
      <param name="contextExchangeMechanism">Механизм, используемый для обмена контекстом для элемента привязки.</param>
      <param name="clientCallbackAddress">Адрес обратного вызова клиента.</param>
      <param name="contextManagementEnabled">Значение, указывающее, включено ли управление контекстом.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы заданного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="context" /> задано значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека прослушивателя каналов, принимающего заданный тип канала для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="context" /> задано значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущий элемент привязки выполнить построение фабрики заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек фабрики каналов может быть построен на клиенте; в противном случае — значение false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> для фабрики.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.По умолчанию разрешены только значения <see cref="T:System.ServiceModel.Channels.IRequestChannel" />, <see cref="T:System.ServiceModel.Channels.IRequestSessionChannel" /> и <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение прослушивателя заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.По умолчанию разрешены только значения <see cref="T:System.ServiceModel.Channels.IReplyChannel" />, <see cref="T:System.ServiceModel.Channels.IReplySessionChannel" /> и <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента для элемента привязки.</summary>
      <returns>Адрес обратного вызова клиента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />, инициализированный из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />, инициализированный из текущего объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism">
      <summary>Возвращает или задает механизм обмена, используемый для передачи контекста для элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" />, определяющий механизм, используемый для обмена контекстом для элемента привязки.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение недопустимо.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Записывает утверждения настраиваемой политики в контекст элемента привязки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, экспортирующий метаданные.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null, или утверждение политики в привязке имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает типизированный объект с указанным контекстом из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если он имеется.</returns>
      <param name="context">Заданный <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel">
      <summary>Возвращает или задает уровень защиты для элемента привязки из контекста.</summary>
      <returns>Уровень <see cref="T:System.Net.Security.ProtectionLevel" /> для элемента привязки.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение недопустимо.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ContextBindingElementImporter">
      <summary>Позволяет импортировать политику, а также расширения и контракты WSDL.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextBindingElementImporter" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElementImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Используется перед импортом.</summary>
      <param name="wsdlDocuments">Коллекция <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> экземпляров описания <see cref="T:System.Web.Services.Description.ServiceDescription" />.</param>
      <param name="xmlSchemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий кэш схем языка определения схемы XML (XSD).</param>
      <param name="policy">Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.Xml.XmlElement" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElementImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Импортирует контракты.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElementImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Импортирует конечные точки.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение либо <paramref name="importer" />, либо <paramref name="context" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextBindingElementImporter.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует метаданные.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение либо <paramref name="importer" />, либо <paramref name="context" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Channels.ContextExchangeMechanism">
      <summary>Задает механизм, используемый для обмена контекстом при взаимодействии между клиентом и службой: файл cookie HTTP или заголовок SOAP.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader">
      <summary>Для обмена контекстом используется заголовок SOAP.Это механизм обмена по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ContextExchangeMechanism.HttpCookie">
      <summary>Для обмена контекстом используется файл cookie HTTP.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ContextMessageProperty">
      <summary>Свойство, служащее для передачи контекста между уровнями приложения и канала как на стороне клиента, так и на стороне службы. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" /> с указанным контекстом.</summary>
      <param name="context">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий контекстную информацию, служащую для корреляции сообщений с конкретным диалогом между клиентом и службой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)">
      <summary>Задает значение свойства ContextMessageProperty в указанном сообщении <see cref="T:System.ServiceModel.Channels.Message" /> из текущего экземпляра свойства <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />.</summary>
      <param name="message">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, свойство контекста сообщения которого требуется задать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Задает значение свойства ContextMessageProperty в указанной коллекции свойств <see cref="T:System.ServiceModel.Channels.MessageProperties" /> из текущего экземпляра свойства <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />.</summary>
      <param name="properties">Коллекция свойств <see cref="T:System.ServiceModel.Channels.MessageProperties" />, свойство контекста сообщения которого требуется задать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="properties" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextMessageProperty.Context">
      <summary>Возвращает контекст, используемый для корреляции сообщений в диалоге клиента и службы.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий контекстную информацию, служащую для корреляции сообщений в диалоге между клиентом и службой.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.CreateCopy">
      <summary>Создает копию текущего экземпляра свойства <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />.</summary>
      <returns>Свойство <see cref="T:System.ServiceModel.Channels.IMessageProperty" />, содержащее запечатанную копию текущего экземпляра свойства <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Channels.ContextMessageProperty.Name">
      <summary>Возвращает имя свойства контекстного сообщения.</summary>
      <returns>Строка "ContextMessageProperty".</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.TryCreateFromHttpCookieHeader(System.String,System.ServiceModel.Channels.ContextMessageProperty@)">
      <summary>Пытается создать экземпляр <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" /> на основе пар «ключ/значение» из указанного файла cookie HTTP.</summary>
      <returns>true, если значение свойства ContextMessageProperty получено из <paramref name="httpCookieHeader" />; в противном случае — false. </returns>
      <param name="httpCookieHeader">Имя заголовка файла cookie HTTP, из которого должны быть инициализированы значения свойства <paramref name="context" />.</param>
      <param name="context">Если этот метод возвращает значение true, то свойство <paramref name="context" /> содержит класс <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />, содержащий свойство ContextMessageProperty, связанное с <paramref name="httpCookieHeader" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="httpCookieHeader" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ContextMessageProperty@)">
      <summary>Пытается получить свойство ContextMessageProperty из указанного сообщения или коллекции свойств сообщения.</summary>
      <returns>true, если значение свойства ContextMessageProperty получено из <paramref name="message" />; в противном случае — false. </returns>
      <param name="message">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, из которого требуется извлечь контекстные свойства сообщения.</param>
      <param name="contextMessageProperty">Если этот метод возвращает значение true, то свойство <paramref name="contextMessageProperty" /> содержит класс <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />, содержащий свойство ContextMessageProperty, связанное с <paramref name="message" />.Этот параметр передается неинициализированным.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Channels.ContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ContextMessageProperty@)">
      <summary>Пытается получить свойство ContextMessageProperty из указанной коллекции свойств сообщения.</summary>
      <returns>true, если значение свойства ContextMessageProperty получено из <paramref name="properties" />; в противном случае — false. </returns>
      <param name="properties">Сообщение <see cref="T:System.ServiceModel.Channels.MessageProperties" />, из которого требуется извлечь контекстные свойства сообщения.</param>
      <param name="contextMessageProperty">Если этот метод возвращает значение true, то свойство <paramref name="contextMessageProperty" /> содержит класс <see cref="T:System.ServiceModel.Channels.ContextMessageProperty" />, содержащий свойство ContextMessageProperty, связанное с <paramref name="properties" />.Этот параметр передается неинициализированным.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty">
      <summary>Предоставляет абстрактный базовый класс для отсрочки вычисления ключа корреляции до получения всех данных корреляции.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.#ctor(System.Collections.Generic.ICollection{System.String})">
      <summary>Вызывается производными классами для инициализации нового экземпляра производного класса с помощью указанной коллекции данных корреляции, которые требуются для вычисления корреляции.</summary>
      <param name="neededData">Данные корреляции, необходимые для вычисления корреляции.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.#ctor(System.ServiceModel.Channels.CorrelationCallbackMessageProperty)">
      <summary>Вызывается производными классами для инициализации нового экземпляра производного класса с помощью необходимых данных корреляции, полученных от другого экземпляра производного класса <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" />.</summary>
      <param name="callback">Экземпляр производного класса <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> для копирования.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.AddData(System.String,System.Func{System.String})">
      <summary>Добавляет необходимые данных корреляции в свойство.</summary>
      <param name="name">Имя значения данных корреляций.</param>
      <param name="value">Предоставляет значение данных корреляций.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.BeginFinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается протоколом корреляций, когда все данные корреляции в наличии, для построения корреляции в асинхронном режиме.</summary>
      <returns>Ссылка на текущую асинхронную операцию.</returns>
      <param name="message">Коррелируемое сообщение.</param>
      <param name="timeout">Интервал, в течение которого вычисление корреляции должно быть завершено; в противном случае вызывается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении вычисления корреляции.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.CreateCopy">
      <summary>При переопределении в производном классе этот метод инициализирует и возвращает копию производного экземпляра свойства сообщения.</summary>
      <returns>Копия производного экземпляра свойства сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.EndFinalizeCorrelation(System.IAsyncResult)">
      <summary>Возвращает сообщение, которое было асинхронно подготовлено для корреляции.</summary>
      <returns>Сообщение, которое было подготовлено для корреляции.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию <see cref="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.BeginFinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.FinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Вызывается протоколом корреляций, когда все данные корреляции в наличии, для построения корреляции.</summary>
      <returns>Коррелированное сообщение.</returns>
      <param name="message">Коррелируемое сообщение.</param>
      <param name="timeout">Интервал, в течение которого вычисление корреляции должно быть завершено; в противном случае вызывается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.IsFullyDefined">
      <summary>Определяет, имеет ли <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> все необходимые данные корреляции.</summary>
      <returns>Значение true при наличии всех необходимых данных корреляции; в противном случае ― значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.Name">
      <summary>Возвращает имя этого свойства сообщения: CorrelationCallbackMessageProperty.</summary>
      <returns>Строковое значение свойства «CorrelationCallbackMessageProperty».</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.NeededData">
      <summary>Возвращает список данных корреляции, которые необходимы для применения корреляции.</summary>
      <returns>Список необходимых данных корреляции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.OnBeginFinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Выполняет вычисление корреляции для указанного сообщения в асинхронном режиме (при переопределении в производном классе).</summary>
      <returns>Ссылка на текущую асинхронную операцию.</returns>
      <param name="message">Коррелируемое сообщение.</param>
      <param name="timeout">Интервал, в течение которого вычисление корреляции должно быть завершено; в противном случае вызывается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении вычисления корреляции.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.OnEndFinalizeCorrelation(System.IAsyncResult)">
      <summary>Возвращает сообщение, которое было подготовлено в асинхронном режиме для корреляции (при переопределении в производном классе).</summary>
      <returns>Коррелированное сообщение.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию <see cref="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.BeginFinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.OnFinalizeCorrelation(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Выполняет вычисление корреляции для указанного сообщения (при переопределении в производном классе).</summary>
      <returns>Коррелированное сообщение.</returns>
      <param name="message">Коррелируемое сообщение.</param>
      <param name="timeout">Интервал, в течение которого вычисление корреляции должно быть завершено; в противном случае вызывается исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CorrelationCallbackMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> из свойств <see cref="P:System.ServiceModel.Channels.Message.Properties" /> указанного сообщения.</summary>
      <returns>Значение true, если <see cref="P:System.ServiceModel.Channels.Message.Properties" /> сообщения содержит <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" />; в противном случае ― значение false.</returns>
      <param name="message">Сообщение, содержащее объект <see cref="P:System.ServiceModel.Channels.Message.Properties" />, который следует проверить.</param>
      <param name="property">При возврате этого метода содержит <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> в указанном сообщении <see cref="P:System.ServiceModel.Channels.Message.Properties" />; в противном случае ― null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationCallbackMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CorrelationCallbackMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> из указанных свойств сообщения.</summary>
      <returns>Значение true, если свойства сообщения содержат свойство <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" />. В противном случае возвращает значение false.</returns>
      <param name="properties">Свойства сообщения, которые следует проверить.</param>
      <param name="property">При возврате этого метода содержит <see cref="T:System.ServiceModel.Channels.CorrelationCallbackMessageProperty" /> в свойствах указанного сообщения; в противном случае ― null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CorrelationDataDescription">
      <summary>Позволяет определенному каналу включаться по требованию для предоставления данных корреляции и указания условий, на которых данные будут предоставлены. Например, предоставляются ли они по умолчанию, по необходимости, при отправке, до отправки или при получении.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataDescription.#ctor">
      <summary>Вызывается производными классами, чтобы инициализировать объект.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.IsDefault">
      <summary>При переопределении в производном классе указывает, должны ли данные корреляции включаться в запросы корреляции, формируемые по умолчанию.</summary>
      <returns>Значение true, если данные корреляции должны включаться в запросы корреляции, формируемые по умолчанию, в противном случае ― значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.IsOptional">
      <summary>При переопределении в производном классе указывает, могут ли данные корреляции быть частью запроса при необходимости.</summary>
      <returns>Значение true, если данные корреляции не являются обязательными; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.KnownBeforeSend">
      <summary>При переопределении в производном классе указывает, должны ли данные быть непременно известными перед тем, как их можно будет передать.</summary>
      <returns>Значение true, если данные должны быть известными до передачи, и значение false — в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.Name">
      <summary>При переопределении в производном классе возвращает имя протокола корреляции, предоставляющего данные корреляции.</summary>
      <returns>Имя протокола корреляции, предоставляющего данные корреляции.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.ReceiveValue">
      <summary>При переопределении в производном классе указывает, доступен ли текущий объект <see cref="T:System.ServiceModel.Channels.CorrelationDataDescription" /> во время получения сообщения.</summary>
      <returns>Значение true, если текущий объект <see cref="T:System.ServiceModel.Channels.CorrelationDataDescription" /> доступен при получении сообщения, в противном случае ― значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataDescription.SendValue">
      <summary>При переопределении в производном классе указывает, доступен ли текущий объект <see cref="T:System.ServiceModel.Channels.CorrelationDataDescription" /> во время отправки сообщения.</summary>
      <returns>Значение true, если текущий объект <see cref="T:System.ServiceModel.Channels.CorrelationDataDescription" /> доступен при отправке сообщения, в противном случае ― значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CorrelationDataMessageProperty">
      <summary>Предоставляет свойство сообщения, которое собирает дополнительные данные корреляции для сообщения по мере применения протоколов, например, при возвращении данных из набора <see cref="T:System.ServiceModel.MessageQuerySet" /> входящего сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add(System.String,System.Func{System.String})">
      <summary>Добавляет поставщик данных корреляции в закрытый словарь поставщиков свойства.</summary>
      <param name="name">Имя поставщика данных корреляций.</param>
      <param name="dataProvider">Поставщик данных корреляций.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.AddData(System.ServiceModel.Channels.Message,System.String,System.Func{System.String})">
      <summary>Добавляет данные корреляции в указанное сообщение.</summary>
      <param name="message">Изменяемое сообщение.</param>
      <param name="name">Имя поставщика данных корреляций.</param>
      <param name="dataProvider">Поставщик данных корреляций.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.CreateCopy">
      <summary>Инициализирует и возвращает новый экземпляр <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />, который является копией текущего экземпляра <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />.</summary>
      <returns>Новый экземпляр.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationDataMessageProperty.Name">
      <summary>Возвращает имя этого свойства сообщения: CorrelationDataMessageProperty.</summary>
      <returns>Строковое значение свойства CorrelationCallbackMessageProperty.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.Remove(System.String)">
      <summary>Удаляет поставщик данных корреляции из закрытого словаря поставщиков данных.</summary>
      <returns>Значение true, если операция удаления завершилась успешно; в противном случае — значение false.</returns>
      <param name="name">Имя удаляемого поставщика данных.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CorrelationDataMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" /> из свойств <see cref="P:System.ServiceModel.Channels.Message.Properties" /> указанного сообщения.</summary>
      <returns>Значение true, если свойство сообщения <see cref="P:System.ServiceModel.Channels.Message.Properties" /> содержит класс <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />; в противном случае ― значение false.</returns>
      <param name="message">Сообщение, содержащее объект <see cref="P:System.ServiceModel.Channels.Message.Properties" />, который следует проверить.</param>
      <param name="property">При возврате этого метода содержит свойство <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" /> в указанном сообщении <see cref="P:System.ServiceModel.Channels.Message.Properties" />; в противном случае ― значение null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CorrelationDataMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" /> из указанных свойств сообщения.</summary>
      <returns>Значение true, если свойства сообщения содержат свойство <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />. В противном случае возвращает значение false.</returns>
      <param name="properties">Свойства сообщения, которые следует проверить.</param>
      <param name="property">При возврате этого метода содержит <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" /> в свойствах указанного сообщения; в противном случае ― значение null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationDataMessageProperty.TryGetValue(System.String,System.String@)">
      <summary>Пытается извлечь указанный поставщик данных корреляции из закрытого словаря поставщиков данных.</summary>
      <returns>Значение true, если свойство <see cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" /> содержит указанный поставщик данных корреляции; в противном случае ― значение false.</returns>
      <param name="name">Имя поставщика данных.</param>
      <param name="value">При возврате этого метода содержит значение поставщика данных, если он присутствует; в противном случае — значение null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CorrelationKey">
      <summary>Представляет ассоциацию между данными приложения и экземпляром.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationKey.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.Linq.XName,System.Xml.Linq.XNamespace)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CorrelationKey" />, используя указанные данные ключа, область, имя и поставщика.</summary>
      <param name="keyData">Данные ключа.</param>
      <param name="scopeName">Имя области.</param>
      <param name="provider">Поставщик.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationKey.KeyData">
      <summary>Возвращает словарь данных ключа.</summary>
      <returns>Словарь данных ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationKey.KeyString">
      <summary>Возвращает представление <see cref="T:System.String" /> данных ключа.</summary>
      <returns>Данные ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationKey.Name">
      <summary>Возвращает или задает имя <see cref="T:System.ServiceModel.Channels.CorrelationKey" />.</summary>
      <returns>Имя объекта <see cref="T:System.ServiceModel.Channels.CorrelationKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationKey.Provider">
      <summary>Возвращает поставщика.</summary>
      <returns>Поставщик.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationKey.ScopeName">
      <summary>Возвращает имя области.</summary>
      <returns>Имя области.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CorrelationMessageProperty">
      <summary>Предоставляет свойство сообщения, содержащее ключи экземпляра корреляции после применения вычисления корреляции к сообщению.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationMessageProperty.#ctor(System.Runtime.DurableInstancing.InstanceKey,System.Collections.Generic.IEnumerable{System.Runtime.DurableInstancing.InstanceKey})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Persistence.CorrelationMessageProperty" />, используя указанные ключи корреляции.</summary>
      <param name="correlationKey">Ключ экземпляра для первичной корреляции.</param>
      <param name="additionalKeys">Ключи экземпляра для дополнительных корреляций.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationMessageProperty.AdditionalKeys">
      <summary>Возвращает коллекцию, содержащую дополнительные ключи экземпляра для этого свойства <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" />.</summary>
      <returns>Дополнительные ключи экземпляра.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationMessageProperty.CorrelationKey">
      <summary>Возвращает первичный ключ экземпляра корреляции для этого свойства <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" />.</summary>
      <returns>Первичный ключ экземпляра корреляции.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CorrelationMessageProperty.Name">
      <summary>Возвращает имя этого свойства сообщения: CorrelationMessageProperty.</summary>
      <returns>Строковое значение свойства CorrelationMessageProperty.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CorrelationMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" /> из свойств <see cref="P:System.ServiceModel.Channels.Message.Properties" /> указанного сообщения.</summary>
      <returns>Значение true если <see cref="P:System.ServiceModel.Channels.Message.Properties" /> сообщения содержит <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" />; в противном случае — значение false.</returns>
      <param name="message">Сообщение, содержащее объект <see cref="P:System.ServiceModel.Channels.Message.Properties" />, который следует проверить.</param>
      <param name="property">При возврате этого метода содержит <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" /> в указанном сообщении <see cref="P:System.ServiceModel.Channels.Message.Properties" />, если сообщение имеется; в противном случае — значение null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CorrelationMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CorrelationMessageProperty@)">
      <summary>Пытается получить свойство <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" /> из указанных свойств сообщения.</summary>
      <returns>Значение true, если свойства сообщения содержат свойство <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" />. В противном случае возвращает значение false.</returns>
      <param name="properties">Свойства сообщения, которые следует проверить.</param>
      <param name="property">При возврате этого метода содержит <see cref="T:System.ServiceModel.Channels.CorrelationMessageProperty" /> в свойствах указанного сообщения, если сообщение имеется; в противном случае — null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Определяет привязку из списка элементов привязки. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с помощью элементов привязки из заполненного стека каналов.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, который содержит элементы привязки стека каналов в обратном порядке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> на основе значений заданной привязки.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для инициализации пользовательской привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> из массива элементов привязки.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Объект <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации пользовательской привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
      <param name="configurationName">Значение атрибута configurationName, идентифицирующее элемент binding, параметры которого используются для инициализации привязки.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки, идентифицируемый атрибутом <paramref name="configurationName" />, имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с заданными именем и пространством имен на основе массива элементов привязки.</summary>
      <param name="name">Имя привязки.</param>
      <param name="ns">Пространство имен привязки.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">Объект <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации пользовательской привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Возвращает универсальную коллекцию элементов привязки из пользовательской привязки.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий элементы привязки из пользовательской привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Возвращает элементы привязки из пользовательской привязки.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая элементы привязки из пользовательской привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта, используемого пользовательской привязкой.</summary>
      <returns>Схема URI для транспорта, используемого пользовательской привязкой; или пустая строка, если транспорт отсутствует (элемент привязки <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> имеет значение null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.DeliveryFailure">
      <summary>Задает возможные типы сбоя доставки для сообщения, прочитанного из очереди.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.Unknown">
      <summary>Произошла неизвестная ошибка.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.AccessDenied">
      <summary>Отправитель не обладает правами доступа для размещения сообщений в очереди назначения.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadDestinationQueue">
      <summary>Очередь назначения не найдена.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadEncryption">
      <summary>Диспетчер очереди назначения не может расшифровать сообщение.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadSignature">
      <summary>Диспетчер очереди назначения не может проверить подлинность сообщения, так как прикрепленная сигнатура недействительна.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.CouldNotEncrypt">
      <summary>Диспетчер исходной очереди не может зашифровать сообщение.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.HopCountExceeded">
      <summary>Число прыжков сообщения превышено, что означает число промежуточных серверов.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.NotTransactionalQueue">
      <summary>Транзакционное сообщение отправлено в нетранзакционную очередь.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.NotTransactionalMessage">
      <summary>Нетранзакционное сообщение отправлено в транзакционную очередь.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.Purged">
      <summary>Сообщение было очищено до достижения очереди назначения.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueueDeleted">
      <summary>Очередь назначения была удалена, прежде чем сообщение могло быть доставлено в приложение.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueueExceedMaximumSize">
      <summary>Сообщение не было доставлено, так как очередь назначения переполнена.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueuePurged">
      <summary>Очередь была очищена и сообщение больше не существует.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.ReachQueueTimeout">
      <summary>Сообщение не достигло очереди назначения до истечения времени ожидания.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.ReceiveTimeout">
      <summary>Сообщение не было доставлено в приложение вовремя. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.DeliveryStatus">
      <summary>Перечисление, указывающее состояние доставки сообщения, если доставка под сомнением или сообщение не доставлено.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryStatus.InDoubt">
      <summary>Неизвестно, доставлено ли сообщение.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryStatus.NotDelivered">
      <summary>Сообщение не доставлено.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Преобразует исключения, создаваемые каналом, в сообщения об ошибках SOAP, соответствующие протоколу канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.FaultConverter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Возвращает преобразователь ошибок по умолчанию.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Версия сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Пытается создать исключение.</summary>
      <returns>Значение true, если преобразование ошибки выполнено успешно; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="message">Сообщение об ошибке.</param>
      <param name="fault">Ошибка.</param>
      <param name="exception">Если преобразование выполнено успешно, исключение SOAP, возвращаемое как параметр out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Пытается создать сообщение об ошибке после преобразования ошибки в исключение SOAP.</summary>
      <returns>Значение true, если сообщение об ошибке создано успешно; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="exception">Исключение SOAP.</param>
      <param name="message">Сообщение об ошибке, возвращенное как параметр out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Создает оболочку для <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> с проверкой ошибок.</summary>
      <returns>Значение true, если преобразование ошибки выполнено успешно; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="message">Сообщение об ошибке.</param>
      <param name="fault">Ошибка.</param>
      <param name="exception">Если преобразование выполнено успешно, исключение SOAP, возвращаемое как параметр out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> или <paramref name="fault" /> равны null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> возвращает значение true, но значение <paramref name="exception" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> возвращает значение false, но значение <paramref name="exception" /> отличается от null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Создает оболочку для <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> с проверкой ошибок.</summary>
      <returns>Значение true, если сообщение об ошибке создано успешно; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="exception">Исключение SOAP.</param>
      <param name="message">Сообщение об ошибке, возвращенное как параметр out.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> возвращает значение true, но значение <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> возвращает значение false, но значение <paramref name="message" /> отличается от null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Предоставляет доступ к HTTP-запросу на получение доступа к дополнительным сведениям, которые становятся доступными для запросов, отправляемых через протокол HTTP, и предоставление ответа на эти сведения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Возвращает заголовки HTTP из HTTP-запроса.</summary>
      <returns>Возвращает объект <see cref="T:System.Net.WebHeaderCollection" />, содержащий заголовки HTTP из HTTP-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Возвращает или задает команду HTTP для HTTP-запроса.</summary>
      <returns>Команда HTTP для HTTP-запроса.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Возвращает имя свойства сообщения, связанное с классом <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
      <returns>Значение "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Возвращает или задает строку запроса для HTTP-запроса.</summary>
      <returns>Строка запроса из HTTP-запроса.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Возвращает или задает значение, указывающее, пропускается ли текст сообщения (в этом случае отправляются только его заголовки).</summary>
      <returns>Значение true, если текст сообщения подавляется; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Предоставляет доступ к HTTP-ответу для получения доступа к дополнительным сведениям, предоставляемым для запросов по протоколу HTTP, и реагирования на эти сведения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Возвращает HTTP-заголовки из HTTP-ответа.</summary>
      <returns>Возвращает объект <see cref="T:System.Net.WebHeaderCollection" />, содержащий HTTP-заголовки из HTTP-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Возвращает имя свойства сообщения, связанное с классом <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
      <returns>Возвращает "httpResponse".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Возвращает или задает код состояния текущего HTTP-ответа, к которому присоединено это свойство.</summary>
      <returns>Возвращает свойство <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode" />, отправляемое в HTTP-ответе.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше 100 или больше 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Возвращает или задает описание состояния текущего HTTP-ответа, к которому присоединено это свойство.</summary>
      <returns>Возвращает свойство <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription" />, отправляемое в HTTP-ответе.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.SuppressEntityBody">
      <summary>Возвращает или задает значение, указывающее, следует ли пропустить текст сообщения и отправить пустое сообщение.</summary>
      <returns>Значение true, если текст сообщения подавляется; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Представляет элемент привязки, который используется, чтобы указать транспорт HTTPS для передачи сообщений. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов заданного типа, которая может использоваться для создания канала.</summary>
      <returns>Фабрика каналов заданного типа, настроенная на основе значений, которые указаны в элементе привязки транспорта.</returns>
      <param name="context">Элементы объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа, который может использоваться для создания канала.</summary>
      <returns>Прослушиватель каналов заданного типа.</returns>
      <param name="context">Элементы объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Копия текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект из <see cref="T:System.ServiceModel.Channels.BindingContext" /> или null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetTransportTokenAssertion">
      <summary>Возвращает <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в привязке безопасности.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в привязке безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.RequireClientCertificate">
      <summary>Возвращает или задает значение, указывающее, требуется ли SSL-проверка подлинности клиента.</summary>
      <returns>Значение true, если требуется выполнять проверку подлинности клиента по протоколу SSL; в противном случае — значение false.Значение по умолчанию: false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает схему URI для транспорта, в данном случае "HTTPS".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Представляет элемент привязки, который используется, чтобы указать HTTP-транспорт для передачи сообщений. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme">
      <summary>Возвращает или задает схему проверки подлинности, при помощи которой выполняется проверка подлинности клиентских запросов, обрабатываемых прослушивателем HTTP.</summary>
      <returns>Перечисление <see cref="T:System.Net.AuthenticationSchemes" />, в котором указываются протоколы, используемые для проверки подлинности клиента.Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
      <exception cref="T:System.ArgumentException">Значение перечисления <see cref="T:System.Net.AuthenticationSchemes" /> уже задано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может служить для создания канала.</summary>
      <returns>Фабрика каналов заданного типа.</returns>
      <param name="context">Элементы объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа.</summary>
      <returns>Прослушиватель каналов заданного типа.</returns>
      <param name="context">Элементы объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, определяющее, будут ли прокси-серверы пропускаться для локальных адресов.</summary>
      <returns>Значение true, если прокси-серверы для локальных адресов не используются; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Копия текущего элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled">
      <summary>Возвращает или задает значение, указывающее, включен ли процесс для возвращения сжатых данных сообщения в исходный размер и формат.</summary>
      <returns>Значение true, если включена распаковка, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy">
      <summary>Возвращает или задает значение расширенной политики безопасности, используемой сервером для проверки входящих соединений от клиентов.</summary>
      <returns>Расширенная политика защиты.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по универсальному коду ресурса (URI).</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла при маршрутизации входящих запросов на универсальный код ресурса (URI) конечной точки.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение не определено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled">
      <summary>Возвращает или задает значение, указывающее, необходимо ли устанавливать постоянное подключение к конечной точке службы.  </summary>
      <returns>Значение true, если запрос, обращенный к конечной точке службы, должен содержать заголовок HTTP Connection со значением Keep-alive; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты, связанную с данным элементом привязки.</summary>
      <returns>Расширенная политика защиты.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер используемого буфера.Для буферизованных сообщений это значение будет совпадать со значением свойства <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />.Для потоковых сообщений это значение равно максимальному размеру заголовков SOAP, считываемых в режиме буферизации.</summary>
      <returns>Максимальный размер буфера в байтах. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI), который содержит адрес прокси-сервера, используемого для выполнения HTTP-запросов.</summary>
      <returns>Код <see cref="T:System.Uri" />, содержащий адрес прокси-сервера.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme">
      <summary>Возвращает или задает схему проверки подлинности, используемую для проверки подлинности клиентских запросов, обрабатываемых прокси-сервером HTTP.</summary>
      <returns>Перечисление <see cref="T:System.Net.AuthenticationSchemes" />, в котором указываются протоколы, используемые для проверки подлинности клиента на прокси-сервере.Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Realm">
      <summary>Возвращает или задает область проверки подлинности.</summary>
      <returns>Область проверки подлинности.Значение по умолчанию — «».</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает значение <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy">
      <summary>Возвращает указание, что расширенная политика защиты не может быть сериализована по XAML.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Определяет значение, которое указывает, когда следует сериализовать расширенную политику защиты.</summary>
      <returns>Значение true, если расширенную политику защиты следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для контракта.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="endpointContext">Обеспечивает сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode">
      <summary>Возвращает или задает режим передачи.</summary>
      <returns>Одно из следующих значений свойства <see cref="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />.BufferedStreamedStreamedRequestStreamedResponse</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication">
      <summary>Возвращает или задает значение, указывающее, разрешено ли на сервере совместное использование небезопасных подключений.Если оно разрешено, проверка подлинности NTLM выполняется один раз для каждого соединения TCP.</summary>
      <returns>Значение true, если совместное использование небезопасных подключений разрешено; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, указывающее, используются ли параметры прокси-сервера уровня компьютера вместо параметров для конкретного пользователя.</summary>
      <returns>Значение true, если используются параметры прокси-сервера уровня компьютера; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IAnonymousUriPrefixMatcher">
      <summary>Реализуйте этот интерфейс для регистрации пользовательских анонимных URI-префиксов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IAnonymousUriPrefixMatcher.Register(System.Uri)">
      <summary>Регистрирует пользовательский анонимный URI-префикс.</summary>
      <param name="anonymousUriPrefix">Регистрируемый URI-префикс.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingDeliveryCapabilities">
      <summary>Определяет интерфейс, который должен быть реализован в привязках, предназначенный для описания возможностей, которые могут быть затребованы клиентами и службами, и для объявления о них.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery">
      <summary>Возвращает значение, указывающее, поддерживает ли привязка гарантии на доставку сообщений в том же порядке, в котором они отправлены.</summary>
      <returns>Значение true, если сообщения должны доставляться в том же порядке, в котором они отправлены. Значение false, если сообщения могут доставляться в другом порядке.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery">
      <summary>Возвращает значение, указывающее, поддерживает ли привязка доставку сообщений с формированием очереди.</summary>
      <returns>Значение true, если поддерживается доставка помещенных в очередь сообщений; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingMulticastCapabilities">
      <summary>Определяет необязательный интерфейс, который может реализовываться привязкой, чтобы задать, обладает ли настраиваемая этой привязкой служба возможностями многоадресной рассылки.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingMulticastCapabilities.IsMulticast">
      <summary>Возвращает значение, указывающее, настраивает ли привязка службу на предоставление возможностей многоадресной рассылки.</summary>
      <returns>Значение true, если служба предоставляет возможности многоадресной рассылки; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingRuntimePreferences">
      <summary>Определяет необязательный контракт, который можно реализовать в привязке, чтобы указать способ обработки входящих запросов службой (синхронный или асинхронный).</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <summary>Возвращает значение, указывающее наиболее эффективный способ обработки входящих запросов: синхронный или асинхронный.</summary>
      <returns>Значение true, если наиболее эффективна синхронная обработка запросов; в противном случае — значение  false.Значение по умолчанию — false (асинхронная обработка запросов).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Определяет базовый интерфейс, который должен быть реализован во всех объектах каналов.Требуется, чтобы в них был реализован интерфейс конечного автомата, совместно используемый всеми коммуникационными объектами, а также метод для извлечения объектов из стека каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Определяет интерфейс, который должен быть реализован фабрикой каналов для создания каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Определяет интерфейс, который должны реализовывать фабрики каналов, создающие каналы конкретного типа.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал заданного типа, связанный с заданным адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" />, связанный с заданным адресом конечной точки.</returns>
      <param name="to">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал заданного типа, связанный с заданным адресом конечной точки и адресом транспорта, на который отправляются сообщения.</summary>
      <returns>Канал типа <paramref name="TChannel" />, связанный с заданным адресом конечной точки и адресом транспорта.</returns>
      <param name="to">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelListener">
      <summary>Определяет интерфейс, который должен реализовывать прослушиватель каналов для приема каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию ожидания прихода канала, которая должна завершиться в течение указанного временного интервала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ожидания канала. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции ожидания канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ожидания канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию ожидания канала.</summary>
      <returns>Значение true, если сообщение пришло; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.IChannelListener.Uri">
      <summary>Возвращает универсальный код ресурса (URI), который прослушивают созданные фабрикой прослушиватели.</summary>
      <returns>
        <see cref="T:System.Uri" />, который прослушивают созданные фабрикой прослушиватели.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)">
      <summary>Ожидает получения канала.</summary>
      <returns>Значение true, если канал получен до истечения времени, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelListener`1">
      <summary>Определяет интерфейс, который должны реализовывать прослушиватели каналов для приема каналов, зависящих от конкретного типа.</summary>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel">
      <summary>Принимает канал определенного типа в целях взаимодействия с клиентом.</summary>
      <returns>Канал типа <paramref name="TChannel" />, принимаемый прослушивателем каналов.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)">
      <summary>Принимает канал определенного типа для взаимодействия с клиентом в рамках заданного временного промежутка.</summary>
      <returns>Канал типа <paramref name="TChannel" />, принимаемый прослушивателем каналов.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию принятия канала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию принятия канала. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции принятия канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию принятия канала в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию принятия канала. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции канала до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции принятия канала.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией принятия канала.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию принятия канала.</summary>
      <returns>Канал типа <paramref name="TChannel" />, принимаемый прослушивателем каналов.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IContextBindingElement">
      <summary>Определяет интерфейс для элемента привязки, поддерживающего протоколы обмена контекстом.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IContextManager">
      <summary>Задает интерфейс, позволяющий получать и задавать контекст в канале.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IContextManager.Enabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если контекст включен. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IContextManager.GetContext">
      <summary>Возвращает контекст.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> пар «ключ/значение» с пространством имен и именем контекста.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IContextManager.SetContext(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Задает контекст.</summary>
      <param name="context">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> пар «ключ/значение» с пространством имен и именем заданного контекста.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ICorrelationDataSource">
      <summary>Предоставляет свойство, возвращающее описание всех данных корреляций, которые может предоставить канал.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ICorrelationDataSource.DataSources">
      <summary>Возвращает коллекцию, содержащую описание всех данных корреляции, которые может предоставить канал.</summary>
      <returns>Описания данных корреляций.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для отправки и получения сообщения. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Определяет интерфейс для сеанса, реализованного на каждой стороне двусторонней связи между обменивающимися сообщениями конечными точками. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию завершения исходящего сеанса.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object, содержащий сведения о состоянии для этого запроса. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию завершения исходящего сеанса с заданным временем ожидания завершения операции.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса. </returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object, содержащий сведения о состоянии для этого запроса. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом, в течение заданного промежутка времени.</summary>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию завершения исходящего сеанса, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Определяет интерфейс, связывающий дуплексный канал с сеансом.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для получения сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связан объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное получение сообщения. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию получения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию получения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию ожидания прихода сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ожидания прихода сообщения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию получения сообщения. </summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Завершает указанную асинхронную операцию получения сообщения.</summary>
      <returns>Значение true, если сообщение получено до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Завершает указанную асинхронную операцию ожидания сообщения.</summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, определяющий операцию <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> для завершения и извлечения конечного результата.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Возвращает адрес, на который этот канал входа получает сообщения. </summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал входа получает сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Возвращает полученное сообщение, если таковое доступно.Если сообщение недоступно, обработка приостанавливается на промежуток времени по умолчанию.</summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Возвращает полученное сообщение, если таковое доступно.Если сообщение недоступно, обработка приостанавливается на заданный промежуток времени.</summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет создано исключение <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Пытается получить сообщение в течение заданного промежутка времени. </summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Возвращает значение, указывающее, было ли сообщение получено в течение заданного промежутка времени.</summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" /> задает максимальный интервал времени ожидания прихода сообщения.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше нуля.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Определяет интерфейс для сеанса, реализованного на получающей стороне односторонней связи между обменивающимися сообщениями конечными точками. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Определяет интерфейс, связывающий входящий канал и сеанс.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Определяет интерфейс, который можно реализовать для описания набора свойств сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Создает копию текущего экземпляра.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.InvalidChannelBindingException">
      <summary>Исключение, которое создается, если заданная привязка не соответствует требованиям контракта к службе.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для отправки сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу. </param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию отправки.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции отправки.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Возвращает пункт назначения службы, в который по исходящему каналу отправляются сообщения. </summary>
      <returns>Адрес службы <see cref="T:System.ServiceModel.EndpointAddress" />, на который отправляются сообщения по исходящему каналу. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Передает сообщение в пункт назначения исходящего канала. </summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет сообщение по текущему исходящему каналу в течение заданного промежутка времени.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</summary>
      <returns>
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Определяет интерфейс для сеанса, реализованного на отправляющей стороне односторонней связи между обменивающимися сообщениями конечными точками. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Определяет интерфейс, связывающий исходящий канал и сеанс. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IReceiveContextSettings">
      <summary>Интерфейс, который позволяет задавать параметры контекста получения.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IReceiveContextSettings.Enabled">
      <summary>Возвращает или задает значение, указывающее, включен ли контекст получения.</summary>
      <returns>Значение true, если включен контекст получения, и значение false в противном случае. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IReceiveContextSettings.ValidityDuration">
      <summary>Возвращает или задает значение, указывающее время ожидания соединения при использовании с прямыми каналами и время блокировки сообщения при использовании с каналами в очереди.</summary>
      <returns>Значение времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IReplyChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал, чтобы быть на принимающей стороне взаимодействия запрос-ответ между конечными точками, обменивающимися сообщениями. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для получения доступного запроса со временем ожидания по умолчанию.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное получение запроса. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для получения доступного запроса с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное получение запроса. </returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания получения доступного запроса.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения запроса, с которым связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное получение операции запроса.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение false.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию запроса, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ожидания прихода сообщения запроса.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания получения доступного запроса.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию получения доступного запроса. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.RequestContext" />, использованный для создания ответа на запрос. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
      <summary>Завершает указанную асинхронную операцию получения сообщения запроса.</summary>
      <returns>Значение true, если сообщение запроса получено до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="context">Полученное сообщение <see cref="T:System.ServiceModel.Channels.RequestContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
      <summary>Завершает указанную асинхронную операцию ожидания сообщения запроса.</summary>
      <returns>Значение true, если запрос получен до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, определяющий операцию <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> для завершения и извлечения конечного результата.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress">
      <summary>Возвращает адрес, на который этот канал ответа получает сообщения.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, на который этот канал ответа получает сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
      <summary>Возвращает контекст полученного запроса, если таковой доступен.Если контекст недоступен, ожидает появления доступного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.RequestContext" />, использованный для создания ответов. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
      <summary>Возвращает контекст полученного запроса, если таковой доступен.Если контекст недоступен, ожидает появления доступного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.RequestContext" />, использованный для создания ответов. </returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
      <summary>Возвращает значение, указывающее, был ли запрос получен до истечения заданного промежутка времени. </summary>
      <returns>Значение true, если сообщение запроса получено до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение false.</param>
      <param name="context">Полученное сообщение <see cref="T:System.ServiceModel.Channels.RequestContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
      <summary>Возвращает значение, указывающее, было ли сообщение запроса получено до истечения заданного промежутка времени.</summary>
      <returns>Значение true, если запрос получен до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, указывающий, за какое время должно завершиться операция запроса, прежде чем истечет время ожидания и будет возвращено значение false.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IReplySessionChannel">
      <summary>Определяет интерфейс для связи канала ответа и сеанса.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Определяет контракт, который необходимо реализовать каналу, чтобы быть на запрашивающей стороне взаимодействия типа "запрос-ответ" между конечными точками, обменивающимися сообщениями. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ". </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа «запрос-ответ» в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.(Подробные сведения см. в разделе "Примечания".)</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, чтобы вернуть ответ на основе сообщений переданному запросу. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Возвращает удаленный адрес, на который канал запроса отправляет сообщения. </summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал запроса отправляет сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений в течение заданного промежутка времени.</summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Возвращает адрес транспорта, на который отправляется запрос.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Определяет интерфейс для связи канала запроса и сеанса.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISecurityCapabilities">
      <summary>Определяет контракт для задания возможностей безопасности для привязок.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel">
      <summary>Возвращает запросы уровня защиты, поддерживаемые привязкой.</summary>
      <returns>Объект <see cref="T:System.Net.Security.ProtectionLevel" />, задающий запросы уровня защиты, поддерживаемые привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel">
      <summary>Возвращает ответы уровня защиты, поддерживаемые привязкой.</summary>
      <returns>Объект <see cref="T:System.Net.Security.ProtectionLevel" />, задающий ответы уровня защиты, поддерживаемые привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientAuthentication">
      <summary>Получает значение, указывающее, поддерживает ли привязка проверку подлинности клиента.</summary>
      <returns>Имеет значение true, если привязка может поддерживать проверку подлинности клиента, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity">
      <summary>Получает значение, указывающее, поддерживает ли привязка проверку удостоверение Windows клиента.</summary>
      <returns>Имеет значение true, если привязка может поддерживать проверку удостоверения Windows клиента, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsServerAuthentication">
      <summary>Получает значение, указывающее, поддерживает ли привязка проверку подлинности сервера.</summary>
      <returns>Имеет значение true, если привязка может поддерживать проверку подлинности сервера, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Определяет интерфейс для установления общего контекста между участниками обмена сообщениями, предоставляя ИД для сеанса связи. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Возвращает ИД, уникально идентифицирующий сеанс. </summary>
      <returns>ИД, уникально идентифицирующий сеанс. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Определяет интерфейс, связывающий канал с определенным типом сеанса.</summary>
      <typeparam name="TSession">Тип параметра <see cref="T:System.ServiceModel.Channels.ISession" />, связанного с каналом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Возвращает тип сеанса, связанного с этим каналом. </summary>
      <returns>Тип параметра <see cref="T:System.ServiceModel.Channels.ISession" />, связанного с этим каналом. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ITransactedBindingElement">
      <summary>Представляет интерфейс, который должен быть реализован элементами привязки, требующими создания транзакции диспетчером до распределения в методе службы. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ITransactedBindingElement.TransactedReceiveEnabled">
      <summary>Возвращает логическое значение, указывающее, разрешена ли транзакция для операции получения.</summary>
      <returns>Значение true, если для операции получения разрешена транзакция; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ITransportTokenAssertionProvider">
      <summary>Предоставляет используемое в экспорте политики утверждение маркера транспорта (например, утверждение маркера HTTPS).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ITransportTokenAssertionProvider.GetTransportTokenAssertion">
      <summary>Возвращает утверждение маркера транспорта.</summary>
      <returns>Элемент <see cref="T:System.Xml.XmlElement" />, который представляет утверждение маркера транспорта.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Задает локальные параметры безопасности клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CacheCookies">
      <summary>Возвращает или задает значение, указывающее, кэшируются ли файлы Cookie безопасного диалога. </summary>
      <returns>Значение true, если файлы cookies кэшируются, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Создает новый экземпляр этого класса, который является копией или точной копией текущего экземпляра.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CookieRenewalThresholdPercentage">
      <summary>Возвращает или задает пороговый процент для обновления файлов Cookie безопасного диалога.</summary>
      <returns>Пороговый процент для обновления файлов Cookie безопасного диалога.Значение по умолчанию — 60 процентов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства (set) задано значение меньше 0 или больше 100.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays">
      <summary>Возвращает или задает значение, указывающее, разрешено ли обнаружение воспроизведения для сообщений, которые клиент получает от службы.</summary>
      <returns>Значение true, если обнаружение воспроизведения разрешено; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.IdentityVerifier">
      <summary>Возвращает или задает средство проверки удостоверения.</summary>
      <returns>Экземпляр реализации абстрактного класса <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Возвращает или задает максимальный допустимый разброс времени между системными часами взаимодействующих сторон. </summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальный допустимый разброс времени между системными часами взаимодействующих сторон.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Инструкцией set свойству присвоено значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxCookieCachingTime">
      <summary>Возвращает или задает максимальное время кэширования файлов Cookie безопасного диалога. </summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальное время кэширования файлов Cookie безопасного диалога.Значение по умолчанию — 10675199 дней.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Инструкцией set свойству присвоено значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReconnectTransportOnFailure">
      <summary>Возвращает или задает значение, указывающее, делается ли в сеансах безопасности попытка повторно установить подключение после ошибки транспорта.</summary>
      <returns>Значение true, если в сеансах безопасности делается попытка повторно установить подключение после ошибки транспорта; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayCacheSize">
      <summary>Возвращает или задает количество кэшированных чисел nonce, используемых для обнаружения воспроизведения. </summary>
      <returns>Количество кэшированных чисел nonce, используемых для обнаружения воспроизведения.Значение по умолчанию — 900000.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Возвращает или задает максимальное время действия числа nonce сообщения.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальную продолжительность действия числа nonce сообщения.Значение по умолчанию — пять минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Инструкцией set свойству присвоено значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRenewalInterval">
      <summary>Возвращает или задает промежуток времени, по истечении которого инициатор обновляет ключ сеанса безопасности.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий промежуток времени, по истечении которого инициатор обновляет ключ сеанса безопасности.Значение по умолчанию — 10 часов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Инструкцией set свойству присвоено значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRolloverInterval">
      <summary>Возвращает или задает промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который представляет промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений после обновления ключа.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Инструкцией set свойству присвоено значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого сообщения, отправленные клиентом, остаются действительными.Если служба получает сообщение по истечении этого времени, она удаляет сообщение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальный промежуток времени, в течение которого сообщения, отправленные клиентом, остаются действительными.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">С помощью set свойству задается значение меньше 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalServiceSecuritySettings">
      <summary>Предоставляет свойства безопасности локальной службы, которым можно присваивать значения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone">
      <summary>Создает новый экземпляр этого класса из его текущего экземпляра.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays">
      <summary>Возвращает или задает значение, указывающее, разрешено ли обнаружение воспроизведения для этой службы. </summary>
      <returns>Значение true, если для этой службы разрешено обнаружение воспроизведения; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout">
      <summary>Возвращает или задает время ожидания перед закрытием канала при его бездействии.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания перед закрытием сеанса безопасности с клиентом при бездействии.Значение по умолчанию — 2 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime">
      <summary>Возвращает или задает время существования для объекта <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />, выданного этой службой клиенту.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время существования новых файлов Cookie безопасности.Значение по умолчанию — 10 часов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies">
      <summary>Возвращает или задает максимально допустимое для этой службы количество объектов <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />, одновременно находящихся в кэше.</summary>
      <returns>Максимальное количество файлов Cookie безопасного диалога, кэшируемых службой.При достижении этого предела служба удаляет из кэша наиболее старые файлы Cookie безопасного диалога, чтобы освободить место для новых.Значение по умолчанию — 1000.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew">
      <summary>Возвращает или задает максимальный допустимый разброс времени между системными часами взаимодействующих сторон.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальный допустимый разброс времени между системными часами взаимодействующих сторон.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions">
      <summary>Возвращает или задает максимальное количество параллельных сеансов безопасности, установленных с сервером, для которого выдан маркер безопасности, но не отправлено ни одного сообщения от приложений.</summary>
      <returns>Максимальное количество параллельных сеансов безопасности.Значение по умолчанию — 128.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations">
      <summary>Возвращает или задает максимальное количество параллельных согласований безопасности с клиентами, в которых может участвовать служба.</summary>
      <returns>Максимальное количество параллельных согласований безопасности с клиентами, в которых может участвовать служба.Значение по умолчанию — 128.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout">
      <summary>Возвращает или задает максимальную продолжительность этапа согласования безопасности между клиентом и службой.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальную продолжительность этапа согласования безопасности между клиентом и службой.Все согласования со службой (например, на уровне сообщений SPNego или при проверке подлинности SSL) должны завершаться в течение этого срока.Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure">
      <summary>Возвращает или задает значение, указывающее, делается ли в сеансах безопасности попытка повторно установить подключение после ошибки транспорта.</summary>
      <returns>Значение true, если в сеансах безопасности делается попытка повторно установить подключение после ошибки транспорта; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize">
      <summary>Возвращает или задает размер кэша чисел nonce, используемого для определения воспроизведения.</summary>
      <returns>Размер кэша чисел nonce, используемого для определения воспроизведения.Значение по умолчанию — 900,000.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow">
      <summary>Возвращает или задает максимальное время, в течение которого служба может принять сообщение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальное время, в течение которого служба может принять сообщение.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval">
      <summary>Возвращает или задает время существования ключа, используемого в сеансе безопасности.По истечении этого промежутка времени ключ автоматически обновляется.</summary>
      <returns>Промежуток времени, по истечении которого служба требует, чтобы инициатор обновил используемый ключ сеанса безопасности.Если инициатор не обновляет ключ в течение этого срока, служба отправляет инициатору ошибку.Значение по умолчанию — 15 часов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval">
      <summary>Возвращает или задает промежуток времени после обновления ключа, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.</summary>
      <returns>Промежуток времени после обновления ключа, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений после обновления ключа.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого сообщения, отправленные службой, остаются действительными.Если клиент получает от службы сообщение по истечении этого срока, он удаляет сообщение.</summary>
      <returns>Максимальный промежуток времени, в течение которого сообщения, отправленные службой, остаются действительными.Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Представляет логическую единицу взаимодействия между конечными точками в распределенной среде. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Закрывает объект <see cref="T:System.ServiceModel.Channels.Message" /> и освобождает все ресурсы. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Сохраняет весь объект <see cref="T:System.ServiceModel.Channels.Message" /> в буфере в памяти для доступа в дальнейшем.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</returns>
      <param name="maxBufferSize">Максимальный размер создаваемого буфера.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxBufferSize " />меньше нуля.</exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Создает сообщение, в котором содержится ошибка SOAP, версия и действие.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения.</param>
      <param name="fault">Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, представляющий ошибку SOAP. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Version" />, <paramref name="fault" /> или <paramref name="action" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.Object,System.String)">
      <summary>Создает сообщение, в котором содержится ошибка SOAP, причина ошибки, подробные сведения об ошибке, версия и действие.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения.</param>
      <param name="faultCode">Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, представляющий ошибку SOAP. </param>
      <param name="reason">Причина ошибки SOAP. </param>
      <param name="detail">Подробные сведения об ошибке SOAP.</param>
      <param name="action">Описание процедуры обработки сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="fault" />, <paramref name="action" />, <paramref name="detail" /> или <paramref name="faultCode" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.String)">
      <summary>Создает сообщение, в котором содержится ошибка SOAP, причина ошибки, версия и действие.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения.</param>
      <param name="faultCode">Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, представляющий ошибку SOAP. </param>
      <param name="reason">Причина ошибки SOAP. </param>
      <param name="action">Описание процедуры обработки сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="fault" />, <paramref name="action" /> или <paramref name="faultCode" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Создает сообщение, в котором содержится версия и действие.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения.</param>
      <param name="action">Описание процедуры обработки сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> или <paramref name="action" /> равны null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Создает сообщение с указанными версией, действием и текстом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает сообщение с использованием указанных версии, действия, текста сообщения и сериализатора.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения. </param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" />, <paramref name="fault" /> или <paramref name="action" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Создает сообщение с текстом, содержащим массив байтов. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Объект <see cref="T:System.ServiceModel.Channels.BodyWriter" /> байтового типа. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Version" />, <paramref name="action" /> или <paramref name="body" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Создает сообщение с указанными версией, действием и текстом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Создает сообщение с использованием указанных средства чтения, действия и версии. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Объект <see cref="T:System.Xml.XmlReader" />, который требуется использовать для чтения сообщения SOAP.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Создает сообщение с использованием указанных средства чтения, действия и версии.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="envelopeReader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который требуется использовать для чтения сообщения SOAP.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовка в байтах. </param>
      <param name="version">Допустимое значение <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающее версию SOAP, которая должна использоваться для сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="envelopeReader" /> или <paramref name="version" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Создает сообщение с использованием указанных средства чтения, действия и версии.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для созданного сообщения. </returns>
      <param name="envelopeReader">Объект <see cref="T:System.Xml.XmlReader" />, который требуется использовать для чтения сообщения SOAP.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовка в байтах. </param>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="envelopeReader" /> или <paramref name="version" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Извлекает текст данного экземпляра <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект типа <paramref name="T" />, содержащий текст данного сообщения.</returns>
      <typeparam name="T">Текст сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает текст данного экземпляра <see cref="T:System.ServiceModel.Channels.Message" /> с использованием указанного сериализатора.</summary>
      <returns>Объект типа <paramref name="T" />, содержащий текст данного сообщения.</returns>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Текст сообщения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serializer" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Извлекает атрибуты текста сообщения.</summary>
      <returns>Атрибуты текста сообщения.</returns>
      <param name="localName">Локальное имя узла XML.Имя элемента, соответствующего этому члену.Эта строка должна быть допустимым именем XML-элемента.</param>
      <param name="ns">Пространство имен, к которому принадлежит этот элемент XML.Универсальный код ресурса (URI) пространства имен элемента, соответствующего этому члену.Система не проверяет уникальные идентификаторы ресурса (URI), кроме адресов транспорта.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localName" /> или <paramref name="ns" /> равно null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Возвращает средство чтения словаря XML, обеспечивающее доступ к содержимому текста данного сообщения.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение пусто либо было скопировано, прочтено или записано.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>При переопределении в производном классе возвращает заголовки сообщения. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, представляющий заголовки сообщения. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Возвращает значение, указывающее, удален ли объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Значение true, если сообщение удаляется; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Возвращает значение, указывающее, пуст ли объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Значение true, если сообщение является пустым; в противном случае — значение false. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Получает значение, указывающее, привело ли данное сообщение к созданию ошибок SOAP.</summary>
      <returns>Значение true, если сообщение привело к возникновению ошибок SOAP; в противном случае — значение false.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при преобразовании текста сообщения в строку.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для преобразования текста сообщения в строку. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Метод, вызываемый при закрытии сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Метод, вызываемый при создании буфера сообщения для сохранения этого сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</returns>
      <param name="maxBufferSize">Максимальный размер создаваемого буфера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Метод, вызываемый при извлечении атрибутов текста сообщения.</summary>
      <returns>Атрибуты текста сообщения.</returns>
      <param name="localName">Локальное имя узла XML.Имя элемента, соответствующего этому члену.Эта строка должна быть допустимым именем XML-элемента.</param>
      <param name="ns">Пространство имен, к которому принадлежит этот элемент XML.Универсальный код ресурса (URI) пространства имен элемента, соответствующего этому члену.Система не проверяет уникальные идентификаторы ресурса (URI), кроме адресов транспорта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Метод вызываемый при извлечении средства чтения словаря XML, которое обеспечивает доступ к содержимому текста данного сообщения.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи текста сообщения в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста этого сообщения в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи всего сообщения в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи этого сообщения в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента текста в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента текста в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента конверта в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента конверта в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента заголовка в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента заголовка в XML-файл.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>При переопределении в производном классе получает набор заметок к сообщению уровня обработки. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий набор заметок уровня обработки сообщения.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Возвращает текущее состояние данного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageState" />, содержащий текущее состояние данного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Закрывает все ресурсы, используемые данным сообщением.Наследовать этот метод нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Возвращает строку, которая представляет текущий объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Текущий объект <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>При переопределении в производном классе возвращает версию SOAP сообщения. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, представляющий версию SOAP. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Сериализует текст сообщения с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который требуется использовать для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение удалено. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует содержимое текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer " /> равно null.</exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует все сообщение с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Сериализует все сообщение с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который требуется использовать для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Сериализует начальный элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный элемент конверта с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента конверта.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer " /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Представляет буфер в памяти, в котором хранится все сообщение для последующей обработки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Возвращает приблизительное число байтов, используемое этим объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Приблизительное число байтов, используемое этим объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Завершает работу с буфером.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Возвращает копию исходного сообщения.</summary>
      <returns>Идентичная копия исходного экземпляра класса <see cref="T:System.ServiceModel.Channels.Message" />, переданного ранее методу <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> объекта <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту.Наследовать этот метод нельзя.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту с позиционированием на указанном узле.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту.</returns>
      <param name="nodeQuota">Расположение, которое должно являться исходной позицией навигатора.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту с позиционированием на указанном узле и в области xml:space.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту.</returns>
      <param name="nodeQuota">Расположение, которое должно являться исходной позицией навигатора.</param>
      <param name="space">Допустимая область <see cref="T:System.Xml.XmlSpace" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту в указанной области xml:space.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации по данному объекту.</returns>
      <param name="space">Допустимая область <see cref="T:System.Xml.XmlSpace" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Возвращает тип содержимого сообщения, сохраненного в этом буфере.</summary>
      <returns>Тип содержимого сообщения, сохраненного в этом буфере.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />, а при необходимости освобождает также и управляемые ресурсы.Наследовать этот метод нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Записывает все содержимое данного буфера в указанный поток ввода-вывода.</summary>
      <param name="stream">Поток ввода-вывода, в который записывается все содержимое данного буфера.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Кодировщик — это компонент для записи сообщений в поток и для чтения сообщений из потока.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncoder" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>При переопределении в производном классе возвращает тип содержимого MIME, использованный кодировщиком.</summary>
      <returns>Тип содержимого, поддерживаемый кодировщиком сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>The typed object <paramref name="T " /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Возвращает значение, указывающее, поддерживается ли кодировщиком заданное значение уровня сообщений типа содержимого.</summary>
      <returns>Значение true, если заданный уровень сообщения типа содержимого поддерживается; в противном случае — значение false.</returns>
      <param name="contentType">Проверяемый уровень сообщения типа содержимого.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>При переопределении в производном классе возвращает тип носителя, использованный кодировщиком.</summary>
      <returns>Тип носителя, поддерживаемый кодировщиком сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>При переопределении в производном классе возвращает версию сообщения, используемую кодировщиком.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый кодировщиком.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>При переопределении в производном классе считывает из заданного буфера сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, читаемый из заданного буфера.</returns>
      <param name="buffer">Объект <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, предоставляющий буфер, из которого требуется десериализовать сообщение.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, из которого требуется десериализовать сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, читаемый из заданного потока.</returns>
      <param name="buffer">Объект <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, предоставляющий буфер, из которого требуется десериализовать сообщение.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, из которого требуется десериализовать сообщение.</param>
      <param name="contentType">Тип содержимого уровня сообщений MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, читаемый из заданного потока.</returns>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого считывается сообщение.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовков, который может быть прочитан из сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, читаемый из заданного потока.</returns>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого считывается сообщение.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовков, который может быть прочитан из сообщения.</param>
      <param name="contentType">Тип содержимого уровня сообщений MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Возвращает тип содержимого, используемый кодировщиком сообщений.</summary>
      <returns>Тип содержимого, используемый кодировщиком сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Записывает сообщение меньше определенного размера в буфер массива байтов.</summary>
      <returns>Объект <see cref="T:System.ArraySegment`1" /> типа byte, предоставляющий буфер, в который сериализуется сообщение.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, записываемый в буфер сообщений.</param>
      <param name="maxMessageSize">Максимальный размер записываемого сообщения.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, в который записывается сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>При переопределении в производном классе записывает сообщение меньше определенного размера в буфер массива байтов с заданным смещением.</summary>
      <returns>Объект <see cref="T:System.ArraySegment`1" /> типа byte, предоставляющий буфер, в который сериализуется сообщение.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, записываемый в буфер сообщений.</param>
      <param name="maxMessageSize">Максимальный размер записываемого сообщения.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, в который записывается сообщение.</param>
      <param name="messageOffset">Смещение фрагмента, которое начинается с начала массива байтов буфера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>При переопределении в производном классе записывает сообщение в указанный поток.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который требуется записать в поток <paramref name="stream" />.</param>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, в который записывается сообщение <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Абстрактный базовый класс, представляющий фабрику для создания кодировщиков сообщений, которые могут читать сообщения из потока и записывать их в поток для различных типов кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Возвращает кодировщик сообщений, который может использоваться для корреляции сообщений при обмене сообщениями, основанном на сеансах.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, который используется для основанного на сеансах обмена сообщениями.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>При переопределении в производном классе возвращает кодировщик сообщений, созданный фабрикой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, используемый фабрикой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>При переопределении в производном классе возвращает версию сообщения, используемую кодировщиками, которые созданы фабрикой, для кодирования сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый фабрикой.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Элемент привязки, задающий версию сообщения, которая используется для кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />, инициализированного из существующего элемента.</summary>
      <param name="elementToBeCloned">Элемент привязки <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />, точную копию которого необходимо создать.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>При переопределении в производном классе создает фабрику для создания кодировщиков сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, который используется для создания кодировщиков сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для текущего элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>При переопределении в производном классе возвращает или задает версию сообщения, которая может обрабатываться кодировщиками сообщений, созданными фабрикой кодировщиков сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, который используется кодировщиками сообщений, созданными фабрикой кодировщиков сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElementImporter">
      <summary>Преобразует политики на основе WSDL и контракты о кодировании сообщений в описания элементов привязки, которые могут реализовывать эти политики для службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Определяет метод, который может импортировать утверждения пользовательской политики для кодирования сообщений и добавлять элементы привязки, реализующие политику.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, импортирующий сведения о метаданных.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий импортируемые утверждения политики и коллекции элементов привязки, в которые могут быть добавлены реализующие политику кодирования элементы пользовательской привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="importer" /> или <paramref name="policyContext" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Вызывается до импорта документов метаданных, связанных с кодированием.</summary>
      <param name="wsdlDocuments">Объект <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> с описанием служб.</param>
      <param name="xmlSchemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схему для параметра <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.Xml.XmlElement" />, содержащий элементы политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)"></member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Сопоставляет текущие расширения WSDL для кодирования сообщений описанию службы.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" />, импортирующий расширения WSDL.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />, предоставляющий контекст сопоставления.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Представляет хранимое в памяти представление ошибки SOAP, которое можно передать методу <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" />, чтобы создать сообщение, содержащее ошибку. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>При вызове в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageFault" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Возвращает или задает значение субъекта.</summary>
      <returns>Значение субъекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Возвращает код ошибки SOAP. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" />, содержащий код ошибки SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданный объект <see cref="T:System.ServiceModel.Channels.Message" /> и заданный максимальный размер буфера сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="message">Заданный объект <see cref="T:System.ServiceModel.Channels.Message" />, который требуется использовать для создания объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Заданный максимальный размер буфера сообщений.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданные объекты <see cref="T:System.ServiceModel.FaultCode" /> и <see cref="T:System.ServiceModel.FaultReason" />.</summary>
      <returns>Новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданные объекты <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" /> и объект сведений.</summary>
      <returns>Новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
      <param name="detail">Объект сведений об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданные объекты <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, объект сведений и <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <returns>Новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> с заданными значениями.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
      <param name="detail">Объект сведений об ошибке.</param>
      <param name="serializer">Сериализатор для сериализации объекта сведений.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.String)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданные объекты <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, объект сведений, <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> и субъект.</summary>
      <returns>Созданный объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
      <param name="detail">Объект сведений об ошибке.</param>
      <param name="serializer">Сериализатор для сериализации объекта сведений.</param>
      <param name="actor">Значение субъекта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.String,System.String)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданные объекты <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, объект сведений, <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, значения субъекта и узла.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
      <param name="detail">Объект сведений об ошибке.</param>
      <param name="serializer">Сериализатор для сериализации объекта сведений.</param>
      <param name="actor">Значение субъекта.</param>
      <param name="node">Значение узла.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.String)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданный объект <see cref="T:System.ServiceModel.FaultCode" /> и причину ошибки.</summary>
      <returns>Новая коллекция <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">Код ошибки для сообщения об ошибке.</param>
      <param name="reason">Причина ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Возвращает объект сведений для ошибки сообщения.</summary>
      <returns>Объект сведений ошибки сообщения.</returns>
      <typeparam name="T">Тип объекта сведений.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Возвращает объект сведений, использующий заданный <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <returns>Объект сведений, содержащийся в объекте <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> для десериализации объекта сведений. </param>
      <typeparam name="T">Тип объекта сведений.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlDictionaryReader" />, расположенный на объекте сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, расположенный на объекте сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> объект сведений.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> имеет объект сведений; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.IsMustUnderstandFault">
      <summary>Возвращает значение, указывающее, была ли причиной ошибки невозможность понять заголовок SOAP. </summary>
      <returns>Значение true, если причиной ошибки была невозможность понять заголовок SOAP; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Возвращает узел SOAP.</summary>
      <returns>Узел SOAP, содержащий сведения о том, какой узел SOAP на пути сообщения стал причиной ошибки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>При вызове в производном классе возвращает объект <see cref="T:System.Xml.XmlDictionaryReader" />, расположенный на объекте сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, расположенный на объекте сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Вызывается перед записью содержимого подробных сведений.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента подробностей.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в неабстрактном производном классе записывает содержимое элемента подробностей. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента подробностей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Записывает начальный элемент, используя заданный объект <see cref="T:System.Xml.XmlDictionaryWriter" /> и версию конверта SOAP.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента подробностей.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Возвращает текстовое описание ошибки SOAP. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultReason" />, содержащий текстовое описание ошибки SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WasHeaderNotUnderstood(System.ServiceModel.Channels.MessageHeaders,System.String,System.String)">
      <summary>Возвращает значение, указывающее, были ли поняты заголовки сообщений SOAP. </summary>
      <returns>Значение true, если заголовки сообщений были поняты; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="headers">Заголовки сообщений SOAP.</param>
      <param name="name">Имя элемента заголовка.</param>
      <param name="ns">Пространство имен элемента заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WriteTo(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Записывает ошибку сообщения, которая использует заданный объект <see cref="T:System.Xml.XmlDictionaryWriter" /> и версию конверта SOAP.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи ошибки сообщения.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WriteTo(System.Xml.XmlWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Записывает ошибку сообщения, которая использует заданный объект <see cref="T:System.Xml.XmlWriter" /> и версию конверта SOAP.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи ошибки сообщения.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Представляет содержимое заголовка SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeader" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Возвращает или задает целевой получатель заголовка сообщения.</summary>
      <returns>Целевой получатель заголовка сообщения.Значение по умолчанию — пустая строка («»).</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
      <param name="relay">Значение, указывающее, требуется ли ретранслировать заголовок.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает заголовок из сериализуемого с помощью XmlFormatter объекта. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть понятным.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
      <param name="relay">Значение, указывающее, требуется ли ретранслировать заголовок.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Проверяет, поддерживается ли заданная версия сообщения.</summary>
      <returns>Значение true, если заданная версия сообщения поддерживается; в противном случае — значение false.</returns>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Возвращает значение, указывающее, содержит ли данный заголовок сообщения ссылочные параметры ссылки на конечную точку.</summary>
      <returns>Значение true, если данный заголовок сообщения содержит ссылочные параметры ссылки на конечную точку; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Возвращает или задает значение, указывающее, должен ли данный заголовок быть понят в соответствии со спецификацией протокола SOAP версий 1.1 и 1.2. </summary>
      <returns>Значение true, если заголовок необходимо понять; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Вызывается при сериализации содержимого заголовка с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Вызывается при сериализации начального заголовка с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Возвращает значение, указывающее, требуется ли ретранслировать заголовок.</summary>
      <returns>Значение true, если требуется ретранслировать заголовок, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Преобразует данный заголовок сообщения в строку.</summary>
      <returns>Заголовок сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует заголовок с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует заголовок с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует содержимое заголовка с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует содержимое заголовка с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует начальный заголовок с помощью заданного модуля записи XML. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Представляет системную информацию о заголовке сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Возвращает или задает предполагаемого получателя заголовка сообщения.</summary>
      <returns>Универсальный код ресурса (URI), который указывает предполагаемого получателя заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Возвращает значение, указывающее, представляет ли заголовок сообщения ссылочные параметры ссылки на конечную точку.</summary>
      <returns>Значение true, если заголовок сообщения представляет параметры ссылки на конечную точку; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Возвращает или задает значение, показывающее, является ли обязательной обработка заголовка сообщения.</summary>
      <returns>Значение true, если обработка заголовка сообщения обязательна; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Возвращает имя заголовка сообщения.</summary>
      <returns>Имя заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Возвращает пространство имен заголовка сообщения.</summary>
      <returns>Пространство имен заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Возвращает или задает значение, показывающее, может ли ретранслироваться заголовок сообщения.</summary>
      <returns>Значение true, если заголовок сообщения может ретранслироваться; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Представляет коллекцию заголовков сообщения для сообщения.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> с заданной коллекцией заголовков сообщения.</summary>
      <param name="collection">Коллекция заголовков сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> с заданной версией сообщения.</summary>
      <param name="version">SOAP-версия сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> с заданными версией сообщения и размером.</summary>
      <param name="version">SOAP-версия сообщения.</param>
      <param name="initialSize">Размер заголовка.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Возвращает или задает описание процедуры обработки сообщения.</summary>
      <returns>Описание процедуры обработки сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Добавляет в коллекцию заданный заголовок сообщения.</summary>
      <param name="header">Добавляемый заголовок сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Удаляет из коллекции все заголовки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Копирует в этот экземпляр из заданного сообщения содержимое заголовка, расположенное по указанному индексу.</summary>
      <param name="message">Сообщение.</param>
      <param name="headerIndex">Расположение исходного заголовка сообщения, из которого копируется содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Копирует в этот экземпляр из заданной коллекции заголовков сообщения содержимое заголовка, расположенное по указанному индексу.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Расположение исходного заголовка сообщения, из которого копируется содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Копирует в этот экземпляр содержимое всех заголовков из заданного сообщения.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Копирует в этот экземпляр содержимое из заданной коллекции заголовков.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Копирует заголовки из данной коллекции в массив, начиная с определенного индекса массива. </summary>
      <param name="array">Одномерный массив, в который копируются объекты заголовков сообщений из этого экземпляра.Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс массива, с которого начинается копирование. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Возвращает число заголовков сообщения в этой коллекции.</summary>
      <returns>Число заголовков сообщения в этой коллекции.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Возвращает или задает адрес узла, которому следует отправлять ошибки.</summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" /> узла, которому следует отправлять ошибки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName и пространству имен универсального кода ресурса (URI) элемента заголовка.</summary>
      <returns>Индекс заголовка сообщения в этой коллекции.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName, пространству имен универсального кода ресурса (URI) и агентам элемента заголовка.</summary>
      <returns>Индекс заголовка сообщения в этой коллекции.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Возвращает или задает адрес узла, отправившего сообщение.</summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" /> узла, отправившего сообщение.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию по коллекции.Наследовать этот метод нельзя.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Извлекает заголовок сообщения в заданной позиции этой коллекции.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="index">Возвращаемый отсчитываемый от нуля индекс заголовка.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает заголовок сообщения в заданной позиции этой коллекции.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="index">Возвращаемый отсчитываемый от нуля индекс заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName и пространству имен универсального кода ресурса (URI) элемента заголовка.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает заголовок сообщения в этой коллекции по заданным значению LocalName, пространству имен универсального кода ресурса (URI) и сериализатору.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="serializer">Объект типа <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Извлекает заголовок сообщения в этой коллекции по заданным значению LocalName, пространству имен универсального кода ресурса (URI) и агентам элемента заголовка.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Возвращает средство чтения словаря XML, которое использует заголовок сообщения в заданной позиции этой коллекции.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Возвращаемый отсчитываемый от нуля индекс заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Проверяет, все ли заголовки сообщения, отмеченные MustUnderstand, были правильно интерпретированы и обработаны. </summary>
      <returns>Значение true, если получатели, заданные <paramref name="actors" />, правильно интерпретировали и обработали все заголовки сообщения, отмеченные MustUnderstand; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Проверяет, правильно ли заданные получатели интерпретировали и обработали все заголовки сообщения, отмеченные MustUnderstand. </summary>
      <returns>Значение true, если получатели, заданные <paramref name="actors" />, правильно интерпретировали и обработали все заголовки сообщения, отмеченные MustUnderstand; в противном случае — значение false.</returns>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Вставляет заголовок сообщения в коллекцию по указанному индексу.</summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="header" />.</param>
      <param name="header">Вставляемый заголовок сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Извлекает заголовок по заданному индексу.</summary>
      <returns>Класс <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> в коллекции.Если значение параметра <paramref name="index" /> больше или равно числу заголовков в списке, возвращается значение null.</returns>
      <param name="index">Отсчитываемый от нуля индекс списка заголовков.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Возвращает или задает уникальный ИД сообщения.</summary>
      <returns>Уникальный ИД сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Возвращает SOAP-версию сообщения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Возвращает ИД сообщений, связанных с этим сообщением.</summary>
      <returns>ИД сообщений, связанных с этим сообщением.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Удаляет из коллекции все заголовки с заданными именем и пространством имен.</summary>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции заголовок сообщения по указанному индексу.</summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс удаляемого заголовка.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Возвращает или задает адрес узла, которому следует отправлять ответ на запрос.</summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" /> узла, которому следует отправлять ответ на запрос.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Задает элемент действия заголовка.</summary>
      <param name="action">Описание процедуры обработки сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию по коллекции.Наследовать этот метод нельзя.</summary>
      <returns>Объект типа <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Возвращает или задает целевую конечную точку сообщения.</summary>
      <returns>Универсальный код ресурса (URI), содержащий целевую конечную точку сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders">
      <summary>Возвращает все заголовки сообщения, которые должны быть поняты, в соответствии со спецификацией SOAP 1.1/1.2. </summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Channels.UnderstoodHeaders" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует заголовок из заданного расположения с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует заголовок из заданного расположения с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует содержимое заданного заголовка с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует содержимое заданного заголовка с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный заголовок с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует начальный заголовок с помощью заданного модуля записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от нуля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Представляет набор свойств сообщения.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageProperties" /> с предварительно заданными свойствами.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Добавляет элемент с указанными именем и свойством в объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />.Наследовать этот метод нельзя.</summary>
      <param name="name">Имя добавляемого элемента.</param>
      <param name="property">Значение добавляемого элемента. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Возвращает или задает значение, определяющее, сохраняется ли сообщение перед передачей транспорту. </summary>
      <returns>Значение true, если пакетирование исходящих сообщений разрешено; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Удаляет из объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" /> все элементы.Наследовать этот метод нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> указанное имя.Наследовать этот метод нельзя.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением параметра <paramref name="name" />; в противном случае — значение false.</returns>
      <param name="name">Имя для поиска в коллекции <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Копирует содержимое указанного элемента <see cref="T:System.ServiceModel.Channels.MessageProperties" /> в данный экземпляр.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Возвращает общее количество свойств в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Общее количество свойств в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Возвращает кодировщик, который используется для записи сообщений в поток и для чтения сообщений из потока.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, который используется для записи сообщений в поток и для чтения сообщений из потока.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> фиксированный размер.</summary>
      <returns>Значение true, если коллекция <see cref="T:System.ServiceModel.Channels.MessageProperties" /> имеет фиксированный размер; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Возвращает значение, определяющее, является ли данный набор свойств доступным только для чтения.</summary>
      <returns>Значение true, если данный набор свойств доступен только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Извлекает свойство по заданному индексу.</summary>
      <returns>Свойство с заданным именем <paramref name="name" /> или null, если свойство не существует.</returns>
      <param name="name">Имя свойства, извлекаемого из коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Возвращает объект <see cref="T:System.Collections.ICollection" />, который содержит ключи в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, который содержит ключи в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Удаляет элемент с указанным именем из объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" />.Наследовать этот метод нельзя.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением параметра <paramref name="name" /> и его можно удалить; в противном случае — значение false.</returns>
      <param name="name">Имя удаляемого элемента.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Security">
      <summary>Возвращает или задает свойства сообщения, связанные с безопасностью.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})"></member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})"></member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)"></member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})"></member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator"></member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию по коллекции.Наследовать этот метод нельзя.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для перебора элементов коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Определяет, содержит ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> указанное имя, и извлекает его значение.Наследовать этот метод нельзя.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением параметра <paramref name="name" />; в противном случае — значение false.</returns>
      <param name="name">Имя искомого элемента.</param>
      <param name="value">Значение найденного элемента. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Получает значения объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, который содержит значения в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Возвращает или задает адрес транспорта, который используется для отправки сообщений.</summary>
      <returns>Универсальный код ресурса (URI), который содержит адрес транспорта, используемый для отправки сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Задает статус сообщения. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Сообщение создано. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Сообщение читается.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Сообщение записано.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Сообщение скопировано.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Сообщение закрыто и более не является доступным.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Указывает версии SOAP и WS-Addressing, связанные с сообщением и его передачей.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Возвращает или задает версию адресации WS-Addressing, связанной с текущей версией сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, связанный с текущей версией сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Создает объект версии сообщения, используя протокол WS-Addressing версии 1.0 и протокол SOAP указанной версии.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий указанную версию протокола SOAP и протокол WS-Addressing 1.0.</returns>
      <param name="envelopeVersion">Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, указывающий используемую версию протокола SOAP.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="envelopeVersion" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Создает объект версии сообщения с указанными версиями SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий указанные версии протоколов WS-Addressing и SOAP.</returns>
      <param name="envelopeVersion">Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, указывающий версию протокола SOAP.</param>
      <param name="addressingVersion">Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, указывающий используемую версию протокола WS-Addressing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> или <paramref name="addressingVersion" /> равны null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Возвращает версию сообщений, используемую платформой  по умолчанию.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протоколы WS-Addressing 1.0 и SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Возвращает версию SOAP, связанную с текущей версией сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, связанный с текущей версией сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли текущий объект версии сообщения указанному объекту.</summary>
      <returns>Значение true, если заданный объект равен текущему объекту <see cref="T:System.ServiceModel.Channels.MessageVersion" />, в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с текущей версией сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Возвращает хэш-код для текущей версии сообщения.</summary>
      <returns>Уникальный хэш-код для текущего объекта <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Возвращает версию сообщения, не использующую протоколы SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, не использующий протоколы SOAP и WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Возвращает версию сообщения, использующую протокол SOAP 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протокол SOAP 1.1, но без версии протокола WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressing10">
      <summary>Возвращает версию сообщения, использующую протоколы WS-Addressing 1.0 и SOAP 1,1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протоколы WS-Addressing 1.0 и SOAP 1,1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressingAugust2004">
      <summary>Возвращает версию сообщения, используя протоколы WS-Addressing от 10 августа 2004 г. и SOAP 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий адресацию WS-Addressing от 10 августа 2004 г. и протокол SOAP 1,1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12">
      <summary>Возвращает версию сообщения, использующую протокол SOAP 1,2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протокол SOAP 1,2, но без версии протокола WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Возвращает версию сообщения, использующую протоколы WS-Addressing 1.0 и SOAP 1.2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протоколы WS-Addressing 1.0 и SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressingAugust2004">
      <summary>Возвращает версию сообщения, использующую адресацию WS-Addressing, предоставленную в августе 2004 г., и протокол SOAP 1.2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий адресацию WS-Addressing от 10 августа 2004 г. и протокол SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Текущая версия сообщения.</summary>
      <returns>Текущий объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqBindingElementBase">
      <summary>Базовый класс для элементов привязки <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> и <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue">
      <summary>Возвращает или задает универсальный код ресурса <see cref="T:System.Uri" />, используемый для идентификации настраиваемой очереди недоставленных сообщений, в которую помещаются просроченные сообщения и сообщения, которые не удалось доставить.</summary>
      <returns>Универсальный код ресурса (URI) пользовательской очереди недоставленных сообщений. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue">
      <summary>Возвращает или задает значение параметра <see cref="T:System.ServiceModel.DeadLetterQueue" /> для данной привязки.</summary>
      <returns>Тип используемой очереди недоставленных сообщений, если таковая существует.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение находится вне диапазона значений, определенных в <see cref="T:System.ServiceModel.DeadLetterQueue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.Durable">
      <summary>Возвращает или задает значение, указывающее, являются ли сообщения, отправляемые этой привязкой, устойчивыми или переменными.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce">
      <summary>Возвращает или задает значение, показывающее, гарантирована ли однократная доставка сообщений, отправляемых этой привязкой.</summary>
      <returns>Значение true, если гарантирована однократная доставка сообщений, отправляемых этой привязкой; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При переопределении в производном классе извлекает объект заданного типа для предоставленного контекста привязок.</summary>
      <returns>Объект типа <paramref name="T" />.</returns>
      <param name="context">Уровень <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Контекст имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles">
      <summary>Возвращает или задает максимальное число циклов повторных попыток доставки сообщений принимающему приложению.</summary>
      <returns>Значение, задающее число циклов повторных попыток, предпринимаемых перед тем, как поместить сообщение в очередь подозрительных сообщений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.MsmqTransportSecurity">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с этим элементом привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с этим элементом привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveContextEnabled">
      <summary>Возвращает или задает значение, указывающее, запрошено ли поведение контекста получения.</summary>
      <returns>Значение true, если привязка поддерживает поведение контекста получения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling">
      <summary>Возвращает или задает значение перечисления, задающее способ обработки подозрительных сообщений и других сообщений, которые не удается доставить.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее способ обработки подозрительных сообщений и других сообщений, которые не удается доставить.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение находится вне диапазона значений, определенных в <see cref="T:System.ServiceModel.ReceiveErrorHandling" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveRetryCount">
      <summary>Возвращает или задает максимальное число попыток отправки сообщения диспетчером очереди, после чего сообщение помещается в очередь повторных попыток.</summary>
      <returns>Значение, задающее максимальное число попыток отправки сообщения диспетчером очереди, после чего сообщение передается в очередь повторных попыток.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay">
      <summary>Возвращает или задает значение, задающее время ожидания между циклами повторных попыток доставки сообщения, которое не удалось доставить.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению.Значение по умолчанию — 30 (минут).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является бесконечным; оно больше Int32.MaxValue миллисекунд.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждения пользовательской политики, относящиеся к привязкам.</summary>
      <param name="exporter">Средство экспорта<see cref="T:System.ServiceModel.Description.MetadataExporter" />, которое можно использовать для изменения процесса экспорта.</param>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для контракта.</summary>
      <param name="exporter">Средство экспорта <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующее сведения о контракте.</param>
      <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о конечной точке.</param>
      <param name="endpointContext">Обеспечивает сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.TimeToLive">
      <summary>Возвращает или задает значение, задающее срок действия сообщений.По истечении этого срока сообщение помещается в очередь недоставленных сообщений (в зависимости от параметра DeadLetterQueue).</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается срок действия сообщений.Значение по умолчанию — 24 часа.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является бесконечным; оно больше Int32.MaxValue миллисекунд.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.TransactedReceiveEnabled">
      <summary>Возвращает значение, задающее, требуется ли транзакция для получения сообщений, отправляемых этой привязкой.</summary>
      <returns>Значение true, если для выполнения операции получения привязке требуется транзакция; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseMsmqTracing">
      <summary>Возвращает или задает значение, включающее или отключающее встроенную в MSMQ функцию трассировки сообщений.</summary>
      <returns>Значение true, если необходимо включить встроенную трассировку сообщений очереди сообщений (MSMQ); в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseSourceJournal">
      <summary>Возвращает или задает значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если сообщения, обрабатываемые данной привязкой, копируются в очередь журнала источника; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ValidityDuration">
      <summary>Возвращает или задает значение, указывающее время, в течение которого сообщение будет заблокировано функцией контекста получения. </summary>
      <returns>Время, в течение которого сообщение будет заблокировано функцией контекста получения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или больше Int32.MaxValue.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqMessageProperty">
      <summary>Класс <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> инкапсулирует свойства сообщения, которое было прочитано из очереди.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.AbortCount">
      <summary>Возвращает значение <see cref="T:System.Int32" />, указывающее, сколько раз сообщение участвовало в прерванных транзакциях, т. е. число предпринятых каналом попыток — 1.</summary>
      <returns>Значение <see cref="T:System.Int32" />, указывающее, сколько раз канал пытался прочитать это сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.DeliveryFailure">
      <summary>Возвращает значение из перечисления <see cref="T:System.ServiceModel.Channels.DeliveryFailure" />, которое указывает на причину сбоя доставки сообщения.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.Channels.DeliveryFailure" />, которое указывает на причину сбоя доставки сообщения.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.DeliveryStatus">
      <summary>Возвращает значение из перечисления <see cref="T:System.ServiceModel.Channels.DeliveryStatus" />, которое указывает на состояние доставки сообщения.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.Channels.DeliveryStatus" />, которое указывает на состояние доставки сообщения.Может принимать значение null.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqMessageProperty.Get(System.ServiceModel.Channels.Message)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> для заданного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> для указанного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="message">Сообщение <see cref="T:System.ServiceModel.Channels.Message" /> с извлекаемыми свойствами.</param>
      <exception cref="T:System.ArgumentNullException">Значение null или коллекция свойств сообщения равна null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.MoveCount">
      <summary>Возвращает значение <see cref="T:System.Int32" />, указывающее, сколько раз сообщение перемещалось из основной очереди во вложенную или наоборот.</summary>
      <returns>Значение <see cref="T:System.Int32" />, указывающее, сколько раз перемещалось это сообщение.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.MsmqMessageProperty.Name">
      <summary>Возвращает объект <see cref="T:System.String" />, содержащий строку "MsmqMessageProperty".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqTransportBindingElement">
      <summary>Представляет элемент привязки, используемый для указания свойств взаимодействия с использованием очередей для службы , в которой применяется собственный протокол MSMQ.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет построение фабрики канала с использованием предоставленного контекста.</summary>
      <returns>Фабрика канала MSMQ, которую можно использовать для создания каналов для отправки сообщений в существующие приложения MSMQ.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение фабрики канала.</param>
      <typeparam name="TChannel">Класс <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение контекста — null.</exception>
      <exception cref="T:System.ArgumentException">Значение TChannel отлично от IOutputChannel и IOutputSessionChannel.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce имеет значение true, а Durable имеет значение false.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство UseActiveDirectory имеет значение true, а значение свойства QueueTransferProtocol отлично от Native.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство CustomDeadLetterQueue имеет значение, отличное от null, а свойство DeadLetterQueue имеет значение, отличное от Custom.</exception>
      <exception cref="T:System.InvalidOperationException">В Windows 2003/XP свойству DeadLetterQueue присваивается значение «Custom».</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение «false»; свойство DeadLetterQueue имеет значение «Custom».</exception>
      <exception cref="T:System.InvalidOperationException">Задано свойство CustomDeadLetterQueue, и отсутствует разрешение на запись в очередь, или очередь не существует.</exception>
      <exception cref="T:System.InvalidOperationException">Если очередь CustomDeadLetterQueue является нетранзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode задано значение WindowsDomain, и MSMQ установлена без интеграции с ActiveDirectory.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode присвоено значение None, а значение свойства MsmqTransportSecurity.MsmqProtectionLevel отлично от None.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode присвоено значение Certificate или WindowsDomain, а свойство MsmqTransportSecurity.MsmqProtectionLevel имеет значение None.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство MsmqTransportSecurity.MsmqProtectionLevel имеет значение EncryptAndSign, а свойство UseActiveDirectory имеет значение false.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет построение прослушивателя канала с использованием предоставленного контекста.</summary>
      <returns>Прослушиватель канала MSMQ, который можно использовать для создания каналов для получения сообщений из существующих приложений MSMQ.</returns>
      <param name="context">Метод <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение прослушивателя канала.</param>
      <typeparam name="TChannel">Тип канала, используемый при построении прослушивателя канала.Допустимые типы каналов: класс <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение контекста — null.</exception>
      <exception cref="T:System.ArgumentException">Значение TChannel отлично от IInputChannel и IInputSessionChannel.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce имеет значение true, а Durable имеет значение false.</exception>
      <exception cref="T:System.InvalidOperationException">Очередь не доступна для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение true, и очередь является нетранзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение false, и очередь является нетранзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">В Windows Vista свойству ReceiveErrorHandling присвоено значение Move, и имя очереди содержит знак ";".</exception>
      <exception cref="T:System.InvalidOperationException">В Windows Vista свойству ExactlyOnce присвоено значение true, и не удается открыть вложенную очередь повторной отправки.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству ReceiveErrorHandling присвоено значение Reject или Move, и платформой является Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode задано значение WindowsDomain, и MSMQ установлена без интеграции с ActiveDirectory.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode присвоено значение None, а значение свойства MsmqTransportSecurity.MsmqProtectionLevel отлично от None.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству MsmqTransportSecurity.MsmqAuthenticationMode присвоено значение Certificate или WindowsDomain, а свойство MsmqTransportSecurity.MsmqProtectionLevel имеет значение None.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает логическое значение, указывающее, можно ли построить фабрику канала с использованием предоставленного контекста.</summary>
      <returns>Значение true, если возможно выполнить построение фабрики канала с использованием предоставленного контекста; в противном случае — значение false.Элемент привязки возвращает значение true, только если <paramref name="TChannel" /> имеет значение <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> или <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение фабрики канала.</param>
      <typeparam name="TChannel">Тип канала, используемый при построении прослушивателя канала.Допустимые типы каналов: класс <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает логическое значение, указывающее, можно ли построить прослушиватель канала с использованием предоставленного контекста.</summary>
      <returns>Значение true, если можно построить прослушиватель канала с использованием предоставленного контекста; в противном случае — значение false.Привязка возвращает значение true, только если <paramref name="TChannel" /> имеет значение <see cref="T:System.ServiceModel.Channels.IInputChannel" /> или <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" />.</returns>
      <param name="context">Метод <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение прослушивателя канала.</param>
      <typeparam name="TChannel">Тип канала, используемый при построении прослушивателя канала.Допустимые типы каналов: класс <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.Clone">
      <summary>Возвращает клон элемента привязки.</summary>
      <returns>Клон элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize">
      <summary>Возвращает или задает целое число, указывающее максимальный размер пула, содержащего внутренние объекты сообщений очереди сообщений (MSMQ).</summary>
      <returns>Целое число, указывающее максимальный размер пула, содержащего внутренние объекты сообщений очереди сообщений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля. </exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol">
      <summary>Возвращает или задает значение перечисления, которое указывает использующий очереди транспорт коммуникационного канала, используемый данной привязкой.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.QueueTransferProtocol" />, указывающее транспорт, используемый для доставки сообщений между диспетчерами очередей. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.QueueTransferProtocol" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme">
      <summary>Возвращает объект <see cref="T:System.String" />, в котором содержится схема адресации, используемая данным элементом привязки транспорта.</summary>
      <returns>Объект <see cref="T:System.String" />, в котором содержится схема адресации, используемая данным элементом привязки транспорта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory">
      <summary>Возвращает логическое значение, указывающее, следует ли преобразовывать адреса очередей с помощью Active Directory.</summary>
      <returns>Значение true, если адреса очередей необходимо преобразовывать с помощью Active Directory; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement">
      <summary>Элемент привязки, указывающий кодирование и управление версиями для сообщений, использующих механизм оптимизации передачи сообщений (MTOM).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> с указанной версией сообщения и кодировкой символов.</summary>
      <param name="messageVersion">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый для сообщения SOAP.</param>
      <param name="writeEncoding">Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в сообщении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> или <paramref name="encoding" /> равны null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageVersion" /> задается значение <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы заданного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека прослушивателя каналов, принимающего заданный тип канала для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение фабрики заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек фабрики каналов может быть построен в службе; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение прослушивателя заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" />, инициализированный из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику кодировщиков сообщений, кодирующую сообщения MTOM.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, кодирующий сообщения MTOM.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрашиваемый типизированный объект, если он имеется, из соответствующего уровня стека элементов привязки.</summary>
      <returns>The typed object <paramref name="T " /> requested if it is present or null if it is not.</returns>
      <param name="context">Уровень <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буфера.</summary>
      <returns>Максимальный размер буфера.Значение по умолчанию — 65536 (0x10000) байт.</returns>
      <exception cref="T:System.ArgumentNullException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Возвращает или задает максимальное число средств чтения XML, размещенных в пуле и готовых к обработке входящих сообщений.</summary>
      <returns>Максимальное число хранимых в пуле средств чтения.Значение по умолчанию — 64 средства чтения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Возвращает или задает максимальное число модулей записи XML, размещенных в пуле и готовых к обработке исходящих сообщений.</summary>
      <returns>Максимальное число хранимых в пуле модулей записи.Значение по умолчанию — 16 модулей записи.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает используемые или ожидаемые версии сообщения SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый для сообщения SOAP.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentException">Значение <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> недопустимо.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений XML, которые могут обрабатываться конечными точками, настроенными с этим элементом привязки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для участвующих в обмене сообщений SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeMessageVersion">
      <summary>Возвращает значение, которое указывает, должна ли версия структуры сообщения SOAP быть сериализована.</summary>
      <returns>Значение true, если версия SOAP должна быть сериализована, в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, которое указывает, должны ли ограничения, заданные для структуры сообщения SOAP, быть сериализованы.</summary>
      <returns>true, если ограничения сообщения SOAP следует сериализовать, в противном случае — false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeWriteEncoding">
      <summary>Возвращает значение, указывающее должен ли объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в сообщении, быть сериализован.</summary>
      <returns>true, если тип форматирования символов в сообщении следует сериализовать, в противном случае — false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Добавляет утверждение политики в WSDL-код при его создании, указывающее, что используется кодировка MTOM. </summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="policyContext" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Изменяет контракт WSDL, добавляя информацию по механизму оптимизации передачи сообщений (MTOM).</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Добавляет версию сообщения SOAP в WSDL-код.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую для форматирования символов в текстовом сообщении.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в текстовом сообщении.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentException">Заданное значение не является допустимым значением кодировки текста.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings">
      <summary>Представляет параметры, которые управляют поведением пула подключений именованного канала.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.GroupName">
      <summary>Возвращает или задает имя группы пулов подключений на стороне клиента. </summary>
      <returns>Имя группы пулов подключений на стороне клиента.По умолчанию используется имя "default".</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.IdleTimeout">
      <summary>Возвращает или задает максимальный период неактивности подключения в пуле подключений до отключения.</summary>
      <returns>Возвращает структуру <see cref="T:System.TimeSpan" />, которая показывает максимальный период неактивности подключения в пуле подключений до отключения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Возвращает или задает максимальное число исходящих подключений для каждой конечной точки, которая кэшируется в пуле подключений.</summary>
      <returns>Максимальное число разрешенных исходящих подключений для каждой конечной точки, которая кэшируется в пуле подключений.Значение по умолчанию — 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement">
      <summary>Представляет элемент привязки для транспорта именованного канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor(System.ServiceModel.Channels.NamedPipeTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов заданного типа, которая может служить для создания каналов.</summary>
      <returns>Возвращает фабрику каналов заданного типа.</returns>
      <param name="context">Элементы, описывающие привязки, поведение, контракты и другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип создаваемой фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа.</summary>
      <returns>Возвращает прослушиватель каналов заданного типа.</returns>
      <param name="context">Элементы, описывающие привязки, поведение, контракты и другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип создаваемого прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Возвращает копию текущего элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.ConnectionPoolSettings">
      <summary>Возвращает коллекцию параметров пула подключений. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings" />, содержащий различные свойства, связанные с пулами подключений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект из <see cref="T:System.ServiceModel.Channels.BindingContext" /> или null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает схему универсального кода ресурса (URI) для транспорта, в данном случае "net.pipe".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.OneWayBindingElement">
      <summary>Включает поддержку маршрутизации пакетов и использования односторонних методов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует фабрику каналов для создания односторонних каналов из контекста привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />. </returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Тип <paramref name="TChannel" /> — не <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</exception>
      <exception cref="T:System.InvalidOperationException">Внутренний элемент привязки не поддерживает объект <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует прослушиватель каналов для приема односторонних каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.  </param>
      <typeparam name="TChannel">Тип канала, принимаемый прослушивателем.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Тип <paramref name="TChannel" /> — не <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</exception>
      <exception cref="T:System.InvalidOperationException">Внутренний элемент привязки не поддерживает объект <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> или <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать фабрику каналов указанного типа. </summary>
      <returns>Значение true, если можно создать фабрику каналов указанного типа; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.  </param>
      <typeparam name="TChannel">Тип создаваемой фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать прослушиватель каналов указанного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов указанного типа; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.  </param>
      <typeparam name="TChannel">Тип создаваемого прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings">
      <summary>Возвращает параметры пула каналов. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" />, содержащий свойства пула каналов, связанного с этим элементом привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.Clone">
      <summary>Клонирует экземпляр этого класса.</summary>
      <returns>Клонированная копия экземпляра данного класса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойства из стека привязок, если они имеются.</summary>
      <returns>Объект <paramref name="T" /> из стека привязок, если имеется.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.  </param>
      <typeparam name="T">Тип свойства.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels">
      <summary>Возвращает или задает максимальное число принимаемых каналов.</summary>
      <returns>Максимальное число принимаемых каналов.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
      <summary>Возвращает или задает значение, указывающее, включена ли маршрутизация пакетов. </summary>
      <returns>Значение true, если маршрутизация пакетов включена; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings">
      <summary>Возвращает значение, которое указывает, следует ли сериализовать свойства пула каналов, связанных с этим элементом привязки.</summary>
      <returns>Значение true, если параметры пула каналов следует сериализовать; в противном случае ― значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики, представляющее односторонний элемент привязки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exporter" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.OneWayBindingElementImporter">
      <summary>Преобразует политики на основе WSDL в элементах <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> в описания элементов привязки, способных реализовать эти политики для службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.OneWayBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Определяет метод, который может импортировать утверждения пользовательской политики и добавлять реализующие элементы привязки.</summary>
      <param name="importer">Используемый объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий как утверждения политики, которые могут быть импортированы, так и коллекции элементов привязки, в которые могут быть добавлены реализующие элементы привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement">
      <summary>Определяет элемент привязки, используемый для создания пользовательского арбитра одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.Channels.BindingContext,System.ServiceModel.PeerResolvers.PeerCustomResolverSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> с предоставленными контекстом привязок и параметрами распознавателя.</summary>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, который содержит контекст привязок для распознавателей, созданных с помощью этой привязки.</param>
      <param name="settings">Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />, содержащий указанные параметры для новой привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.Channels.PeerCustomResolverBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> клонированием предоставленной привязки пользовательского распознавателя одноранговых узлов.</summary>
      <param name="other">Экземпляр <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" />, который содержит параметры, необходимые для клонирования новой привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.PeerResolvers.PeerCustomResolverSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> с предоставленными параметрами распознавателя.</summary>
      <param name="settings">Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />, содержащий указанные параметры для новой привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Address">
      <summary>Возвращает и задает адрес конечной точки однорангового узла, на котором будут выполняться распознаватели, созданные с помощью этой привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />, который содержит сетевой адрес однорангового узла, на котором будут выполняться распознаватели, созданные с помощью этой привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Binding">
      <summary>Возвращает и задает сетевую привязку, используемую распознавателями, созданными с помощью этого элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, который задает сетевую привязку, используемую распознавателями, созданными с помощью этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может использоваться для создания канала для отправки сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />, содержащий новую фабрику каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Тип создаваемого канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа для получения сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, содержащий новый прослушиватель каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать фабрику каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать прослушиватель каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип прослушивателя каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий копию текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CreatePeerResolver">
      <summary>Создает новый экземпляр пользовательского распознавателя одноранговых узлов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolver" />, содержащий новый пользовательский распознаватель одноранговых узлов с параметрами, предоставленными этому элементу привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок.</param>
      <typeparam name="T">Конкретное свойство, получаемое из контекста привязок.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.ReferralPolicy">
      <summary>Возвращает и задает политику ссылок для распознавателей одноранговых узлов, созданных с помощью этого элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающий политику ссылок для распознавателей одноранговых узлов, созданных с помощью этого элемента привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerResolverBindingElement">
      <summary>Определяет абстрактный базовый класс для элементов привязки, используемых для создания объектов арбитра одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.#ctor(System.ServiceModel.Channels.PeerResolverBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" />, дублируя предоставленный объект <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" />.</summary>
      <param name="other">Копируемый при создании экземпляра этого класса объект <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.CreatePeerResolver">
      <summary>Создает объект арбитра одноранговых узлов с параметрами, определенными этим элементом привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolver" />, используемый при выполнении разрешения адреса по имени однорангового узла.Параметры арбитра одноранговых узлов необходимо определить в элементе привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerResolverBindingElement.ReferralPolicy">
      <summary>Возвращает и задает политику ссылок для арбитров одноранговых узлов, созданных с помощью элементов привязки, которые, в свою очередь, создаются реализациями этого класса.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающее политику ссылок для арбитров одноранговых узлов, созданных с помощью этого элемента привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerTransportBindingElement">
      <summary>Определяет элемент привязки, который используется для создания однорангового канала транспорта сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Channels.PeerTransportBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может использоваться для создания канала для отправки сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />, содержащий новую фабрику каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Тип создаваемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> — null.</exception>
      <exception cref="T:System.InvalidOperationException">В контексте привязок для этой фабрики каналов была задана ручная адресация.</exception>
      <exception cref="T:System.ArgumentException">Тип канала, указанный этим контекстом привязок, не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа для получения сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, содержащий новый прослушиватель каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Тип канала, указанный этим контекстом привязок, не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать фабрику каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать прослушиватель каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип прослушивателя каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий копию текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />. </returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок.</param>
      <typeparam name="T">Конкретное свойство, получаемое из контекста привязок.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.ListenIPAddress">
      <summary>Возвращает и задает IP-адрес, который прослушивает одноранговый транспорт сообщений, созданный этим элементом привязки.</summary>
      <returns>Объект <see cref="T:System.Net.IPAddress" />, содержащий IP-адрес, который прослушивает одноранговый транспорт сообщений, созданный этим элементом привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает и задает значение, указывающее максимальный размер сообщений, передаваемых по каналам транспорта, созданным этим элементом привязки.</summary>
      <returns>Максимальный размер сообщений, передаваемых по каналам транспорта, созданным этим элементом привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Port">
      <summary>Возвращает и задает сетевой порт, который прослушивают одноранговые каналы транспорта сообщений, созданные этим элементом привязки.</summary>
      <returns>Сетевой порт, который прослушивают одноранговые каналы транспорта сообщений, созданные этим элементом привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Scheme">
      <summary>Возвращает схему, которая используется для указания протокола, по которому каналы, созданные этим элементом привязки, передают сообщения.</summary>
      <returns>Схема для протокола, по которому каналы, созданные этим элементом привязки, передают сообщения. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Security">
      <summary>Возвращает специальные параметры безопасности для каналов транспорта, созданных этим элементом привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerSecuritySettings" />, задающий специальные параметры безопасности для каналов транспорта, созданных этим элементом привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Записывает пользовательские элементы однорангового канала транспорта в созданные метаданные для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, экспортирующий метаданные.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы однорангового канала транспорта в созданный код WSDL для контракта.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы однорангового канала транспорта в созданный код WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о конечной точке.</param>
      <param name="endpointContext">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement">
      <summary>Определяет элемент привязки, используемый для создания арбитра одноранговых узлов PNRP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor(System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> с указанной политикой ссылок для одноранговых узлов.</summary>
      <param name="referralPolicy">Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающий политику ссылок для этого арбитра.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может использоваться для создания канала для отправки сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />, содержащий новую фабрику каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Тип создаваемого канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа для получения сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, содержащий новый прослушиватель каналов заданного типа.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать фабрику каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для фабрики каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип создаваемых каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если этот элемент привязки может создать прослушиватель каналов заданного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок для прослушивателя каналов.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, задающий тип прослушивателя каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий копию текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CreatePeerResolver">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.PeerResolver" />, соответствующий требованиям PNRP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolver" />, содержащий новый распознаватель PNRP, который создан с использованием этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, задающий контекст привязок.</param>
      <typeparam name="T">Конкретное свойство, получаемое из контекста привязок.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.ReferralPolicy">
      <summary>Возвращает и задает политику ссылок для арбитра одноранговых узлов PNRP, созданного с помощью данного элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающий политику ссылок для распознавателей одноранговых узлов, созданных с помощью этого экземпляра элемента привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement">
      <summary>Представляет элемент привязки, содержащий политику безопасности для привязки WS-Federation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.#ctor(System.ServiceModel.Channels.PrivacyNoticeBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" /> из существующего элемента.</summary>
      <param name="elementToBeCloned">Элемент <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" />, используемый для инициализации нового элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, являющийся копией текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Отправляет запрос в стек элемента привязки, чтобы проверить, поддерживает ли он определенный интерфейс.</summary>
      <returns>Интерфейс, поддержку которого требуется проверить.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для текущего элемента привязки.</param>
      <typeparam name="T">Интерфейс, поддержку которого требуется проверить.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждения пользовательской политики в отношении уведомлений о конфиденциальности от элементов привязки, содержащих эту политику.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий утверждения привязки и элементы, связанные с политикой.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Url">
      <summary>Возвращает или задает универсальный код ресурса (URI), по которому расположено уведомление о конфиденциальности.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому расположено уведомление о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Version">
      <summary>Возвращает или задает номер версии уведомления о конфиденциальности для привязки.</summary>
      <returns>Номер версии уведомления о конфиденциальности.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter">
      <summary>Импортирует политики на основе WSDL и контракты об уведомлениях о конфиденциальности в описания элементов привязки, которые могут реализовывать эти политики для службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует утверждения пользовательской политики для уведомлений о конфиденциальности и добавляет элементы привязки, реализующие эту политику.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, импортирующий сведения о метаданных.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий импортируемые утверждения политики и коллекции элементов привязки, в которые могут быть добавлены реализующие политику кодирования элементы пользовательской привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ReceiveContext">
      <summary>Создайте производный от этого класса, чтобы реализовать пользовательский конечный автомат для функции контекста получения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ReceiveContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)">
      <summary>Вызывает переход конечного компьютера в прерванное состояние с указанным исключением и значением времени ожидания.</summary>
      <param name="exception">Исключение, вызывающее операцию прерывания.</param>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)">
      <summary>Вызывает переход конечного автомата в прерванное состояние с указанным значением времени ожидания.</summary>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает любую асинхронную операцию прерывания с указанным исключением, временем ожидания, асинхронным обратным вызовом и определяемыми пользователем данными о состоянии.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию прерывания.</returns>
      <param name="exception">Исключение, содержащее причину для операции прерывания.</param>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает любую асинхронную операцию прерывания с указанным временем ожидания, асинхронным обратным вызовом и определяемыми пользователем данными о состоянии.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию прерывания.</returns>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает любую асинхронную операцию завершения с указанным временем ожидания, асинхронным обратным вызовом и определяемыми пользователем данными о состоянии.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию завершения.</returns>
      <param name="timeout">Время ожидания для завершения операции завершения.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)">
      <summary>Вызывает переход конечного компьютера в состояние завершения с указанным значением времени ожидания.</summary>
      <param name="timeout">Время ожидания для завершения операции завершения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию прерывания.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию завершения.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.Fault">
      <summary>Вызывает переход конечного автомата в состояние сбоя.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.ReceiveContext.Faulted">
      <summary>Определяет событие, которое инициируется при возникновении исключения в процессе обмена сообщениями. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContext.Name">
      <summary>Имя контекста получения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)">
      <summary>Вызывается, когда конечный компьютер переходит в состояние прерывания с указанным исключением и значением времени ожидания.</summary>
      <param name="exception">Исключение, содержащее причину для операции прерывания.</param>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)">
      <summary>Вызывается, когда конечный автомат переходит в состояние прерывания с указанным значением времени ожидания.</summary>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается, когда конечный автомат асинхронно переходит в состояние прерывания с указанным исключением, значением времени ожидания, обратным вызовом и данными состояния.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="exception">Исключение, содержащее причину для операции прерывания.</param>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается, когда конечный автомат асинхронно переходит в состояние прерывания с указанным, значением времени ожидания, обратным вызовом и данными состояния.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается, когда конечный автомат асинхронно переходит в состояние завершения с указанным значением времени ожидания, обратным вызовом и данными состояния.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Время ожидания для завершения операции завершения.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)">
      <summary>Вызывается, когда конечный автомат переходит в состояние завершения с указанным значением времени ожидания.</summary>
      <param name="timeout">Время ожидания для завершения операции завершения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)">
      <summary>Вызывается, когда конечный автомат выполняет переход в отброшенное состояние.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)">
      <summary>Вызывается, когда конечный автомат асинхронно выполняет переход в состояние завершения.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)" /></param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.OnFaulted">
      <summary>Вызывается, когда конечный автомат выполняет переход в состояние сбоя.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ReceiveContext.State">
      <summary>Возвращает или задает состояние конечного автомата.</summary>
      <returns>Возвращает текущий контекст получения конечного автомата.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReceiveContext.ThisLock">
      <summary>Объект, который используется для блокировки экземпляра <see cref="T:System.ServiceModel.Channels.ReceiveContext" />.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)">
      <summary>Пытается получить контекст получения от указанного сообщения.</summary>
      <returns>Значение true, если контекст получения был успешно извлечен. В противном случае возвращает значение false. </returns>
      <param name="message">Сообщение.</param>
      <param name="property">Контекст получения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)">
      <summary>Пытается возвратить контекст получения из коллекции свойств указанного сообщения.</summary>
      <returns>Значение true, если контекст получения был успешно извлечен. В противном случае возвращает значение false. </returns>
      <param name="properties">Коллекция свойств сообщения.</param>
      <param name="property">Контекст получения.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ReceiveContextState">
      <summary>Представляет возможные состояния для конечного автомата контекста получения.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Received">
      <summary>Представляет состояние получения.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Completing">
      <summary>Представляет завершающее состояние.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Completed">
      <summary>Представляет завершенное состояние.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Abandoning">
      <summary>Представляет прерывающее состояние.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Abandoned">
      <summary>Представляет прерванное состояние.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.ReceiveContextState.Faulted">
      <summary>Представляет состояние сбоя.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.RedirectionDuration">
      <summary>Представляет время, в течение которого действует перенаправление SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.Create(System.String,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" /> с заданной длительностью и пространством имен.</summary>
      <returns>Длительность перенаправления.</returns>
      <param name="duration">Длительность перенаправления.</param>
      <param name="ns">Пространство имен перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.Equals(System.Object)">
      <summary>Определяет, равен ли текущий экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" /> указанному объекту.</summary>
      <returns>Принимает значение true, если заданный объект равен текущему <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, или значение false — в противном случае.</returns>
      <param name="obj">Объект, сравниваемый с текущим экземпляром <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionDuration.Namespace">
      <summary>Возвращает пространство имен объекта <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</summary>
      <returns>Пространство имен длительности перенаправления.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.op_Equality(System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionDuration)">
      <summary>Возвращает значение, указывающее равенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.op_Inequality(System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionDuration)">
      <summary>Возвращает значение, указывающее неравенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> не равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionDuration.Permanent">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, представляющий постоянное перенаправление.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, содержащий значение, которое представляет постоянное перенаправление.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionDuration.Temporary">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, представляющий временное перенаправление.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, содержащий значение, которое представляет временное перенаправление.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionDuration.ToString">
      <summary>Преобразует текущий объект <see cref="T:System.ServiceModel.Channels.RedirectionDuration" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionDuration.Value">
      <summary>Возвращает значение экземпляра <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />.</summary>
      <returns>Значение длительности перенаправления.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RedirectionException">
      <summary>Представляет ошибку, которая возникает в обработке перенаправления.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channel.RedirectionException" /> с заданными свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Потоковый контекст.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.#ctor(System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionScope,System.Exception,System.ServiceModel.Channels.RedirectionLocation[])">
      <summary>Инициализирует новый экземпляр исключения <see cref="T:System.ServiceModel.Channels.RedirectionException" /> с заданными типами <see cref="T:System.ServiceModel.Channels.RedirectionType" />, <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, внутренним исключением и массивом объектов <see cref="T:System.ServiceModel.Channels.RedirectionLocation" />. </summary>
      <param name="type">Тип перенаправления.</param>
      <param name="duration">Длительность перенаправления.</param>
      <param name="scope">Область перенаправления.</param>
      <param name="innerException">Внутреннее исключение.</param>
      <param name="locations">Расположения для перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.#ctor(System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionScope,System.ServiceModel.Channels.RedirectionLocation[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RedirectionException" /> с заданными типами <see cref="T:System.ServiceModel.Channels.RedirectionType" />, <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, <see cref="T:System.ServiceModel.Channels.RedirectionScope" /> и массивом объектов <see cref="T:System.ServiceModel.Channels.RedirectionLocation" />.</summary>
      <param name="type">Тип перенаправления.</param>
      <param name="duration">Длительность перенаправления.</param>
      <param name="scope">Область перенаправления.</param>
      <param name="locations">Расположения для перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.#ctor(System.String,System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionScope,System.Exception,System.ServiceModel.Channels.RedirectionLocation[])">
      <summary>Инициализирует новый экземпляр исключения <see cref="T:System.ServiceModel.Channels.RedirectionException" /> с заданной строкой сообщения, <see cref="T:System.ServiceModel.Channels.RedirectionType" />, <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, внутренним исключением и массивом объектов <see cref="T:System.ServiceModel.Channels.RedirectionLocation" />.</summary>
      <param name="message">Сообщение перенаправления.</param>
      <param name="type">Тип перенаправления.</param>
      <param name="duration">Длительность перенаправления.</param>
      <param name="scope">Область перенаправления.</param>
      <param name="innerException">Внутреннее исключение.</param>
      <param name="locations">Расположения для перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.#ctor(System.String,System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionDuration,System.ServiceModel.Channels.RedirectionScope,System.ServiceModel.Channels.RedirectionLocation[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RedirectionException" /> с заданным сообщением, <see cref="T:System.ServiceModel.Channels.RedirectionType" />, <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, <see cref="T:System.ServiceModel.Channels.RedirectionScope" /> и массивом объектов <see cref="T:System.ServiceModel.Channels.RedirectionLocation" />.</summary>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
      <param name="type">Тип перенаправления.</param>
      <param name="duration">Длительность перенаправления.</param>
      <param name="scope">Область перенаправления.</param>
      <param name="locations">Расположения для перенаправления.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionException.Duration">
      <summary>Возвращает длительность <see cref="T:System.ServiceModel.Channels.RedirectionDuration" />, связанную с текущим исключением <see cref="T:System.ServiceModel.Channels.RedirectionException" />.</summary>
      <returns>Длительность перенаправления, связанная исключением.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в объекте <see cref="T:System.Runtime.Serialization.SerializationInfo" /> информацию об исключении.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Потоковый контекст.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionException.Locations">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Channels.RedirectionLocation" />, связанную с текущим исключением <see cref="T:System.ServiceModel.Channels.RedirectionException" />.</summary>
      <returns>Коллекция расположений перенаправления. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionException.Scope">
      <summary>Возвращает тип <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, связанный с <see cref="T:System.ServiceModel.Channels.RedirectionException" />.</summary>
      <returns>Область перенаправления, связанная с исключением.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionException.Type">
      <summary>Возвращает тип <see cref="T:System.ServiceModel.Channels.RedirectionType" />, связанный с <see cref="T:System.ServiceModel.Channels.RedirectionException" />.</summary>
      <returns>Тип перенаправления, связанный с исключением. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RedirectionLocation">
      <summary>Представляет адрес, по которому следует перенаправлять последующие запросы. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionLocation.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionLocation" /> с заданным экземпляром <see cref="T:System.Uri" />.</summary>
      <param name="address">URI-адрес перенаправления.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionLocation.Address">
      <summary>Возвращает значение <see cref="T:System.Uri" /> перенаправления.</summary>
      <returns>Адрес, по которому следует перенаправлять последующие запросы.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RedirectionScope">
      <summary>Представляет область перенаправления.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.Create(System.String,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" /> с заданной областью и пространством имен.</summary>
      <returns>Новый экземпляр области перенаправления.</returns>
      <param name="scope">Область перенаправления.</param>
      <param name="ns">Пространство имен перенаправления.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionScope.Endpoint">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, представляющий область перенаправления конечной точки.</summary>
      <returns>Область перенаправления конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.Equals(System.Object)">
      <summary>Определяет, равен ли текущий экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" /> указанному объекту.</summary>
      <returns>Принимает значение true, если заданный объект равен текущему <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, или значение false — в противном случае.</returns>
      <param name="obj">Объект, сравниваемый с текущим экземпляром <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionScope.Message">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, представляющий область перенаправления сообщения.</summary>
      <returns>Область перенаправления сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionScope.Namespace">
      <summary>Возвращает пространство имен объекта <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</summary>
      <returns>Пространство имен области перенаправления.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.op_Equality(System.ServiceModel.Channels.RedirectionScope,System.ServiceModel.Channels.RedirectionScope)">
      <summary>Возвращает значение, указывающее равенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.op_Inequality(System.ServiceModel.Channels.RedirectionScope,System.ServiceModel.Channels.RedirectionScope)">
      <summary>Возвращает значение, указывающее неравенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> не равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionScope.Session">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionScope" />, представляющий область перенаправления сеанса.</summary>
      <returns>Область перенаправления сеанса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionScope.ToString">
      <summary>Преобразует текущий объект <see cref="T:System.ServiceModel.Channels.RedirectionScope" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionScope.Value">
      <summary>Возвращает значение экземпляра <see cref="T:System.ServiceModel.Channels.RedirectionScope" />.</summary>
      <returns>Значение области перенаправления.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RedirectionType">
      <summary>Тип, представляющий тип перенаправления.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionType.Cache">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionType" />, представляющий тип перенаправления кэша.</summary>
      <returns>Тип перенаправления кэша.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.Create(System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RedirectionType" /> с заданными типом и пространством имен перенаправления.</summary>
      <returns>Тип перенаправления.</returns>
      <param name="type">Тип перенаправления.</param>
      <param name="ns">Пространство имен перенаправления.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.Equals(System.Object)">
      <summary>Определяет, равен ли текущий экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionType" /> указанному объекту.</summary>
      <returns>Принимает значение true, если заданный объект равен текущему <see cref="T:System.ServiceModel.Channels.RedirectionType" />, или значение false — в противном случае.</returns>
      <param name="obj">Объект, сравниваемый с текущим экземпляром <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionType.Namespace">
      <summary>Возвращает пространство имен объекта <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</summary>
      <returns>Пространство имен типа перенаправления.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.op_Equality(System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionType)">
      <summary>Возвращает значение, указывающее равенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.op_Inequality(System.ServiceModel.Channels.RedirectionType,System.ServiceModel.Channels.RedirectionType)">
      <summary>Возвращает значение, указывающее неравенство двух экземпляров типов <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</summary>
      <returns>Возвращает значение true, если значения <paramref name="left" /> и <paramref name="right" /> не равны. В противном случае возвращает значение false.</returns>
      <param name="left">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</param>
      <param name="right">Экземпляр <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionType.Resource">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionType" />, представляющий тип перенаправления ресурса.</summary>
      <returns>Тип перенаправления ресурсов.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RedirectionType.ToString">
      <summary>Преобразует текущий объект <see cref="T:System.ServiceModel.Channels.RedirectionType" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionType.UseIntermediary">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.RedirectionType" />, представляющий тип перенаправления использования посредника.</summary>
      <returns>Тип перенаправления ресурсов.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RedirectionType.Value">
      <summary>Возвращает значение объекта <see cref="T:System.ServiceModel.Channels.RedirectionType" />.</summary>
      <returns>Значение типа перенаправления.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ReliableSessionBindingElement">
      <summary>Представляет элемент привязки, который может производить каналы отправки или получения, необходимые для надежного сеанса между конечными точками.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />, определяющий, следует ли сохранять порядок отправки сообщений при доставке.</summary>
      <param name="ordered">Значение true, если следует доставлять сообщения в порядке отправки; в противном случае — значение false.Значение по умолчанию — true.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval">
      <summary>Возвращает или задает промежуток времени, в течение которого пункт назначения простаивает в ожидании перед отправкой подтверждения источнику сообщения при использовании надежных каналов, созданных фабрикой. </summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени, в течение которого служба ожидает перед отправкой подтверждения источнику сообщения.Значение по умолчанию — 2 секунды.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает фабрику, создающую канал заданного типа, которая поддерживает надежный сеанс.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, содержащий сведения, необходимые для создания фабрик, которые могут производить каналы типа <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
      <exception cref="T:System.ArgumentException">Тип <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает прослушиватель, принимающий канал заданного типа, который поддерживает надежный сеанс.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, содержащий сведения, необходимые для создания прослушивателей, которые могут принимать каналы типа <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChannel" />, который должен принимать прослушиватель.</typeparam>
      <exception cref="T:System.ArgumentException">Тип <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли быть создана фабрика каналов для предоставленных канала и контекста, поддерживающая надежный сеанс.</summary>
      <returns>Значение true, если фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> может быть создана; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, содержащий сведения, необходимые для создания фабрик, которые могут производить каналы типа <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли быть создан прослушиватель каналов для предоставленных канала и контекста, поддерживающий надежный сеанс.</summary>
      <returns>Значение true, если прослушиватель <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" />, который может принимать объекты <see cref="T:System.ServiceModel.Channels.IChannel" /> типа <paramref name="TChannel" /> можно построить с помощью элемента привязки; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, содержащий сведения, необходимые для создания прослушивателей, которые могут принимать каналы типа <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">Объект <see cref="T:System.ServiceModel.Channels.IChanne" />l, принимаемый прослушивателем, если прослушиватель создан.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.Clone">
      <summary>Создает копию элемента привязки текущего надежного сеанса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, точная копия текущего элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled">
      <summary>Возвращает или задает значение, указывающее, разрешено ли управление потоком для надежного сеанса.</summary>
      <returns>Значение true, если управление потоком разрешено для надежного сеанса; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство заданного типа из соответствующего контекста привязок.</summary>
      <returns>Свойство типа <paramref name="T" /> с заданным контекстом <paramref name="context" /> или null, если свойство типа <paramref name="T" /> не найдено.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, содержащий сведения, необходимые для извлечения канала типа <paramref name="T" />.</param>
      <typeparam name="T">Тип извлекаемого свойства.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout">
      <summary>Возвращает или задает временной интервал, в течение которого служба остается в бездействии, перед тем как будет закрыта.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается интервал времени, в течение которого служба остается неактивной, перед тем как будет закрыта.Значение по умолчанию — 10 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю, либо больше значений <see cref="F:System.Int32.MaxValue" /> или <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels">
      <summary>Возвращает или задает максимальное число ожидающих каналов для надежного сеанса.</summary>
      <returns>Максимальное число ожидающих каналов.Значение по умолчанию — 4.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю, либо больше, чем 16384.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount">
      <summary>Возвращает или задает максимальное число попыток передачи сообщения во время надежного сеанса.</summary>
      <returns>Максимальное число попыток повторной отправки сообщения.Минимальное значение — 1; максимальное значение — <see cref="F:System.Int32.MaxValue" />; значение по умолчанию — 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize">
      <summary>Возвращает или задает максимальное число сообщений в буфере отправки или получения.</summary>
      <returns>Максимальное число сообщений в буфере.Минимальное значение — 1; максимальное значение — 4096; значение по умолчанию — 32.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно единице, либо больше, чем 4096.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered">
      <summary>Возвращает или задает значение, указывающее, должен ли при доставке сохраняться порядок отправки сообщений.</summary>
      <returns>Значение true, если следует доставлять сообщения в порядке отправки; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion">
      <summary>Возвращает или задает версию протокола WS-ReliableMessaging, заданную в элементе привязки.</summary>
      <returns>Экземпляр, производный от <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> и представляющий собой версию протокола WS-ReliableMessaging, используемую элементом конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Сопоставляет сведения, содержащиеся в элементе привязки надежного сеанса, с элементами WSDL, позволяющими удаленной конечной точке получить доступ к службе с надежным сеансом.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, экспортирующий сведения о привязке из элемента привязки надежного сеанса в элементы WSDL.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который обеспечивает сопоставление экспортированных элементов WSDL с описанием конечной точки.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ReliableSessionBindingElementImporter">
      <summary>Сопоставляет элементы привязки надежного сеанса представлениям соответствующим им утверждениям политики в метаданных.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Преобразует утверждения политики WS-Reliable Message в элементы привязки надежного сеанса в привязке на стороне клиента.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, импортирующий метаданные WSDL в элемент привязки.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> для конечной точки службы, содержащий утверждения политики привязки, которые необходимо преобразовать в элементы привязки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> или <paramref name="importer" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Channels.InvalidChannelBindingException">Считываемое утверждение политики является недопустимым, поскольку оно не соответствует спецификации WS-Reliable Messaging Policy.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.RemoteEndpointMessageProperty">
      <summary>Делает доступным IP-адрес клиента и номер порта, связанный с удаленной конечной точкой, отправившей сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RemoteEndpointMessageProperty.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RemoteEndpointMessageProperty" /> для заданного IP-адреса и порта, указывающих на клиент, с которого отправлено сообщение.</summary>
      <param name="address">IP-адрес удаленной конечной точки, связанной с сообщением.</param>
      <param name="port">Номер порта удаленной конечной точки, связанной с сообщением.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Номер порта меньше нуля или больше, чем 65535 (0xffff).</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Address">
      <summary>Возвращает IP-адрес клиента, с которого было отправлено сообщение.</summary>
      <returns>IP-адрес клиента, с которого было отправлено сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Name">
      <summary>Возвращает строку "System.ServiceModel.Channels.RemoteEndpointMessageProperty".</summary>
      <returns>"System.ServiceModel.Channels.RemoteEndpointMessageProperty"</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Port">
      <summary>Возвращает номер порта клиента, с которого было отправлено сообщение.</summary>
      <returns>Номер порта клиента, с которого было отправлено сообщение.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Предоставляет ответ, связанный с входящим запросом.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>При переопределении в производном классе отменяет обработку запроса, связанного с контекстом. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>При переопределении в производном классе начинает асинхронную операцию ответа на запрос, связанный с текущим контекстом.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ответа.</returns>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции ответа.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ответа.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При переопределении в производном классе начинает асинхронную операцию ответа на запрос, связанный с текущим контекстом, в течение определенного периода времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ответа.</returns>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания ответа на доступный запрос.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции ответа.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ответа.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>При переопределении в производном классе прекращает операцию ответа на контекст запроса, связанный с текущим контекстом.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>При переопределении в производном классе прекращает операцию ответа на контекст запроса, связанный с текущим контекстом в течение определенного периода времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, задающее интервал времени, в течение должна завершиться операция ответа, связанная с текущим контекстом.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Освобождает ресурсы, связанные с контекстом.</summary>
      <param name="disposing">Укажите значение true, чтобы освободить управляемые и неуправляемые ресурсы, или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>При переопределении в производном классе завершает асинхронную операцию ответа на сообщение запроса.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>При переопределении в производном классе отвечает на сообщение запроса.</summary>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>При переопределении в производном классе отвечает на сообщение запроса в течение заданного промежутка времени.</summary>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает интервал времени ожидания ответа на запрос.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>При переопределении в производном классе возвращает сообщение, содержащее запрос.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Освобождает управляемые и неуправляемые ресурсы, связанные с контекстом.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.RetryException">
      <summary>Представляет исключение повторной попытки, с помощью которого узел обмена сообщениями, например <see cref="T:System.ServiceModel.Activities,WorkflowServiceHost" />, может передавать клиенту отмену предпринятой операции.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RetryException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RetryException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RetryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RetryException" /> с заданными свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные сериализации.</param>
      <param name="context">Потоковый контекст.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RetryException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RetryException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RetryException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RetryException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Сообщение исключения.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Абстрактный класс, который (при реализации) представляет элемент привязки, поддерживающий канальную безопасность сообщений SOAP.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.AllowInsecureTransport">
      <summary>Возвращает или задает значение, которое указывает, можно ли отправлять сообщения в смешанном режиме безопасности по безопасному протоколу, например HTTP.</summary>
      <returns>Значение true, если сообщения в смешанном режиме безопасности можно отправлять по небезопасным каналам, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов на основании параметров <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> и переданного контекста привязок.Создаваемая фабрика каналов является фабрикой каналов безопасности сообщений SOAP, в которой содержится ссылка на фабрику каналов, соответствующую контексту привязок (который включает фабрику каналов транспорта).</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При реализации создает фабрику каналов заданного типа.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов на основании параметров <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> и переданного контекста привязок. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При реализации создает прослушиватель каналов заданного типа.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать фабрику каналов указанного типа. </summary>
      <returns>Значение true, если можно создать фабрику каналов указанного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать прослушиватель каналов указанного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов указанного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на анонимную проверку подлинности клиента и проверку подлинности сервера на основании сертификата.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />, который содержит новую привязку.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement">
      <summary>Создает элемент привязки безопасности, настроенный на проверку подлинности клиентов на основе сертификата с использованием средств защиты сообщений SOAP. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Создает элемент привязки безопасности, настроенный на проверку подлинности клиентов на основе сертификата с использованием средств защиты сообщений SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" /> для привязки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateSignatureBindingElement">
      <summary>Создает элемент привязки с использованием сертификата для подписи сообщений.Этот элемент привязки может использоваться только для односторонней передачи сообщений и только для подписи сообщений.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный для требования проверки подлинности клиента с использованием маркера, выпущенного на основании симметричного ключа. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">
        <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuedTokenParameters" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Тип ключа <paramref name="issuedTokenParameters" /> отличается от симметричного.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForCertificateBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании выданного маркера и проверки подлинности сервера на основании сертификата сервера.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuedTokenParameters" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный для затребования проверки подлинности клиента на основании выданного маркера и проверки подлинности сервера на основании сертификата сервера.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuedTokenParameters" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters,System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании выданного маркера и проверки подлинности сервера на основании сертификата сервера.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркер контекста безопасности, а не хранится в памяти сервера.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuedTokenParameters" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании механизмов безопасности SOAP с использованием выпущенного маркера.Этому элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="issuedTokenParameters" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента с использованием маркера Kerberos клиента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosOverTransportBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основе механизмов безопасности SOAP с использованием маркера Kerberos клиента.Этому элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement">
      <summary>Создает асимметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании сертификата и проверки подлинности сервера на основании сертификата.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Создает асимметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании сертификата и проверки подлинности сервера на основании сертификата.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="version">Версия механизмов безопасности сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion,System.Boolean)">
      <summary>Создает асимметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании сертификата и проверки подлинности сервера на основании сертификата.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="version">Версия механизмов безопасности сообщения.</param>
      <param name="allowSerializedSigningTokenOnReply">Указывает, разрешать ли сериализованный маркер подписи в ответе.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement">
      <summary>Создает асимметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании сертификата и проверки подлинности сервера на основании сертификата.Этот режим проверки подлинности может использоваться для защиты шаблонов двустороннего обмена сообщениями и требует настройки сертификата клиента для службы без передачи сертификата по сети.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Создает асимметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании сертификата и проверки подлинности сервера на основании сертификата.Этот режим проверки подлинности может использоваться для защиты шаблонов двустороннего обмена сообщениями и требует настройки сертификата клиента для службы без передачи сертификата по сети.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
      <param name="version">Версия механизмов безопасности сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="version" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на установку защищенного взаимодействия между клиентом и службой.Маркер контекста безопасности, выпущенный после подтверждения безопасного обмена данными, служит для защиты сообщений.Элемент привязки безопасности начальной загрузки указывает, как организуется защита сообщений подтверждения безопасного обмена данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bootstrapSecurity" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на установку защищенного взаимодействия между клиентом и службой.Маркер контекста безопасности, выпущенный после подтверждения безопасного обмена данными, служит для защиты сообщений.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если для этого параметра установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркера контекста безопасности, а не хранится в памяти сервера.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bootstrapSecurity" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на установку защищенного взаимодействия между клиентом и службой.Маркер контекста безопасности, выпущенный после подтверждения безопасного обмена данными, служит для защиты сообщений.Элемент привязки безопасности начальной загрузки указывает, как организуется защита сообщений подтверждения безопасного обмена данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если для этого параметра установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркера контекста безопасности, а не хранится в памяти сервера.</param>
      <param name="bootstrapProtectionRequirements">Объект <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bootstrapSecurity" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на выполнение согласования SSL на уровне SOAP между клиентом и сервером и указывающий, требуется ли сертификат клиента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />, который содержит новую привязку.</returns>
      <param name="requireClientCertificate">Значение true, если в процессе согласования SSL требуется сертификат клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean,System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, выполняющий согласование SSL на уровне SOAP и указывающий, требуется ли сертификат клиента и отмена.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />, который содержит новую привязку.</returns>
      <param name="requireClientCertificate">Значение true, если в процессе согласования SSL требуется сертификат клиента.</param>
      <param name="requireCancellation">Значение true используется, если требуется отмена.Если установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркер контекста безопасности, а не хранится в памяти сервера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, выполняющий согласование SSPI на уровне SOAP на основе пакета проверки подлинности Negotiate.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement(System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, выполняющий согласование SSPI на уровне SOAP на основе пакета проверки подлинности Negotiate.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркер контекста безопасности, а не хранится в памяти сервера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на проверку подлинности клиента на основе согласования SSPI на уровне SOAP с использованием пакета проверки подлинности Negotiate.Элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement(System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на проверку подлинности клиента на основе согласования SSPI на уровне SOAP с использованием пакета проверки подлинности Negotiate.Элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркер контекста безопасности, а не хранится в памяти сервера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании имени пользователя и пароля и проверки подлинности сервера на основании сертификата.Перед открытием коммуникационного канала со службой для созданного элемента привязки требуется настроить на клиенте сертификат службы (без передачи сертификата по сети).</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании имени пользователя и пароля и проверки подлинности сервера на основании сертификата.Клиент проверяет подлинность сервера, используя протокол SSL уровня SOAP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement(System.Boolean)">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на затребование проверки подлинности клиента на основании имени пользователя и пароля и проверки подлинности сервера на основании сертификата.Клиент проверяет подлинность сервера, используя протокол SSL уровня SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Определяет, требуется ли отмена.Если установлено значение false, разрешается использование маркер контекста безопасности, который удобен в сценариях веб-ферм, поскольку в этом режиме состояние сеанса кодируется внутри установленного маркер контекста безопасности, а не хранится в памяти сервера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Создает симметричный элемент привязки безопасности, настроенный на проверку подлинности клиента на основании имени пользователя и пароля, переданных как часть сообщения SOAP.Элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite">
      <summary>Возвращает или задает алгоритмы шифрования сообщений и ключей.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра set — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.EnableUnsecuredResponse">
      <summary>Возвращает или задает значение, указывающее, может ли  отправлять и получать небезопасные ответы или безопасные запросы.</summary>
      <returns>Значение true, если  может отправлять и получать небезопасные ответы на безопасные запросы, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters">
      <summary>Возвращает конечную точку, которая поддерживает параметры маркера.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект с использованием указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Возвращает или задает значение, которое указывает, будут ли отметки времени включаться в каждое сообщение. </summary>
      <returns>Значение true, если отметки времени включаются в каждое сообщение; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode">
      <summary>Возвращает или задает источник энтропии, используемый для создания ключей.</summary>
      <returns>Объект <see cref="T:System.serviceModel.Security.SecurityKeyEntropyMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Возвращает свойства привязки, связанные с локальными параметрами безопасности клиента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings">
      <summary>Возвращает свойства привязки, связанные с локальными параметрами безопасности службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion">
      <summary>Возвращает или задает версию системы безопасности для защиты сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
      <exception cref="T:System.ArgumentNullException">set со значением null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters">
      <summary>Возвращает коллекцию параметров маркеров, поддерживающих операцию.</summary>
      <returns>Словарь <see cref="T:System.Collections.Generic.IDictionary`2" /> типов <see cref="T:System.String" /> (ключ) и <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (значение).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters">
      <summary>Возвращает дополнительную коллекцию параметров поддерживающих маркеров для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters">
      <summary>Возвращает коллекцию дополнительную параметров маркеров, поддерживающих операцию.</summary>
      <returns>Словарь <see cref="T:System.Collections.Generic.IDictionary`2" /> типов <see cref="T:System.String" /> (ключ) и <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (значение).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout">
      <summary>Возвращает или задает порядок элементов в заголовке безопасности для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />.Значение по умолчанию — <see cref="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не является допустимым значением <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetIssuerBindingContextIfRequired(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Channels.BindingContext)">
      <summary>Внутренний системный метод.</summary>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
      <param name="issuerBindingContext">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Задает значение, показывающее, необходимы ли производные ключи.</summary>
      <param name="requireDerivedKeys">Необходимы ли производные ключи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.ToString">
      <summary>Возвращает описание этого класса.</summary>
      <returns>Описание текущего экземпляра <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElementImporter">
      <summary>Предоставляет точку расширяемости для расширения импорта стандартной политики безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.SecurityBindingElementImporter" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElementImporter.MaxPolicyRedirections">
      <summary>Возвращает максимально возможное число перенаправлений политики.</summary>
      <returns>Максимально возможное число перенаправлений политики.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует утверждение пользовательской политики о привязках.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, который можно использовать для изменения процесса импорта.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityHeaderLayout">
      <summary>Описывает структуру заголовка безопасности.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict">
      <summary>Элементы добавляются в заголовок безопасности в соответствии с общим принципом «объявление перед использованием».</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Lax">
      <summary>Элементы добавляются в заголовок безопасности в любом порядке, отвечающем требованиям безопасности сообщений WSS: SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampFirst">
      <summary>Элементы добавляются в заголовок безопасности в любом порядке, который соответствует требованиям безопасности сообщений WSS: SOAP, за исключением того, что первым элементом в заголовке безопасности должен быть wsse:Timestamp.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampLast">
      <summary>Элементы добавляются в заголовок безопасности в любом порядке, который соответствует требованиям безопасности сообщений WSS: SOAP, за исключением того, что последним элементом в заголовке безопасности должен быть wsse:Timestamp.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement">
      <summary>Представляет пользовательский элемент привязки, который поддерживает безопасность канала с помощью потока SSL.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />, используя значения из другого объекта <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />.</summary>
      <param name="elementToBeCloned">Клонируемый объект <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов заданного типа.</summary>
      <returns>Объект <see cref="T:System.serviceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Объект <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа.</summary>
      <returns>Объект <see cref="T:System.serviceModel.Channels.IChannelListener" />.</returns>
      <param name="context">Объект <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает экземпляр в клиенте поставщика <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает на сервере экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать фабрику каналов указанного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов указанного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, определяющее, можно ли создать прослушиватель каналов указанного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов указанного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone">
      <summary>Создает копию текущего экземпляра.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />, являющийся копией текущего экземпляра.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion">
      <summary>Возвращает <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в привязке безопасности.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в привязке безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier">
      <summary>Задает средство проверки удостоверения для этой привязки. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение, которое необходимо задать, равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate">
      <summary>Возвращает или задает значение, указывающее, требуется ли для этой привязки сертификат клиента.</summary>
      <returns>Значение true, если для этой привязки требуется сертификат клиента; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier">
      <summary>Возвращает значение, которое указывает, следует ли сериализовать средство проверки удостоверения.</summary>
      <returns>Значение true, если средство проверки удостоверения следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StandardBindingImporter">
      <summary>Предоставляет точку расширения для сопоставления контрактов WSDL и утверждений политики со стандартными привязками .</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StandardBindingImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Вызывается до импорта документов метаданных, связанных со стандартной привязкой.</summary>
      <param name="wsdlDocuments">Объект <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> с описанием служб.</param>
      <param name="xmlSchemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, описывающий объект <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.Xml.XmlElement" />, содержащий элементы политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Предоставляет точку расширения для импорта сведений о контракте WSDL для стандартных привязок.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> для импорта и разрешения метаданных WSDL.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, предоставляющий контекст для преобразования элементов WSDL в описание службы.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Предоставляет точку расширения для сопоставления конечных точек, определенных в WSDL, с описанием службы.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> для импорта и разрешения метаданных WSDL.</param>
      <param name="endpointContext">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> для преобразования.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor">
      <summary>Чтобы реализовать пользовательский акцептор обновления безопасности, необходимо сделать его производным от этого абстрактного (abstract) базового класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity">
      <summary>Возвращает свойство сообщения безопасности, предоставляемое в потоке для выполнения пользовательского согласования безопасности на основе информации, предоставляемой в контексте безопасности.</summary>
      <returns>Возвращает объект <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator">
      <summary>Чтобы реализовать инициатор обновления безопасности, необходимо наследовать его от этого базового класса abstract.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.GetRemoteSecurity">
      <summary>Возвращает свойство сообщения безопасности, предоставляемое в потоке для выполнения пользовательского согласования безопасности на основе информации, предоставляемой в контексте безопасности.</summary>
      <returns>Возвращает объект <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider">
      <summary>Реализует пользовательского поставщика обновления, наследуемого от этого базового класса abstract.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" />.</summary>
      <param name="timeouts">Значения по умолчанию для времени ожидания связи.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity">
      <summary>Возвращает идентификатор, используемый для обновления безопасности.</summary>
      <returns>Возвращает объект <see cref="T:System.ServiceModel.EndpointIdentity" /> клиента, запрашивающего обновление безопасности.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeAcceptor">
      <summary>Чтобы реализовать акцептор пользовательского обновления, необходимо унаследовать его от этого абстрактного (abstract) базового класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)">
      <summary>Обновляет поток транспорта и возвращает обновленный поток.</summary>
      <returns>Возвращает обновленный поток.</returns>
      <param name="stream">Обновляемый поток.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>Асинхронный вариант метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</summary>
      <returns>Возвращает результирующий код, который передается методу EndAcceptUpgrade для доступа к обновленному потоку.</returns>
      <param name="stream">Обновляемый поток.</param>
      <param name="callback">Метод, вызываемый после завершения вызова метода AcceptUpgrade.</param>
      <param name="state">Информация о состоянии для вызова метода AcceptUpgrade.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)">
      <summary>Определяет, поддерживается ли запрошенное обновление текущим акцептором обновления.</summary>
      <returns>Значение true, если данное обновление поддерживается; в противном случае — значение false. </returns>
      <param name="contentType">Тип содержимого, которое требуется проверить. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)">
      <summary>Асинхронный вариант метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</summary>
      <returns>Возвращает обновленный поток.</returns>
      <param name="result">Результат IAsyncResult, возвращенный методом BeginAcceptUpgrade.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeBindingElement">
      <summary>Добавляет в пользовательскую привязку пользовательский поставщик обновления потока.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor(System.ServiceModel.Channels.StreamUpgradeBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" /> из существующего экземпляра. </summary>
      <param name="elementToBeCloned">Экземпляр этого класса, который необходимо клонировать.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает экземпляр в клиенте поставщика <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает на сервере экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
      <summary>Чтобы реализовать пользовательский инициатор обновления, необходимо наследовать его от этого базового класса abstract.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>Этот метод abstract может быть реализован для асинхронной обработки, инициирующей обновление.</summary>
      <returns>Возвращает объект <see cref="T:System.IAsyncResult" />, передаваемый в метод <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />.</returns>
      <param name="stream">Обновляемый поток.</param>
      <param name="callback">Метод, вызываемый после завершения метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />.</param>
      <param name="state">Сведения о состоянии асинхронного вызова.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
      <summary>Этот метод является методом обратного асинхронного вызова, который вызывается после завершения метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</summary>
      <returns>Возвращает обновленный поток.</returns>
      <param name="result">IAsyncResult, возвращен методом <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
      <summary>Возвращает тип содержимого следующего выполняемого обновления.</summary>
      <returns>Возвращает тип содержимого следующего обновления.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
      <summary>Инициирует обновление потока, отправляя другому концу подключения запрос на обновление транспортного уровня канала. </summary>
      <returns>Возвращает обновленный поток.</returns>
      <param name="stream">Обновляемый поток.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeProvider">
      <summary>Реализует пользовательского поставщика обновления, наследуемого от этого базового класса abstract.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</summary>
      <param name="timeouts">Значения по умолчанию для времени ожидания связи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</summary>
      <returns>Возвращает экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</summary>
      <returns>Возвращает экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</returns>
      <param name="remoteAddress">Адрес конечной точки для канала.</param>
      <param name="via">Адрес транзитного URI (промежуточного URI, через который может проходить маршрутизация связи).</param>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout">
      <summary>Возвращает DefaultCloseTimeout.</summary>
      <returns>Возвращает <see cref="T:System.Timespan" /> для DefaultCloseTimeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout">
      <summary>Возвращает DefaultOpenTimeout.</summary>
      <returns>Возвращает <see cref="T:System.Timespan" /> для DefaultOpenTimeout.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1">
      <summary>При реализации в производном классе возвращает свойство текущего потока, которое представляет инициатор обновления потока.</summary>
      <returns>Инициатор обновления потока.</returns>
      <typeparam name="T">Тип текущего потока.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.SupportedAddressingMode">
      <summary>Указывает, поддерживает ли служба отправку ответов только на анонимные адреса, только на неанонимные адреса, или на оба типа адресов.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous">
      <summary>Сервер поддерживает только анонимные адреса и клиенты должны предоставлять анонимный обратный адрес.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous">
      <summary>Сервер поддерживает только неанонимные адреса и клиенты должны предоставлять неанонимный обратный адрес.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed">
      <summary>Сервер поддерживает анонимные и неанонимные адреса и клиенты могут выбрать использовать один из них или оба.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement">
      <summary>Представляет элемент пользовательской привязки, поддерживающий безопасность канала с помощью симметричного шифрования.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> с использованием заданных параметров маркера безопасности. </summary>
      <param name="protectionTokenParameters">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone">
      <summary>Создает новый экземпляр этого класса, инициализированный из текущего.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" /> со значениями свойств, равными значениям свойств текущего экземпляра.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder">
      <summary>Возвращает или задает порядок шифрования и подписи сообщений для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" />, задающий способы защиты сообщения.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметры set и value не определены.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters">
      <summary>Возвращает или задает параметры маркера защиты.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation">
      <summary>Возвращает или задает значение, показывающее, необходимо ли подтверждать сигнатуры сообщений. </summary>
      <returns>Значение true, если сигнатуры сообщений необходимо подтверждать; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Задает значение, показывающее, необходимы ли производные ключи.</summary>
      <param name="requireDerivedKeys">Необходимы ли производные ключи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString">
      <summary>Возвращает строку, представляющую данный экземпляр <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</summary>
      <returns>Текущий экземпляр <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpConnectionPoolSettings">
      <summary>Представляет свойства, которые управляют поведением пула подключений TCP.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.GroupName">
      <summary>Возвращает или задает имя группы пулов подключений на стороне клиента.</summary>
      <returns>Имя группы пулов подключений на стороне клиента.По умолчанию используется имя "default".</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.IdleTimeout">
      <summary>Возвращает или задает максимальный период неактивности подключения в пуле подключений до отключения.</summary>
      <returns>Возвращает структуру <see cref="T:System.TimeSpan" />, которая показывает максимальный период неактивности подключения в пуле подключений до отключения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout">
      <summary>Возвращает или задает промежуток времени до закрытия подключения в пуле подключений.</summary>
      <returns>Возвращает структуру <see cref="T:System.TimeSpan" />, которая показывает промежуток времени, после которого кэшированное подключение TCP удаляется из пула подключений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не может быть меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Возвращает или задает максимальное число исходящих подключений для каждой конечной точки, которая кэшируется в пуле подключений.</summary>
      <returns>Максимальное число разрешенных исходящих подключений для каждой конечной точки, которая кэшируется в пуле подключений.Значение по умолчанию — 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpTransportBindingElement">
      <summary>Представляет элемент привязки для транспорта TCP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может служить для создания канала.</summary>
      <returns>Возвращает фабрику каналов заданного типа.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа.</summary>
      <returns>Возвращает прослушиватель каналов заданного типа.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Возвращает копию текущего элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings">
      <summary>Возвращает коллекцию параметров пула подключений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" />, содержащий различные свойства, связанные с пулами подключений.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy">
      <summary>Возвращает или задает текущую расширенную политику защиты.</summary>
      <returns>Расширенная политика защиты.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.LegacyExtendedProtectionPolicy">
      <summary>Возвращает или задает расширенную политику защиты прежних версий.</summary>
      <returns>Расширенная политика защиты прежних версий.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog">
      <summary>Возвращает или задает максимально допустимое количество ожидающих запросов на подключение в очереди.</summary>
      <returns>Возвращает максимально допустимое количество ожидающих запросов на подключение в очереди.Значение по умолчанию — 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение не может быть меньше единицы.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли совместное использование порта TCP для этого соединения.</summary>
      <returns>Значение true, если совместное использование порта TCP включено; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает схему универсального кода ресурса (URI) для транспорта, в данном случае "net.tcp".</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy">
      <summary>Возвращает указание о том, что расширенная политика защиты не может быть сериализована по XAML.</summary>
      <returns>Возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Возвращает значение, показывающее, следует ли сериализовать расширенную политику защиты прежних версий.</summary>
      <returns>Значение true, если расширенную политику защиты прежних версий следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled">
      <summary>Возвращает или задает логическое значение, указывающее, включена ли технология Teredo (технология адресации клиентов, защищенных брандмауэром).</summary>
      <returns>Значение true, если технология Teredo включена; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Элемент привязки, задающий кодировку и управление версиями сообщений для текстовых сообщений SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> с указанной версией сообщения и кодированием.</summary>
      <param name="messageVersion">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый для версии сообщения.</param>
      <param name="writeEncoding">Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в сообщении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> или <paramref name="writeEncoding" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="writeEncoding" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы заданного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов на стороне службы, принимающей заданный тип канала для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение прослушивателя заданного типа каналов и контекста.</summary>
      <returns>Значение true, если заданный стек прослушивателей каналов может быть построен на стороне службы; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" /> для прослушивателя.</param>
      <typeparam name="TChannel">Тип канала, принимаемого прослушивателем каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />, инициализированный из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику для текстовых кодировщиков сообщений, которые используют версию сообщения и кодировку, заданную текущим элементом привязки кодирования.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, созданный данной фабрикой.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрашиваемый типизированный объект, если он имеется, из соответствующего уровня стека элементов привязки.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Уровень <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Возвращает или задает число средств чтения, выделенных пулу и готовых к обработке входящих сообщений.</summary>
      <returns>Число средств записи в пуле.Значение по умолчанию — 64 средства чтения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Возвращает или задает число модулей записи, выделенных пулу и готовых к обработке исходящих сообщений.</summary>
      <returns>Максимальное число хранимых в пуле модулей записи.Значение по умолчанию — 16 модулей записи.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше или равно нулю.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает используемые для форматирования текстового сообщения версии протоколов SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый для форматирования сообщений.Значение по умолчанию — <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, который задает ограничения по сложности для участвующих в обмене сообщений SOAP.Значения по умолчанию для этих ограничений приведены в следующем разделе «Примечания».</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>Возвращает значение, которое указывает, должны ли ограничения, заданные для структуры сообщения SOAP, быть сериализованы.</summary>
      <returns>true, если ограничения сообщения SOAP следует сериализовать, в противном случае — false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ShouldSerializeWriteEncoding">
      <summary>Возвращает значение, указывающее должен ли объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в сообщении, быть сериализован.</summary>
      <returns>true, если тип форматирования символов в сообщении следует сериализовать, в противном случае — false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Создает контрактные данные WSDL из политик кодирования, содержащихся в элементе привязки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Создает контрактные данные WSDL из политик кодирования, содержащихся в элементе привязки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Создает контрактные данные WSDL из политик кодирования, содержащихся в элементе привязки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, обеспечивающий сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую для форматирования символов в текстовом сообщении.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в текстовом сообщении.По умолчанию используется кодировка UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="writeEncoding" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionFlowBindingElement">
      <summary>Представляет элемент конфигурации, задающий поддержку потока транзакций для привязки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor(System.ServiceModel.TransactionProtocol)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> с заданным протоколом, используемым для передачи транзакции.</summary>
      <param name="transactionProtocol">Значение <see cref="T:System.ServiceModel.TransactionProtocol" />, содержащее протокол транзакций, используемый при передаче транзакции.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction">
      <summary>Возвращает или задает значение, указывающее, разрешено ли клонирование подстановочного действия в элементе привязки потока транзакций.</summary>
      <returns>Значение true, если клонирование подстановочного действия разрешено, в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует фабрику каналов для создания каналов заданного типа из контекста привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, который нужно использовать для построения фабрики каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Фабрику каналов указанного типа создать невозможно.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует прослушиватель канала для приема каналов определенного типа из контекста привязок.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <paramref name="TChannel" />, инициализированный из параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, который нужно использовать для построения прослушивателя каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Прослушиватель каналов указанного типа создать невозможно.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли заданный контекст привязки выполнить построение фабрики каналов для создания каналов определенного типа.</summary>
      <returns>Значение true, если можно создать из параметра <paramref name="context" /> фабрику каналов указанного типа; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, который используется, чтобы определить, можно ли создать фабрику каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли заданный контекст привязок выполнить построение прослушивателя каналов для приема каналов заданного типа.</summary>
      <returns>Значение true, если прослушиватель канала для заданного типа канала можно построить из параметра <paramref name="context" />; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, который используется, чтобы определить, можно ли создать прослушиватель каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.Clone">
      <summary>Создает дубликат этого элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, являющийся дубликатом этого элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует. </returns>
      <param name="context">Конструктор <see cref="T:System.ServiceModel.Channels.BindingContext" />, который нужно использовать для получения запрашиваемого свойства.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.ShouldSerializeTransactionProtocol">
      <summary>Возвращает значение, указывающее, можно ли сериализовать протокол транзакций, используемый для потока транзакций.</summary>
      <returns>Значение true, если протокол транзакций можно сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязке.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, используемый при экспорте политики этого элемента привязки.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, используемый при экспорте политики этого элемента привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol">
      <summary>Возвращает или задает протокол транзакций, используемый при передаче транзакции.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, задающий протокол транзакций, используемый для потока транзакций.Значение по умолчанию — <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionFlowBindingElementImporter">
      <summary>Импортирует политику транзакций (утверждения WS-Policy) конечной точки службы, добавляет реализующие элементы привязки в привязку на клиенте и атрибуты потока транзакций к соответствующим операциям на прокси службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует утверждения пользовательской политики и добавляет реализующие элементы привязки.Наследовать этот метод нельзя.</summary>
      <param name="importer">Используемый объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий как утверждения политики, которые могут быть импортированы, так и коллекции элементов привязки, в которые могут быть добавлены реализующие элементы привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionMessageProperty">
      <summary>Разрешает пользовательскому каналу, использующему собственный механизм потока транзакций, встраивать свою транзакцию в инфраструктуру .Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
      <summary>Задает транзакцию, которая будет использоваться при выполнении метода службы.</summary>
      <param name="transaction">Транзакция, которая будет использоваться при выполнении метода службы.</param>
      <param name="message">Входящее сообщение, которое приводит к вызову метода службы.</param>
      <exception cref="T:System.ServiceModel.FaultException">Этому свойству уже было задано значение <paramref name="message" />.</exception>
      <exception cref="T:System.Transactions.TransactionException">Параметр <paramref name="transaction" /> должен быть распакованным, но операция распаковки дает сбой.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransactionMessageProperty.Transaction">
      <summary>Возвращает транзакцию, которая будет использоваться при выполнении метода службы.</summary>
      <returns>Экземпляр <see cref="T:System.Transactions.Transaction" />, который будет использоваться при выполнении метода службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransferSession">
      <summary>Определяет, требует ли сеанса контракт для передачи сообщений от клиента к приложению и должен ли при доставке сообщений сохраняться порядок вызова операций клиентом. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.None">
      <summary>Указывает, что для взаимодействия со службами по данному контракту сеанс не требуется. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.Ordered">
      <summary>Указывает, что для взаимодействия со службами по данному контракту требуется сеанс с упорядоченной доставкой сообщений. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.Unordered">
      <summary>Указывает, что для взаимодействия со службами по данному контракту достаточно сеанса с неупорядоченной доставкой сообщений. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Базовый класс abstract, представляющий элемент привязки транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Создает новый экземпляр данного класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Создает новый экземпляр данного класса из существующего экземпляра.</summary>
      <param name="elementToBeCloned">Элемент привязки <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, точную копию которого необходимо создать. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Возвращает или задает значение, показывающее, требуется ли создание адреса сообщения вручную.</summary>
      <returns>Значение true, если необходимо создать адрес сообщения вручную; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальное значение буферных пулов, используемых транспортом. </summary>
      <returns>Максимальный размер буферного пула.Значение по умолчанию — 524 288 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает и задает максимально допустимый размер принимаемого сообщения.</summary>
      <returns>Максимально допустимый размер принимаемого сообщения.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает схему универсального кода ресурса (URI) для транспорта, которая зависит от производного класса, реализующего данный метод.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElementImporter">
      <summary>Импортирует элементы стандартной транспортной привязки из документов Web Services Description Language (WSDL) со связанными выражениями политики.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TransportBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Импортирует экземпляр <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> из политики, прикрепленной к привязке WSDL.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />, выполняющий импорт.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> для элемента привязки контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Добавляет утверждения пользовательской политики в привязки WSDL в импортируемых документах WSDL.</summary>
      <param name="wsdlDocuments">Коллекция импортируемых документов WSDL.</param>
      <param name="xmlSchemas">Коллекция импортируемых документов схемы XML.</param>
      <param name="policy">Коллекция импортируемых утверждений политики.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Этот метод не выполняет никаких действий.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" />, выполняющий импорт.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> для элемента привязки контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Импортирует адреса из порта WSDL и объект <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> или <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> из универсального кода ресурса (URI) транспорта SOAP, если объект <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> еще не был импортирован из политики, прикрепленной к WSDL.</summary>
      <param name="importer">Объект <see cref="T:System.ServiceModel.Description.WsdlImporter" />, выполняющий импорт.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> для элемента привязки контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" />.Endpoint.Binding — null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Представляет элемент пользовательской привязки, поддерживающий безопасность в смешанном режиме (например, оптимизированная безопасность сообщений, передаваемых по безопасному транспорту).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, инициализированный из текущего класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" /> со значениями свойств, равными значениям свойств текущего экземпляра.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" /> или значение null, если объект не найден.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.UnderstoodHeaders">
      <summary>Представляет коллекцию понятных заголовков сообщения.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Add(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Добавляет указанный объект <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> в эту коллекцию.Это подразумевает, что определенный заголовок понятен.</summary>
      <param name="headerInfo">Содержит дополнительные сведения о заголовке сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Contains(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Проверяет, присутствует ли указанный объект <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> в этой коллекции.</summary>
      <returns>Значение true, если указанный объект <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> присутствует в этой коллекции; в противном случае ― значение false.</returns>
      <param name="headerInfo">Содержит дополнительные сведения о заголовке сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для итерации по коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Remove(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Удаляет заданный объект <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> из этой коллекции.</summary>
      <param name="headerInfo">Содержит дополнительные сведения о заголовке сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для итерации по коллекции.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement">
      <summary>Элемент привязки, используемый для связи со службой маркеров безопасности , которая поддерживает профиль WS-Trust .</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.Clone">
      <summary>Копирует текущий элемент привязки.</summary>
      <returns>Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, являющийся копией текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение null, если объект отсутствует.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</param>
      <typeparam name="T">Запрашиваемый тип объекта.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждения пользовательской политики в элементе привязки в информацию WSDL.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter">
      <summary>Преобразует политики на основе WSDL для элементов <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement" /> в описания элементов привязки, способных реализовать эти политики для службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Определяет метод, который может импортировать утверждения пользовательской политики и добавлять реализующие элементы привязки.</summary>
      <param name="importer">Используемый объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</param>
      <param name="policyContext">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий как утверждения политики, которые могут быть импортированы, так и коллекции элементов привязки, в которые могут быть добавлены реализующие элементы привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement">
      <summary>Представляет элемент привязки, используемый для задания параметров безопасности потока Windows.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.WindowsStreamSecurityBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" /> из существующего экземпляра. </summary>
      <param name="elementToBeCloned">Клонируемый экземпляр этого класса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может служить для создания канала.</summary>
      <returns>Возвращает фабрику каналов заданного типа.Данный метод добавляет этот экземпляр класса в <see cref="P:System.ServiceModel.Channels.BindingContext.BindingParameters" /> и делегирует в метод построения <see cref="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1" />.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает прослушиватель каналов заданного типа.</summary>
      <returns>Возвращает прослушиватель каналов заданного типа.Данный метод добавляет этот экземпляр класса в <see cref="P:System.ServiceModel.Channels.BindingContext.BindingParameters" /> и делегирует в метод построения <see cref="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelListener``1" />.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания прослушивателя каналов.</param>
      <typeparam name="TChannel">Тип прослушивателя каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает экземпляр в клиенте поставщика <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает на сервере экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> на основе предоставленного контекста канала.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для всего стека каналов.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов; в противном случае — значение false.</returns>
      <param name="context">Контекст привязок.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать прослушиватель каналов заданного типа.</summary>
      <returns>Значение true, если можно создать прослушиватель каналов; в противном случае — значение false.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.Clone">
      <summary>Создает новый элемент привязки из этого экземпляра класса.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект, возвращаемый из объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />, или значение null, если объект не найден.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемый объект.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.GetTransportTokenAssertion">
      <summary>Возвращает <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в привязке безопасности.</summary>
      <returns>
        <see cref="T:System.Xml.XmlElement" />, представляющий маркер транспорта, который используется в созданной этой привязкой политике.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.ProtectionLevel">
      <summary>Возвращает или задает уровень защиты.</summary>
      <returns>Уровень защиты <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Экспортирует утверждение пользовательской политики о безопасности потока Windows.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WrappedOptions">
      <summary>Содержит сведения, необходимые для импорта схемы при помощи инфраструктуры <see cref="T:System.Xml.Serialization.XmlSerializer" /> и <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WrappedOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WrappedOptions" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.WrappedOptions.WrappedFlag">
      <summary>Возвращает или задает значение, определяющее используется ли особый подход для документов стиля document-wrapped-literal, если параметры не имеют оболочки. </summary>
      <returns>Значение true, если используется особый подход для документов стиля document-wrapped-literal, при этом параметры не имеют оболочки; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.XmlSerializerImportOptions">
      <summary>Содержит сведения, необходимые для импорта схемы при помощи инфраструктуры <see cref="T:System.Xml.Serialization.XmlSerializer" /> и <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.XmlSerializerImportOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.XmlSerializerImportOptions" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.XmlSerializerImportOptions.#ctor(System.CodeDom.CodeCompileUnit)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.XmlSerializerImportOptions" /> с заданным объектом <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="codeCompileUnit">Объект, предоставляющий контейнер для графика программы <see cref="T:System.CodeDOM" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.ClrNamespace">
      <summary>Возвращает или задает свойство <see cref="P:System.Runtime.Serialization.ClrNamespace" />, которое содержит типы, сопоставляемые с пространством имен XML.</summary>
      <returns>Объект, содержащий сопоставляемые типы.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.CodeCompileUnit">
      <summary>Возвращает объект <see cref="T:System.CodeDom.CodeCompileUnit" />, предоставляющий контейнер для графика программы <see cref="T:System.CodeDOM" />.</summary>
      <returns>Объект, предоставляющий контейнер для графика программы.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.CodeProvider">
      <summary>Возвращает или задает объект <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, который проверяет, поддерживаются ли определенные параметры для целевого языка. </summary>
      <returns>Объект, который проверяет параметры целевого языка.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.WebReferenceOptions">
      <summary>Возвращает или задает объект <see cref="T:System.Web.Services.Description.WebReferenceOptions" />, который содержит параметры создания кода, заданные в текстовом файле XML.</summary>
      <returns>Объект, содержащий параметры создания кода.</returns>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.DllHostInitializer">
      <summary>Этот класс предоставляет реализацию интерфейса <see cref="T:System.EnterpriseServices.IProcessInitializer" /> для инициализации служб интеграции COM+ .Он не предназначен для непосредственного использования.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ComIntegration.DllHostInitializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.Shutdown">
      <summary>Завершает работу всех узлов служб COM+, которые были запущены путем вызова метода Startup.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.Startup(System.Object)">
      <summary>Запускает узел служб COM+ для текущего приложения COM+.</summary>
      <param name="punkProcessControl">Всегда передает значение null.</param>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.IChannelCredentials">
      <summary>Экземпляр, обеспечивающий настройку определенных функций безопасности в прокси-службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)">
      <summary>Извлекает сертификат из файла и добавляет его в учетные данные клиента. </summary>
      <param name="fileName">Имя файла, содержащее сертификат.</param>
      <param name="password">Пароль, необходимый для файла.</param>
      <param name="keyStorageFlags">Флаги хранилища для сертификата.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)">
      <summary>Извлекает сертификат из хранилища сертификатов и добавляет его в учетные данные клиента.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов.</param>
      <param name="storeName">Имя хранилища сертификатов.</param>
      <param name="findType">Тип поиска.</param>
      <param name="findValue">Значение поиска.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)">
      <summary>Извлекает сертификат из хранилища сертификатов по имени и добавляет его в учетные данные клиента.</summary>
      <param name="subjectName">Имя субъекта сертификата.</param>
      <param name="storeLocation">Расположение хранилища сертификатов.</param>
      <param name="storeName">Имя хранилища сертификатов.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)">
      <summary>Извлекает сертификат из файла и добавляет его в учетные данные службы как сертификат по умолчанию.</summary>
      <param name="fileName">Имя файла сертификата.</param>
      <param name="password">Пароль для файла сертификата.</param>
      <param name="keyStorageFlags">Флаги хранилища для сертификата.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)">
      <summary>Извлекает сертификат из хранилища сертификатов и добавляет его в учетные данные службы как сертификат по умолчанию.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов.</param>
      <param name="storeName">Имя хранилища сертификатов.</param>
      <param name="findType">Тип поиска.</param>
      <param name="findValue">Значение поиска.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)">
      <summary>Извлекает сертификат из хранилища сертификатов по имени и добавляет его в учетные данные службы как сертификат по умолчанию.</summary>
      <param name="subjectName">Имя субъекта сертификата.</param>
      <param name="storeLocation">Расположение хранилища сертификатов.</param>
      <param name="storeName">Имя хранилища сертификатов.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)">
      <summary>Задает параметры для выданного маркера.</summary>
      <param name="localIssuerAddres">Адрес конечной точки.</param>
      <param name="localIssuerBindingType">Тип привязки.</param>
      <param name="localIssuerBinding">Имя привязки.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)">
      <summary>Задает параметры проверки безопасности сертификата службы.</summary>
      <param name="storeLocation">Расположение хранилища.</param>
      <param name="revocationMode">Режим отзыва.</param>
      <param name="certificationValidationMode">Режим проверки сертификата.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)">
      <summary>Задает учетные данные имени пользователя.</summary>
      <param name="userName">Имя пользователя.</param>
      <param name="password">Пароль.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)">
      <summary>Задает учетные данные Windows.</summary>
      <param name="domain">Домен.</param>
      <param name="userName">Имя пользователя.</param>
      <param name="password">Пароль.</param>
      <param name="impersonationLevel">Уровень олицетворения.</param>
      <param name="allowNtlm">Разрешает схему проверки подлинности NTLM.</param>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper">
      <summary>Сохраняет объекты, реализующие интерфейс  IPersistStream (такие как Recordset ADO), в поток байтов.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper" />.</summary>
    </member>
    <member name="P:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.ExtensionData">
      <summary>Возвращает или задает объект <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />, связанный с объектом <see cref="T:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper" />.</summary>
      <returns>Экземпляр <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.GetObject``1(``0@)">
      <summary>Использует интерфейс IPersistStream объекта для десериализации объекта из потока байт.</summary>
      <param name="obj">Объект, в который будет помещен десериализованный объект.</param>
      <typeparam name="T">Тип объекта.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.SetObject``1(``0)">
      <summary>Использует интерфейс IPersistStream объекта для сериализации этого объекта в поток байт.</summary>
      <param name="obj">Объект, сохраняемый в поток байтов.</param>
      <typeparam name="T">Тип объекта.</typeparam>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.ServiceMoniker">
      <summary>Этот класс обеспечивает поддерживающую реализацию для моникера служб COM и не предназначен для непосредственного использования.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.ServiceMoniker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ComIntegration.ServiceMoniker" />.</summary>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.WasHostedComPlusFactory">
      <summary>Создает узел службы для компонента COM+, размещенного на веб-сервере.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.WasHostedComPlusFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ComIntegration.WasHostedComPlusFactory" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.WasHostedComPlusFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Создает узел службы для указанного универсального кода ресурса (URI).</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" />, содержащий узел службы для указанного универсального кода ресурса (URI).</returns>
      <param name="constructorString">Строка, содержащая параметры веб-узла.</param>
      <param name="baseAddresses">Массив универсальных кодов ресурса (URI), для которого необходимо создать объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий коллекцию заголовков адреса.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AddressHeaderCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.AddressHeaderCollectionElement.Headers">
      <summary>Возвращает или задает коллекцию заголовков адреса.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AllowedAudienceUriElement">
      <summary>Представляет элемент конфигурации, указывающий универсальный код ресурса (URI) аудитории, которой разрешен доступ к конкретной службе.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AllowedAudienceUriElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.AllowedAudienceUriElement.AllowedAudienceUri">
      <summary>Возвращает или задает строку с универсальным кодом ресурса (URI) аудитории, которой разрешен доступ к конкретной службе.</summary>
      <returns>Строка с универсальным кодом ресурса (URI) аудитории, которой разрешен доступ к конкретной службе.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection">
      <summary>Представляет коллекцию объектов <see cref="System.ServiceModel.Configuration.AllowedAudienceUriElement" />, которая является целевым универсальным кодом ресурса (URI) для которого можно указать маркер безопасности <see cref="System.IdentityModel.Tokens.SamlSecurityToken" /> для проверки допустимости по экземпляру класса <see cref="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthenticationMode">
      <summary>Задает параметры проверки подлинности, используемые при обмене сообщениями.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.AnonymousForCertificate">
      <summary>Указывает, что инициатор анонимен, а отвечающее устройство проходит проверку подлинности.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.AnonymousForSslNegotiated">
      <summary>Указывает, что инициатор анонимен.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.CertificateOverTransport">
      <summary>Указывает, что инициатор проходит проверку подлинности с помощью сертификата X.509 версии 3, а отвечающее устройство проходит проверку подлинности по протоколу SSL через HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedToken">
      <summary>Указывает, что инициатор и отвечающее устройство проходят проверку подлинности с использованием маркеров симметричных ключей XML.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenForCertificate">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера симметричного ключа XML, а отвечающее устройство — с использованием сертификата X.509 версии 3.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenForSslNegotiated">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера симметричного ключа XML, а отвечающее устройство — с использованием реализации SSL в SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenOverTransport">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера симметричного ключа XML, а отвечающее устройство — по протоколу SSL через HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.Kerberos">
      <summary>Указывает, что инициатор и отвечающее устройство проходят проверку подлинности по протоколу Kerberos.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.KerberosOverTransport">
      <summary>Указывает, что инициатор проходит проверку подлинности по протоколу Kerberos, а отвечающее устройство — по протоколу SSL через HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualCertificate">
      <summary>Указывает, что инициатор и отвечающее устройство проходят проверку подлинности с использованием сертификатов X.509 версии 3.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualCertificateDuplex">
      <summary>Указывает, что инициатор и отвечающее устройство проходят проверку подлинности с использованием сертификатов X.509 версии 3.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualSslNegotiated">
      <summary>Указывает, что инициатор и отвечающее устройство выполняют взаимную проверку подлинности с использованием сертификатов X.509 версии 3, а сертификат отвечающего устройства становится доступен в результате согласования SOAP SSL.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SecureConversation">
      <summary>Указывает, что используется проверка подлинности WS-SecureConversation.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiated">
      <summary>Указывается, что инициатор и отвечающее устройство получают общий контекст безопасности через интерфейс SSPI (Security Service Provider Interface).</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameForCertificate">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера имени пользователя, а сертификат отвечающего устройства предоставляется инициатору по внештатному каналу.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameForSslNegotiated">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера имени пользователя, а отвечающее устройство — с использованием реализации SSL в SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameOverTransport">
      <summary>Указывает, что инициатор проходит проверку подлинности с использованием маркера имени пользователя, а отвечающее устройство — по протоколу SSL через HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport">
      <summary>Указывает, что инициатор проходит проверку подлинности по контексту безопасности через интерфейс SSPI, а отвечающее устройство — по протоколу SSL через HTTPS.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement">
      <summary>Содержит элемент конфигурации, в котором указывается политика авторизации, позволяющая преобразовывать один набор входных утверждений в другой.В зависимости от этого может быть предоставлено или отказано в предоставлении управления доступом.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" /> на основе указанного типа политики.</summary>
      <param name="policyType">Инициализируемый тип политики.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="policyType" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.PolicyType">
      <summary>Возвращает или задает тип политики.</summary>
      <returns>Тип политики.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection">
      <summary>Содержит коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressElement">
      <summary>Представляет элемент конфигурации, который задает базовые адреса, используемые узлом службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BaseAddressElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BaseAddressElement.BaseAddress">
      <summary>Возвращает или задает базовый адрес, используемый узлом службы.</summary>
      <returns>Базовый адрес, используемый узлом службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.BaseAddressElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BaseAddressElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement">
      <summary>Представляет элемент конфигурации, в котором указывается обходной фильтр, предоставляющий механизм выбора необходимых привязок служб IIS при размещении приложения  в службах IIS.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" /> с конкретным универсальным кодом ресурса (URI).</summary>
      <param name="prefix">Фильтр, при котором служба прослушивает все универсальные коды ресурсов (URI), начинающиеся с указанного префикса. </param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.Prefix">
      <summary>Возвращает или задает префикс, используемый для сопоставления с частью базового адреса.</summary>
      <returns>Универсальный код ресурса (URI), совпадающий с частью базового адреса.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement">
      <summary>Представляет раздел конфигурации, в котором содержится коллекция экземпляров класса <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpBindingElement">
      <summary>Представляет элемент XML, в котором указывается привязка, используемая для связи с веб-службами, соответствующие требованиям WS-I Basic Profile 1.1, например со службами на основе ASMX, или для доступа к сообщениям из клиентов на основе ASMX.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> с использованием имени. </summary>
      <param name="name">Имя элемента привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.AllowCookies">
      <summary>Возвращает или задает логическое значение, указывающее, принимает ли клиент файлы Cookie и распространяет ли он их на будущие запросы. </summary>
      <returns>Значение true, если клиент принимает файлы Cookie и распространяет их на будущие запросы; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.BindingElementType">
      <summary>Возвращает тип элемента привязки.</summary>
      <returns>Тип, в котором указывается элемент привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.BypassProxyOnLocal">
      <summary>Возвращает или задает атрибут, указывающий, будет ли использоваться данный прокси-сервер для локальных адресов.</summary>
      <returns>Логическое значение, определяющее, будет ли выполняться обход прокси-сервера для локальных адресов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого указанной коллекции элементов привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный буферного пула, в котором хранятся сообщения, обработанные привязкой.</summary>
      <returns>Значение <see cref="T:System.Int64" />, в котором указывается максимальный размер (в байтах) буферного пула, обрабатываемого привязкой.Значение по умолчанию — 512 * 1024 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буфера, в котором хранятся сообщения, обработанные привязкой.</summary>
      <returns>Максимальный размер буфера, в котором хранятся сообщения, обработанные привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер принимаемого сообщения.</summary>
      <returns>Максимальный размер (в байтах) сообщения, принимаемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MessageEncoding">
      <summary>Возвращает или задает значение, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или text/XML).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или text/XML).Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанной коллекции элементов привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.ProxyAddress">
      <summary>Возвращает или задает URI-адрес прокси-сервера HTTP.</summary>
      <returns>Универсальный код ресурса (URI) содержит адрес прокси-сервера HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.Security">
      <summary>Возвращает или задает тип безопасности, используемой с данной привязкой.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.BasicHttpSecurityElement" />, в котором указывается тип безопасности, используемой с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Допустимое значение <see cref="T:System.Text.Encoding" />, в котором указывается используемая кодировка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpContextBindingCollectionElement">
      <summary>Представляет раздел конфигурации, в котором содержится коллекция экземпляров класса <see cref="T:System.ServiceModel.Configuration.BasicHttpContextBindingElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpContextBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpContextBindingCollectionElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpContextBindingElement">
      <summary>Представляет элемент XML, задающий привязку, предоставляющую контекст для обмена <see cref="T:System.ServiceModel.BasicHttpBinding" /> путем включения файлов Cookie HTTP в качестве механизма обмена.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpContextBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpContextBindingElement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpContextBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpContextBindingElement" /> с заданным именем.</summary>
      <param name="name">Строка, содержащая имя этой привязки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpContextBindingElement.BindingElementType">
      <summary>Возвращает тип привязки.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpContextBindingElement.ContextManagementEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом. </summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpContextBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="binding">Элемент привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpContextBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое заданного элемента конфигурации привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Элемент конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpContextBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки. </summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement">
      <summary>Элемент XML, предназначенный для настройки безопасности сообщений HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.AlgorithmSuite">
      <summary>Указывает алгоритмы, используемые с классом <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.ClientCredentialType">
      <summary>Указывает тип учетных данных клиента, используемых с классом <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" />.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" />.Значение по умолчанию — UserName.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpSecurityElement">
      <summary>Представляет элемент XML, предназначенный для настройки безопасности для базовой службы HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BasicHttpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Message">
      <summary>Возвращает элемент XML, предназначенный для настройки безопасности сообщений для базовой службы HTTP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Mode">
      <summary>Возвращает элемент XML, в котором указывается режим безопасности для базовой службы HTTP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Transport">
      <summary>Возвращает элемент XML, в котором указывается транспорт для базовой службы HTTP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BehaviorExtensionElement">
      <summary>Представляет элемент конфигурации, содержащий дочерние элементы, задающие поведения, которые позволяют пользователю настроить поведение службы или конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorExtensionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
      <summary>Возвращает тип поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorExtensionElement.CreateBehavior">
      <summary>Создает поведение на основе текущих параметров конфигурации.</summary>
      <returns>Поведение.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BehaviorsSection">
      <summary>Представляет раздел конфигурации, содержащий дочерние записи, являющиеся элементами behavior и обозначаемые уникальным именем name.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BehaviorsSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.EndpointBehaviors">
      <summary>Возвращает все дочерние записи, являющиеся элементами поведения конечной точки, которые идентифицируются по уникальному имени name.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection" />, содержащий элементы поведения конечной точки, которые идентифицируются по уникальному имени name.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.ServiceBehaviors">
      <summary>Возвращает все дочерние записи, являющиеся элементами поведения службы, которые идентифицируются по уникальному имени name.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection" />, которая содержит элементы поведения службы, идентифицируемые по уникальному имени name.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BinaryMessageEncodingElement">
      <summary>Представляет кодировщик сообщения, кодирующий сообщения  в двоичный формат по сети.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BinaryMessageEncodingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> содержащий тип данного элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный раздел конфигурации.</summary>
      <param name="from">Копируемый раздел конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxReadPoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно считать одновременно без выделения памяти для дополнительных модулей чтения.</summary>
      <returns>Максимальное количество сообщений, которые можно читать одновременно, не выделяя памяти для новых модулей чтения.Значение по умолчанию — 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxSessionSize">
      <summary>Возвращает или задает значение, указывающее максимальный размер буфера, используемого для кодирования (в байтах).</summary>
      <returns>Размер (в байтах) буфера, используемого для кодирования.Значение по умолчанию — 2048.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxWritePoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно отправить одновременно без выделения памяти для дополнительных модулей записи.</summary>
      <returns>Максимальное количество сообщений, которые можно отправить одновременно, не выделяя памяти для новых модулей записи.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingCollectionElement">
      <summary>Представляет раздел конфигурации, содержащий коллекцию элементов привязки, каждый из которых описывает определенный аспект взаимодействия конечной точки с другими конечными точками; все эти аспекты единообразно встроены в фабрику каналов на стороне клиента и в прослушиватель каналов на стороне службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.BindingName">
      <summary>Возвращает имя привязки.</summary>
      <returns>Уникальное имя привязки.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не найдено имя текущей коллекции конфигураций.— или —Не найдено имя раздела конфигурации. </exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.BindingType">
      <summary>Возвращает тип привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, который содержит тип привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings">
      <summary>Возвращает все элементы конфигурации привязки из этой коллекции.</summary>
      <returns>Все элементы конфигурации привязки из этой коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(System.String)">
      <summary>Определяет, существует ли в коллекции привязка с указанным именем.</summary>
      <returns>Значение true, если коллекция содержит привязку с указанным параметром <paramref name="name" />; в противном случае — значение false. </returns>
      <param name="name">Имя искомой привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.GetDefault">
      <summary>Возвращает используемую по умолчанию привязку.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий привязку по умолчанию.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Добавляет указанную привязку в коллекцию.</summary>
      <returns>Значение true, если операция завершена успешно; в противном случае — значение false.</returns>
      <param name="name">Имя добавляемой привязки.</param>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий добавляемую привязку.</param>
      <param name="config">Параметры конфигурации данной привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingElementExtensionElement">
      <summary>Позволяет использовать настраиваемую реализацию объекта <see cref="T:System.ServiceModel.Channels.BindingElement" /> из файла конфигурации компьютера или приложения. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bindingElement" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingElementExtensionElement.BindingElementType">
      <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип настраиваемой привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.CreateBindingElement">
      <summary>При переопределении в производном классе возвращает настраиваемый объект элемента привязки. </summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingsSection">
      <summary>Представляет коллекцию элементов привязки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.BindingsSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.BasicHttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement" />, в котором задается раздел конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.BindingCollections">
      <summary>Возвращает коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" />.</summary>
      <returns>Коллекция экземпляров класса <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.CustomBinding">
      <summary>Возвращает раздел конфигурации, предоставляющий пользователю полный контроль над стеком обмена сообщениями.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.CustomBindingCollectionElement" />, содержащий коллекцию настраиваемых элементов привязки. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingsSection.GetSection(System.Configuration.Configuration)">
      <summary>Возвращает параметр конфигурации раздела из указанного файла конфигурации.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.BindingsSection" /> с параметрами, загруженными из указанного файла.</returns>
      <param name="config">Файл конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="config" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.Item(System.String)">
      <summary>Возвращает указанную привязку в данном разделе конфигурации.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" />.</returns>
      <param name="binding">Привязка, к которой осуществляется доступ.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.MsmqIntegrationBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию элементов привязки MsmqIntegration.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement" />, содержащий коллекцию элементов привязки MsmqIntegration.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetMsmqBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию элементов привязки netMsmqBinding.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement" />, содержащий коллекцию элементов привязки netMsmqBinding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetNamedPipeBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement" />, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetPeerTcpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию элементов netPeerTcpBinding. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement" />, содержащий коллекцию элементов <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetTcpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" />. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement" />, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WS2007FederationHttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WS2007HttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSDualHttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement" />, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSFederationHttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement" />, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSHttpBinding">
      <summary>Возвращает элемент конфигурации, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement" />, содержащий коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CallbackDebugElement">
      <summary>Представляет элемент конфигурации, в котором указываются сведения о функциях отладки на стороне службы для объекта обратного вызова Windows Communication Foundation (WCF).Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackDebugElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CallbackDebugElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackDebugElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>Тип <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackDebugElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации. </summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackDebugElement.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, указывающее, возвращают ли в службу объекты обратного вызова сведения об управляемом исключении в ошибках SOAP.</summary>
      <returns>Значение true, если Windows Communication Foundation (WCF) возвращает сведения об исключении обратного вызова управляемого клиента в ошибках SOAP с целью отладки на стороне службы при дуплексной связи; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CallbackTimeoutsElement">
      <summary>Представляет элемент конфигурации, в котором указывается время ожидания для обратного вызова клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackTimeoutsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CallbackTimeoutsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackTimeoutsElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>Тип <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackTimeoutsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации. </summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackTimeoutsElement.TransactionTimeout">
      <summary>Возвращает или задает период времени, в течение которого транзакция должна быть завершена.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время, в течение которого транзакция должна быть завершена; по истечении этого времени транзакция будет прервана автоматически.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CertificateElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат X.509, используемый для проверки подлинности.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CertificateElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CertificateElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateElement.EncodedValue">
      <summary>Возвращает или задает значение, указывающее значение, закодированное данным сертификатом.</summary>
      <returns>Закодированное значение.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CertificateReferenceElement">
      <summary>Представляет параметры конфигурации для проверки сертификата X.509.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CertificateReferenceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CertificateReferenceElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded">
      <summary>Возвращает или задает логическое значение, определяющее, выполняется ли проверка с использованием цепи сертификатов.</summary>
      <returns>Значение true, если при проверке используется цепь сертификатов; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, содержащий тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelEndpointElement">
      <summary>Предоставляет параметры для настройки свойств контракта, привязки и адреса конечной точки канала, которые используется клиентами для подключения к конечным точкам службы на сервере.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> с указанным адресом конечной точки и типом контракта.</summary>
      <param name="address">Задает адрес конечной точки.Значение по умолчанию — пустая строка.Адрес должен быть абсолютным универсальным кодом ресурса (URI).</param>
      <param name="contractType">Строка, указывающая, к какому контракту предоставляется доступ этой конечной точкой.В сборке должен быть реализован данный тип контракта.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Address">
      <summary>Задает адрес конечной точки.</summary>
      <returns>Универсальный код ресурса (URI), содержащий адрес конечной точки.Адрес должен быть абсолютным универсальным кодом ресурса (URI).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration">
      <summary>Возвращает или задает имя поведения для использования с целью создания экземпляра конечной точки.</summary>
      <returns>Имя поведения, используемого для создания экземпляра конечной точки.Имя поведения должно входить в область действия в точке определения службы.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Binding">
      <summary>Возвращает или задает используемый тип привязки.</summary>
      <returns>Тип используемой привязки.Чтобы на тип можно было ссылаться, он должен иметь зарегистрированный раздел конфигурации.Тип регистрируется по имени раздела, а не по имени типа привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration">
      <summary>Возвращает или задает имя привязки, используемой при создании экземпляра конечной точки.</summary>
      <returns>Имя привязки, используемой при создании экземпляра конечной точки.Имя привязки должно входить в область в точке определения конечной точки.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Contract">
      <summary>Возвращает или задает контракт, предоставляемый этой конечной точкой.</summary>
      <returns>Контракт, предоставляемый этой конечной точкой.В сборке должен быть реализован данный тип контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration">
      <summary>Возвращает или задает имя стандартной конечной точки, указываемой свойством <see cref="P:System.ServiceModel.Configuration.ChannelEndpointElement.Kind" />, которое ссылается на дополнительные сведения конфигурации этой стандартной привязки.Такое же имя должно быть задано в секции <see cref="T:System.ServiceModel.Configuration.StandardEndpointsSection" />.</summary>
      <returns>Строка, задающая имя стандартной конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Headers">
      <summary>Возвращает коллекцию заголовков адреса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" />, содержащий коллекцию заголовков адреса.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Identity">
      <summary>Возвращает удостоверение, обеспечивающее проверку подлинности конечной точки другими конечными точками, которые обмениваются с ней сообщениями.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IdentityElement" />, содержащий параметры конфигурации для включения проверки подлинности конечной точки другими конечными точками, которые обмениваются с ней сообщениями.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Kind">
      <summary>Возвращает или задает применяемый тип стандартной конечной точки.Тип должен быть зарегистрирован в разделе &lt;extensions&gt; или в файле machine.config.Если ничего не указано, будет создана обычная конечная точка канала.</summary>
      <returns>Строка, обозначающая тип стандартной конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Name">
      <summary>Возвращает или задает уникальный идентификатор конечной точки для данного контракта.</summary>
      <returns>Конечная точка для данного контракта.Значение по умолчанию — пустая строка.Модель службы позволяет пользователю задать несколько клиентов для данного типа контракта.Определения должны отличаться друг от друга уникальным именем конфигурации.Если это свойство опущено, соответствующая конечная точка используется как конечная точка по умолчанию, связанная с заданным типом контракта.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelPoolSettingsElement">
      <summary>Задает параметры пула каналов для пользовательской привязки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelPoolSettingsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ChannelPoolSettingsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.IdleTimeout">
      <summary>Возвращает или задает максимальное время, в течение которого подключение может простаивать перед отключением.</summary>
      <returns>Положительное значение <see cref="T:System.TimeSpan" />, указывающее максимальное время бездействия для подключения перед его закрытием.Значение по умолчанию — 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.LeaseTimeout">
      <summary>Возвращает или задает время ожидания перед закрытием активного подключения.Значение по умолчанию — 00:05:00.</summary>
      <returns>Параметр <see cref="T:System.TimeSpan" />, задающий время ожидания перед закрытием активного подключения.Значение по умолчанию — 00:05:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.MaxOutboundChannelsPerEndpoint">
      <summary>Возвращает или задает максимальное число каналов для удаленной конечной точки, инициированных одной службой.</summary>
      <returns>Максимальное число каналов для удаленной конечной точки, инициированных одной службой.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClaimTypeElement">
      <summary>Представляет элемент конфигурации, содержащий тип утверждения.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElement.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" />. </summary>
      <param name="claimType">Универсальный код ресурса (URI), указывающий тип утверждения.Стандартные типы утверждений доступны в виде статических свойств класса <see cref="T:System.IdentityModel.Claims.ClaimTypes" />.</param>
      <param name="isOptional">Логическое значение, указывающее, является ли утверждение необязательным.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClaimTypeElement.ClaimType">
      <summary>Возвращает или задает строковое представление универсального кода ресурса (URI), указывающего тип утверждения. </summary>
      <returns>Универсальный код ресурса (URI), указывающий тип утверждения. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClaimTypeElement.IsOptional">
      <summary>Возвращает или задает логическое значение, указывающее, является ли утверждение необязательным.</summary>
      <returns>Значение true, если утверждение является необязательным, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClaimTypeElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClearBehaviorElement">
      <summary>Представляет элемент конфигурации для удаления всех унаследованных поведений. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClearBehaviorElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClearBehaviorElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClearBehaviorElement.BehaviorType">
      <summary>При реализации в производном классе возвращает тип поведения.</summary>
      <returns>Тип поведения.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientCredentialsElement">
      <summary>Представляет элемент конфигурации, предназначенный для настройки учетных данных клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClientCredentialsElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.ApplyConfiguration(System.ServiceModel.Description.ClientCredentials)">
      <summary>Применяет содержимое указанного элемента конфигурации к данному элементу конфигурации.</summary>
      <param name="behavior">Применяемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.ClientCertificate">
      <summary>Возвращает сертификат клиента, используемый использования, когда сертификат клиента доступен внештатно. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement" />, в котором указывается сертификат клиента, используемый, когда сертификат клиента доступен внештатно. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации. </summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.CreateBehavior">
      <summary>Создает пользовательское поведение на основе параметров данного элемента конфигурации.</summary>
      <returns>Пользовательское поведение на основе параметров данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.HttpDigest">
      <summary>Возвращает элемент конфигурации, предназначенный для настройки текущих учетных данных дайджеста HTTP.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.HttpDigestClientElement" />, предназначенный для настройки текущих учетных данных дайджеста HTTP. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.IssuedToken">
      <summary>Возвращает элемент конфигурации, предназначенный для настройки текущего выданного экземпляра маркера.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" />, предназначенный для настройки текущего выданного маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Peer">
      <summary>Возвращает элемент конфигурации, предназначенный для настройки текущих учетных данных однорангового узла.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" />, предназначенный для настройки текущих учетных данных однорангового узла.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.ServiceCertificate">
      <summary>Возвращает инициализированный клиентом сертификат X.509.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement" />, в котором указывается инициализированный клиентом сертификат X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.SupportInteractive">
      <summary>Возвращает или задает логическое значение, определяющее, поддерживают ли учетные данные интерактивное согласование.</summary>
      <returns>Значение true, если учетные данные поддерживают интерактивное согласование; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Type">
      <summary>Возвращает тип этого элемента конфигурации.</summary>
      <returns>Строка, содержащая тип данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Windows">
      <summary>Возвращает параметры для проверки учетных данных ОС Windows.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WindowsClientElement" />, в котором указываются параметры для проверки учетных данных Windows.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientSection">
      <summary>Представляет клиентский раздел файла конфигурации, в которой задается список конечных точек, к которым может подключаться клиент.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClientSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientSection.Endpoints">
      <summary>Возвращает список конечных точек, к которым может подключаться клиент.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection" />, содержащий список конечных точек, к которым может подключаться клиент.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientSection.Metadata">
      <summary>Возвращает параметры конфигурации для обработки метаданных.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.MetadataElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientViaElement">
      <summary>Представляет элемент конфигурации, в котором указывается маршрут сообщения.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientViaElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ClientViaElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientViaElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientViaElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в этот экземпляр.</summary>
      <param name="from">Элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientViaElement.ViaUri">
      <summary>Возвращает или задает универсальный код ресурса (URI), в котором указывается маршрут для сообщения.</summary>
      <returns>Универсальный код ресурса (URI), в котором указывается маршрут для сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractElement">
      <summary>Указывает контракт службы интеграции COM+.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComContractElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComContractElement" />. </summary>
      <param name="contractType">Строка, содержащая тип контракта.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Contract">
      <summary>Возвращает или задает тип контракта.</summary>
      <returns>Тип контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
      <summary>Возвращает коллекцию методов COM+, которые предоставляется при предоставлении интерфейса компонента COM+ как веб-службы. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ComMethodElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Name">
      <summary>Возвращает или задает имя контракта.</summary>
      <returns>Имя контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
      <summary>Возвращает или задает пространство имен контракта.</summary>
      <returns>Пространство имен контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
      <summary>Возвращает все сохраняемые типы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
      <summary>Возвращает или задает логическое значение, указывающее, ограничено ли использование контракта только сеансовыми привязками.</summary>
      <returns>Значение true, если контракт можно использовать только в сеансовых привязках; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
      <summary>Возвращает коллекцию определяемых пользователем типов (UDT), предназначенную для включения в контракт службы.Наследовать этот класс нельзя.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ComUdtElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ComContractElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComContractElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractsSection">
      <summary>Представляет раздел конфигурации, содержащий элементы, предназначенные для задания пространства имен и имени для контракта интеграции COM+.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComContractsSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractsSection.ComContracts">
      <summary>Возвращает все контракты службы интеграции COM+, указанные в разделе.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ComContractElementCollection" />, содержащий все контракты службы интеграции COM+, указанные в разделе.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComMethodElement">
      <summary>Представляет метод COM+, предоставляемый, когда интерфейс компонента COM+ предоставляется как веб-служба.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComMethodElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComMethodElement" /> с помощью указанного метода. </summary>
      <param name="method">Предоставляется метод COM+.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComMethodElement.ExposedMethod">
      <summary>Возвращает метод COM+, предоставляемый, когда интерфейс компонента COM+ предоставляется как веб-служба.</summary>
      <returns>Имя метода COM+, предоставляемого, когда интерфейс компонента COM+ предоставляется как веб-служба.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComMethodElementCollection">
      <summary>Содержит коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ComMethodElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComMethodElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonBehaviorsSection">
      <summary>Представляет раздел конфигурации со списком всех элементов поведения, применяемых ко всем службам  на компьютере перед применением элементов поведения из раздела behaviors.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonBehaviorsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CommonBehaviorsSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.EndpointBehaviors">
      <summary>Возвращает все дочерние записи, являющиеся элементами EndpointBehavior и идентифицируемые по уникальному имени.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.ServiceBehaviors">
      <summary>Возвращает все дочерние записи, являющиеся элементами serviceBehavior и идентифицируемые по уникальному имени.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement">
      <summary>Представляет элемент конфигурации со списком поведений конечной точки, примененных ко всем запущенным на компьютере конечным точкам  перед применением поведений из раздела endpointBehaviors.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет указанный элемент в данный раздел конфигурации.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, связанный с параметром <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, связанный с параметром <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement">
      <summary>Представляет элемент конфигурации со списком поведений службы, примененных ко всем запущенным на компьютере конечным точкам  перед применением поведений из раздела serviceBehaviors.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет указанный элемент в данный раздел конфигурации.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, связанный с параметром <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, связанный с параметром <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComPersistableTypeElement">
      <summary>Указывает все сохраняемые типы. Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" />. </summary>
      <param name="ID">Уникальный идентификатор сохраняемого типа.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComPersistableTypeElement.ID">
      <summary>Возвращает или задает уникальный идентификатор для сохраняемого типа.</summary>
      <returns>Уникальный идентификатор сохраняемого типа.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComPersistableTypeElement.Name">
      <summary>Возвращает или задает имя сохраняемого типа.</summary>
      <returns>Имя сохраняемого типа.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.CompositeDuplexElement">
      <summary>Представляет элемент конфигурации, используемый, когда клиенту необходимо предоставить службе конечную точку для отправки сообщений по протоколу HTTP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CompositeDuplexElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType">
      <summary>Возвращает тип элемента привязки.</summary>
      <returns>Тип элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress">
      <summary>Возвращает или задает базовый адрес клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий базовый адрес клиента.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComUdtElement">
      <summary>Представляет определяемый пользователем тип (UDT), подлежащий включению в контракт службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComUdtElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComUdtElement" /> с помощью указанной строки идентификатора GUID.</summary>
      <param name="typeDefID">Строка идентификатора GUID, которая идентифицирует конкретный тип UDT в зарегистрированной библиотеке типов.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.Name">
      <summary>Возвращает или задает доступное для чтения имя типа. </summary>
      <returns>Доступное для чтения имя типа. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeDefID">
      <summary>Возвращает или задает строку идентификатора GUID, которая идентифицирует конкретный пользовательский тип (UDT) в зарегистрированной библиотеке типов.</summary>
      <returns>Конкретный пользовательский тип (UDT) в зарегистрированной библиотеке типов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeLibID">
      <summary>Возвращает или задает строку идентификатора GUID, которая идентифицирует зарегистрированную библиотеку типов, в которой задан этот тип.</summary>
      <returns>Зарегистрированная библиотека типов, в которой задан этот тип.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion">
      <summary>Возвращает или задает строку, которая идентифицирует версию библиотеки типов, в которой задан этот тип.</summary>
      <returns>Версия библиотеки типов, в которой задан этот тип.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComUdtElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ComUdtElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ComUdtElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ConfigurationChannelFactory`1">
      <summary>Предоставляет универсальную функцию для создания элемента конфигурации канала для указанного типа. </summary>
      <typeparam name="TChannel">Тип канала связи, указываемого для создаваемого элемента конечной точки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ConfigurationChannelFactory`1" /> с указанными именем конфигурации конечной точки, объектом <see cref="T:System.Configuration.Configuration" /> и объектом <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="endpointConfigurationName">Свойство имени в элементе конфигурации конечной точки.</param>
      <param name="configuration">Параметры, определяющие сведения в элементе конечной точки.</param>
      <param name="remoteAddress">IP-адрес целевой конечной точки в клиентском или серверном сеансе.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="configuration" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ConfigurationDuplexChannelFactory`1">
      <summary>Предоставляет функции для создания дуплексных каналов различных типов, используемых для передачи сообщений в конечные точки служб и получения сообщений от них, и управления этими каналами.</summary>
      <typeparam name="TChannel">Тип канала связи для созданного элемента конечной точки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConfigurationDuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress,System.Configuration.Configuration)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ConfigurationDuplexChannelFactory`1" />, используя указанные объект обратного вызова, имя конфигурации конечной точки, удаленный адрес и параметры конфигурации.</summary>
      <param name="callbackObject">Процесс, отвечающий на сообщение от клиента.</param>
      <param name="endpointConfigurationName">Свойство имени в элементе конфигурации конечной точки.</param>
      <param name="remoteAddress">IP-адрес целевой конечной точки в клиентском или серверном сеансе.</param>
      <param name="configuration">Параметры, определяющие сведения, которые представлены в элементе конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="configuration" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ConnectionOrientedTransportElement">
      <summary>Представляет элемент конфигурации, предоставляющий дополнительные параметры конфигурации элементам привязки транспорта, ориентированным на подключения, например TCP и именованные каналы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
      <summary>Возвращает или задает максимальное время, в течение которого канал может находиться в состоянии инициализации перед отключением.</summary>
      <returns>Структура <see cref="T:System.TimeSpan" />, в которой указывается максимальное время, в течение которого канал может находиться в состоянии инициализации перед отключением.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
      <summary>Возвращает или задает размер буфера, используемого для передачи по проводному соединению части сериализованного сообщения от клиента серверу.</summary>
      <returns>Размер буфера, используемого для передачи по проводному соединению части сериализованного сообщения от клиента серверу.Значение по умолчанию — 8 КБ.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации. </summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по универсальному коду ресурса (URI).</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла при маршрутизации входящих запросов на универсальный код ресурса (URI) конечной точки.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер используемого буфера.</summary>
      <returns>Максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого часть сообщения или все сообщение может оставаться в буфере перед отправкой.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается максимальный промежуток времени, в течение которого часть сообщения или все сообщение может оставаться в буфере перед отправкой.Значение по умолчанию — 2 секунды.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
      <summary>Возвращает или задает максимальное число ожидающих асинхронных потоков приема, доступных для обработки входящих подключений к службе.</summary>
      <returns>Максимальное количество ожидающих сообщений, которое может принять служба.Значение по умолчанию — 1.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
      <summary>Возвращает или задает максимальное количество ожидающих подключений к службе.</summary>
      <returns>Максимальное количество ожидающих подключений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать сообщения, или передавать их потоком с использованием транспорта, ориентированного на подключения.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее режим передачи сообщений в канале (буферизированный или потоковый).Значение по умолчанию — <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ContextBindingElementExtensionElement">
      <summary>Представляет элемент конфигурации, позволяющий использование пользовательской реализации <see cref="T:System.ServiceModel.Channels.ContextBindingElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ContextBindingElementExtensionElement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий элемент привязки.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента для элемента привязки.</summary>
      <returns>Возвращает <see cref="T:System.Uri" />, содержащий адрес обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.ContextExchangeMechanism">
      <summary>Возвращает или задает значение, указывающее механизм, используемый для обмена контекстом для элементов привязки.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.ContextManagementEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.CreateBindingElement">
      <summary>Создает новый объект элемента привязки, свойства которого копируются из параметров данного элемента конфигурации.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ContextBindingElementExtensionElement.ProtectionLevel">
      <summary>Возвращает или задает уровень защиты для данного элемента привязки.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingCollectionElement">
      <summary>Представляет коллекцию элементов конфигурации customBinding, предоставляющих пользователю полный контроль над стеком обмена сообщениями.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CustomBindingCollectionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.Bindings">
      <summary>Возвращает привязки, заданные в этом разделе.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Configuration.CustomBindingElementCollection" />, содержащая все привязки, заданные в этом разделе.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.BindingType">
      <summary>Возвращает тип данной привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, который содержит тип привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.ConfiguredBindings">
      <summary>Возвращает все элементы конфигурации привязки, содержащиеся в этом элементе.</summary>
      <returns>Коллекция всех элементов конфигурации привязки, содержащихся в этом элементе.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingCollectionElement.ContainsKey(System.String)">
      <summary>Определяет, существует ли в коллекции конкретная привязка с указанным именем.</summary>
      <returns>Значение true, если коллекция содержит привязку с указанным параметром <paramref name="name" />; в противном случае — значение false. </returns>
      <param name="name">Имя искомой привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingElement">
      <summary>Представляет раздел конфигурации, предоставляющий пользователю полный контроль над стеком обмена сообщениями.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" /> с указанным именем.</summary>
      <param name="name">Уникальное имя элемента привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.Add(System.ServiceModel.Configuration.BindingElementExtensionElement)">
      <summary>Добавляет указанный элемент в данный раздел конфигурации.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="element" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент конфигурации кодирования сообщения уже существует в привязке.— или —Элемент обновления потока уже существует в привязке.— или —Элемент транспорта уже существует в привязке.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет содержимое указанной привязки к данному элементу конфигурации привязки.Наследовать этот метод нельзя.</summary>
      <param name="binding">Привязка.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="binding" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, указанный в параметре <paramref name="binding" />, недопустим.— или —Элемент обновления потока уже существует в привязке.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.CanAdd(System.ServiceModel.Configuration.BindingElementExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="element" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.CloseTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции закрытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанного элемента привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.OpenTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции открытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.ReceiveTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается время, выделенное для завершения операции получения до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.SendTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.CustomBindingElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.DataContractSerializerElement">
      <summary>Представляет элемент конфигурации, указывающий используемый объект <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DataContractSerializerElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DataContractSerializerElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.DataContractSerializerElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует значения из указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Элемент конфигурации, из которого копируются данные.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.IgnoreExtensionDataObject">
      <summary>Возвращает значение, указывающее, должны ли пропускаться данные, предоставляемые расширением класса, при сериализации или десериализации класса.</summary>
      <returns>Значение true, если данные расширения опускаются; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.MaxItemsInObjectGraph">
      <summary>Возвращает максимальное количество элементов для сериализации или десериализации.</summary>
      <returns>Максимальное количество сериализуемых или десериализуемых элементов.Значение по умолчанию — 65536.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DefaultPortElement">
      <summary>Предоставляет элемент конфигурации, определяющий параметры по умолчанию для конечной точки связи.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DefaultPortElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DefaultPortElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DefaultPortElement.#ctor(System.ServiceModel.Configuration.DefaultPortElement)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DefaultPortElement" /> с указанным <see cref="T:System.ServiceModel.Configuration.DefaultPortElement" />.</summary>
      <param name="other">Элемент порта по умолчанию, предоставляющий параметры для текущего элемента порта по умолчанию.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.DefaultPortElement.Port">
      <summary>Возвращает или задает номер COM-порта по умолчанию.</summary>
      <returns>COM-порт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DefaultPortElement.Scheme">
      <summary>Возвращает или задает группу параметров протокола, связанных с COM-портом.</summary>
      <returns>Параметры протокола связи.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DefaultPortElementCollection">
      <summary>Представляет коллекцию элементов конфигурации порта по умолчанию.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DefaultPortElementCollection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DefaultPortElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.DiagnosticSection">
      <summary>Представляет раздел конфигурации в котором задаются параметры, которые могут быть использованы администратором для проверки и контроля во время выполнения.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DiagnosticSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DiagnosticSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing">
      <summary>Возвращает параметры конфигурации сквозной трассировки, заданные в экземпляре <see cref="T:System.ServiceModel.Configuration.EndToEndTracingElement" />.</summary>
      <returns>Возвращает экземпляр <see cref="T:System.ServiceModel.Configuration.EndToEndTracingElement" />, который содержит параметры конфигурации сквозной трассировки. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId">
      <summary>Возвращает идентификатор для поставщика трассировки событий, который записывает события в сеансы ETW.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.MessageLogging">
      <summary>Описывает параметры ведения журнала сообщений в .</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" />, описывающий параметры ведения журнала сообщений в .</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters">
      <summary>Возвращает или задает значение, указывающее, включены ли для сборки счетчики производительности. </summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Diagnostics.PerformanceCounterScope" />, в котором указывается, какие счетчики производительности включены для сборки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled">
      <summary>Возвращает или задает значение, определяющее, включен ли поставщик WMI для сборки.</summary>
      <returns>Значение true, если для сборки включен поставщик WMI; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DispatcherSynchronizationElement">
      <summary>Добавляет механизм синхронизации диспетчера к элементу конфигурации диспетчера, чтобы служебная программа WCF могла асинхронно передавать ответные сообщения клиентским приложениям.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DispatcherSynchronizationElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DispatcherSynchronizationElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DispatcherSynchronizationElement.AsynchronousSendEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли асинхронная отправка сообщений.</summary>
      <returns>Значение true, если включена асинхронная отправка; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DispatcherSynchronizationElement.BehaviorType">
      <summary>Возвращает тип расширения поведения <see cref="T:System.ServiceModel.Configuration.DispatcherSynchronizationElement" />.</summary>
      <returns>Тип объекта.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.DispatcherSynchronizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует вложенный элемент, который определяет расширения поведения диспетчера из указанного элемента конфигурации <see cref="System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в текущий элемент <see cref="T:System.ServiceModel.Configuration.DispatcherSynchronizationElement" />.</summary>
      <param name="from">Объект <see cref="System.ServiceModel.Configuration.ServiceModelExtensionElement" />, предоставляющий вложенные элементы синхронизации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.DispatcherSynchronizationElement.MaxPendingReceives">
      <summary>Возвращает или задает максимальное количество полученных сообщений, которые может буферизовать диспетчер.</summary>
      <returns>Номер, представляющий количество сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DnsElement">
      <summary>Представляет элемент конфигурации, в котором указывается универсальный код ресурса (URI) для утверждения DNS.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DnsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.DnsElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DnsElement.Value">
      <summary>Возвращает или задает значение, представленное данным элементом конфигурации.</summary>
      <returns>Значение, представленное данным элементом конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointAddressElementBase">
      <summary>Элемент XML, содержащий уникальный сетевой адрес, используемый клиентом для взаимодействия с конечной точкой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Address">
      <summary>Возвращает или задает универсальный код ресурса (URI) для конечной точки.</summary>
      <returns>Объект <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки в сети.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.Copy(System.ServiceModel.Configuration.EndpointAddressElementBase)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="source">Элемент конфигурации, в который копируются данные.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения. </exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Headers">
      <summary>Возвращает коллекцию заголовков адресов для конечных точек, которые может создать построитель.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" />, содержащий адресную информацию для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Identity">
      <summary>Возвращает удостоверение конечной точки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IdentityElement" />, предоставляющий удостоверение, позволяющее выполнять проверку подлинности конечной точки другими конечными точками, с которыми она обменивается сообщениями.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.InitializeFrom(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует адрес этой конечной точки на основе содержимого указанного адреса конечной точки.</summary>
      <param name="endpointAddress">Адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="endpointAddress" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointBehaviorElement">
      <summary>Представляет элемент конфигурации со списком поведений конечной точки, примененных ко всем запущенным на компьютере конечным точкам .</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" /> с указанным именем.</summary>
      <param name="name">Уникальное имя элемента поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, указанный в параметре <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointCollectionElement">
      <summary>Управляет коллекцией конечных точек службы в файле конфигурации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointCollectionElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndpointCollectionElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointCollectionElement.ConfiguredEndpoints">
      <summary>Если реализуется в производном классе, предоставляет доступную только для чтения коллекцию методов <see cref="T:System.ServiceModel.Configuration.StandardEndpointElement" /> и свойств.</summary>
      <returns>Доступная только для чтения коллекция методов <see cref="T:System.ServiceModel.Configuration.StandardEndpointElement" /> и свойств.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointCollectionElement.ContainsKey(System.String)">
      <summary>Определяет, содержит ли элемент службы в файле конфигурации элемент конечной точки с таким же именем, как в указанной строке.</summary>
      <returns>Значение true, если указанная строка содержит имя элемента, в противном случае — значение false.</returns>
      <param name="name">Имя пары «ключ-значение», которая представляет имя и значение конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName">
      <summary>При реализации в производном классе получает значение имени атрибута элемента конечной точки службы.</summary>
      <returns>Значение атрибута имени в элементе конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointType">
      <summary>При реализации в производном классе возвращает тип конечной точки службы.</summary>
      <returns>Тип конечной точки службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointCollectionElement.GetDefaultStandardEndpointElement">
      <summary>В случае реализации в производном классе возвращает объект <see cref="T:System.ServiceModel.Configuration.StandardEndpointElement" /> по умолчанию.</summary>
      <returns>Элемент стандартной конечной точки модели службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointCollectionElement.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)">
      <summary>При реализации в производном классе добавляет указанную конечную точку в коллекцию конечных точек службы в файле конфигурации.</summary>
      <returns>Значение true, если конечная точка добавляется в коллекцию, находящуюся в файле конфигурации, в противном случае — значение false.</returns>
      <param name="name">Имя конечной точки службы, в которой содержится коллекция конечных точек.</param>
      <param name="endpoint">Элемент конечной точки службы, который необходимо добавить в коллекцию.</param>
      <param name="config">Файл конфигурации, получающий конечную точку службы.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndToEndTracingElement">
      <summary>Обрабатывает настройки элемента файла конфигурации, с помощью которых можно включать и отключать различные аспекты полной трассировки во время выполнения служебного приложения.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndToEndTracingElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.EndToEndTracingElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndToEndTracingElement.ActivityTracing">
      <summary>Получает значение, указывающее, включена ли трассировка действий.</summary>
      <returns>Значение true, если трассировка действий включена; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndToEndTracingElement.MessageFlowTracing">
      <summary>Получает значение, указывающее, включена ли трассировка потока сообщений.</summary>
      <returns>Значение true, если трассировка потока сообщений включена; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndToEndTracingElement.PropagateActivity">
      <summary>Возвращает значение, которое определяет, задано ли атрибуту распространения значение true.</summary>
      <returns>Значение true, если атрибуту действия распространения присвоено значение true; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionElement">
      <summary>Представляет элемент конфигурации, в котором определяется расширение, позволяющее пользователю создавать собственные привязки, поведения и т. д.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> с заданным именем.</summary>
      <param name="name">Уникальное имя этого элемента конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> с заданными именем и типом.</summary>
      <param name="name">Уникальное имя этого элемента конфигурации.</param>
      <param name="type">Тип этого элемента конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение null или пуст.— или —Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Name">
      <summary>Возвращает или задает уникальное имя данного элемента конфигурации.</summary>
      <returns>Уникальное имя этого элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Type">
      <summary>Возвращает или задает тип данного элемента конфигурации.</summary>
      <returns>Тип этого элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Добавляет новый элемент конфигурации в <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Расширение с таким же именем или типом, что и у элемента <paramref name="element" />, уже есть в коллекции.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Добавляет элемент конфигурации в указанное место коллекции <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
      <param name="index">Индекс, по которому добавляется элемент <paramref name="element" />.</param>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Расширение с таким же именем или типом, что и у элемента <paramref name="element" />, уже есть в коллекции.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Возвращает ключ элемента для указанного элемента конфигурации.</summary>
      <returns>Объект <see cref="T:System.Object" />, играющий роль ключа для указанного элемента конфигурации.</returns>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" />, для которого возвращается ключ.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="element" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate">
      <summary>Возвращает значение, указывающее, выдаст ли исключение попытка добавить дубликат <see cref="T:System.Configuration.ConfigurationElement" /> к <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
      <returns>Значение true, если попытка добавить дубликат объекта <see cref="T:System.Configuration.ConfigurationElement" /> в коллекцию <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> приведет к формированию исключения, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionsSection">
      <summary>Представляет раздел конфигурации, содержащий все определения расширений.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtensionsSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BehaviorExtensions">
      <summary>Возвращает все заданные в разделе поведения.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BindingElementExtensions">
      <summary>Возвращает все заданные в разделе расширения элементов привязки.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BindingExtensions">
      <summary>Возвращает все заданные в разделе расширения привязки.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.EndpointExtensions">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, содержащий указанное расширение конечной точки.</summary>
      <returns>Коллекция расширений конечных точек.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionsSection.InitializeDefault">
      <summary>Инициализирует для данного раздела конфигурации набор значений по умолчанию.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement">
      <summary>Представляет элемент конфигурации, предназначенный для настройки параметров безопасности сообщения, отправляемого по протоколу HTTP в федерации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.AlgorithmSuite">
      <summary>Возвращает или задает алгоритмы шифрования сообщений и ключей. </summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.ClaimTypeRequirements">
      <summary>Возвращает набор типов утверждений для данной привязки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" />.Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.EstablishSecurityContext">
      <summary>Возвращает или задает значение, указывающее, установлен ли безопасный диалог с помощью маркеров контекста безопасности.</summary>
      <returns>Значение true, если безопасный диалог установлен с использованием маркеров контекста безопасности; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuedKeyType">
      <summary>Возвращает или задает тип выпускаемого ключа.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.Значение по умолчанию — <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuedTokenType">
      <summary>Возвращает или задает универсальный код ресурса (URI), который задает тип выдаваемых маркеров.</summary>
      <returns>Универсальный код ресурса (URI), который задает тип выдаваемых маркеров. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.Issuer">
      <summary>Возвращает адрес издателя.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuerMetadata">
      <summary>Возвращает адрес конечной точки издателя.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.NegotiateServiceCredential">
      <summary>Возвращает или задает логическое значение, которое определяет, должен ли проводиться обмен учетными данными службы в рамках процесса согласования.</summary>
      <returns>Значение true, если учетные данные службы согласовываются; значение false, если учетные данные службы доступны по внештатному каналу.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.TokenRequestParameters">
      <summary>Возвращает коллекцию элементов конфигурации, в которой указываются дополнительные элементы XML, отправляемые в тексте сообщения службе маркеров безопасности при запросе маркера.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HostElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры проверки подлинности для узла службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HostElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HostElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostElement.BaseAddresses">
      <summary>Возвращает базовые адреса, используемые узлом службы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.BaseAddressElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostElement.Timeouts">
      <summary>Возвращает элемент конфигурации, в котором указывается интервал времени, в течение которого разрешено открытие или закрытие узла службы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.HostTimeoutsElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HostTimeoutsElement">
      <summary>Элемент конфигурации, который задает допустимый интервал времени для открытия или закрытия узла службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HostTimeoutsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HostTimeoutsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostTimeoutsElement.CloseTimeout">
      <summary>Возвращает или задает интервал времени, выделенный для операции закрытия узла службы.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается интервал времени, выделенный для операции закрытия узла службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostTimeoutsElement.OpenTimeout">
      <summary>Возвращает или задает интервал времени, выделенный для операции открытия узла службы.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает интервал времени, выделенный для операции открытия узла службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpDigestClientElement">
      <summary>Представляет текущие учетные данные дайджеста HTTP в элементе clientCredential.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpDigestClientElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HttpDigestClientElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpDigestClientElement.Copy(System.ServiceModel.Configuration.HttpDigestClientElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="from" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpDigestClientElement.ImpersonationLevel">
      <summary>Возвращает или задает параметры олицетворения, используемые клиентом для взаимодействия с сервером. </summary>
      <returns>Допустимое значение <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.Значение по умолчанию — <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpsTransportElement">
      <summary>Представляет элемент конфигурации, в котором указывается транспорт HTTPS для передачи сообщений SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HttpsTransportElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет к данному элементу конфигурации параметры указанного элемента привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, параметры которого необходимо применить к данному элементу конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> данного элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент конфигурации.</summary>
      <param name="from">Элемент привязки <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, параметры которого необходимо скопировать в данный элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.CreateDefaultBindingElement">
      <summary>Создает элемент привязки на основе параметров данного элемента конфигурации.</summary>
      <returns>Элемент привязки <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, свойства которого копируются из параметров данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.RequireClientCertificate">
      <summary>Возвращает или задает логическое значение, указывающее, требует ли сервер, чтобы клиент предоставлял сертификат клиента как часть подтверждения HTTPS.</summary>
      <returns>Значение true, если требуется выполнять проверку подлинности клиента по протоколу SSL; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpTransportElement">
      <summary>Представляет элемент конфигурации, в котором указывается транспорт HTTP для передачи сообщений SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HttpTransportElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.AllowCookies">
      <summary>Возвращает или задает значение, определяющее, принимает ли клиент файлы cookie и распространяет ли он их на будущие запросы.</summary>
      <returns>Значение true, если файлы cookie разрешены, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет к данному элементу конфигурации параметры указанного элемента привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, параметры которого необходимо применить к данному элементу конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.AuthenticationScheme">
      <summary>Возвращает или задает схему проверки подлинности, при помощи которой выполняется проверка подлинности клиентских запросов, обрабатываемых прослушивателем HTTP.</summary>
      <returns>Объект <see cref="T:System.Net.AuthenticationSchemes" />, в котором указываются протоколы, используемые для проверки подлинности клиента.Значение по умолчанию — Anonymous.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.BindingElementType">
      <summary>Возвращает тип привязки.</summary>
      <returns>Тип привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.BypassProxyOnLocal">
      <summary>Возвращает или задает значение, определяющее, будут ли прокси-серверы пропускаться для локальных адресов.</summary>
      <returns>Значение true, если прокси-серверы для локальных адресов не используются; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент конфигурации.</summary>
      <param name="from">Элемент привязки <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, параметры которого необходимо скопировать в данный элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.CreateDefaultBindingElement">
      <summary>Создает элемент привязки на основе параметров данного элемента конфигурации.</summary>
      <returns>Элемент привязки <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, свойства которого копируются из параметров данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.DecompressionEnabled">
      <summary>Возвращает или задает значение, определяющее, включена ли распаковка данных сообщений SOAP для этого транспорта. </summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.ExtendedProtectionPolicy">
      <summary>Возвращает экземпляр <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />, содержащий параметры конфигурации для расширенной защиты сеанса.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по универсальному коду ресурса (URI).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, включается ли имя узла при маршрутизации входящих запросов на URI конечной точки.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.KeepAliveEnabled">
      <summary>Возвращает или задает логическое значение, указывающее, следует ли устанавливать постоянное соединение с интернет-ресурсом.</summary>
      <returns>Значение true, если необходимо поддерживать постоянное соединение с интернет-ресурсом; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буферного пула. </summary>
      <returns>Максимальный размер буферного пула.Значение по умолчанию — 524 288 байт (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.ProxyAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI), который содержит адрес прокси-сервера, используемого для выполнения HTTP-запросов.</summary>
      <returns>Код <see cref="T:System.Uri" />, содержащий адрес прокси-сервера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.ProxyAuthenticationScheme">
      <summary>Возвращает или задает схему проверки подлинности, используемую для проверки подлинности клиентских запросов, обрабатываемых прокси-сервером HTTP.</summary>
      <returns>Объект <see cref="T:System.Net.AuthenticationSchemes" />, в котором указываются протоколы, используемые для проверки подлинности клиента на прокси-сервере.Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.Realm">
      <summary>Возвращает или задает область проверки подлинности.</summary>
      <returns>Строка, содержащая область проверки подлинности. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.UnsafeConnectionNtlmAuthentication">
      <summary>Возвращает или задает значение, указывающее, разрешено ли на сервере совместное использование небезопасных подключений. </summary>
      <returns>Значение true, если совместное использование небезопасных подключений разрешено; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.UseDefaultWebProxy">
      <summary>Возвращает или задает значение, указывающее, используются ли параметры прокси-сервера компьютера или пользователя.</summary>
      <returns>Значение true, если используются параметры прокси-сервера <see cref="N:System.Net" /> по умолчанию; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpTransportSecurityElement">
      <summary>Представляет элемент конфигурации, управляющий параметрами проверки подлинности для транспорта HTTP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.ClientCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности.</summary>
      <returns>
        <see cref="T:System.ServiceModel.HttpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.ExtendedProtectionPolicy">
      <summary>Возвращает экземпляр <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />, содержащий параметры конфигурации для расширенной защиты сеанса.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.ProxyCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности на прокси-сервере.</summary>
      <returns>
        <see cref="T:System.ServiceModel.HttpProxyCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.Realm">
      <summary>Возвращает или задает область проверки подлинности, используемую для дайджест-проверки подлинности или обычной проверки подлинности.</summary>
      <returns>Область проверки подлинности.Значение по умолчанию — «».</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IBindingConfigurationElement">
      <summary>Предоставляет базовые параметры конфигурации для элемента привязки. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IBindingConfigurationElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет содержимое указанной привязки к данному разделу конфигурации привязки.</summary>
      <param name="binding">Привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.CloseTimeout">
      <summary>Возвращает промежуток времени, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.Name">
      <summary>Возвращает имя привязки.</summary>
      <returns>Имя привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.OpenTimeout">
      <summary>Возвращает промежуток времени, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.ReceiveTimeout">
      <summary>Возвращает промежуток времени, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается время, выделенное для завершения операции получения до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.SendTimeout">
      <summary>Возвращает промежуток времени, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IdentityElement">
      <summary>Представляет элемент конфигурации, включающий проверку подлинности конечной точки другими конечными точками, с которыми происходит обмен сообщениями.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IdentityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IdentityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Certificate">
      <summary>Возвращает параметры конфигурации сертификата X.509.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.CertificateElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.CertificateReference">
      <summary>Возвращает параметры конфигурации для проверки сертификата X.509.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.CertificateReferenceElement" />, в котором задаются параметры конфигурации для проверки сертификата X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Dns">
      <summary>Возвращает удостоверение DNS.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.DnsElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IdentityElement.InitializeFrom(System.ServiceModel.EndpointIdentity)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого указанного объекта.</summary>
      <param name="identity">Экземпляр <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="identity" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Rsa">
      <summary>Возвращает удостоверение RSA.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.RsaElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.ServicePrincipalName">
      <summary>Возвращает удостоверение имени участника на уровне сервера (SPN).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ServicePrincipalNameElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.UserPrincipalName">
      <summary>Возвращает удостоверение имени участника-пользователя (UPN).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.UserPrincipalNameElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement">
      <summary>Представляет элемент конфигурации, в котором указывается текущий маркер, выданный в качестве учетных данных клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.BehaviorConfiguration">
      <summary>Возвращает или задает поведение, к которому применяется данная конфигурация.</summary>
      <returns>Имя поведения, к которому применяется данная конфигурация.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.IssuerAddress">
      <summary>Возвращает или задает адрес издателя маркера.</summary>
      <returns>Адрес издателя маркера.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientElement">
      <summary>Представляет элемент конфигурации, в котором указывается маркер, выданный в качестве учетных данных клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.CacheIssuedTokens">
      <summary>Возвращает или задает логическое значение, указывающее, будут ли выданные маркеры кэшироваться.</summary>
      <returns>Значение true, если маркеры будут кэшироваться; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientElement.Copy(System.ServiceModel.Configuration.IssuedTokenClientElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" />.</summary>
      <param name="from">Раздел конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="from" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.DefaultKeyEntropyMode">
      <summary>Возвращает или задает значение <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> по умолчанию.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.IssuedTokenRenewalThresholdPercentage">
      <summary>Возвращает или задает для выданных маркеров пороговое значение обновления (в процентах).</summary>
      <returns>Пороговое значение обновления (в процентах) для выданных маркеров.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.IssuerChannelBehaviors">
      <summary>Возвращает коллекцию элементов конфигурации, в которых задаются поведения канала издателя.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.LocalIssuer">
      <summary>Возвращает или задает элемент конфигурации, в котором задается адрес локального издателя.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />, в котором указывается адрес локального издателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.LocalIssuerChannelBehaviors">
      <summary>Возвращает коллекцию поведений канала локального издателя.</summary>
      <returns>Коллекция поведений канала локального издателя.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.MaxIssuedTokenCachingTime">
      <summary>Возвращает или задает максимальное время кэширования выданного маркера.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, представляющее максимальное время кэширования выпущенного маркера. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenParametersElement">
      <summary>Представляет элемент конфигурации, в котором указываются дополнительные параметры выданного маркера.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenParametersElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.AdditionalRequestParameters">
      <summary>Возвращает коллекцию элементов конфигурации, в которой указываются дополнительные сведения.</summary>
      <returns>Объект типа <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.ClaimTypeRequirements">
      <summary>Возвращает коллекцию обязательных типов утверждений.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" />.Каждый элемент в коллекции является экземпляром класса <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" /> с заданным свойством <see cref="P:System.ServiceModel.Configuration.ClaimTypeElement.ClaimType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.DefaultMessageSecurityVersion">
      <summary>Возвращает или задает версию системы безопасности сообщений по умолчанию, используемую с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />, предоставляющий сведения о версиях спецификаций безопасности (WS-Security, WS-Trust, WS-Secure Conversation и WS-Security Policy), которые должны поддерживаться привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.Issuer">
      <summary>Возвращает элемент конфигурации, задающий конечную точку, выдавшую текущий маркер.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.IssuerMetadata">
      <summary>Возвращает элемент конфигурации, в котором указываются дополнительные сведения об издателе маркера. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeySize">
      <summary>Возвращает или задает длину выпускаемого ключа.</summary>
      <returns>Длина выпускаемого ключа.Значение по умолчанию — 256.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType">
      <summary>Возвращает или задает тип выпускаемого ключа.</summary>
      <returns>Допустимое значение <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />, указывающее тип выпускаемого ключа.Значение по умолчанию — <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.TokenType">
      <summary>Возвращает или задает тип маркера, используемого при выпуске.</summary>
      <returns>Строка.Значение по умолчанию — http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAML.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement">
      <summary>Представляет элемент конфигурации, в котором указывается конечная точка, выдающая маркер безопасности.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.Binding">
      <summary>Возвращает или задает используемый тип привязки.</summary>
      <returns>Тип используемой привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.BindingConfiguration">
      <summary>Возвращает или задает имя конфигурации привязки, используемой при создании экземпляра конечной точки.Конфигурация привязки должна входить в область действия при определении конечной точки.</summary>
      <returns>Имя конфигурации привязки, используемой при создании экземпляра конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenServiceElement">
      <summary>Представляет элемент конфигурации, в котором указывается маркер, выданный в качестве учетных данных службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers">
      <summary>Возвращает или задает значение, указывающее, разрешены ли ненадежные издатели RSA-сертификатов.</summary>
      <returns>Значение true, если недоверенные поставщики RSA-сертификатов принимаются; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode">
      <summary>Возвращает или задает значение, которое указывает, должно ли проверяться свойство <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />. </summary>
      <returns>Допустимое значение объекта <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" />, которое указывает, должно ли проверяться свойство <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> маркера безопасности <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode">
      <summary>Возвращает или задает режим проверки сертификата. </summary>
      <returns>Одно из допустимых значений для <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.Если задано значение <see cref="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom" />, также необходимо предоставить customCertificateValidator.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" />.</summary>
      <param name="from">Элемент конфигурации, из которого копируются данные.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="from" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType">
      <summary>Возвращает или задает тип и сборку, используемые для проверки пользовательского типа. </summary>
      <returns>Тип и сборка, используемые для проверки пользовательского типа. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates">
      <summary>Возвращает коллекцию элементов конфигурации, в которой перечисляются сертификаты, выпущенные доверенными издателями. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode">
      <summary>Возвращает или задает режим отзыва, который указывает, проводится ли проверка списка отозванных сертификатов; этот режим также определяет способ проверки: с подключением к сети или автономно.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType">
      <summary>Возвращает или задает тип объекта <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, используемого в качестве учетных данных службы.</summary>
      <returns>Тип объекта <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, используемого в качестве учетных данных службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation">
      <summary>Возвращает или задает расположение хранилища сертификатов X.509. </summary>
      <returns>Допустимое значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement">
      <summary>Настраивает параметры безопасности локального клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies">
      <summary>Возвращает или задает логическое значение, указывающее, включено ли кэширование файлов cookie. </summary>
      <returns>Значение true, если кэширование файлов cookie включено, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage">
      <summary>Возвращает или задает максимальный процент файлов cookie, которые могут быть обновлены.</summary>
      <returns>Значение от 0 до 100 включительно.Значение по умолчанию — 90.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays">
      <summary>Возвращает или задает логическое значение, которое указывает, обнаруживаются и обрабатываются ли атаки повторной передачи пакетов против заданного канала автоматически.</summary>
      <returns>Значение true, если атаки воспроизведения пакетов против заданного канала обнаруживаются и обрабатываются автоматически; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее максимальный разброс времени между системными часами взаимодействующих сторон.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, указывающее максимальный разброс времени между системными часами взаимодействующих сторон.Значение по умолчанию — «00:05:00».</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime">
      <summary>Возвращает или задает элемент <see cref="T:System.TimeSpan" />, который задает максимальное время существования файлов cookie.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает максимальное время существования файлов Cookie.Значение по умолчанию — 10675199.02:48:05.4775807.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure">
      <summary>Возвращает или задает логическое значение, указывающее, будут ли подключения, работающие по протоколу WS-ReliableMessaging, выполнять попытку восстановления после транспортных сбоев.</summary>
      <returns>Значение true, если подключения, работающие по протоколу обмена сообщениями WS-Reliable, будут пытаться восстановиться после транспортных сбоев; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize">
      <summary>Возвращает или задает значение, указывающее количество кэшированных параметров nonce, используемых для определения ответов.</summary>
      <returns>Количество кэшированных чисел nonce, используемых для обнаружения воспроизведения.Значение по умолчанию — 500000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого параметры nonce отдельных сообщений являются действительными.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, которое указывает срок действия параметров nonce отдельного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval">
      <summary>Возвращает или задает значение типа <see cref="T:System.TimeSpan" />, указывающее интервал времени, по истечении которого инициатор будет обновлять ключ сеанса безопасности.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее продолжительность времени после обновления инициатором ключа сеанса безопасности.Значение по умолчанию — 10:00:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval">
      <summary>Возвращает или задает значение типа <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.Значение по умолчанию — 00:05:00.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.Значение по умолчанию — 00:05:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее срок действия отметки времени.</summary>
      <returns>Положительное значение типа <see cref="T:System.TimeSpan" />, указывающее срок действия отметки времени.Значение по умолчанию — 00:15:00.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement">
      <summary>Настраивает параметры безопасности локальной службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays">
      <summary>Возвращает или задает логическое значение, которое указывает, обнаруживаются и обрабатываются ли атаки повторной передачи пакетов против заданного канала автоматически.</summary>
      <returns>Значение true, если атаки воспроизведения пакетов против заданного канала обнаруживаются и обрабатываются автоматически; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее время бездействия канала. </summary>
      <returns>Положительное значение типа <see cref="T:System.TimeSpan" />, в котором указывается время бездействия канала.Значение по умолчанию — 01:00:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, в котором указывается время существования для всех новых куки-файлов безопасности.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, которое задает время существования для всех новых файлов безопасности cookie.Значение по умолчанию — «10:00:00».</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies">
      <summary>Возвращает или задает значение, указывающее максимальное количество кэшируемых куки-файлов.</summary>
      <returns>Максимальное количество кэшируемых куки-файлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее максимальный разброс времени между системными часами взаимодействующих сторон.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, указывающее максимальный разброс времени между системными часами взаимодействующих сторон.Значение по умолчанию — «00:05:00».</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions">
      <summary>Возвращает или задает значение, указывающее максимальное число отложенных сеансов безопасности, поддерживаемых службой.</summary>
      <returns>Максимальное количество ожидающих безопасных сеансов, поддерживаемое службой.Значение по умолчанию — 1000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations">
      <summary>Возвращает или задает значение, указывающее количество одновременно выполняемых согласований режима безопасности.</summary>
      <returns>Количество одновременно выполняемых согласований режима безопасности.Значение по умолчанию — 1024.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность этапа согласования параметров безопасности между сервером и клиентом.</summary>
      <returns>Положительное значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность этапа согласования параметров безопасности между сервером и клиентом.Значение по умолчанию — 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure">
      <summary>Возвращает или задает логическое значение, указывающее, будут ли подключения, работающие по протоколу WS-ReliableMessaging, выполнять попытку восстановления после транспортных сбоев.</summary>
      <returns>Значение true, если подключения, работающие по протоколу обмена сообщениями WS-Reliable, будут пытаться восстановиться после транспортных сбоев; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize">
      <summary>Возвращает или задает значение, указывающее количество кэшированных параметров nonce, используемых для определения ответов.</summary>
      <returns>Количество кэшированных чисел nonce, используемых для обнаружения воспроизведения.Значение по умолчанию — 500000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого параметры nonce отдельных сообщений являются действительными.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, которое указывает срок действия параметров nonce отдельного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval">
      <summary>Возвращает или задает значение типа <see cref="T:System.TimeSpan" />, указывающее интервал времени, по истечении которого инициатор будет обновлять ключ сеанса безопасности.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее продолжительность времени после обновления инициатором ключа сеанса безопасности.Значение по умолчанию — 10:00:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval">
      <summary>Возвращает или задает значение типа <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.Значение по умолчанию — 00:05:00.</summary>
      <returns>Значение типа <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого ключ предыдущего сеанса остается действительным для входящих сообщений, пока выполняется обновление ключа.Значение по умолчанию — 00:05:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее срок действия отметки времени.</summary>
      <returns>Положительное значение типа <see cref="T:System.TimeSpan" />, указывающее срок действия отметки времени.Значение по умолчанию — 00:15:00.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageLoggingElement">
      <summary>Представляет элемент XML, в котором задаются параметры ведения журнала сообщений в . </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageLoggingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.Filters">
      <summary>Возвращает объекты XPathFilter, используемые для ведения журнала сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage">
      <summary>Возвращает или задает логическое значение, указывающее, заносится ли в журнал сообщение целиком (текст и заголовок сообщения). </summary>
      <returns>Значение true, если в журнал записывается все сообщение (заголовок и текст); в противном случае — значение false.Значением по умолчанию является false, означающее, что в журнал заносится только заголовок сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii">
      <summary>Возвращает или задает значение, указывающее, занесен ли в журнал известный идентификатор Pii.</summary>
      <returns>Значение true, если известный идентификатор Pii занесен в журнал, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages">
      <summary>Возвращает или задает значение, указывающее, заносятся ли в журнал сообщения неправильного формата. </summary>
      <returns>Значение true, если сообщения неправильного формата заносятся в журнал; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel">
      <summary>Возвращает или задает значение, указывающее, выполняется ли трассировка сообщений на уровне службы (перед шифрованием и преобразованиями, связанными с транспортом). </summary>
      <returns>Значение true, если трассировка сообщений выполняется на уровне службы (перед шифрованием и преобразованиями, связанными с транспортом); в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel">
      <summary>Возвращает или задает значение, указывающее, выполняется ли трассировка сообщений на уровне транспорта. </summary>
      <returns>Значение true, если трассировка сообщений выполняется на уровне транспорта; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog">
      <summary>Возвращает или задает значение, указывающее максимальное количество записываемых в журнал сообщений.</summary>
      <returns>Максимальное количество записываемых в журнал сообщений.Значение по умолчанию — 1000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog">
      <summary>Возвращает или задает значение, указывающее максимальный размер (в байтах) записываемого в журнал сообщения. </summary>
      <returns>Максимальный размер (в байтах) записываемого в журнал сообщения.Сообщения, размер которых превышает данное ограничение, в журнал не заносятся.Действие этого параметра распространяется на все уровни трассировки.Значение по умолчанию — «Int32.MaxValue».</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverHttpElement">
      <summary>Задает параметры конфигурации безопасности для сообщения, отправляемого по протоколу HTTP.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite">
      <summary>Возвращает или задает алгоритмы шифрования сообщений и ключей, используемые для обеспечения безопасности HTTP-сообщения.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />, в котором указываются алгоритмы шифрования сообщений и ключей, используемые для обеспечения безопасности HTTP-сообщения.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType">
      <summary>Указывает тип учетных данных, используемых при проверке подлинности клиента с помощью безопасности на уровне сообщений или TransportWithMessageCredential.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.MessageCredentialType" />, указывающее тип учетных данных, используемых при проверке подлинности клиента с помощью безопасности на уровне сообщений или TransportWithMessageCredential.Значение по умолчанию — <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential">
      <summary>Возвращает или задает логическое значение, которое определяет, предоставляются учетные данные службы клиенту по внештатному каналу или же клиент получает их от службы в процессе согласования.</summary>
      <returns>Значение true, если учетные данные службы предоставляются клиенту по внештатному каналу; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement">
      <summary>Позволяет задать для привязки <see cref="T:System.ServiceModel.NetMsmqBinding" /> свойства безопасности на уровне сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite">
      <summary>Указывает набор алгоритмов, используемый для обеспечения безопасности сообщений на уровне SOAP.</summary>
      <returns>Параметр <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> для сообщений, отправляемых через привязку <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType">
      <summary>Возвращает или задает параметры безопасности <see cref="T:System.ServiceModel.MessageCredentialType" /> для сообщений, отправляемых посредством транспорта MSMQ.</summary>
      <returns>Параметры безопасности <see cref="T:System.ServiceModel.MessageCredentialType" /> для сообщений, отправляемых посредством транспорта MSMQ.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement">
      <summary>Задает параметры конфигурации безопасности для сообщения, отправляемого по протоколу TCP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.AlgorithmSuite">
      <summary>Возвращает или задает алгоритмы шифрования сообщений и ключей, используемые для обеспечения безопасности TCP-сообщения.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />, в котором указываются алгоритмы шифрования сообщений и ключей, используемые для обеспечения безопасности TCP-сообщения.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.ClientCredentialType">
      <summary>Указывает тип учетных данных, используемых при проверке подлинности клиента с помощью безопасности на уровне сообщений или TransportWithMessageCredential.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.MessageCredentialType" />, указывающее тип учетных данных, используемых при проверке подлинности клиента с помощью безопасности на уровне сообщений или TransportWithMessageCredential.Значение по умолчанию — <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MetadataElement">
      <summary>Представляет элемент конфигурации, в котором указывается способ обработки метаданных службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MetadataElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.LoadPolicyImportExtensions">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.IPolicyImportExtension" />, используемых для импорта утверждений настраиваемой политики о привязках.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.IPolicyImportExtension" />, используемых для импорта утверждений настраиваемой политики о привязках.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.LoadWsdlImportExtensions">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL. </summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MetadataElement.PolicyImporters">
      <summary>Возвращает коллекцию средств импорта политик, в которой указывается процедура импорта утверждений настраиваемой политики о привязках.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Configuration.PolicyImporterElementCollection" />, в которой указывается процедура импорта утверждений настраиваемой политики о привязках.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MetadataElement.WsdlImporters">
      <summary>Возвращает коллекцию средств импорта WSDL, импортирующих метаданные на языке WSDL 1.1 с вложениями WS-Policy.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.WsdlImporterElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2">
      <summary>Представляет коллекцию элементов конфигурации привязки MEX.</summary>
      <typeparam name="TStandardBinding">Стандартный элемент привязки.</typeparam>
      <typeparam name="TBindingConfiguration">Элемент конфигурации привязки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Добавляет указанную привязку в коллекцию.</summary>
      <returns>Значение true, если привязку можно добавить в коллекцию; в противном случае — значение false.</returns>
      <param name="name">Имя добавляемой привязки.</param>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий добавляемую привязку.</param>
      <param name="config">Параметры конфигурации для данной привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexBindingElement`1">
      <summary>Представляет базовый элемент конфигурации, в котором задаются параметры привязки, используемой для обмена сообщениями WS-MetadataExchange (WS-MEX). </summary>
      <typeparam name="TStandardBinding">Стандартный элемент привязки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingElement`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexBindingElement`1" /> с указанным именем.</summary>
      <param name="name">Имя привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MexBindingElement`1.BindingElementType">
      <summary>Возвращает тип этого элемента привязки. </summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingElement`1.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое заданного элемента конфигурации привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Элемент конфигурации привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpBindingCollectionElement">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingCollectionElement.GetDefault">
      <summary>Загружает значения по умолчанию элемента конфигурации.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpBindingElement">
      <summary>Представляет элемент конфигурации, в котором задаются параметры привязки, используемой для обмена сообщениями WS-MetadataExchange (WS-MEX) по протоколу HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" /> с указанным именем. </summary>
      <param name="name">Имя привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement.GetDefault">
      <summary>Загружает значения по умолчанию элемента конфигурации.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpsBindingElement">
      <summary>Представляет элемент конфигурации, в котором задаются параметры привязки, используемой для обмена сообщениями WS-MetadataExchange (WS-MEX) по протоколу HTTPS.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" /> с указанным именем.</summary>
      <param name="name">Имя привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement.GetDefault">
      <summary>Загружает значения по умолчанию элемента конфигурации.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement">
      <summary>Представляет элемент конфигурации, в котором задаются параметры привязки, используемой для обмена сообщениями WS-MetadataExchange (WS-MEX) по именованному каналу.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" /> с указанным именем.</summary>
      <param name="name">Имя привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexTcpBindingCollectionElement">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexTcpBindingCollectionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingCollectionElement.GetDefault">
      <summary>Возвращает для данной коллекции элемент привязки по умолчанию.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexTcpBindingElement">
      <summary>Представляет элемент конфигурации, в котором задаются параметры привязки, используемой для обмена сообщениями WS-MetadataExchange (WS-MEX) по протоколу TCP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" /> с указанным именем.</summary>
      <param name="name">Имя привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqBindingElementBase">
      <summary>Предоставляет базовый класс, члены которого являются общими для классов <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> и <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" />.</summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации конкретной привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue">
      <summary>Возвращает или задает универсальный код ресурса <see cref="T:System.Uri" />, используемый для идентификации настраиваемой очереди недоставленных сообщений, в которую помещаются просроченные сообщения и сообщения, которые не удалось доставить.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" />, содержащий универсальный код ресурса (URI) настраиваемой очереди недоставленных сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue">
      <summary>Возвращает или задает значение параметра <see cref="T:System.ServiceModel.DeadLetterQueue" /> для данной привязки. </summary>
      <returns>Значение <see cref="T:System.ServiceModel.DeadLetterQueue" />, задающее, какой тип очереди недоставленных сообщений следует использовать, и использовать ли вообще.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Durable">
      <summary>Возвращает или задает значение, указывающее, являются ли сообщения, отправляемые этой привязкой, устойчивыми или переменными.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ExactlyOnce">
      <summary>Возвращает или задает значение, указывающее, задана ли для сообщений, отправляемых этой привязкой, гарантия в точности однократной доставки.</summary>
      <returns>Значение, указывающее, задана ли для сообщений, отправляемых этой привязкой, гарантия в точности однократной доставки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует данную привязку содержимым указанной привязки.</summary>
      <param name="binding">Привязка с параметрами, которые будут использоваться для инициализации данной привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize">
      <summary>Возвращает или задает значение, в котором указывается максимально допустимый размер сообщения.</summary>
      <returns>Максимально допустимый размер сообщения, отправляемого или принимаемого данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles">
      <summary>Возвращает или задает максимальное число циклов повторных попыток доставки сообщений принимающему приложению.</summary>
      <returns>Число циклов повторных попыток, предпринимаемых перед тем, как поместить сообщение в очередь недоставленных сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое данной привязки применяется к указанной привязке.</summary>
      <param name="binding">Привязка, содержащая параметры, которые необходимо применить.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveContextEnabled">
      <summary>Возвращает или задает значение, указывающее, включен ли контекст получения для обработки сообщений в очередях.Если включено, служба может выбрать сообщение в очереди, чтобы начать его обработку, и при возникновении ошибки и создании исключения сообщение остается в очереди.Службы могут также блокировать сообщения, чтобы еще раз попытаться обработать их позже. ReceiveContext имеет механизм «закрытия» сообщения после его обработки, что позволяет удалить сообщение из очереди. Больше не производится запись и считывание сообщений в очереди по сети; отдельные сообщения более не перебрасываются между различными экземплярами служб во время обработки.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveErrorHandling">
      <summary>Возвращает или задает значение перечисления, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount">
      <summary>Возвращает или задает максимальное число немедленных повторных попыток, которые должен выполнить диспетчер очереди, если не удается передать сообщение из очереди приложения самому приложению.</summary>
      <returns>Максимальное число попыток отправки сообщения диспетчером очереди, после которого сообщение помещается в очередь повторного выполнения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.RetryCycleDelay">
      <summary>Возвращает или задает значение, задающее время ожидания между циклами повторных попыток доставки сообщения, которое не удалось доставить.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению.Значение по умолчанию — 30 (минут).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.TimeToLive">
      <summary>Возвращает или задает значение, задающее срок действия сообщений.По истечении этого срока сообщение помещается в очередь недоставленных сообщений (если такая очередь существует).</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается срок действия сообщений.Значение по умолчанию — 24 часа.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing">
      <summary>Возвращает или задает значение, включающее или отключающее встроенную в очередь сообщений (MSMQ) функцию отслеживания сообщений.</summary>
      <returns>Значение, включающее или отключающее встроенную в очередь сообщений функцию трассировки сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseSourceJournal">
      <summary>Возвращает или задает значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если сообщения, обрабатываемые данной привязкой, копируются в очередь журнала источника; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration">
      <summary>Возвращает или задает значение, указывающее время ожидания соединения при работе с каналами, поставленными в очередь.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqElementBase">
      <summary>Предоставляет базовый класс, члены которого являются общими для классов <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> и <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет параметры данного элемента привязки к указанному элементу привязки.</summary>
      <param name="bindingElement">Элемент привязки, содержащий параметры, которые необходимо применить.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент привязки.</summary>
      <param name="from">Элемент <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, в котором содержатся копируемые значения.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue">
      <summary>Возвращает или задает универсальный код ресурса (URI) со сведениями о расположении очереди недоставленных сообщений для каждого приложения; в этой очереди размещаются просроченные сообщения либо сообщения, которые не удалось передать или доставить. </summary>
      <returns>Свойство <see cref="T:System.Uri" />, в котором указывается расположение очереди недоставленных сообщений для каждого приложения.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue">
      <summary>Возвращает или задает значение перечисления, указывающее тип используемой очереди недоставленных сообщений.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.DeadLetterQueue" />, указывающее тип используемой очереди недоставленных сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.Durable">
      <summary>Возвращает или задает значение, указывающее, устойчивыми или неустойчивыми являются сообщения, обрабатываемые этой привязкой.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce">
      <summary>Возвращает или задает логическое значение, указывающее, доставляются ли сообщения, обрабатываемые этой привязкой, только один раз.</summary>
      <returns>Значение true, если сообщения, обрабатываемые этой привязкой, будут приниматься только один раз; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует данный элемент привязки содержимым указанного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки с параметрами, которые будут использоваться для инициализации данного элемента привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles">
      <summary>Возвращает или задает максимальное число циклов повторных попыток доставки сообщений принимающему приложению.</summary>
      <returns>Целое число, указывающее максимальное количество циклов повторных попыток доставки сообщения приложению.Значение по умолчанию — 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity">
      <summary>Возвращает экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />, в котором инкапсулированы параметры безопасности транспорта для привязки.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />, в котором инкапсулированы параметры безопасности транспорта для привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled">
      <summary>Возвращает или задает значение, указывающее, включен ли контекст получения для обработки сообщений в очередях.Если значение равно true, служба может выбрать сообщение в очереди, чтобы начать его обработку, а если происходит ошибка и создается исключение, сообщение остается в очереди.Службы могут также «заблокировать» сообщения, чтобы попытаться повторить обработку позже.  ReceiveContext  предоставляет механизм для «завершения» однажды обработанного сообщения, чтобы его можно было удалить из очереди.Больше не происходят чтение сообщений и их повторная запись в очередь, а отдельные сообщения больше не перебрасываются между экземплярами служб во время обработки.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling">
      <summary>Возвращает или задает значение перечисления, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее, каким образом будут обрабатываться подозрительные сообщения и сообщения, которые не удалось доставить.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount">
      <summary>Возвращает или задает максимальное число попыток отправки сообщения диспетчером очереди, после которого сообщение помещается в очередь повторного выполнения.</summary>
      <returns>32-разрядное целое число со знаком, в котором указывается максимальное число попыток отправки сообщения диспетчером очереди, после которого сообщение помещается в очередь повторного выполнения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay">
      <summary>Возвращает или задает значение, указывающее временную задержку между циклами повторения при попытке доставить сообщение, которое не удалось доставить немедленно.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению.Значение по умолчанию — «00:10:00».</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive">
      <summary>Возвращает или задает промежуток времени, определяющий срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.Значение по умолчанию — один день (01:00:00:00).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing">
      <summary>Возвращает или задает логическое значение, указывающее, следует ли включить трассировку сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если необходимо отслеживать сообщения, обрабатываемые данной привязкой; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal">
      <summary>Возвращает или задает логическое значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение true, если копии сообщений, обрабатываемых этой привязкой, должны сохраняться в очереди журнала источника; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration">
      <summary>Возвращает или задает значение, указывающее время ожидания соединения при работе с каналами, поставленными в очередь.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement">
      <summary>Представляет коллекцию элементов MsmqIntegrationBindingElements.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement">
      <summary>Этот элемент привязки можно использовать, чтобы разрешить приложениям  отправлять и принимать сообщения от существующих приложений MSMQ, в которых используется COM, собственные API-интерфейсы MSMQ или API-интерфейсы в <see cref="N:System.Messaging" />.Этот класс используется для отправки сообщений приложениям на базе MSMQ и получения сообщений от таких приложений.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> с помощью указанного имени привязки.</summary>
      <param name="name">Используемое имя привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.BindingElementType">
      <summary>Возвращает тип элемента привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип элемента привязки, связанного с данным элементом конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует свойства объекта <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> на основе свойств указанного объекта <see cref="T:System.ServiceModel.Channels.Binding" />.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для инициализации свойств объекта <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое данной привязки применяется к указанной привязке.</summary>
      <param name="binding">Привязка, к которой применяются параметры.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.Properties">
      <summary>Возвращает коллекцию свойств конфигурации, связанную с данным элементом конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий набор свойств, связанных с данным элементом конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement" />, в котором указывается тип безопасности, используемой с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.SerializationFormat">
      <summary>Возвращает или задает формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений MSMQ.</summary>
      <returns>Формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений MSMQ.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры, необходимые для взаимодействия с отправителем и получателем очереди сообщений (MSMQ).</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет параметры данного элемента конфигурации к указанному элементу <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Элемент привязки, к которому применяются параметры.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationElement.BindingElementType">
      <summary>Возвращает тип привязки, связанной с данным элементом конфигурации.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип элемента привязки, связанного с данным элементом конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент конфигурации.</summary>
      <param name="from">Элемент привязки <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, параметры которого необходимо скопировать в данный элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationElement.SerializationFormat">
      <summary>Возвращает или задает формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений очереди сообщений (MSMQ).</summary>
      <returns>Формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений MSMQ.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement">
      <summary>Инкапсулирует параметры безопасности транспорта для канала интеграции очереди сообщений (MSMQ).</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.Mode">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />, связанный с каналом интеграции очереди сообщений.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />, связанный с каналом интеграции очереди сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.Transport">
      <summary>Возвращает объект класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с каналом интеграции очереди сообщений (MSMQ).</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с каналом интеграции очереди сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqTransportElement">
      <summary>Представляет элемент привязки, используемый для указания свойств взаимодействия с использованием очередей для службы , в которой применяется собственный протокол MSMQ.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет параметры данного элемента конфигурации к указанному элементу привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, к которому применяются параметры.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.BindingElementType">
      <summary>Возвращает тип привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в данный элемент конфигурации.</summary>
      <param name="from">Элемент, из которого копируются параметры.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.MaxPoolSize">
      <summary>Возвращает или задает целое число, указывающее максимальный размер пула, содержащего внутренние объекты сообщений MSMQ.</summary>
      <returns>Целое число, указывающее максимальный размер пула, содержащего внутренние объекты сообщений MSMQ.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.QueueTransferProtocol">
      <summary>Возвращает или задает значение перечисления, которое указывает использующий очереди транспорт коммуникационного канала, используемый данной привязкой.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.QueueTransferProtocol" />, указывающее транспорт, используемый для доставки сообщений между диспетчерами очередей. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.UseActiveDirectory">
      <summary>Возвращает логическое значение, указывающее, следует ли преобразовывать адреса очередей с помощью Active Directory.</summary>
      <returns>Значение true, если адреса очередей необходимо преобразовывать с помощью Active Directory; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement">
      <summary>Класс <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> инкапсулирует параметры безопасности транспорта для транспортов очереди.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqAuthenticationMode">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqAuthenticationMode" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MsmqAuthenticationMode" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqEncryptionAlgorithm">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqProtectionLevel">
      <summary>Возвращает или задает <see cref="T:System.Net.Security.ProtectionLevel" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />.</summary>
      <returns>Алгоритм <see cref="T:System.Net.Security.ProtectionLevel" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqSecureHashAlgorithm">
      <summary>Возвращает или задает <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />.</summary>
      <returns>Алгоритм <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" />, связанный с данным экземпляром класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MtomMessageEncodingElement">
      <summary>Представляет раздел конфигурации, в котором указываются параметры кодировки и управления версиями для сообщений, для которых применяется подсистема оптимизации передачи сообщений SOAP MTOM.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.MtomMessageEncodingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.BindingElementType">
      <summary>Возвращает тип <see cref="T:System.Type" /> этого элемента конфигурации. </summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента конфигурации. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный элемент привязки. </summary>
      <param name="from">Раздел конфигурации, в который копируются данные.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер используемого буфера.</summary>
      <returns>Максимальное число типов, используемых для буферизации сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxReadPoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно считать одновременно без выделения памяти для дополнительных модулей чтения.</summary>
      <returns>Максимальное количество сообщений, которые можно читать одновременно, не выделяя памяти для новых модулей чтения.Значение по умолчанию — 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxWritePoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно отправить одновременно без выделения памяти для дополнительных модулей записи.</summary>
      <returns>Максимальное количество сообщений, которые можно отправить одновременно, не выделяя памяти для новых модулей записи.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MessageVersion">
      <summary>Возвращает или задает версию SOAP сообщений, отправляемых с помощью этой привязки.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Channels.MessageVersion" />, указывающее версию SOAP сообщений, отправляемых с помощью этой привязки.Значение по умолчанию — <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую при создании сообщений для привязки.</summary>
      <returns>Значение <see cref="T:System.Text.Encoding" />, в котором указывается кодировка, используемая при создании сообщений для привязки.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement">
      <summary>Представляет элемент конфигурации, в котором указываются дополнительные параметры пула подключений для транспорта именованного канала.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName">
      <summary>Возвращает или задает строку, определяющую имя пула подключений, используемого для исходящих каналов.</summary>
      <returns>Строка, определяющая имя пула подключений, используемого для исходящих каналов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout">
      <summary>Возвращает или задает максимальное время, в течение которого подключение может простаивать перед отключением.</summary>
      <returns>Положительное значение <see cref="T:System.TimeSpan" />, указывающее максимальное время бездействия для подключения перед его закрытием.Значение по умолчанию — 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>Возвращает или задает максимальное число подключений к удаленной конечной точке, инициированных одной службой.</summary>
      <returns>Положительное целое число, указывающее максимальное число подключений к удаленной конечной точке, инициированных одной службой.Значение по умолчанию — 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeTransportElement">
      <summary>Представляет элемент конфигурации, в котором указывается канал передачи сообщений с использованием именованных каналов, если такой канал включен в настраиваемую привязку.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента конфигурации к данному элементу конфигурации.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportElement.ConnectionPoolSettings">
      <summary>Возвращает или задает дополнительные параметры пула подключений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement" />, в котором указываются дополнительные параметры пула подключений для этой привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement">
      <summary>Указывает параметры безопасности транспорта для именованного канала.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement.ProtectionLevel">
      <summary>Указывает способ защиты данного именованного канала.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1">
      <summary>Содержит коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />.</summary>
      <typeparam name="TServiceModelExtensionElement">Элемент расширения ServiceModel.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1.Name">
      <summary>Возвращает или задает имя коллекции.</summary>
      <returns>Имя данной коллекции.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement">
      <summary>Представляет раздел конфигурации, в котором содержится коллекция экземпляров класса <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqBindingElement">
      <summary>Представляет привязку с очередью, пригодную для обмена данными между компьютерами.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> на основе параметров указанного элемента привязки конфигурации.</summary>
      <param name="name">Значение атрибута name, обозначающее элемент binding, параметры которого используются для инициализации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.BindingElementType">
      <summary>Возвращает тип <see cref="T:System.Type" /> данной привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> данной привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="binding">Элемент привязки, используемый для инициализации данного раздела конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемый для диспетчера буферов, принимающего сообщения из канала.</summary>
      <returns>Максимальный объем памяти (в байтах), доступный для использования диспетчером буфера сообщений.Значение по умолчанию — 524288 (0x80000) байт.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет к элементу конфигурации указанную привязку.</summary>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, применяемая к элементу конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.Properties">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, связанный с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.QueueTransferProtocol">
      <summary>Возвращает или задает значение перечисления, которое указывает использующий очереди транспорт коммуникационного канала, используемый данной привязкой.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.QueueTransferProtocol" />, в котором указывается транспорт между диспетчерами очередей, используемый данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.ReaderQuotas">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, связанный с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.Security">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.NetMsmqSecurity" />, связанный с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.NetMsmqSecurity" />, связанный с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.UseActiveDirectory">
      <summary>Возвращает логическое значение, указывающее, следует ли преобразовывать адреса очередей с помощью Active Directory.</summary>
      <returns>Значение true, если адреса очередей необходимо преобразовывать с помощью Active Directory; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqSecurityElement">
      <summary>Класс <see cref="T:System.ServiceModel.Configuration.NetMsmqSecurityElement" /> инкапсулирует функции безопасности MSMQ, доступные при использовании привязки <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetMsmqSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Message">
      <summary>Возвращает экземпляр класса <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Mode">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.NetMsmqSecurityMode" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Transport">
      <summary>Возвращает элемент <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с привязкой <see cref="T:System.ServiceModel.NetMsmqBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement">
      <summary>Представляет раздел конфигурации, содержащий коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement">
      <summary>Представляет элемент конфигурации, определяющий безопасную, надежную и оптимизированную для обмена данными между процессами компьютера привязку.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> с указанным именем.</summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента конфигурации.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по универсальному коду ресурса (URI).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее, используется ли имя узла при маршрутизации входящих запросов на универсальный код ресурса (URI) конечной точки.Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует конфигурацию привязки на основе содержимого параметров конфигурации указанной привязки.</summary>
      <param name="binding">Параметры конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула.</summary>
      <returns>Максимальный размер буферного пула.Значение по умолчанию — 524 288 байт (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferSize">
      <summary>Возвращает или задает значение, указывающее максимальный размер буфера, используемого для хранения сообщений в памяти (в байтах).</summary>
      <returns>Максимальный объем памяти (в байтах), используемый для буферизации входящих сообщений.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxConnections">
      <summary>Возвращает или задает значение, указывающее максимальное количество исходящих и входящих подключений, которые служба соответственно создает и принимает.</summary>
      <returns>Максимальное количество исходящих и входящих подключений, которые служба соответственно создает и принимает.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимально допустимый размер сообщения, которое можно получить по каналу, настроенному с использованием этой привязки.</summary>
      <returns>Максимально допустимый размер сообщения, обрабатываемого данной привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет указанную привязку к этому экземпляру класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</summary>
      <param name="binding">Применяемая привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Security">
      <summary>Возвращает тип параметров безопасности, используемых с данной привязкой. </summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" />, в котором указывается тип параметров безопасности, используемых с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionFlow">
      <summary>Возвращает или задает логическое значение, определяющее, поддерживает ли привязка потоковые спецификации WS-Transactions.</summary>
      <returns>Значение true, если привязка поддерживает потоковые спецификации WS-Transactions; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionProtocol">
      <summary>Возвращает или задает протокол транзакций, используемый с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, в котором указывается протокол транзакций, используемый с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры безопасности для привязки именованного канала.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.Mode">
      <summary>Задает тип системы безопасности, применяемой к этой привязке.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" />, в котором указывается тип безопасности, применяемой к этой привязке.Значение по умолчанию — <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.Transport">
      <summary>Определяет параметры безопасности для данного транспорта. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий элементы, характерные для привязок TCP-сообщений однорангового канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement">
      <summary>Представляет элемент XML, в котором указывается привязка для обмена сообщениями TCP в конкретном канале.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" />. </summary>
      <param name="name">Объект <see cref="T:System.String" />, в котором указывается имя, которое необходимо связать с данным элементом привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.BindingElementType">
      <summary>Возвращает тип <see cref="T:System.Type" /> элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует параметры элемента конфигурации на основе данных, полученных от предоставленной сетевой привязки.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, содержащий привязку для конкретной сети, из которой этот элемент конфигурации получает новые параметры.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.ListenIPAddress">
      <summary>Возвращает или задает IP-адрес, на котором одноранговый узел будет прослушивать TCP-сообщения.</summary>
      <returns>Объект <see cref="T:System.String" />, в котором указывается IP-адрес (IPv4 или IPv6), на котором привязка однорангового канала будет прослушивать TCP-сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула, в котором хранятся сообщения TCP, обработанные привязкой.</summary>
      <returns>Значение <see cref="T:System.Int64" />, в котором указывается максимальный размер (в байтах) буферного пула, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщений, полученных одноранговыми TCP-привязками, настроенными с помощью данного элемента.</summary>
      <returns>Объект <see cref="T:System.Int32" />, указывающий максимальный размер сообщений, полученных одноранговыми TCP-привязками, настроенными с помощью данного элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует параметры элемента конфигурации на основе данных, полученных от предоставленной сетевой привязки при возникновении события конфигурации.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, содержащий привязку для конкретной сети, из которой этот элемент конфигурации получает новые параметры при возникновении события конфигурации приложения.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Port">
      <summary>Возвращает или задает порт сетевого интерфейса, на котором эта привязка будет обрабатывать TCP-сообщения однорангового канала.</summary>
      <returns>Объект <see cref="T:System.Int32" />, задающий порт сетевого интерфейса, на котором эта привязка будет обрабатывать TCP-сообщения однорангового канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Properties">
      <summary>Возвращает коллекцию свойств конфигурации для данного элемента привязки.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию свойств конфигурации для данного элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.ReaderQuotas">
      <summary>Возвращает элемент конфигурации для квот модуля чтения привязок, настроенных с помощью данного элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />, указывающий элемент конфигурации для квот модуля чтения привязок, настроенных с помощью данного элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Resolver">
      <summary>Возвращает элемент конфигурации для однорангового распознавателя, связанного с данной конфигурацией привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.PeerResolverElement" />, указывающий конфигурацию однорангового распознавателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Security">
      <summary>Возвращает элемент конфигурации безопасности для данной конфигурации привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.PeerSecurityElement" />, содержащий элемент конфигурации безопасности для данной конфигурации привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpBindingElement">
      <summary>Представляет элемент XML, в котором указывается привязка для обмена сообщениями TCP в конкретном канале.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> с указанным именем конфигурации. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента конфигурации.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</summary>
      <returns>Действительное значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, которое указывает, используется ли имя узла для доступа к службе при сравнении по универсальному коду ресурса (URI).Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует конфигурацию привязки на основе содержимого указанной привязки.</summary>
      <param name="binding">Привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog">
      <summary>Возвращает или задает значение, указывающее максимальное число каналов, ожидающих принятия на прослушивателе.</summary>
      <returns>Максимальное число каналов, ожидающих принятия на прослушивателе.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула, в котором хранятся сообщения TCP, обработанные привязкой.</summary>
      <returns>Максимальный объем памяти, используемой для буферизации входящих сообщений (в байтах).Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize">
      <summary>Возвращает или задает значение, указывающее максимальный размер буфера, используемого для хранения сообщений в памяти (в байтах).</summary>
      <returns>Максимальный размер буфера, используемого для хранения сообщений в памяти (в байтах).Значение по умолчанию — 65536.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections">
      <summary>Возвращает или задает значение, указывающее максимальное количество исходящих и входящих подключений, которые служба соответственно создает и принимает.</summary>
      <returns>Максимальное количество исходящих и входящих подключений, которые служба соответственно создает и принимает.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, которое можно получить по каналу, настроенному с использованием этой привязки.</summary>
      <returns>Максимальный размер сообщения (в байтах), обрабатываемого данной привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет указанную привязку к этому экземпляру класса <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.</summary>
      <param name="binding">Применяемая привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled">
      <summary>Возвращает или задает логическое значение, определяющее, включено ли совместное использование порта TCP для этого соединения.</summary>
      <returns>Значение true, если для данного соединения включено совместное использование порта TCP; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas">
      <summary>Возвращает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенных с помощью этой привязки.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession">
      <summary>Возвращает элемент конфигурации, в котором указывается, устанавливаются ли между конечными точками канала надежные сеансы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" />, в котором указывается, включена ли поддержка надежных сеансов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.NetTcpSecurityElement" />, используемый с данной привязкой. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow">
      <summary>Возвращает или задает логическое значение, определяющее, поддерживает ли привязка потоковые спецификации WS-Transactions.</summary>
      <returns>Значение true, если привязка поддерживает потоковые спецификации WS-Transactions; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol">
      <summary>Возвращает или задает протокол транзакций, используемый с данной привязкой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, в котором указывается протокол транзакций, используемый с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode">
      <summary>Возвращает или задает значение, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.TransferMode" />, указывающее, следует ли буферизировать сообщения, или передавать их потоком, или по запросу, или по отклику.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpContextBindingCollectionElement">
      <summary>Представляет раздел конфигурации, в котором содержится коллекция экземпляров класса <see cref="T:System.ServiceModel.Configuration.NetTcpContextBindingElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpContextBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpContextBindingCollectionElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpContextBindingElement">
      <summary>Представляет элемент конфигурации, соответствующий привязке <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpContextBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpContextBindingElement" />.  </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpContextBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpContextBindingElement" /> с указанным именем конфигурации.</summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Элемент конфигурации с заданным <paramref name="name" /> не существует. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpContextBindingElement.BindingElementType">
      <summary>Возвращает тип среды CLR стандартной привязки, связанной с элементом конфигурации System.ServiceModel.NetTcpContextBinding.</summary>
      <returns>Тип <see cref="T:System.Type" />, который задает тип среды CLR стандартной привязки, связанной с элементом конфигурации System.ServiceModel.NetTcpContextBinding</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpContextBindingElement.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента для элемента привязки.</summary>
      <returns>Возвращает <see cref="T:System.Uri" />, содержащий адрес обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpContextBindingElement.ContextManagementEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpContextBindingElement.ContextProtectionLevel">
      <summary>Возвращает или задает необходимый уровень защиты заголовка SOAP, используемого для распространения сведений о контексте.Значение по умолчанию — ProtectionLevel.Sign.</summary>
      <returns>Допустимое значение <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpContextBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот элемент конфигурации привязки на основе конфигурации заданной привязки.Указанный объект привязки должен иметь тип <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</summary>
      <param name="binding">Привязка, которая содержит контекст и уровень защиты контекста, используемый для инициализации класса.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpContextBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет конфигурацию этого элемента конфигурации к заданному экземпляру привязки.Указанный экземпляр привязки должен иметь тип <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</summary>
      <param name="binding">Применяемая привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpContextBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpSecurityElement">
      <summary>Определяет параметры безопасности привязки netTcpBinding.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NetTcpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Message">
      <summary>Возвращает параметры безопасности для сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" />, в котором указываются параметры безопасности для сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Mode">
      <summary>Возвращает или задает применяемый тип безопасности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.SecurityMode" />, в котором указывается применяемый тип безопасности.Значение по умолчанию — «Transport».</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Transport">
      <summary>Возвращает параметры безопасности для транспорта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.TcpTransportSecurityElement" />, в котором указываются параметры безопасности для транспорта.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement">
      <summary>Представляет параметры конфигурации для обеспечения безопасности сообщений, отправляемых по протоколу HTTP для недуплексных контрактов службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement.EstablishSecurityContext">
      <summary>Возвращает или задает логическое значение, указывающее, установлен ли контекст безопасности.</summary>
      <returns>Значение true, если установлен контекст безопасности; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.OneWayElement">
      <summary>Представляет элемент конфигурации, позволяющий включить маршрутизацию пакетов.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.OneWayElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации.</summary>
      <param name="bindingElement">Применяемый элемент конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.ChannelPoolSettings">
      <summary>Возвращает параметры пула каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ChannelPoolSettingsElement" />, содержащий свойства пула каналов для текущего канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.MaxAcceptedChannels">
      <summary>Возвращает или задает максимальное число принимаемых каналов.</summary>
      <returns>Максимальное число принимаемых каналов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.PacketRoutable">
      <summary>Возвращает или задает значение, определяющее, включена ли маршрутизация пакетов.</summary>
      <returns>Значение true, если маршрутизация пакетов включена; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerCredentialElement">
      <summary>Представляет элемент конфигурации, предназначенный для настройки учетных данных однорангового узла.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCredentialElement.#ctor">
      <summary>Инициализирует новый элемент класса <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" /> по умолчанию.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.Certificate">
      <summary>Возвращает элемент для сертификата X.509 из элемента конфигурации учетных данных однорангового узла.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateElement" />, который содержит элемент конфигурации для сертификата X.509, связанного с текущим элементом конфигурации учетных данных однорангового узла.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCredentialElement.Copy(System.ServiceModel.Configuration.PeerCredentialElement)">
      <summary>Копирует параметры конфигурации из указанного элемента конфигурации учетных данных однорангового узла.</summary>
      <param name="from">Объект <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" />, из которого копируются параметры конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.MessageSenderAuthentication">
      <summary>Возвращает из конфигурации учетных данных однорангового узла элемент, описывающий свойства проверки подлинности отправителя сообщения для связанного сертификата X.509 однорангового узла.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" />, описывающий свойства проверки подлинности отправителя сообщения для связанного сертификата X.509 однорангового узла.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.PeerAuthentication">
      <summary>Возвращает из конфигурации учетных данных однорангового узла элемент, описывающий свойства проверки подлинности для связанного сертификата X.509 однорангового узла.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" />, описывающий свойства проверки подлинности для связанного сертификата X.509 однорангового узла.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerCustomResolverElement">
      <summary>Представляет элемент конфигурации для настраиваемого распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCustomResolverElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Configuration.PeerCustomResolverElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Address">
      <summary>Содержит универсальный код ресурса (URI) схемы, используемой для XML-конфигурации настраиваемого распознавателя одноранговых узлов.</summary>
      <returns>Универсальный код ресурса (URI) схемы, используемой для XML-конфигурации настраиваемого распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Binding">
      <summary>Возвращает или задает имя строковой привязки, используемой для настраиваемого распознавателя одноранговых узлов.</summary>
      <returns>Имя строковой привязки, используемой для настраиваемого распознавателя одноранговых узлов. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.BindingConfiguration">
      <summary>Возвращает или задает строку конфигурации привязки, используемой для настраиваемого распознавателя одноранговых узлов.</summary>
      <returns>Строка конфигурации привязки, используемая для настраиваемого распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Headers">
      <summary>Возвращает элемент конфигурации, в котором задается коллекция, содержащая заголовки, используемые для сообщений SOAP, обрабатываемых настраиваемым распознавателем одноранговых узлов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" />, в котором задается коллекция, содержащая заголовки, используемые для сообщений SOAP, обрабатываемых настраиваемым распознавателем одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Identity">
      <summary>Возвращает удостоверение настраиваемых распознавателей одноранговых узлов, настроенных для данного элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IdentityElement" />, содержащий удостоверение настраиваемых распознавателей одноранговых узлов, настроенных для данного элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.ResolverType">
      <summary>Возвращает или задает строковое значение, содержащее "тип" настраиваемого распознавателя одноранговых узлов.</summary>
      <returns>Строковое значение, содержащее "тип" настраиваемого распознавателя одноранговых узлов.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerResolverElement">
      <summary>Задает элемент конфигурации для распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerResolverElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PeerResolverElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.Custom">
      <summary>Возвращает элемент конфигурации для данного распознавателя одноранговых узлов, если этот распознаватель является пользовательской реализацией.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.PeerCustomResolverElement" />, содержащий элемент конфигурации для распознавателя одноранговых узлов, если этот распознаватель является пользовательской реализацией.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.Mode">
      <summary>Возвращает или задает тип распознавателя одноранговых узлов, представленного данным элементом конфигурации.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverMode" />, в котором указывается тип распознавателя одноранговых узлов, представленного данным элементом конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.ReferralPolicy">
      <summary>Возвращает или задает политику ссылок для распознавателей одноранговых узлов, настроенных с помощью данного элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, в котором указывается политика ссылок для распознавателей одноранговых узлов, настроенных с помощью данного элемента.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerSecurityElement">
      <summary>Задает элемент конфигурации для параметров безопасности однорангового узла.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.Configuration.PeerSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerSecurityElement.Mode">
      <summary>Возвращает или задает тип безопасности, используемый одноранговыми узлами, настроенными с использованием этого элемента.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.SecurityMode" />, в котором указывается тип безопасности, используемый одноранговыми узлами, настроенными с использованием этого элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerSecurityElement.Transport">
      <summary>Возвращает тип транспорта для безопасных сообщений, отправленных одноранговыми узлами, настроенными с помощью этого элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.PeerTransportSecurityElement" />, указывающий тип транспорта для безопасных сообщений, отправленных одноранговыми узлами, настроенными с помощью этого элемента.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerTransportElement">
      <summary>Указывает элемент конфигурации, при наличии которого канал начинает передавать сообщения по одноранговому транспорту, если такой транспорт включен в настраиваемую привязку.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PeerTransportElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary> Применяет к данному элементу конфигурации параметры указанного элемента привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Элемент привязки <see cref="T:System.ServiceMode.Channels.BindingElement" />, параметры которого необходимо применить к данному элементу конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, содержащий элемент конфигурации, параметры которого должны быть скопированы в раздел элемента конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.CreateBindingElement">
      <summary>Создает элемент привязки на основе параметров данного элемента конфигурации.</summary>
      <returns>Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, свойства которого копируются из параметров данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот раздел конфигурации привязки однорангового транспорта с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации этого экземпляра конфигурации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.ListenIPAddress">
      <summary>Возвращает и задает элемент конфигурации, который указывает IP-адрес, прослушиваемый одноранговым транспортом.</summary>
      <returns>Код <see cref="T:System.Net.IPAdress" />, содержащий IP-адрес, который прослушивает одноранговый транспорт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.MaxBufferPoolSize">
      <summary>Возвращает или задает элемент конфигурации, который указывает максимальный размер буферного пула сообщений TCP (в байтах).</summary>
      <returns>Код <see cref="T:System.Int64" />, указывающий максимальный размер буферного пула сообщений TCP (в байтах).Значение по умолчанию — 524 288 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает элемент конфигурации, который указывает максимальный размер (в байтах) для сообщений TCP, получаемых привязкой одноранговых узлов.</summary>
      <returns>Значение <see cref="T:System.Int64" />, которое указывает максимальный размер (в байтах) сообщений TCP, получаемых по одноранговым каналам, созданным этой привязкой.Значение по умолчанию — 65 536 байт (64 КБ).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Port">
      <summary>Возвращает и задает элемент конфигурации, который указывает порт для привязки однорангового транспорта.</summary>
      <returns>Значение <see cref="T:System.Int32" />, которое указывает порт для привязки однорангового транспорта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.ConfigurationConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.ConfigurationConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Security">
      <summary>Возвращает или задает элемент конфигурации, указывающий уровень безопасности для задания в создаваемых данной привязкой одноранговых каналах.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerSecuritySettings" />, указывающее параметры безопасности для задания в создаваемых в данной привязке одноранговых каналах.Безопасность может определяться как на уровне сообщений, так и на уровне транспорта.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerTransportSecurityElement">
      <summary>Задает элемент конфигурации для безопасного транспорта сообщений, отправляемых одноранговыми узлами.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PeerTransportSecurityElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportSecurityElement.CredentialType">
      <summary>Возвращает или задает конфигурацию для типа учетных данных, используемых для проверки сообщений, отправляемых с помощью однорангового транспорта.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerTransportCredentialType" />, содержащее тип учетных данных, используемых для проверки сообщений, отправленных одноранговым транспортом.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PnrpPeerResolverElement">
      <summary>Определяет элемент конфигурации для службы протокола однорангового разрешения имен (PNRP). </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PnrpPeerResolverElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PnrpPeerResolverElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PnrpPeerResolverElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PnrpPeerResolverElement.CreateBindingElement">
      <summary>Создает новый настраиваемый объект элемента привязки, свойства которого копируются из параметров данного элемента конфигурации.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PolicyImporterElement">
      <summary>Представляет элемент конфигурации, который задает импорт утверждений пользовательской политики о привязках.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> с указанным типом политики.</summary>
      <param name="type">Тип политики.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> с указанным типом политики.</summary>
      <param name="type">Тип политики.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PolicyImporterElement.Type">
      <summary>Возвращает или задает тип данного элемента конфигурации.</summary>
      <returns>Тип этого элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PolicyImporterElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PolicyImporterElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.PrivacyNoticeElement">
      <summary>Представляет элемент конфигурации, который задает уведомление о конфиденциальности, используемое в привязке wsFederationHttp.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PrivacyNoticeElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий данный элемент настраиваемой привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип данной настраиваемой привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.CreateBindingElement">
      <summary>Создает новый настраиваемый объект элемента привязки на основе параметров данного элемента конфигурации.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, свойства которого основаны на параметрах данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Url">
      <summary>Возвращает или задает универсальный код ресурса (URI), по которому расположено уведомление о конфиденциальности.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому расположено уведомление о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Version">
      <summary>Возвращает или задает версию данного уведомления о конфиденциальности.</summary>
      <returns>Целое число, определяющее версию этого уведомления о конфиденциальности.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ProtocolMappingElement">
      <summary>Предоставляет функциональность для создания элемента сопоставления протокола.Это запечатанный класс.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ProtocolMappingElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ProtocolMappingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ProtocolMappingElement.#ctor(System.String,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ProtocolMappingElement" /> с указанным типом схемы, привязкой и конфигурацией привязки.</summary>
      <param name="schemeType">Схема протокола связи.</param>
      <param name="binding">Стиль формата сообщения протокола связи.</param>
      <param name="bindingConfiguration">Параметры привязки для конфигурации элемента сопоставления протокола.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ProtocolMappingElement.Binding">
      <summary>Возвращает или задает параметры для форматирования сообщений протокола связи.</summary>
      <returns>Сведения о форматировании сообщений протокола связи.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ProtocolMappingElement.BindingConfiguration">
      <summary>Возвращает или задает параметры привязки для элемента конфигурации сопоставления протокола.</summary>
      <returns>Элемент конфигурации привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ProtocolMappingElement.Scheme">
      <summary>Возвращает или задает тип протокола связи.</summary>
      <returns>Задает имя протокола связи.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ProtocolMappingElementCollection">
      <summary>Предоставляет функциональные возможности, чтобы извлечь указанные сведения о сопоставлении протокола связи из коллекции элементов сопоставления протокола.Это запечатанный класс.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ProtocolMappingElementCollection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ProtocolMappingElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ProtocolMappingSection">
      <summary>Определяет коллекцию сопоставления протоколов.Это запечатанный класс.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ProtocolMappingSection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ProtocolMappingSection" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ProtocolMappingSection.ProtocolMappingCollection">
      <summary>Возвращает имя коллекции элементов сопоставления протоколов.</summary>
      <returns>Коллекция элементов сопоставления протоколов.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ReliableSessionElement">
      <summary>Представляет параметры конфигурации для протокола WS-ReliableMessaging. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval">
      <summary>Возвращает или задает промежуток времени, в течение которого пункт назначения простаивает в ожидании перед отправкой подтверждения источнику сообщения при использовании надежных каналов, созданных фабрикой.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее промежуток времени, в течение которого служба простаивает перед отправкой подтверждения источнику сообщения.Значение по умолчанию — 2 секунды.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный раздел конфигурации.</summary>
      <param name="from">Копируемый раздел конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled">
      <summary>Возвращает или задает значение, которое указывает, активировано ли расширенное управление потоком, то есть собственная реализация Майкрософт управления потоком для протокола WS-ReliableMessaging. </summary>
      <returns>Значение true, если расширенное управление потоком (собственная реализация Майкрософт управления потоком для протокола WS-ReliableMessaging) активировано; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность времени, в течение которого в канале другой стороне разрешено не отправлять сообщения до сброса канала.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность времени, в течение которого в канале другой стороне разрешено не отправлять сообщения до сброса канала.Значение по умолчанию — 00:10:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels">
      <summary>Возвращает или задает максимальное число каналов, ожидающих принятия на прослушивателе.</summary>
      <returns>Максимальное число каналов, ожидающих принятия на прослушивателе.Значение по умолчанию — 128.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount">
      <summary>Возвращает или задает максимальное количество попыток повторной передачи надежным каналом сообщения, для которого не было получено подтверждение приема. Повторная передача осуществляется посредством вызова функции Send в основном канале.</summary>
      <returns>Максимальное количество попыток повторной передачи надежным каналом сообщения, для которого не было получено подтверждение приема. Повторная передача осуществляется посредством вызова функции Send в основном канале.Минимальное значение — 1; максимальное — 20; значение по умолчанию — 8.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize">
      <summary>Возвращает или задает максимальный размер буфера.</summary>
      <returns>Максимальный размер буфера.Допустимые значения находятся в диапазоне от 1 до 4096 включительно.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.Ordered">
      <summary>Возвращает или задает значение, определяющее, прибывают ли сообщения точно в том порядке, в котором они были отправлены.</summary>
      <returns>Значение true, если сообщения гарантированно прибывают в том порядке, в котором они были отправлены; значение false, если сообщения могут прибывать неупорядоченно.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion">
      <summary>Возвращает или задает версию протокола WS-ReliableMessaging, указанную в элементе конфигурации.</summary>
      <returns>Экземпляр, производный от <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> и представляющий собой версию протокола WS-ReliableMessaging, используемую элементом конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.RemoveBehaviorElement">
      <summary>Элемент конфигурации для удаления конкретной службы или поведения конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.RemoveBehaviorElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.RemoveBehaviorElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.RemoveBehaviorElement.BehaviorType">
      <summary>Возвращает или задает удаленный тип поведения.</summary>
      <returns>Тип поведения.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.RemoveBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента <see cref="T:System.ServiceModel.ServiceModelExtensionElement" /> в текущий объект <see cref="T:System.ServiceModel.Configuration.RemoveBehaviorElement" />.</summary>
      <param name="from">Элемент расширения модели службы, предоставляющий содержимое.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.RemoveBehaviorElement.Name">
      <summary>Возвращает или задает имя элемента конфигурации, который удаляет поведение.</summary>
      <returns>Имя элемента.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.RsaElement">
      <summary>Представляет элемент конфигурации для удостоверения RSA.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.RsaElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.RsaElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.RsaElement.Value">
      <summary>Возвращает или задает значение, зашифрованное данным удостоверением.</summary>
      <returns>Значение, зашифрованное данным удостоверением.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecureConversationServiceElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры службы безопасного диалога.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecureConversationServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.SecureConversationServiceElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecureConversationServiceElement.Copy(System.ServiceModel.Configuration.SecureConversationServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="from" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecureConversationServiceElement.SecurityStateEncoderType">
      <summary>Возвращает или задает тип используемого объекта <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</summary>
      <returns>Тип используемого проверяющего элемента управления <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecurityElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры безопасности для настраиваемой привязки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.SecurityElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный экземпляр класса <see cref="T:System.ServiceModel.Configuration.SecurityElement" />.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElement.SecureConversationBootstrap">
      <summary>Возвращает элемент конфигурации, в котором указываются значения по умолчанию, используемые для инициализации службы безопасного диалога.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.SecurityElementBase" />, в котором указываются значения по умолчанию, используемые для инициализации службы безопасного диалога.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecurityElementBase">
      <summary>Представляет базовый класс, члены которого являются общими для элементов, используемых для настройки параметров безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary{System.ServiceModel.Configuration.AuthenticationMode,System.ServiceModel.Channels.SecurityBindingElement},System.ServiceModel.Configuration.AuthenticationMode)">
      <summary>Применяет к данному экземпляру указанный шаблон конфигурации.</summary>
      <param name="bindingTemplates">Пара "режим проверки подлинности и элемент привязки".</param>
      <param name="mode">Режим проверки подлинности используется при обмене сообщениями.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary{System.ServiceModel.Configuration.AuthenticationMode,System.ServiceModel.Channels.SecurityBindingElement})">
      <summary>Применяет к данному экземпляру указанные шаблоны конфигурации.</summary>
      <param name="bindingTemplates">Пара "режим проверки подлинности и элемент привязки".</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.AllowInsecureTransport">
      <summary>Возвращает значение, указывающее, разрешен ли незащищенный транспорт.</summary>
      <returns>Значение true, если незащищенный транспорт разрешен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.AllowSerializedSigningTokenOnReply">
      <summary>Возвращает или задает логическое значение, определяющее, может ли в ответе использоваться сериализованный маркер.</summary>
      <returns>Значение true, если в ответе можно использовать сериализованный маркер; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.AuthenticationMode">
      <summary>Возвращает или задает параметры проверки подлинности, используемые при обмене сообщениями.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.AuthenticationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип этого элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.CanRenewSecurityContextToken">
      <summary>Возвращает значение, указывающее, можно ли возобновить маркер контекста безопасности.</summary>
      <returns>Значение true, если маркер контекста безопасности можно возобновить, в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CreateBindingElement">
      <summary>Создает настраиваемый объект элемента привязки на основе параметров данного экземпляра.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)">
      <summary>Создает настраиваемый объект элемента привязки на основе параметров данного экземпляра.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
      <param name="createTemplateOnly">Логическое значение, указывающее, следует ли создать только шаблон.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.DefaultAlgorithmSuite">
      <summary>Возвращает или задает набор алгоритмов по умолчанию для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />, в котором указывает набор алгоритмов по умолчанию для данной привязки.Значение по умолчанию — <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.EnableUnsecuredResponse">
      <summary>Возвращает значение, указывающее, разрешен ли незащищенный ответ.</summary>
      <returns>Значение true, если незащищенный ответ разрешен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.IncludeTimestamp">
      <summary>Возвращает или задает логическое значение, указывающее, будет ли в каждое сообщение вноситься отметка времени.</summary>
      <returns>Значение true, если сообщение содержит отметку времени; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.Boolean)">
      <summary>Применяет к данному экземпляру параметры указанного маркера безопасности.</summary>
      <param name="sp">Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
      <param name="initializeNestedBindings">Логическое значение, определяющее, были ли все вложенные привязки обновлены значениями, указанными в параметре <paramref name="sp" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.IssuedTokenParameters">
      <summary>Возвращает элемент конфигурации, в котором указывается текущий выданный маркер.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersElement" />, в котором указывается текущий выданный маркер.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.KeyEntropyMode">
      <summary>Возвращает или задает источник энтропии, используемый для создания ключей.</summary>
      <returns>Действительное значение <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />, в котором указывается источник энтропии, используемый для создания ключей.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.LocalClientSettings">
      <summary>Возвращает параметры безопасности локального клиента для данной привязки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.LocalServiceSettings">
      <summary>Возвращает параметры безопасности локальной службы для данной привязки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.MessageProtectionOrder">
      <summary>Возвращает или задает порядок шифрования и подписи сообщений для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" />, в котором указывается способ защиты сообщения.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.MessageSecurityVersion">
      <summary>Возвращает или задает версию системы безопасности, используемую для защиты сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />, в котором указывается версия системы безопасности, используемой для защиты сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireDerivedKeys">
      <summary>Возвращает или задает логическое значение, указывающее, требуется ли использовать производные ключи.</summary>
      <returns>Значение true, если производные ключи необходимы; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireSecurityContextCancellation">
      <summary>Возвращает или задает логическое значение, определяющее, следует ли отменять и завершать контекст безопасности, когда он больше не нужен.</summary>
      <returns>Значение true, если ненужный более контекст безопасности следует отменить и завершить; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireSignatureConfirmation">
      <summary>Возвращает или задает логическое значение, указывающее, необходимо ли подтверждать сигнатуры сообщений.</summary>
      <returns>Значение true, если сигнатуры сообщений необходимо подтверждать; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.SecurityHeaderLayout">
      <summary>Возвращает или задает порядок элементов в заголовке безопасности для данной привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />, в котором указывается порядок элементов в заголовке безопасности для данной привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Записывает внешние теги данного элемента конфигурации в файл конфигурации.</summary>
      <returns>Значение true, если сериализация завершилась успешно; в противном случае — false.</returns>
      <param name="writer">Модуль записи <see cref="T:System.Xml.XmlWriter" />, используемый для записи данных в файл конфигурации.</param>
      <param name="elementName">Имя записываемого элемента конфигурации <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Изменяет данный элемент конфигурации, удаляя все значения, которые не должны сохраняться. </summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенное представление свойств.</param>
      <param name="parentElement">Родительский объект <see cref="T:System.Configuration.ConfigurationElement" /> или null, если это верхний уровень.</param>
      <param name="saveMode">Объект <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющий, какие значения свойств следует включить.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceActivationElement">
      <summary>Управляет содержимым элемента конфигурации в сочетании с активацией приложения службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceActivationElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceActivationElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceActivationElement.#ctor(System.String)">
      <summary>Настраивает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceActivationElement" />, содержащего расположение каталога файла активации службы относительно базового URL-адреса.</summary>
      <param name="relativeAddress">Расположение каталога файла, требующее ссылки из базового URL-адреса.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceActivationElement.#ctor(System.String,System.String)">
      <summary>Настраивает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceActivationElement" />, который содержит заданную активируемую службу и ее относительный адрес.</summary>
      <param name="relativeAddress">URL-адрес, требующий ссылки из базового адреса.</param>
      <param name="service">Приложение службы, которое активируется.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceActivationElement.#ctor(System.String,System.String,System.String)">
      <summary>Настраивает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceActivationElement" /> с указанной активируемой службой, ее относительным адресом и именем системного пути фабрики, формирующей элемент активации службы.</summary>
      <param name="relativeAddress">URL-адрес, на который требуется ссылка из базового адреса.</param>
      <param name="service">Приложение активируемой службы.</param>
      <param name="factory">Имя типа CLR фабрики, формирующей элемент активации службы.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceActivationElement.Factory">
      <summary>Возвращает или задает строку конфигурации, которая содержит имя типа CLR фабрики, формирующей элемент активации службы.</summary>
      <returns>Строка конфигурации, которая содержит имя типа CLR фабрики.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceActivationElement.RelativeAddress">
      <summary>Возвращает или задает относительный адрес файла активации службы.</summary>
      <returns>Относительный адрес файла активации службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceActivationElement.Service">
      <summary>Возвращает или задает имя приложения службы.</summary>
      <returns>Имя приложения службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceActivationElementCollection">
      <summary>Обрабатывает коллекцию элементов конфигурации, которые активируют службу и могут объединяться в масштабе иерархии файлов конфигурации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceActivationElementCollection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceActivationElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceAuthenticationElement">
      <summary>Обеспечивает элемент конфигурации рабочего процесса, который устанавливает на уровне службы действительность передачи, сообщения или инициатора.Это запечатанный класс.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceAuthenticationElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceAuthenticationElement" /></summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthenticationElement.BehaviorType">
      <summary>Возвращает тип расширения поведения проверки подлинности в текущем элементе <see cref="T:System.ServiceModel.Configuration.ServiceAuthenticationElement" />.</summary>
      <returns>Тип объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthenticationElement.ServiceAuthenticationManagerType">
      <summary>Возвращает или задает тип политики проверки подлинности для текущего объекта <see cref="T:System.ServiceModel.Configuration.ServiceAuthenticationElement" />. </summary>
      <returns>Строка, содержащая имя проверки подлинности.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceAuthorizationElement">
      <summary>Представляет элемент конфигурации, в котором параметры безопасности задаются на уровне службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceAuthorizationElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies">
      <summary>Возвращает коллекцию типов политики авторизации.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection" />, содержащий коллекцию типов политики авторизации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations">
      <summary>Возвращает или задает логическое значение, которое определяет, должны ли все операции службы олицетворять вызывающий объект. </summary>
      <returns>Значение true, если все операции службы олицетворяют вызывающий объект; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode">
      <summary>Возвращает или задает участника, используемого для выполнения операций на сервере.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />, указывающее участника, используемого для выполнения операций на сервере.Значение по умолчанию — <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName">
      <summary>Возвращает или задает имя поставщика ролей, который предоставляет приложению  сведения о ролях.</summary>
      <returns>Имя поставщика ролей.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType">
      <summary>Возвращает или задает тип используемого диспетчера авторизации службы.</summary>
      <returns>Строка, в которой указывается тип диспетчера авторизации службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceBehaviorElement">
      <summary>Представляет элемент конфигурации со списком поведений службы, примененных ко всем запущенным на компьютере службам .</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" /> с указанным именем.</summary>
      <param name="name">Уникальное имя элемента поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, указанный в параметре <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Тип, указанный в параметре <paramref name="element" />, недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML из файла конфигурации. </summary>
      <param name="reader">Модуль чтения <see cref="T:System.Xml.XmlReader" />, считывающий данные из файла конфигурации.</param>
      <param name="serializeCollectionKey">Значение true для сериализации только свойств ключа коллекции; в противном случае — значение false.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceCredentialsElement">
      <summary>Представляет элемент конфигурации, в котором указываются учетные данные, используемые для проверки подлинности службы, а также параметры, связанные с проверкой учетных данных клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceCredentialsElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.ApplyConfiguration(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="behavior">
        <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.ClientCertificate">
      <summary>Возвращает сертификат клиента, используемый использования, когда сертификат клиента доступен внештатно.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement" />, в котором указывается сертификат клиента, используемый, когда сертификат клиента доступен внештатно.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый раздел конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.CreateBehavior">
      <summary>Создает поведение на основе текущих параметров конфигурации.</summary>
      <returns>Поведение.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.IssuedTokenAuthentication">
      <summary>Возвращает для этой службы текущий выданный маркер.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" />, в котором указывается текущий выданный для этой службы маркер.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Peer">
      <summary>Возвращает текущие учетные данные для однорангового узла.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" />, в котором указываются текущие учетные данные для однорангового узла.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.SecureConversationAuthentication">
      <summary>Возвращает текущие учетные данные для безопасного диалога.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.SecureConversationServiceElement" />, в котором указываются текущие учетные данные для безопасного диалога.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.ServiceCertificate">
      <summary>Возвращает инициализированный клиентом сертификат X.509.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement" />, в котором указывается инициализированный клиентом сертификат X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Type">
      <summary>Возвращает или задает тип данной конфигурации.</summary>
      <returns>Тип данной конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.UserNameAuthentication">
      <summary>Возвращает параметры проверки на основе имени пользователя и пароля.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.UserNameServiceElement" />, в котором указываются параметры проверки на основе имени пользователя и пароля.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.WindowsAuthentication">
      <summary>Возвращает параметры для проверки учетных данных ОС Windows.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WindowsServiceElement" />, в котором указываются параметры для проверки учетных данных Windows.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceDebugElement">
      <summary>Представляет элемент конфигурации, в котором указываются сведения о функциях отладки и справки для службы Windows Communication Foundation (WCF).Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceDebugElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceDebugElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>Тип <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceDebugElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации. </summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding">
      <summary>Возвращает или задает строковое значение, определяющее привязку, которая будет использоваться в тех случаях, когда для обращения к странице справки службы будет использоваться протокол HTTP.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBindingConfiguration">
      <summary>Возвращает или задает строку, указывающую на раздел XML с дополнительными сведениями о конфигурации привязки, заданными в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageEnabled">
      <summary>Возвращает или задает значение, определяющее, публикует ли служба Windows Communication Foundation (WCF) справочную HTML-страницу по адресу, указанному в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl" />.</summary>
      <returns>Значение true, если WCF выполняет публикацию справочной HTML-страницы; в противном случае используется значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl">
      <summary>Возвращает или задает путь для публикации файлов справочной HTML-страницы.</summary>
      <returns>Относительный или абсолютный URL-адрес на основе HTTP для специального файла справки HTML, который показывается пользователю при просмотре конечной точки с помощью HTML-браузера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding">
      <summary>Возвращает или задает строковое значение, определяющее привязку, которая будет использоваться в тех случаях, когда для обращения к странице справки службы будет использоваться протокол HTTPS.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBindingConfiguration">
      <summary>Возвращает или задает строку, указывающую на раздел XML с дополнительными сведениями о конфигурации привязки, заданными в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageEnabled">
      <summary>Возвращает или задает значение, указывающее, возвращает ли служба Windows Communication Foundation (WCF) HTML-файл справки по протоколу HTTPS по адресу, указанному в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl" />.</summary>
      <returns>Значение true, если файл справки HTML возвращается клиентам в результате отправки ими запроса HTTPS/GET, например в HTML-обозревателе; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl">
      <summary>Возвращает или задает путь публикации файлов HTML для извлечения с помощью HTTPS.</summary>
      <returns>Относительный или абсолютный URL-адрес на основе HTTPS для специального файла справки HTML, который показывается пользователю при просмотре конечной точки с помощью HTML-браузера.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, которое определяет, включать ли информацию по управляемым исключениям в подробную информацию об ошибках SOAP, которая возвращается клиенту для отладки. </summary>
      <returns>Значение true, если служба Windows Communication Foundation (WCF) возвращает сведения об управляемом исключении при сбоях SOAP в целях отладки на стороне клиента; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceElement">
      <summary>Представляет элемент XML, содержащий параметры для службы , а также конечные точки, предоставляющие службу.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> с типом службы, экземпляр которой необходимо создать.</summary>
      <param name="serviceName">Тип службы, экземпляр которой необходимо создать.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration">
      <summary>Возвращает или задает строку, содержащую имя поведения, используемого для создания экземпляра службы.</summary>
      <returns>Имя поведения, используемого для создания экземпляра службы.Имя поведения должно входить в область действия в точке определения службы.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Endpoints">
      <summary>Возвращает коллекцию конечных точек, предоставляемых этой службой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection" />, содержащий одну или несколько конечных точек, предоставляемых этой службой. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Host">
      <summary>Возвращает элемент конфигурации, в котором указывается узел данного экземпляра службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.HostElement" />, в котором указывается узел данного экземпляра службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Name">
      <summary>Возвращает или задает уникальное имя службы.</summary>
      <returns>Уникальное имя службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ServiceElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceEndpointElement">
      <summary>Представляет элемент конфигурации, предоставляющий параметры для привязки и контракта, а также свойства адреса для учетной записи службы, используемой для предоставления служб.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElement.#ctor(System.Uri,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> с указанным адресом конечной точки и типом контракта.</summary>
      <param name="address">Универсальный код ресурса (URI), содержащий адрес конечной точки.</param>
      <param name="contractType">Контракт, предоставляемый этой конечной точкой. </param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Address">
      <summary>Получает или задает универсальный код ресурса (URI) с адресом конечной точки.</summary>
      <returns>Универсальный код ресурса (URI), содержащий адрес конечной точки.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BehaviorConfiguration">
      <summary>Возвращает или задает строку, содержащую имя поведения, используемого для конечной точки.</summary>
      <returns>Имя поведения, используемого для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Binding">
      <summary>Возвращает или задает строку, в которой указывается тип используемой привязки. </summary>
      <returns>Тип используемой привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingConfiguration">
      <summary>Возвращает или задает строку, содержащую имя привязки, используемой при создании экземпляра конечной точки.</summary>
      <returns>Имя привязки, используемой при создании экземпляра конечной точки.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingName">
      <summary>Возвращает или задает строку, в которой задается уникальное полное имя привязки для экспорта определения посредством WSDL.</summary>
      <returns>Полное имя привязки для экспорта определения посредством WSDL.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingNamespace">
      <summary>Возвращает или задает строку, в которой задается уникальное полное имя пространства имен для привязки для экспорта определения посредством WSDL.</summary>
      <returns>Полное имя пространства имен для привязки для экспорта определения посредством WSDL.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Contract">
      <summary>Возвращает или задает строку, в которой указывается, какой контракт предоставляется этой конечной точкой.</summary>
      <returns>Контракт, предоставляемый этой конечной точкой. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.EndpointConfiguration">
      <summary>Возвращает или задает имя стандартной конечной точки, указываемой свойством <see cref="P:System.ServiceModel.Configuration.ServiceEndpointElement.Kind" />, которое ссылается на дополнительные сведения конфигурации этой стандартной привязки.Такое же имя должно быть задано в секции <see cref="T:System.ServiceModel.Configuration.StandardEndpointsSection" />.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Headers">
      <summary>Возвращает коллекцию заголовков адреса.</summary>
      <returns>Коллекция заголовков адреса.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Identity">
      <summary>Возвращает элемент конфигурации, в котором указывается тип проверки подлинности конечной точки другими конечными точками, с которыми происходит обмен сообщениями.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.IdentityElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.IsSystemEndpoint">
      <summary>Возвращает или задает значение, указывающее, имеет ли эта конечная точка службы конечную точку инфраструктуры.</summary>
      <returns>Значение true, если эта конечная точка службы является конечной точкой инфраструктуры, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Kind">
      <summary>Возвращает или задает применяемый тип стандартной конечной точки.Тип должен быть зарегистрирован в разделе &lt;extensions&gt; или в файле machine.config.Если ничего не указано, будет создана обычная конечная точка службы.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUri">
      <summary>Получает или задает универсальный код ресурса (URI), при котором конечная точка службы ожидает передачи данных.</summary>
      <returns>Код <see cref="T:System.Uri" />, по которому конечная точка службы осуществляет прослушивание.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUriMode">
      <summary>Возвращает или задает значение, в котором указывается способ обработки транспортом значения <see cref="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUri" />, предоставленного для прослушивания службой.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Description.ListenUriMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Name">
      <summary>Возвращает или задает имя данного элемента конфигурации.</summary>
      <returns>Имя этого элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection">
      <summary>Представляет раздел конфигурации, в котором указывается, какой тип службы среда внешнего размещения создает для данного транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.AspNetCompatibilityEnabled">
      <summary>Возвращает или задает логическое значение, указывающее, включен ли для текущего приложения режим совместимости ASP.NET.</summary>
      <returns>Значение true, если для текущего приложения включен режим совместимости ASP.NET, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.BaseAddressPrefixFilters">
      <summary>Возвращает коллекцию элементов конфигурации, которые задают префиксные фильтры для базовых адресов, используемых узлом службы. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.MinFreeMemoryPercentageToActivateService">
      <summary>Возвращает или задает целое число, указывающее минимальный объем свободной памяти, который должен быть доступен системе перед активацией службы .</summary>
      <returns>Целое число, которое задает минимальный объем свободной памяти, который должен быть доступен системе перед активированием службы .</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.MultipleSiteBindingsEnabled">
      <summary>Возвращает или задает значение, определяющее, разрешено ли использовать несколько привязок IIS для каждого узла.  </summary>
      <returns>Значение true, если использование нескольких привязок IIS для узла разрешено, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.ServiceActivations">
      <summary>Возвращает коллекцию элементов конфигурации, которые активируют службу и могут объединяться в масштабе иерархии файлов конфигурации.</summary>
      <returns>Возвращает значение <see cref="T:System.ServiceModel.Configuration.ServiceActivationElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.TransportConfigurationTypes">
      <summary>Возвращает коллекцию типов, реализующих конкретный транспорт.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection" />, содержащий все типы, реализующие конкретный транспорт.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceMetadataEndpointCollectionElement">
      <summary>Представляет элемент коллекции в файле конфигурации службы, содержащем объекты <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointCollectionElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceMetadataEndpointCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceMetadataEndpointElement">
      <summary>Готовит метаданные для последующего распределения и развертывания в среде сервера путем добавления объекта <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" /> в элемент конфигурации службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceMetadataEndpointElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Создает новую конечную точку службы с помощью указанного описания контракта.</summary>
      <returns>Конечная точка службы.</returns>
      <param name="contractDescription">Буквенно-цифровое описание сведений о расположении и привязке, которое публикует служебное приложение, чтобы предоставить к себе доступ для клиентских приложений.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.EndpointType">
      <summary>Возвращает тип текущего класса <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" />.</summary>
      <returns>Тип метаданных конечной точки службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Не реализовано.</summary>
      <param name="endpoint">Не реализовано.</param>
      <param name="serviceEndpointElement">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Не реализовано.</summary>
      <param name="endpoint">Не реализовано.</param>
      <param name="serviceEndpointElement">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента конечной точки канала и настраивает его для включения содержимого обмена метаданными.</summary>
      <param name="channelEndpointElement">Конечная точка канала, к которой применяются параметры конфигурации содержимого обмена метаданными.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Инициализирует и проверяет формат указанного элемента конечной точки службы и настраивает его с тем, чтобы включить содержимое обмена метаданными.</summary>
      <param name="serviceEndpointElement">Конечная точка службы, к которой применяются параметры конфигурации содержимого обмена метаданными.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceMetadataPublishingElement">
      <summary>Представляет элемент конфигурации, управляющий публикацией метаданных службы и связанных с ними данных.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceMetadataPublishingElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>Тип <see cref="T:System.Type" />, значением является тип объекта <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.ExternalMetadataLocation">
      <summary>Возвращает или задает строку, в которой хранится расположение метаданных службы.</summary>
      <returns>Универсальный код ресурса (URI), содержащий расположение WSDL-файла, возвращаемого пользователю в ответ на запросы WSDL и MEX, вместо автоматически создаваемых WSDL-файлов.Значение по умолчанию — URI-объект null.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetBinding">
      <summary>Строковое значение, в котором указывается имя привязки, используемой для загрузки метаданных в сценариях HTTP GET.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetBindingConfiguration">
      <summary>Возвращает или задает строку, указывающую на раздел XML с дополнительными сведениями о конфигурации привязки, заданными в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetBinding" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetEnabled">
      <summary>Возвращает или задает значение, указывающее, следует ли опубликовывать метаданные службы для извлечения с помощью запроса HTTP/Get.</summary>
      <returns>Значение true, если метаданные службы публикуются для получения с помощью запроса HTTP/Get; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetUrl">
      <summary>Возвращает или задает универсальный код ресурса (URI), указывающий адрес, по которому метаданные публикуются для извлечения с использованием запроса HTTP/Get.</summary>
      <returns>Универсальный код ресурса (URI), указывающий адрес, по которому публикуются метаданные.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetBinding">
      <summary>Строковое значение, в котором указывается имя привязки, используемой для загрузки метаданных в сценариях HTTPS GET.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetBindingConfiguration">
      <summary>Возвращает или задает строку, указывающую на раздел XML с дополнительными сведениями о конфигурации привязки, заданными в свойстве <see cref="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement..HttpsGetBinding" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetEnabled">
      <summary>Возвращает или задает значение, указывающее, следует ли опубликовывать метаданные службы для извлечения с помощью запроса HTTPS/Get.</summary>
      <returns>Значение true, если метаданные службы публикуются для получения с помощью запроса HTTP/Get; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetUrl">
      <summary>Возвращает или задает универсальный код ресурса (URI), указывающий адрес, по которому метаданные публикуются для извлечения с использованием запроса HTTPS/Get.</summary>
      <returns>Универсальный код ресурса (URI), указывающий адрес, по которому метаданные публикуются для извлечения с использованием запроса HTTPS-GET.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.PolicyVersion">
      <summary>Возвращает или задает значение, указывающее версию используемой спецификации WS-Policy. </summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Description.PolicyVersion" />, указывающее версию используемой спецификации WS-Policy.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1">
      <summary>Абстрактный базовый класс для коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" />, используемой в пространстве имен <see cref="N:System.ServiceModel.Configuration" />.</summary>
      <typeparam name="ConfigurationElementType">Тип этого элемента конфигурации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)">
      <summary>Добавляет в данную коллекцию указанный элемент конфигурации.</summary>
      <param name="element">Добавляемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="element" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Добавляет указанный объект <see cref="T:System.Configuration.ConfigurationElement" /> в данную коллекцию.</summary>
      <param name="element">Добавляемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="element" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации содержит существующий элемент, идентичный элементу <paramref name="element" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear">
      <summary>Удаляет из этой коллекции все элементы конфигурации.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType">
      <summary>Возвращает тип коллекции конфигураций.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementCollectionType" />, в котором указывается тип коллекции конфигураций.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)">
      <summary>Возвращает логическое значение, указывающее, содержит ли данная коллекция элемент конфигурации с указанным ключом.</summary>
      <returns>Значение true, если коллекция содержит элемент конфигурации с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Элемент конфигурации для поиска в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует хранящиеся в данной коллекции элементы конфигурации в объект <see cref="T:System.Array" />, начиная с указанного индекса в массиве <see cref="T:System.Array" />. </summary>
      <param name="array">Массив <see cref="T:System.Array" />, предназначенный для копирования элементов конфигурации.</param>
      <param name="start">Отсчитываемый с нуля относительный индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="start" /> содержит недопустимое значение.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CreateNewElement">
      <summary>Создает новый объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Новый объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ElementName">
      <summary>Возвращает имя, используемое для идентификации данной коллекции элементов в файле конфигурации.</summary>
      <returns>Имя, используемое для идентификации данной коллекции элементов в файле конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)">
      <summary>Возвращает отсчитываемый с нуля индекс первого вхождения элемента конфигурации в данную коллекцию. </summary>
      <returns>Индекс элемента <paramref name="element" />, если элемент найден в коллекции; в противном случае -1.</returns>
      <param name="element">Элемент конфигурации для поиска в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)">
      <summary>Возвращает или задает свойство, атрибут или дочерний элемент объект <see cref="T:System.Configuration.ConfigurationElement" /> с указанным индексом.</summary>
      <returns>ConfigurationElementType.</returns>
      <param name="index">Индекс элемента, к которому осуществляется доступ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)">
      <summary>Возвращает или задает свойство, атрибут или дочерний элемент объект <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом.</summary>
      <returns>ConfigurationElementType.</returns>
      <param name="key">Ключ элемента, к которому осуществляется доступ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> равен null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="key" /> не найден.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)">
      <summary>Удаляет из коллекции первое вхождение конкретного элемента конфигурации.</summary>
      <param name="element">Элемент конфигурации, который требуется удалить из коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.-и-Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)">
      <summary>Удаляет из этой коллекции элемент конфигурации по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента конфигурации, который требуется удалить.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> равен null.-и-Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)">
      <summary>Удаляет из этой коллекции элемент конфигурации с указанным ключом.</summary>
      <param name="key">Входящий в коллекцию элемент конфигурации с указанным ключом.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> равен null.-и-Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1">
      <summary>Абстрактный базовый класс для элемента <see cref="T:System.Configuration.ConfigurationElementCollection" /> с семантикой слияния, аналогичной <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, где разрешены дубликаты, но создается исключение при обнаружении дубликатов в одной области конфигурации (например,в одном и том же файле конфигурации).</summary>
      <typeparam name="TConfigurationElement">Элемент конфигурации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Добавляет в данную коллекцию элемент <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1.ThrowOnDuplicate">
      <summary>Возвращает логическое значение, указывающее, будет ли при попытке добавления в эту коллекцию дубликата <see cref="T:System.Configuration.ConfigurationElement" /> вызываться исключение. </summary>
      <returns>Значение true, если при попытке добавления в эту коллекцию дубликата <see cref="T:System.Configuration.ConfigurationElement" /> будет сформировано исключение; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1">
      <summary>Абстрактный базовый класс для коллекции объектов <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />.</summary>
      <typeparam name="TServiceModelExtensionElement">Элемент расширения ServiceModel.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Add(`0)">
      <summary>Добавляет указанный элемент в данный раздел конфигурации.</summary>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentException">Элемент <paramref name="element" /> уже присутствует в коллекции.— или —Тип элемента, указанный в параметре <paramref name="element" />, не является допустимым.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.CanAdd(`0)">
      <summary>Добавляет в этот раздел новый элемент поведения и возвращает значение, указывающее, успешно ли выполнена эта операция.</summary>
      <returns>Значение true, если операция завершилась успешно; в противном случае — false.</returns>
      <param name="element">Добавляемый элемент <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Clear">
      <summary>Удаляет все элементы из этой коллекции.Наследовать этот метод нельзя.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Contains(`0)">
      <summary>Возвращает значение, которое указывает, содержит ли эта коллекция конкретный элемент.Наследовать этот метод нельзя.</summary>
      <returns>Значение true, если коллекция содержит указанный элемент; в противном случае ― false.</returns>
      <param name="element">Искомый элемент.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ContainsKey(System.String)">
      <summary>Определяет, содержится ли в этой коллекции элемент с указанным именем.</summary>
      <returns>Значение true, если коллекция содержит элемент с указанным именем; в противном случае — значение false.</returns>
      <param name="elementName">Имя искомого элемента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementName" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ContainsKey(System.Type)">
      <summary>Определяет, содержится ли в этой коллекции элемент указанного типа.</summary>
      <returns>Значение true, если коллекция содержит элемент указанного типа; в противном случае — значение false.</returns>
      <param name="elementType">Тип искомого элемента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementName" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует коллекцию в совместимый одномерный массив, начиная с указанного индекса целевого массива.Наследовать этот метод нельзя.</summary>
      <param name="elements">Одномерный массив, куда копируются элементы коллекции.Индексация массива должна начинаться с нуля.</param>
      <param name="start">Отсчитываемый от нуля индекс в массиве элементов <paramref name="elements" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="start" /> недопустимо.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Count">
      <summary>Возвращает число элементов в этой коллекции.</summary>
      <returns>Число элементов в этой коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML из файла конфигурации. </summary>
      <param name="reader">Модуль чтения <see cref="T:System.Xml.XmlReader" />, считывающий данные из файла конфигурации.</param>
      <param name="serializeCollectionKey">Значение true для сериализации только свойств ключа коллекции; в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, который осуществляет перебор элементов коллекции.Наследовать этот метод нельзя.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для итерации по коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified">
      <summary>При реализации в производном классе указывает, был ли изменен данный элемент конфигурации с момента последнего сохранения или загрузки.</summary>
      <returns>Значение true, если элемент был изменен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Item(System.Int32)">
      <summary>Возвращает из коллекции элемент с указанным индексом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, представляющий элемент, который расположен в коллекции по указанному индексу.</returns>
      <param name="index">Индекс элемента, извлекаемого из коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Item(System.Type)">
      <summary>Возвращает из коллекции элемент указанного типа.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, представляющий элемент, который расположен в коллекции по указанному индексу.</returns>
      <param name="extensionType">Тип элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extensionType" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="extensionType" /> недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Возвращает значение, указывающее, был ли при десериализации обнаружен неизвестный элемент.</summary>
      <returns>Значение true, если при десериализации был обнаружен неизвестный элемент; в противном случае — значение false.</returns>
      <param name="elementName">Имя неизвестного дочернего элемента.</param>
      <param name="reader">Модуль чтения <see cref="T:System.Xml.XmlReader" />, используемый для десериализации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Remove(`0)">
      <summary>Удаляет из коллекции указанный элемент.Наследовать этот метод нельзя.</summary>
      <returns>Возвращает значение true, если элемент был успешно найден и удален, и значение false — в противном случае.Если элемент в коллекции отсутствует, этот метод возвращает значение false.</returns>
      <param name="element">Элемент, который требуется удалить из коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Reset(System.Configuration.ConfigurationElement)">
      <summary>Переводит эту коллекцию в неизмененное состояние после переопределения в производном классе.</summary>
      <param name="parentElement">Родитель <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента или null, если это верхний уровень.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ResetModified">
      <summary>Переустанавливает значение свойства <see cref="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified" /> в false при переопределении в производном классе.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.SetIsModified">
      <summary>Присваивает значение свойству <see cref="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified" /> данной коллекции.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.SetReadOnly">
      <summary>Присваивает значение внутреннему свойству IsReadOnly для данной коллекции и для всех ее дочерних элементов.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Возвращает значение, указывающее, доступен ли объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1" /> только для чтения.</summary>
      <returns>true, если коллекция <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1" /> доступна только для чтения, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, который осуществляет перебор элементов коллекции.Наследовать этот метод нельзя.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для перебора элементов коллекции. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Отменяет эффект слияния данных конфигурации на разных уровнях иерархии конфигурации.</summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенное представление свойств.</param>
      <param name="parentElement">Родитель <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента или null, если это верхний уровень.</param>
      <param name="saveMode">Значение перечисления <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств следует включить.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelExtensionElement">
      <summary>Абстрактный базовый класс для элемента конфигурации, содержащего динамическую коллекцию разнородных дочерних элементов.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName">
      <summary>Возвращает имя этого элемента конфигурации.</summary>
      <returns>Уникальное имя этого элемента конфигурации.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Коллекция расширений конфигурации не существует.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified">
      <summary>Возвращает значение, определяющее, был ли изменен данный элемент конфигурации.</summary>
      <returns>Значение true, если элемент конфигурации был изменен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Восстанавливает внутреннее состояние данного объекта элемента конфигурации, включая блокировки и коллекции свойств.</summary>
      <param name="parentElement">Родительский узел данного элемента конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает содержимое данного элемента конфигурации в файл конфигурации.</summary>
      <returns>true, если данные действительно были сериализованы; в противном случае — false.</returns>
      <param name="writer">Модуль записи <see cref="T:System.Xml.XmlWriter" />, используемый для записи данных в файл конфигурации.</param>
      <param name="serializeCollectionKey">Значение true для сериализации только свойств ключа коллекции; в противном случае — значение false.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelSectionGroup">
      <summary>Представляет основной раздел конфигурации для .Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceModelSectionGroup" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Behaviors">
      <summary>Возвращает раздел конфигурации, содержащий дочерние записи, являющиеся элементами поведения.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Configuration.BehaviorsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Bindings">
      <summary>Возвращает раздел конфигурации, в котором содержатся все привязки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.BindingsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Client">
      <summary>Возвращает элемент конфигурации со списком конечных точек, используемых клиентом для подключения к службе.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ClientSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.ComContracts">
      <summary>Возвращает раздел конфигурации, в котором указывается пространство имен и имя контракта для контракта службы, используемого при взаимодействии COM+.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ComContractsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.CommonBehaviors">
      <summary>Возвращает раздел конфигурации со списком всех элементов поведения, применяемых ко всем службам  на компьютере перед применением элементов поведения из раздела behaviors.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Configuration.CommonBehaviorsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Diagnostic">
      <summary>Возвращает раздел конфигурации для функций диагностики .</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.DiagnosticSection" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Extensions">
      <summary>Возвращает раздел конфигурации, в котором задаются все расширения.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Configuration.ExtensionsSection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Возвращает группу разделов конфигурации system.ServiceModel из указанного файла конфигурации.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ServiceModelSectionGroup" />, представляющий параметры system.ServiceModel в конфигурации.</returns>
      <param name="config">Объект <see cref="T:System.Configuration.Configuration" />, представляющий файл конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.ProtocolMapping">
      <summary>Возвращает раздел конфигурации конечных точек, который определяет протокол связи.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ProtocolMappingSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.ServiceHostingEnvironment">
      <summary>Возвращает раздел конфигурации, в котором указывается, какой тип службы среда внешнего размещения создает для данного транспорта.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Services">
      <summary>Возвращает раздел конфигурации, в котором задается коллекция служб. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.ServicesSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.StandardEndpoints">
      <summary>Получает объект <see cref="T:System.ServiceModel.Configuration.StandardEndpointsSection" />.</summary>
      <returns>Объект элемента раздела стандартной конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServicePrincipalNameElement">
      <summary>Представляет элемент конфигурации, в котором указывается имя участника, используемое клиентом для уникальной идентификации экземпляра службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServicePrincipalNameElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServicePrincipalNameElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServicePrincipalNameElement.Value">
      <summary>Возвращает или задает имя участника-службы, инкапсулированное в данном элементе конфигурации.</summary>
      <returns>Имя участника-службы, инкапсулированное в данном элементе конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement">
      <summary>Предоставляет элемент конфигурации, в котором для поведения задаются параметры конфигурации, связанные с аудитом.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceSecurityAuditElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.AuditLogLocation">
      <summary>Возвращает или задает расположение журнала аудита.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.AuditLogLocation" />, указывающее расположение журнала аудита.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLogLocation.Default" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceSecurityAuditElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный объект <see cref="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement" />.</summary>
      <param name="from">Объект <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />, представляющий копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.MessageAuthenticationAuditLevel">
      <summary>Возвращает или задает тип уровня проверки подлинности сообщений, используемый для записи в журнал событий аудита.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.AuditLevel" />, указывающее тип уровня проверки подлинности сообщений, используемый для записи в журнал событий аудита.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.ServiceAuthorizationAuditLevel">
      <summary>Возвращает или задает типы событий авторизации, записываемых в журнал аудита. </summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.AuditLevel" />, указывающее тип событий авторизации, записываемых в журнал аудита.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.SuppressAuditFailure">
      <summary>Возвращает или задает логическое значение, задающее поведение для подавления ошибок записи в журнал аудита.</summary>
      <returns>Значение true, если исключения, отличные от <see cref="T:System.OutOfMemoryException" />, <see cref="T:System.StackOverflowException" />, <see cref="T:System.Threading.ThreadAbortException" /> и <see cref="T:System.ArgumentException" />, возникающие в результате попыток записи событий аудита, обрабатываются системой и не распространяются на приложение; значение false, если все исключения, возникающие в результате попыток записи событий аудита, передаются приложению.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServicesSection">
      <summary>Представляет раздел конфигурации, содержащий службы. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServicesSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServicesSection" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServicesSection.Services">
      <summary>Возвращает все заданные в разделе службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.ServiceElementCollection" />, содержащий все настроенные в данном разделе службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceThrottlingElement">
      <summary>Представляет элемент конфигурации, в котором указывается механизм регулирования .Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceThrottlingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceThrottlingElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceThrottlingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentCalls">
      <summary>Возвращает или задает значение, указывающее количество одновременных вызовов для одного экземпляра службы.</summary>
      <returns>Количество одновременных вызовов для одного экземпляра службы.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentInstances">
      <summary>Возвращает или задает значение, указывающее максимальное количество запущенных одновременно экземпляров службы.</summary>
      <returns>Максимальное количество запущенных одновременно экземпляров службы.Значение по умолчанию — 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentSessions">
      <summary>Возвращает или задает значение, указывающее максимальное количество одновременных подключений к одному экземпляру службы.</summary>
      <returns>Максимальное число одновременных подключений к одному экземпляру службы.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceTimeoutsElement">
      <summary>Представляет элемент конфигурации, в котором указывается время ожидания для службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceTimeoutsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ServiceTimeoutsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceTimeoutsElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceTimeoutsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceTimeoutsElement.TransactionTimeout">
      <summary>Возвращает или задает период времени, в течение которого транзакция должна быть завершена.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий время, в течение которого транзакция должна быть завершена; по истечении этого времени транзакция будет прервана автоматически.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SslStreamSecurityElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры безопасности для привязки потока SSL.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.SslStreamSecurityElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SslStreamSecurityElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SslStreamSecurityElement.RequireClientCertificate">
      <summary>Возвращает или задает логическое значение, указывающее, требуется ли для этой привязки сертификат клиента.</summary>
      <returns>Значение true, если для этой привязки требуется сертификат клиента; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingCollectionElement`2">
      <summary>Предоставляет базовый класс для разделов конфигурации, в которых указываются предварительно заданные привязки, доступные в .</summary>
      <typeparam name="TStandardBinding">Стандартный элемент привязки.</typeparam>
      <typeparam name="TBindingConfiguration">Элемент конфигурации привязки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingCollectionElement`2" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.Bindings">
      <summary>Возвращает все стандартные привязки, заданные в данном разделе конфигурации.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.BindingType">
      <summary>Возвращает тип данной привязки.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.ConfiguredBindings">
      <summary>Возвращает коллекцию настроенных объектов привязки.</summary>
      <returns>Коллекция настроенных объектов привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.ContainsKey(System.String)">
      <summary>Определяет, существует ли в коллекции привязка с указанным именем.</summary>
      <returns>Значение true, если коллекция содержит привязку с указанным параметром <paramref name="name" />; в противном случае — значение false. </returns>
      <param name="name">Имя искомой привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.GetDefault">
      <summary>Возвращает используемую по умолчанию привязку.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий привязку по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Добавляет указанную привязку в коллекцию.</summary>
      <returns>Значение true, если привязку можно добавить в коллекцию; в противном случае — значение false. </returns>
      <param name="name">Имя добавляемой привязки.</param>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий добавляемую привязку.</param>
      <param name="config">Параметры конфигурации данной привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingElement">
      <summary>Предоставляет базовый класс для элементов конфигурации, в которых указываются предварительно заданные привязки, доступные в .</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" /> с указанным именем. </summary>
      <param name="name">Имя, уникальным образом идентифицирующее данный элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет содержимое указанной привязки к данному элементу конфигурации привязки.</summary>
      <param name="binding">Привязка.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Тип данного элемента привязки отличается от типа, указанного в параметре <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.BindingElementType">
      <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип настраиваемой привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции закрытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого указанной привязки.</summary>
      <param name="binding">Привязка.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Тип данного элемента привязки отличается от типа, указанного в параметре <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.Name">
      <summary>Возвращает или задает имя привязки. </summary>
      <returns>Имя привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанного элемента привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции открытия.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции получения.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, в котором указывается время, выделенное для завершения операции получения до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Восстанавливает внутреннее состояние данного объекта элемента конфигурации, включая блокировки и коллекции свойств.</summary>
      <param name="parentElement">Родительский узел данного элемента конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.SendTimeout">
      <summary>Возвращает или задает длительность временного интервала, выделенного для успешного завершения операции отправки.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingElementCollection`1">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" />.Наследовать этот класс нельзя.</summary>
      <typeparam name="TBindingConfiguration">Элемент конфигурации привязки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElementCollection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingElementCollection`1" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement">
      <summary>Представляет необязательный параметр конфигурации для протокола WS-Reliable Messaging, заданного в стандартной привязке.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.ApplyConfiguration(System.ServiceModel.OptionalReliableSession)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации.</summary>
      <param name="optionalReliableSession">Применяемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="optionalReliableSession" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.Enabled">
      <summary>Возвращает или задает логическое значение, указывающее, включена ли для этой привязки поддержка надежных сеансов.</summary>
      <returns>Значение true, если для этой привязки включена поддержка надежных сеансов; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.InitializeFrom(System.ServiceModel.OptionalReliableSession)">
      <summary>Инициализирует параметры этого элемента конфигурации на основе содержимого указанного элемента конфигурации.</summary>
      <param name="optionalReliableSession">Элемент конфигурации, параметры которого копируются. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="optionalReliableSession" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingReliableSessionElement">
      <summary>Представляет параметр конфигурации для протокола WS-Reliable Messaging, заданного в стандартной привязке.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardBindingReliableSessionElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.ApplyConfiguration(System.ServiceModel.ReliableSession)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации.</summary>
      <param name="reliableSession">Применяемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reliableSession" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.InactivityTimeout">
      <summary>Возвращает или задает значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность времени, в течение которого в канале другой стороне разрешено не отправлять сообщения до сброса канала.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее максимальную продолжительность времени, в течение которого в канале другой стороне разрешено не отправлять сообщения до сброса канала.Значение по умолчанию — 00:10:00.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.InitializeFrom(System.ServiceModel.ReliableSession)">
      <summary>Инициализирует этот элемент конфигурации на основе значений из указанного раздела.</summary>
      <param name="reliableSession">Элемент конфигурации, на основе которого выполняется инициализация.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reliableSession" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.Ordered">
      <summary>Возвращает или задает логическое значение, определяющее, прибывают ли сообщения точно в том порядке, в котором они были отправлены.</summary>
      <returns>Значение true, если сообщения гарантированно прибывают в том порядке, в котором они были отправлены; значение false, если сообщения могут прибывать неупорядоченно.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2">
      <summary>Обрабатывает коллекцию по умолчанию элементов стандартных конечных точек в файле конфигурации.</summary>
      <typeparam name="TStandardEndpoint">Тип стандартной конечной точки.</typeparam>
      <typeparam name="TEndpointConfiguration">Тип конфигурации конечной точки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints">
      <summary>Получает доступную только для чтения версию текущей коллекции элементов стандартных конечных точек.</summary>
      <returns>Доступная только для чтения коллекция элементов конечных точек.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)">
      <summary>Определяет, имеется ли в коллекции элементов стандартных конечных точек элемент с указанным именем.</summary>
      <returns>Значение true, если коллекция элементов конечных точек содержит элемент с указанным именем; в противном случае — значение false.</returns>
      <param name="name">Имя элемента конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints">
      <summary>Возвращает коллекцию по умолчанию элементов стандартных конечных точек.</summary>
      <returns>Коллекция элементов конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType">
      <summary>Возвращает тип стандартной конечной точки из коллекции.</summary>
      <returns>Тип конечной точки службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement">
      <summary>Создает локальный экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardEndpointElement" />.</summary>
      <returns>Элемент стандартной конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties">
      <summary>Сохраняет свойства для свойства Endpoints.</summary>
      <returns>Коллекция свойств конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)">
      <summary>Пытается добавить элемент конечной точки в коллекцию элементов стандартных конечных точек.</summary>
      <returns>Значение true, если элемент был добавлен в коллекцию; в противном случае — значение false.</returns>
      <param name="name">Идентификатор элемента, добавляемого в коллекцию.</param>
      <param name="endpoint">Добавляемый элемент конечной точки.</param>
      <param name="config">Файл конфигурации — не реализован.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardEndpointElement">
      <summary>Управляет элементом стандартной конечной точки для файла конфигурации приложения службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardEndpointElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Применяет содержимое конкретной конечной точки службы к текущему элементу конечной точки канала.</summary>
      <param name="endpoint">Конечная точка, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
      <param name="channelEndpointElement">Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Применяет содержимое конкретной конечной точки службы к текущему элементу конечной точки службы.</summary>
      <param name="endpoint">Конечная точка, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
      <param name="serviceEndpointElement">Элемент конечной точки, который определяет доступные клиентам способы поиска и обмена данными со службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>При реализации в производном классе, создает конечную точку службы из сведений о сообщении, которые содержатся в указанном описании контракта.</summary>
      <returns>Конечная точка службы.</returns>
      <param name="contractDescription">Сведения о содержимом сообщений, отправляемых из конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointElement.EndpointType">
      <summary>Не реализовано.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>Инициализирует и проверяет формат указанной конечной точки канала в файле конфигурации приложения службы.</summary>
      <param name="channelEndpointElement">Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>Инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации приложения службы.</summary>
      <param name="serviceEndpointElement">Элемент конечной точки, который позволяет клиентам выполнять поиск и обмен данными со службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Гарантирует, что конечная точка указанной службы не имеет значения null, а ее тип соответствует типу текущей конечной точки.</summary>
      <param name="endpoint">Конечная точка, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointElement.Name">
      <summary>Возвращает или задает имя текущего элемента конечной точки из списка строк конфигурации для этого элемента.</summary>
      <returns>Имя элемента конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>При вызове из производного класса загружает описание службы из файла конфигурации и применяет его к создаваемой среде выполнения.</summary>
      <param name="endpoint">Конечная точка, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
      <param name="channelEndpointElement">Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>При вызове из производного класса загружает описание службы из файла конфигурации и применяет его к создаваемой среде выполнения.</summary>
      <param name="endpoint">Конечная точка, которая позволяет клиентам выполнять поиск и обмен данными со службой.</param>
      <param name="serviceEndpointElement">Элемент конечной точки службы приложения службы.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>При вызове из производного класса инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации служебного приложения.</summary>
      <param name="channelEndpointElement">Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>При вызове из производного класса инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации служебного приложения.</summary>
      <param name="serviceEndpointElement">Элемент конечной точки службы, который позволяет клиентам выполнять поиск и обмен данными со службой.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointElement.Properties">
      <summary>Возвращает коллекцию свойств текущего элемента конечной точки.</summary>
      <returns> Коллекция свойств элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Восстанавливает внутреннее состояние объекта <see cref="T:System.Configuration.Element.ConfigurationElement" />, включая блокировки и коллекции свойств.</summary>
      <param name="parentElement">Верхний уровень элемента конфигурации, на котором имеются вложенные элементы.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardEndpointElementCollection`1">
      <summary>Представляет универсальную коллекцию стандартных элементов конечных точек, принадлежащих к стандартному типу или типу, из которого можно назначить стандартный тип.</summary>
      <typeparam name="TEndpointConfiguration">Тип элементов конечных точек в коллекции.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointElementCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardEndpointElementCollection`1" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardEndpointsSection">
      <summary>Представляет раздел конфигурации стандартных конечных точек.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointsSection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.StandardEndpointsSection" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointsSection.EndpointCollections">
      <summary>Возвращает коллекцию стандартных конечных точек.</summary>
      <returns>Общий список.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardEndpointsSection.GetSection(System.Configuration.Configuration)">
      <summary>Возвращает раздел стандартных конечных точек из указанного файла конфигурации.</summary>
      <returns>Раздел конфигурации стандартной конечной точки.</returns>
      <param name="config">Объект, содержащий один или несколько разделов XML параметров конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointsSection.Item(System.String)">
      <summary>Возвращает коллекцию элементов конечных точек, содержащую указанную конечную точку.</summary>
      <returns>Элемент коллекции конечных точек.</returns>
      <param name="endpoint">Имя конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardEndpointsSection.MexEndpoint">
      <summary>Возвращает элемент коллекции, содержащий конечные точки обмена метаданными.</summary>
      <returns>Элемент коллекции обмена метаданными.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SynchronousReceiveElement">
      <summary>Представляет элемент конфигурации, который используется, чтобы задавать поведение во время выполнения при получении сообщений в службе или в клиентском приложении.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SynchronousReceiveElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.SynchronousReceiveElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.SynchronousReceiveElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement">
      <summary>Представляет элемент конфигурации, в котором указываются дополнительные параметры пула подключений для транспорта TCP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.GroupName">
      <summary>Возвращает или задает строку, определяющую имя пула подключений, используемого для исходящих каналов.</summary>
      <returns>Имя пула подключений, используемого для исходящих каналов.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.IdleTimeout">
      <summary>Возвращает или задает максимальное время, в течение которого подключение может простаивать перед отключением.</summary>
      <returns>Положительное значение <see cref="T:System.TimeSpan" />, указывающее максимальное время бездействия для подключения перед его закрытием.Значение по умолчанию — 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout">
      <summary>Возвращает или задает промежуток времени ожидания перед закрытием активного подключения.</summary>
      <returns>Структура <see cref="T:System.TimeSpan" />, в которой указывается время, по истечении которого подключение TCP закрывается.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>Возвращает или задает максимальное число подключений к удаленной конечной точке, инициированных одной службой.</summary>
      <returns>Максимальное число подключений к удаленной конечной точке, инициированных одной службой.Значение по умолчанию — 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpTransportElement">
      <summary>Указывает элемент конфигурации, при наличии которого канал начинает передавать сообщения по транспорту TCP, если такой транспорт включен в настраиваемую привязку.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TcpTransportElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет к данному элементу конфигурации параметры указанного элемента привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, параметры которого необходимо применить к данному элементу конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий элемент настраиваемой привязки. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings">
      <summary>Возвращает элемент конфигурации, в котором указываются дополнительные параметры подключения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Элемент конфигурации, параметры которого необходимо скопировать в данный раздел элемента конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy">
      <summary>Возвращает экземпляр <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />, содержащий параметры конфигурации для расширенной защиты сеанса.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog">
      <summary>Возвращает или задает максимальное число каналов, ожидающих принятия на прослушивателе.</summary>
      <returns>Максимальное число каналов, ожидающих принятия на прослушивателе.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled">
      <summary>Возвращает или задает значение, определяющее, включено ли совместное использование порта TCP для этого соединения.</summary>
      <returns>Значение true, если совместное использование порта TCP включено; значение false, если для каждой привязки используется собственный отдельный порт.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled">
      <summary>Возвращает или задает значение, указывающее, включена ли технология Teredo (технология адресации клиентов, защищенных брандмауэром).</summary>
      <returns>Значение true, если технология Teredo включена; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpTransportSecurityElement">
      <summary>Элемент XML, в котором задаются параметры безопасности для привязки TcpTransport.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TcpTransportSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType">
      <summary>Возвращает или задает тип учетных данных клиента, используемых для проверки подлинности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TcpClientCredentialType" />, в котором указывается тип учетных данных клиента, используемых для проверки подлинности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy">
      <summary>Возвращает экземпляр <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />, содержащий параметры конфигурации для расширенной защиты сеанса.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel">
      <summary>Возвращает или задает значение, определяющее безопасность сообщений на уровне именованного канала.</summary>
      <returns>Значение <see cref="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel" />, определяющее безопасность сообщений на уровне именованного канала.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TextMessageEncodingElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры кодировки и управления версиями для XML-сообщений в текстовом формате.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TextMessageEncodingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному разделу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.BindingElementType">
      <summary>Возвращает тип <see cref="T:System.Type" /> этого элемента конфигурации. </summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента конфигурации. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный элемент.</summary>
      <param name="from">Копируемый раздел конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MaxReadPoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно считать одновременно без выделения памяти для дополнительных модулей чтения.</summary>
      <returns>Максимальное количество сообщений, которые можно читать одновременно, не выделяя памяти для новых модулей чтения.Значение по умолчанию — 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MaxWritePoolSize">
      <summary>Возвращает или задает значение, указывающее максимальное количество сообщений, которые можно отправить одновременно без выделения памяти для дополнительных модулей записи.</summary>
      <returns>Максимальное количество сообщений, которые можно отправить одновременно, не выделяя памяти для новых модулей записи.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MessageVersion">
      <summary>Возвращает или задает версии SOAP и WS-Addressing, используемые для форматирования текстового сообщения, отправляемого с помощью этой привязки.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Channels.MessageVersion" />, указывающее версию SOAP сообщений, отправляемых с помощью этой привязки.Значение по умолчанию — <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую при создании сообщений для привязки.</summary>
      <returns>Действительное значение <see cref="T:System.Text.Encoding" />, в котором указывается кодировка, используемая при создании сообщений для привязки.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransactedBatchingElement">
      <summary>Представляет элемент конфигурации, указывающий, поддерживаются ли для операций получения сообщений пакетные транзакции.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactedBatchingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransactedBatchingElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactedBatchingElement.BehaviorType">
      <summary>Возвращает тип этого элемента конфигурации поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactedBatchingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactedBatchingElement.MaxBatchSize">
      <summary>Возвращает или задает максимальное число операций получения, которые могут быть объединены в одну транзакцию.</summary>
      <returns>Максимальное число операций получения, которые могут быть объединены в одну транзакцию.Значение по умолчанию — 0.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransactionFlowElement">
      <summary>Представляет элемент конфигурации, задающий поддержку потока транзакций для привязки.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransactionFlowElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.AllowWildcardAction">
      <summary>Возвращает или задает значение, указывающее, разрешено ли подстановочное действие.</summary>
      <returns>Значение true, если подстановочное действие разрешено, в противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое данного раздела конфигурации привязки к указанному элементу привязки потока транзакций.</summary>
      <param name="bindingElement">Элемент привязки типа <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bindingElement" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="bindingElement" /> не является экземпляром типа <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий тип данного элемента конфигурации.</summary>
      <returns>Тип этого элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного раздела конфигурации в данный раздел конфигурации.</summary>
      <param name="from">Копируемый раздел конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.CreateBindingElement">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />, для которого включена поддержка потока транзакций и используется тот же протокол <see cref="T:System.ServiceModel.TransactionProtocol" />, что и для текущего элемента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />, для которого включена поддержка потока транзакций и используется тот же протокол <see cref="T:System.ServiceModel.TransactionProtocol" />, что и для текущего элемента. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого заданного элемента привязки. </summary>
      <param name="bindingElement">Элемент привязки типа <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bindingElement" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="bindingElement" /> не является экземпляром типа <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.TransactionProtocol">
      <summary>Возвращает или задает используемый протокол транзакций.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.TransactionProtocol" />, задающий протокол транзакций, используемый для потока транзакций.Значение по умолчанию — <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement">
      <summary>Элемент XML, идентифицирующий тип данного транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> с уникальным именем. </summary>
      <param name="name">Строка, являющаяся уникальным идентификатором типа транспорта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> на основе уникального имени и типа, в котором реализован конкретный транспорт.</summary>
      <param name="name">Строка, являющаяся уникальным идентификатором типа транспорта.</param>
      <param name="transportConfigurationTypeName">Тип, реализующий конкретный транспорт.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="transportConfigurationTypeName" /> равны null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportConfigurationTypeElement.Name">
      <summary>Возвращает или задает имя, уникальным образом идентифицирующее тип транспорта.</summary>
      <returns>Имя, являющееся уникальным идентификатором типа транспорта.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportConfigurationTypeElement.TransportConfigurationType">
      <summary>Возвращает или задает строку, содержащую тип, реализующий конкретный транспорт.</summary>
      <returns>Тип, реализующий конкретный транспорт.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection">
      <summary>Коллекция элементов <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportElement">
      <summary>Предоставляет базовый класс для представления элемента конфигурации привязки транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.TransportElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет к данному элементу конфигурации параметры указанного элемента привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">Тип <see cref="T:System.ServiceModel.Channels.BindingElement" /> для этого элемента конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует параметры из указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Элемент конфигурации, параметры которого необходимо скопировать в данный элемент конфигурации.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CreateBindingElement">
      <summary>Создает новый настраиваемый объект элемента привязки, свойства которого копируются из параметров данного элемента конфигурации.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CreateDefaultBindingElement">
      <summary>Возвращает настраиваемый объект элемента привязки со значениями по умолчанию.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" /> со значениями по умолчанию.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.ManualAddressing">
      <summary>Возвращает или задает логическое значение, указывающее, может ли пользователь управлять адресацией сообщений.</summary>
      <returns>Значение true, если пользователь может адресовать каждое сообщение по отдельности; значение false, если адреса для всех сообщений автоматически создаются механизмом адресации  по умолчанию.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула.</summary>
      <returns>Максимальный размер буферного пула.Значение по умолчанию — 524 288 байт (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимально допустимый размер принимаемого сообщения.</summary>
      <returns>Максимально допустимый размер принимаемого сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UseManagedPresentationElement">
      <summary>Представляет элемент привязки для управления представлением.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseManagedPresentationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.UseManagedPresentationElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UseManagedPresentationElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий элемент привязки. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseManagedPresentationElement.CreateBindingElement">
      <summary>Создает новый настраиваемый объект элемента привязки, свойства которого копируются из параметров данного элемента конфигурации.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement">
      <summary>Включает получение сведений об адресе метаданных из заголовков сообщений запроса для использования в элементах конфигурации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement.BehaviorType">
      <summary>Возвращает тип текущего класса <see cref="T:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior" />.</summary>
      <returns>Тип поведения.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует сведения заголовка запроса из указанного объекта <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> в текущий объект <see cref="T:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement" />.</summary>
      <param name="from">Элемент расширения модели службы, из которого должны быть получены сведения заголовка запроса.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.UseRequestHeadersForMetadataAddressElement.DefaultPorts">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Configuration.DefaultPortElement" />.</summary>
      <returns>Коллекция элементов.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UserNameServiceElement">
      <summary>Представляет элемент конфигурации, в котором указываются учетные данные службы на основе имени пользователя и пароля.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserNameServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.UserNameServiceElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime">
      <summary>Возвращает или задает максимальную продолжительность времени хранения маркера в кэше. </summary>
      <returns>Объект <see cref="T:System.Timespan" />, определяющий максимальную продолжительность нахождения маркера в кэше.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens">
      <summary>Возвращает или задает значение, указывающее, кэшируются ли маркеры входа в систему. </summary>
      <returns>Значение true, если маркеры входа в систему будут кэшироваться; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType">
      <summary>Возвращает или задает тип используемого настраиваемого проверяющего элемента управления на основе имени пользователя и пароля.</summary>
      <returns>Тип используемого настраиваемого проверяющего элемента управления на основе имени пользователя и пароля.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст безопасности группы Windows. </summary>
      <returns>Значение true, если группы Windows включены в контекст безопасности; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens">
      <summary>Возвращает или задает максимальное количество кэшируемых маркеров входа в систему. </summary>
      <returns>Максимальное количество кэшируемых маркеров входа в систему.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName">
      <summary>Возвращает или задает строку, в которой указывается имя поставщика членства, предоставляющего логику проверки пароля.</summary>
      <returns>Имя поставщика членства, предоставляющего логику проверки пароля.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode">
      <summary>Возвращает или задает способ проверки имени пользователя и пароля. </summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UserPrincipalNameElement">
      <summary>Представляет элемент конфигурации, указывающий имя участника-пользователя.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserPrincipalNameElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.UserPrincipalNameElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserPrincipalNameElement.Value">
      <summary>Возвращает или задает значение, заданное для данного элемента конфигурации.</summary>
      <returns>Строка, в которой указывается имя учетной записи пользователя (иногда называется именем входа пользователя) и имя домена, определяющее домен, в котором располагается учетная запись пользователя. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsClientElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры учетных данных Windows, используемых для представления клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsClientElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WindowsClientElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel">
      <summary>Возвращает или задает допустимый уровень олицетворения.</summary>
      <returns>Допустимое значение <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, указывающее допустимый уровень олицетворения.Значение по умолчанию — <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm">
      <summary>Возвращает или задает логическое значение, указывающее, включена ли проверка подлинности NTLM.</summary>
      <returns>Значение true, если в сценарии с рабочей группой включена безопасность Windows, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsServiceElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры учетных данных службы Windows.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WindowsServiceElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsServiceElement.AllowAnonymousLogons">
      <summary>Возвращает или задает логическое значение, указывающее, могут ли входить в систему анонимные пользователи.</summary>
      <returns>Значение true, если анонимные пользователи могут входить в систему; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsServiceElement.Copy(System.ServiceModel.Configuration.WindowsServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsServiceElement.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст безопасности группы Windows.</summary>
      <returns>Значение true, если группы Windows включены в контекст безопасности; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsStreamSecurityElement">
      <summary>Представляет элемент конфигурации, используемый для указания параметров потоковой безопасности Windows для привязки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WindowsStreamSecurityElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Применяет содержимое указанного элемента привязки к данному элементу конфигурации привязки.</summary>
      <param name="bindingElement">Элемент привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsStreamSecurityElement.BindingElementType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий элемент привязки. </summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsStreamSecurityElement.ProtectionLevel">
      <summary>Возвращает или задает используемый тип безопасности на уровне сообщений.</summary>
      <returns>Объект <see cref="T:System.Net.Security.ProtectionLevel" />, в котором указывается используемый тип безопасности на уровне сообщений.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement">
      <summary>Представляет элемент конфигурации, в котором задается привязка <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" /> с указанным именем конфигурации. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.BindingElementType">
      <summary>Возвращает тип класса <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" />.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий дочерние элементы, в которых указываются параметры использования привязки <see cref="T:System.ServiceModel.WS2007HttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007HttpBindingElement">
      <summary>Представляет привязку с возможностью взаимодействия, которая является производным классом от класса <see cref="T:System.ServiceModel.WSHttpBinding" /> и обеспечивает поддержку правильных версий элементов привязки <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" /> и <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" /> с указанной привязкой. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WS2007HttpBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип этого элемента привязки.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WsdlImporterElement">
      <summary>Представляет элемент конфигурации, в котором указывается импорт метаданных WSDL 1.1 с вложениями WS-Policy.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> с указанным типом.</summary>
      <param name="type">Заданный тип.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> с указанным типом.</summary>
      <param name="type">Заданный тип.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WsdlImporterElement.Type">
      <summary>Возвращает или задает тип данного элемента конфигурации.</summary>
      <returns>Тип этого элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WsdlImporterElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WsdlImporterElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpBindingElement">
      <summary>Представляет элемент конфигурации для безопасной привязки с возможностью взаимодействия, которая подходит для дуплексных контрактов службы или связи через посредников SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> с указанным именем.</summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal">
      <summary>Возвращает или задает логическое значение, определяющее, будет ли использоваться данный прокси-сервер для локальных адресов.</summary>
      <returns>Значение true для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI), задающий базовый адрес, который клиент прослушивает для получения от службы ответных сообщений.</summary>
      <returns>Универсальный код ресурса (URI) указывает базовый адрес, который клиент прослушивает для получения от службы ответных сообщений. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode">
      <summary>Возвращает или задает режим сравнения имен узлов протокола HTTP для анализа универсальных кодов ресурса (URI).</summary>
      <returns>Действительное значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, которое указывает, используется ли имя узла для доступа к службе при сравнении по универсальному коду ресурса (URI).Значение по умолчанию — <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не учитывается.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого указанной коллекции элементов привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный объем памяти, выделяемой для диспетчера буфера сообщений, который принимает сообщения на конечных точках, настроенных для данной привязки.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.Значение по умолчанию — 524288 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, которое можно получить по каналу, настроенному с этой привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding">
      <summary>Возвращает или задает кодировщик, используемый для кодирования сообщения. </summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, в котором указывается кодировщик, используемый для кодирования сообщения.Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанной коллекции элементов привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Применяемая привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI) с адресом прокси-сервера HTTP.</summary>
      <returns>Универсальный код ресурса (URI), задающий адрес прокси-сервера HTTP. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession">
      <summary>Возвращает элемент конфигурации, указывающий, включена ли поддержка надежных сеансов для конечной точки, настроенной для данной привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" />, указывающий, включена ли поддержка надежных сеансов для конечной точки, настроенной для данной привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой. </summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" />, в котором указываются параметры безопасности, используемые с данной привязкой. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую при создании сообщений для привязки.</summary>
      <returns>Действительное значение <see cref="T:System.Text.Encoding" />, в котором указывается кодировка, используемая при создании сообщений для привязки.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow">
      <summary>Возвращает или задает логическое значение, определяющее, поддерживает ли привязка потоковые спецификации WS-Transactions.</summary>
      <returns>Значение true, если привязка поддерживает потоковые спецификации WS-Transactions; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy">
      <summary>Возвращает или задает логическое значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement">
      <summary>Представляет элемент XML, в котором определяются параметры безопасности для привязки wsDualHttpBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Message">
      <summary>Возвращает параметры безопасности для сообщения. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Mode">
      <summary>Возвращает или задает тип безопасности, применяемой к этой привязке.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />, в котором указывается тип безопасности, применяемый к привязке. Значение по умолчанию — <see cref="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement">
      <summary>Представляет элемент конфигурации, в котором задается привязка, поддерживающая WS-Federation.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> с указанным именем конфигурации. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого указанной коллекции элементов привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанной коллекции элементов привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.PrivacyNoticeAt">
      <summary>Возвращает или задает универсальный код ресурса (URI), по которому расположено уведомление о конфиденциальности.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому расположено уведомление о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.PrivacyNoticeVersion">
      <summary>Возвращает или задает целое число, определяющее версию текущего уведомления о конфиденциальности.</summary>
      <returns>Целое число, определяющее версию текущего уведомления о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой. </summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement" />, в котором указывается тип безопасности, используемый с данной привязкой.Значение по умолчанию — <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement">
      <summary>Представляет элемент XML, в котором определяются параметры безопасности для привязки wsFederationHttp.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Message">
      <summary>Возвращает параметры безопасности для сообщения. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement" />, в котором указываются параметры безопасности для сообщения. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Mode">
      <summary>Возвращает или задает тип безопасности, применяемой к этой привязке.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />, в котором указывается тип безопасности, применяемой к этой привязке.Значение по умолчанию — <see cref="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement">
      <summary>Предоставляет базовый класс, члены которого являются общими для классов <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> и <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement" />. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.BypassProxyOnLocal">
      <summary>Возвращает или задает логическое значение, определяющее, будет ли использоваться данный прокси-сервер для локальных адресов.</summary>
      <returns>Значение true для обхода прокси-сервера для локальных адресов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.HostNameComparisonMode">
      <summary>Возвращает или задает режим сравнения имен узлов протокола HTTP для анализа универсальных кодов ресурса (URI).</summary>
      <returns>Значение <see cref="T:System.ServiceModel.HostnameComparisonMode" />, указывающее режим сравнения имени узла HTTP, используемый для анализа универсальных кодов ресурсов (URI).</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот раздел конфигурации привязки с помощью содержимого заданных элементов привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxBufferPoolSize">
      <summary>Возвращает или задает максимальный размер буферного пула, в котором хранятся сообщения TCP, обработанные привязкой.</summary>
      <returns>Максимальный размер (в байтах) буферного пула, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, обрабатываемого привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.Значение по умолчанию — 65 536 байт.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MessageEncoding">
      <summary>Возвращает или задает кодировщик, используемый для кодирования сообщения. </summary>
      <returns>Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, в котором указывается кодировщик, используемый для кодирования сообщения.Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет указанную привязку к этому экземпляру класса <see cref="T:System.ServiceModel.Configuration.WsDualHttpBindingElement" />.</summary>
      <param name="binding">Применяемая привязка.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ProxyAddress">
      <summary>Возвращает или задает универсальный код ресурса (URI) с адресом прокси-сервера HTTP.</summary>
      <returns>Универсальный код ресурса (URI), задающий адрес прокси-сервера HTTP. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReaderQuotas">
      <summary>Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReliableSession">
      <summary>Возвращает элемент конфигурации, указывающий, включена ли поддержка надежных сеансов для конечной точки, настроенной для данной привязки.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" />, указывающий, включена ли поддержка надежных сеансов для конечной точки, настроенной для данной привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую при создании сообщений для привязки.</summary>
      <returns>Значение <see cref="T:System.Text.Encoding" />, в котором указывается кодировка, используемая при создании сообщений для привязки.Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.TransactionFlow">
      <summary>Возвращает или задает логическое значение, определяющее, поддерживает ли привязка потоковые спецификации WS-Transactions.</summary>
      <returns>Значение true, если привязка поддерживает потоковые спецификации WS-Transactions; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.UseDefaultWebProxy">
      <summary>Возвращает или задает логическое значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы.</summary>
      <returns>Значение true, если должен использоваться автоматически настроенный прокси-сервер HTTP системы; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement">
      <summary>Представляет элемент конфигурации, содержащий дочерние элементы, в которых указываются параметры использования привязки wsHttpBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingElement">
      <summary>Представляет привязку с возможностью взаимодействия, поддерживающую распределенные транзакции и безопасные надежные сеансы.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />. </summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies">
      <summary>Возвращает или задает логическое значение, указывающее, принимает ли клиент файлы Cookie и распространяет ли он их на будущие запросы. </summary>
      <returns>Значение true, если клиент принимает файлы Cookie и распространяет их на будущие запросы; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType">
      <summary>Возвращает тип этого элемента привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> этого элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот элемент конфигурации привязки с помощью содержимого заданного элемента привязки.</summary>
      <param name="binding">Элемент привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Вызывается, когда содержимое указанной коллекции элементов привязки применяется к данному элементу конфигурации привязки.</summary>
      <param name="binding">Коллекция элементов привязки.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.WSHttpSecurityElement" />, используемый с данной привязкой. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpContextBindingCollectionElement">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.WSHttpContextBindingElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpContextBindingCollectionElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpContextBindingCollectionElement" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpContextBindingElement">
      <summary>Представляет элемент конфигурации, соответствующий привязке <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpContextBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpContextBindingElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpContextBindingElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpContextBindingElement" /> с указанным именем конфигурации.</summary>
      <param name="name">Имя конфигурации привязки.Это значение должно быть уникальным, поскольку оно используется для идентификации привязки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpContextBindingElement.BindingElementType">
      <summary>Возвращает тип среды CLR стандартной привязки, связанной с этим элементом конфигурации: <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpContextBindingElement.ClientCallbackAddress">
      <summary>Возвращает или задает адрес обратного вызова клиента для элемента привязки.</summary>
      <returns>Возвращает <see cref="T:System.Uri" />, содержащий адрес обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpContextBindingElement.ContextManagementEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли управление контекстом.</summary>
      <returns>Значение true, если управление контекстом включено; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpContextBindingElement.ContextProtectionLevel">
      <summary>Возвращает или задает уровень защиты контекста заголовка SOAP, используемого для распространения сведений о контексте. </summary>
      <returns>Допустимое значение <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.Sign" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpContextBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует этот элемент конфигурации привязки на основе конфигурации заданной привязки.Указанный объект привязки должен иметь тип <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
      <param name="binding">Привязка, которая содержит контекст, уровень защиты контекста и механизм обмена содержимым, используемый для инициализации класса.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpContextBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Применяет конфигурацию этого элемента конфигурации к заданному экземпляру привязки.Указанный экземпляр привязки должен иметь тип <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</summary>
      <param name="binding">Привязка, которая содержит контекст, уровень защиты контекста и механизм обмена содержимым, используемый для конфигурации класса.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpContextBindingElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpSecurityElement">
      <summary>Элемент XML, в котором задаются параметры безопасности для привязки wsHttpBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Message">
      <summary>Возвращает параметры безопасности для сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverHttpElement" />, в котором указываются параметры безопасности для сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Mode">
      <summary>Задает тип применяемого механизма обеспечения безопасности.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее применяемый тип безопасности.Значение по умолчанию — <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Transport">
      <summary>Возвращает параметры безопасности для транспорта. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" />, в котором указываются параметры безопасности для транспорта. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpTransportSecurityElement">
      <summary>Представляет элемент конфигурации, в котором задаются параметры проверки подлинности для транспорта HTTP.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WSHttpTransportSecurityElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.ClientCredentialType">
      <summary>Возвращает или задает учетные данные, используемые для проверки подлинности клиента при подключении к службе.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.HttpClientCredentialType" />, в котором указываются учетные данные, используемые для проверки подлинности клиента при подключении к службе. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.ExtendedProtectionPolicy">
      <summary>Возвращает экземпляр <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />, содержащий параметры конфигурации для расширенной защиты сеанса.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.ProxyCredentialType">
      <summary>Возвращает или задает учетные данные, используемые для проверки подлинности клиента при подключении к прокси-серверу домена.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.HttpProxyCredentialType" />, в котором указываются учетные данные, используемые для проверки подлинности клиента при подключении к прокси-серверу домена. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.Realm">
      <summary>Возвращает или задает строку, в которой указывается область проверки подлинности для обычной проверки подлинности или дайджест-проверки подлинности.</summary>
      <returns>Строка, указывающая область проверки подлинности для обычной проверки подлинности или дайджест-проверки подлинности.Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, выпущенный доверенным издателем.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.Copy(System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection">
      <summary>Содержит коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры проверки подлинности для сертификата клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Возвращает или задает тип используемого настраиваемого проверяющего элемента управления для сертификата клиента.</summary>
      <returns>Тип используемого проверяющего элемента управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст безопасности группы Windows.</summary>
      <returns>Значение true, если группы Windows включены в контекст безопасности; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.MapClientCertificateToWindowsAccount">
      <summary>Возвращает или задает значение, указывающее, сопоставлен ли сертификат учетным записям Windows. </summary>
      <returns>Значение true, если сертификат сопоставлен с учетными записями Windows; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, относительно которого проверяется сертификат клиента.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, используемый клиентом.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.Copy(System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.StoreLocation">
      <summary>Возвращает или задает значение, указывающее расположение хранилища сертификатов, которое служба может использовать для проверки сертификата клиента.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, используемый службой по умолчанию.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.Copy(System.ServiceModel.Configuration.X509DefaultServiceCertificateElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, используемый для самоидентификации клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.Copy(System.ServiceModel.Configuration.X509InitiatorCertificateClientElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement">
      <summary>Представляет элемент конфигурации, в котором указываются требования отправителя к сертификату X.509, используемому получателем при ответе отправителю.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Authentication">
      <summary>Возвращает сертификат клиента, используемый для проверки подлинности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />, который содержит сертификат клиента, используемый для проверки подлинности.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Certificate">
      <summary>Возвращает сертификат, используемый для представления службы при взаимодействии с клиентом.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для представления службы при взаимодействии с клиентом.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Copy(System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры проверки подлинности для сертификата точки.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Возвращает или задает тип используемого настраиваемого проверяющего элемента управления для сертификата точки.</summary>
      <returns>Тип используемого проверяющего элемента управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, относительно которого проверяется сертификат точки.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509PeerCertificateElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, используемый одноранговым узлом.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateElement.Copy(System.ServiceModel.Configuration.X509PeerCertificateElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата точки.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement">
      <summary>Представляет элемент конфигурации, в котором указываются требования получателя к используемому отправителем сертификату X.509.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.Authentication">
      <summary>Возвращает сертификат, используемый для проверки подлинности.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.Copy(System.ServiceModel.Configuration.X509RecipientCertificateClientElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.DefaultCertificate">
      <summary>Возвращает сертификат по умолчанию, используемый для представления службы при взаимодействии с клиентом.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для представления службы при взаимодействии с клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.ScopedCertificates">
      <summary>Возвращает сертификат в области действия, используемый для представления службы при взаимодействии с клиентом.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для представления службы при взаимодействии с клиентом.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат, используемый для самоидентификации службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.Copy(System.ServiceModel.Configuration.X509RecipientCertificateServiceElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement">
      <summary>Представляет элемент конфигурации, в котором указывается сертификат службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.Copy(System.ServiceModel.Configuration.X509ScopedServiceCertificateElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.FindValue">
      <summary>Возвращает или задает строку, задающую значение для поиска в хранилище сертификатов X.509.</summary>
      <returns>Значение для поиска в хранилище сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.StoreLocation">
      <summary>Возвращает или задает значение, определяющее расположение хранилища сертификатов, которое клиент может использовать для проверки сертификата сервера.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.StoreName">
      <summary>Возвращает или задает имя открываемого хранилища сертификатов X.509.</summary>
      <returns>Строка <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, содержащая имя открываемого хранилища сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.TargetUri">
      <summary>Возвращает или задает универсальный код ресурса (URI) для данного сертификата.</summary>
      <returns>Универсальный код ресурса (URI).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.X509FindType">
      <summary>Возвращает или задает тип поиска X.509 для выполнения.</summary>
      <returns>Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, указывающее тип выполняемого поиска X.509.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection">
      <summary>Содержит коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement">
      <summary>Представляет элемент конфигурации, в котором указываются параметры проверки подлинности для сертификата службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement)">
      <summary>Копирует содержимое указанного элемента конфигурации в данный элемент конфигурации.</summary>
      <param name="from">Копируемый элемент конфигурации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="from" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Возвращает или задает тип используемого настраиваемого проверяющего элемента управления для сертификата службы.</summary>
      <returns>Тип используемого проверяющего элемента управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата.</summary>
      <returns>Допустимое значение <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, относительно которого проверяется сертификат службы.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement">
      <summary>Представляет элемент конфигурации, в котором задаются ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, для которых настроена эта привязка.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
      <summary>Возвращает и задает максимально допустимую длину массива.</summary>
      <returns>Максимально допустимая длина массива.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
      <summary>Возвращает и задает максимально допустимое число байтов, возвращаемых для каждой операции чтения.</summary>
      <returns>Максимально допустимое число байтов, возвращаемых для каждой операции чтения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
      <summary>Возвращает или задает максимальную глубину вложенного узла для каждого чтения.</summary>
      <returns>Максимальная глубина вложенного узла для каждого чтения.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
      <summary>Возвращает и задает максимальное количество символов в имени таблицы.</summary>
      <returns>Максимально допустимое количество символов в имени таблицы.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
      <summary>Возвращает или задает максимальное допустимое количество знаков в содержимом элемента XML.</summary>
      <returns>Максимальное допустимое количество знаков в содержимом элемента XML.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlElementElement">
      <summary>Представляет параметры конфигурации для элемента XML.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XmlElementElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.#ctor(System.Xml.XmlElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XmlElementElement" /> на основе указанного элемента XML.</summary>
      <param name="element">Элемент <see cref="T:System.Xml.XmlElement" />, на основе которого инициализируется данный экземпляр.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.Copy(System.ServiceModel.Configuration.XmlElementElement)">
      <summary>Копирует содержимое указанного элемента <see cref="T:System.Xml.XmlElement" /> в данный экземпляр.</summary>
      <param name="source">Элемент <see cref="T:System.Xml.XmlElement" />, из которого копируются данные.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source" /> равно null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл конфигурации доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlElementElement.XmlElement">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlElement" />, инкапсулируемый данным классом. </summary>
      <returns>
        <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlElementElementCollection">
      <summary>Представляет коллекцию экземпляров класса <see cref="T:System.ServiceModel.Configuration.XmlElementElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElement">
      <summary>Представляет элемент конфигурации, используемый при ведении журнала сообщений.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.XPathMessageFilterElement.Filter">
      <summary>Возвращает или задает фильтр XPath.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.ContainsKey(System.Object)">
      <summary>Определяет, содержится ли элемент с указанным ключом в коллекции <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" />.</summary>
      <returns>Значение true, если ключ существует в коллекции; в противном случае — значение false.</returns>
      <param name="key">Ключ, который ищется в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Тип, связанный с параметром <paramref name="key" />, недопустим.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.Item(System.Object)">
      <summary>Возвращает из коллекции элемент с указанным ключом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />, связанный с указанным ключом <paramref name="key" /> в коллекции. </returns>
      <param name="key">Ключ, который ищется в коллекции.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElementComparer">
      <summary>Предоставляет функции для сравнения двух экземпляров класса <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementComparer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementComparer" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Сравниваются два экземпляра класса <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</summary>
      <returns>В следующей таблице приведены возможные значения.ЗначениеУсловие-1Значение параметра <paramref name="x" /> меньше значения параметра <paramref name="y" />.0Значение параметра <paramref name="x" /> равно значению параметра <paramref name="y" />.1Значение параметра <paramref name="x" /> больше значения параметра <paramref name="y" />.</returns>
      <param name="x">
        <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</param>
      <param name="y">
        <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</param>
      <exception cref="T:System.InvalidOperationException">Не удается выполнить синтаксический анализ фильтра XPath, указанного в параметре <paramref name="x" /> или <paramref name="y" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Не удается найти префикс пространства имен XPath, указанный в параметре <paramref name="x" /> или <paramref name="y" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.CallbackDebugBehavior">
      <summary>Включает отладку службы для объекта обратного вызова .</summary>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" />. </summary>
      <param name="includeExceptionDetailInFaults">Определяет, включает ли объект обратного вызова  сведения об управляемом исключении в данные ошибок SOAP, отсылаемых обратно в службу.</param>
    </member>
    <member name="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, которое определяет, возвращают ли объекты обратного вызова сведения об управляемом исключении в ошибках SOAP обратно в службу.</summary>
      <returns>Значение true, если  возвращает сведения об управляемом исключении клиента обратного вызова в ошибках SOAP для отладки службы при дуплексной связи; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> для поддержки расширений функциональности.</summary>
      <param name="serviceEndpoint">Изменяемая конечная точка.</param>
      <param name="bindingParameters">Объекты, необходимые элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> для поддержки поведения.</summary>
      <param name="serviceEndpoint">Настраиваемая конечная точка.</param>
      <param name="behavior">Настраиваемая клиентская среда выполнения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> для поддержки поведения.</summary>
      <param name="serviceEndpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Изменяемый или расширяемый диспетчер конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> для поддержки поведения.</summary>
      <param name="serviceEndpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Позволяет пользователю настроить клиента и учетные данные службы, а также параметры проверки подлинности учетных данных службы для использования со стороны клиента связи.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Это копия конструктора. </summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" />.Все свойства нового экземпляра отображают значения этого параметра.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Применяет заданное поведение клиента к конечной точке.</summary>
      <param name="serviceEndpoint">Конечная точка, к которой необходимо применение заданного поведения клиента.</param>
      <param name="behavior">Поведение клиента, которое необходимо применить к заданной конечной точке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> or <paramref name=" behavior" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ClientCertificate">
      <summary>Возвращает объект, который можно использовать для предоставления сертификата X.509, используемого клиентом для проверки подлинности службы. </summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />, представляющая сертификат клиента. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Создает новую копию этого экземпляра <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Создает новую копию этого экземпляра <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CreateSecurityTokenManager">
      <summary>Создает диспетчер маркера безопасности для этого экземпляра.Этот метод редко вызывается явным образом, в основном он используется в сценариях расширяемости и вызывается самой системой.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> для этого экземпляра <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.GetInfoCardSecurityToken(System.Boolean,System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Создает и возвращает маркер безопасности с помощью системы  и заданной цепочки политики и сериализатора маркера.</summary>
      <returns>Маркер <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />, представляющий созданный маркер безопасности.Возвращает значение null, если <paramref name="requiresInfoCard" /> имеет значение false.</returns>
      <param name="requiresInfoCard">Значение, определяющее необходимость .</param>
      <param name="chain">Массив <see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" />, описывающий федеративную цепочку безопасности, требуемую клиентом для очистки последнего маркера.</param>
      <param name="tokenSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, который может читать предложение KeyInfo.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Возвращает текущую учетную запись дайджест-проверки подлинности HTTP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" />, представляющий учетную запись, используемую клиентом для проверки подлинности службы при выбранном способе дайджест-проверки подлинности HTTP. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.IssuedToken">
      <summary>Используйте это свойство, чтобы задать адрес конечной точки и привязку для использования при контакте с локальной службой маркеров безопасности.Эти сведения используются, когда для службы требуется проверка подлинности с помощью выданного маркера, но политика службы (представленная как привязка для клиента) явно не задает, как и где получить выданный маркер.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.IssuedTokenClientCredential" />, задающий параметры для использования для получения маркера из локальной службы маркеров безопасности. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Peer">
      <summary>Контролирует учетные данные, используемые одноранговым узлом для проверки подлинности самого себя для других узлов в сетке, а также параметры проверки подлинности, используемые одноранговым узлом для проверки подлинности других одноранговых узлов. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.PeerCredential" />, представляющий текущую одноранговую учетную запись.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate">
      <summary>Возвращает объект, используемый для задания сертификата X.509 службы. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />, представляющий сертификат для использования для определенной службы. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.SupportInteractive">
      <summary>Возвращает или задает значение, указывающее, позволено ли системе при необходимости запрашивать ввод учетных данных пользователя в интерактивном режиме.Например, задание значения false может быть полезным в сценариях среднего уровня.</summary>
      <returns>Значение true, если учетные данные поддерживают интерактивный режим, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет этот экземпляр этого класса к коллекции параметров привязки.</summary>
      <param name="serviceEndpoint">Добавляемый объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
      <param name="bindingParameters">Коллекция параметров привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"></member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Зарезервировано для последующего использования.</summary>
      <param name="serviceEndpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который требуется проверить.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Возвращает объект учетных данных, который можно использовать для задания имени пользователя и пароля, используемого клиентом для проверки подлинности самого себя для службы. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />, представляющий текущую учетную запись UserName.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Возвращает объект, используемый, чтобы контролировать учетные данные Windows, используемые клиентом для проверки подлинности самого себя для службы. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.WindowsClientCredential" />, представляющий текущую учетную запись Windows.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientViaBehavior">
      <summary>
        <see cref="T:System.ServiceModel.Description.ClientViaBehavior" /> используется клиентами, чтобы указать универсальный код ресурса (URI), для которого необходимо создать канал транспорта. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ClientViaBehavior" />.</summary>
      <param name="uri">Универсальный код ресурса (URI), для которого необходимо создать канал транспорта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализуется.</summary>
      <param name="serviceEndpoint">Конечная точка службы.</param>
      <param name="bindingParameters">Параметры привязки, которые необходимо применить к конечной точке службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Задает <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" /> для универсального кода ресурса (URI), для которого создается канал транспорта.</summary>
      <param name="serviceEndpoint">Конечная точка службы.</param>
      <param name="behavior">
        <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, для которого необходимо применение заданных расширений функциональности клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализует изменение или оснастку расширения службы на протяжении всей конечной точки.</summary>
      <param name="serviceEndpoint">Конечная точка службы, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Изменяемый диспетчер конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Не реализуется.</summary>
      <param name="serviceEndpoint">Конечная точка службы, предоставляющая контракт.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientViaBehavior.Uri">
      <summary>Получает или задает универсальный код ресурса (URI), для которого необходимо создать канал транспорта.</summary>
      <returns>Универсальный код ресурса (URI), для которого необходимо создать канал транспорта.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Описывает контракт , который указывает, чем конечная точка обменивается с внешним миром.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ContractDescription" /> с заданным именем.</summary>
      <param name="name">Имя контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> пуст.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ContractDescription" /> с именем, для которого указано пространство имен.</summary>
      <param name="name">Имя контракта.</param>
      <param name="ns">Пространство имен, которое содержит имя контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Behaviors">
      <summary>Возвращает поведения, связанные с описанием контракта.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> типа <see cref="T:System.ServiceModel.Description.IContractBehavior" />, связанный с описанием контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Возвращает или задает тип контракта обратного вызова, указанного в описании контракта.</summary>
      <returns>Объект <see cref="T:System.Type" /> контракта обратного вызова, который задается в описании контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Возвращает или задает имя конфигурации для описания контракта.</summary>
      <returns>Имя конфигурации для контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Возвращает или задает тип контракта, указанный в описании контракта.</summary>
      <returns>Тип <see cref="T:System.Type" /> контракта, который задается в описании контракта.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type)">
      <summary>Возвращает описание для указанного типа контракта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> типа для указанного типа контракта.</returns>
      <param name="contractType">
        <see cref="T:System.Type" /> контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type,System.Object)">
      <summary>Возвращает описание контракта для указанного типа контракта и реализации службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для указанного типа контракта и реализации службы.</returns>
      <param name="contractType">
        <see cref="T:System.Type" /> контракта.</param>
      <param name="serviceImplementation">Объект <see cref="T:System.Object" />, реализующий службу.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type,System.Type)">
      <summary>Возвращает описание контракта для указанного типа контракта и указанного типа службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для указанного типа контракта и типа службы.</returns>
      <param name="contractType">
        <see cref="T:System.Type" /> контракта.</param>
      <param name="serviceType">Объект <see cref="T:System.Type" /> службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetInheritedContracts">
      <summary>Возвращает коллекцию описаний контракта, наследуемых текущим описанием контракта.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.ContractDescription" />, наследуемый текущим описанием контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, установлен ли для контракта уровень защиты.</summary>
      <returns>Значение true, если уровень защиты установлен; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Возвращает или задает имя контракта.</summary>
      <returns>Имя описания контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Возвращает или задает пространство имен для контракта.</summary>
      <returns>Пространство имен контракта.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение: null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Возвращает коллекцию описаний операций, связанных с контрактом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />, который содержит описания операций, связанные с описанием контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ProtectionLevel">
      <summary>Возвращает или задает уровень защиты, связанной с контрактом.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" /> для операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.SessionMode">
      <summary>Возвращает или задает значение, указывающее, требуется ли контракту сеанс.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.SessionMode" />, который задает поддержку для надежных сеансов, которые требует или поддерживает контракт.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.ShouldSerializeProtectionLevel">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.ContractDescription.ProtectionLevel" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.ContractDescription.ProtectionLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerMessageContractImporter">
      <summary>Обрабатывает импорт сообщений контракта данных из документов WSDL.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DataContractSerializerMessageContractImporter" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.Enabled">
      <summary>Возвращает или задает значение, указывающее, включен ли импорт сообщений.</summary>
      <returns>Значение true, если импорт включен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Задает описание службы и набор схем для импорта набора документов WSDL.</summary>
      <param name="wsdlDocuments">
        <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />, представляющий документы WSDL для проверки.</param>
      <param name="xmlSchemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, представляющий схемы для использования при преобразовании сообщений.</param>
      <param name="policy">
        <see cref="T:System.Collections.Generic.ICollection`1" />, где содержатся документы политики для использования при импорте сообщений.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Импортирует контракт сообщения из документа WSDL.</summary>
      <param name="importer">
        <see cref="T:System.ServiceModel.Description.WsdlImporter" /> для использования при импорте.</param>
      <param name="contractContext">
        <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, представляющий контекст контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Преобразовывает документ WSDL из заданной конечной точки.</summary>
      <param name="importer">
        <see cref="T:System.ServiceModel.Description.WsdlImporter" /> для использования при импорте.</param>
      <param name="endpointContext">
        <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />, используемый для определения конечной точки.</param>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Представляет поведение времени выполнения <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> с заданным описанием операций.</summary>
      <param name="operation">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> с указанным описанием операций и форматом контракта данных.</summary>
      <param name="operation">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию.</param>
      <param name="dataContractFormatAttribute">Возвращает атрибут <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, используемый для управления процессом сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Создает экземпляр класса, производного от <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, для процессов сериализации и десериализации.</summary>
      <returns>Экземпляр класса, производного от класса <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для создания сериализатора.</param>
      <param name="name">Имя созданного типа.</param>
      <param name="ns">Пространство имен создаваемого типа.</param>
      <param name="knownTypes">Объект <see cref="T:System.Collections.Generic.IList`1" /> коллекции <see cref="T:System.Type" />, в которой содержатся известные типы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Создает экземпляр класса, который наследует от <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, для процессов сериализации и десериализации с <see cref="T:System.Xml.XmlDictionaryString" />, где содержится пространство имен.</summary>
      <returns>Экземпляр класса, производного от класса <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</returns>
      <param name="type">Тип для сериализации или десериализации.</param>
      <param name="name">Имя сериализованного типа.</param>
      <param name="ns">
        <see cref="T:System.Xml.XmlDictionaryString" />, где содержится пространство имен сериализованного типа.</param>
      <param name="knownTypes">Объект <see cref="T:System.Collections.Generic.IList`1" /> коллекции <see cref="T:System.Type" />, в которой содержатся известные типы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, связанный с операцией.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, связанный с операцией.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Возвращает или задает реализацию <see cref="T:System.Runtime.Serialization.DataContractResolver" />, используемую для динамического сопоставления типов в процессах сериализации и десериализации. </summary>
      <returns>Тип: <see cref="T:System.Runtime.Serialization.DataContractResolver" />Класс, сопоставляющий xsi:type с известным типом контракта данных.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractSurrogate">
      <summary>Возвращает или задает суррогат для использования в процессах сериализации и десериализации.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />, используемый как подстановочный сериализатор.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.IgnoreExtensionDataObject">
      <summary>Возвращает или задает значение, указывающее, пропускается ли данные, предоставленные расширением типа (которые в связи с этим не находятся в контракте данных).</summary>
      <returns>Значение true для пропуска данных, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Возвращает или задает максимальное количество элементов в графе объекта для сериализации или десериализации.</summary>
      <returns>Максимальное количество элементов в графе объекта для сериализации или десериализации.Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет коллекцию параметров в поведение. </summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> для добавления параметров.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, где содержатся параметры для добавления.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Прикрепляет поведение клиента к операции.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию.</param>
      <param name="proxy">
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, представляющий клиент.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Применяет поведение к операции.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию.</param>
      <param name="dispatch">
        <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> для прикрепления к поведению.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Проверяет операцию.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Экспортирует WSDL-представление операции.</summary>
      <param name="exporter">
        <see cref="T:System.ServiceModel.Description.WsdlExporter" />, используемый для экспорта.</param>
      <param name="contractContext">
        <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> для языка WSDL.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Экспортирует описание конечной точки как документ WSDL.</summary>
      <param name="exporter">
        <see cref="T:System.ServiceModel.Description.WsdlExporter" />, используемый для экспорта.</param>
      <param name="endpointContext">
        <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> для языка WSDL.</param>
    </member>
    <member name="T:System.ServiceModel.Description.DispatcherSynchronizationBehavior">
      <summary>Поведение конечной точки, которое позволяет службе  отправлять ответы в асинхронном режиме.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DispatcherSynchronizationBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.#ctor(System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DispatcherSynchronizationBehavior" />.</summary>
      <param name="asynchronousSendEnabled">Значение, указывающее, включено ли поведение, которое позволяет отправлять ответы в асинхронном режиме.</param>
      <param name="maxPendingReceives">Значение, указывающее максимальное количество ожидаемых операций получения.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DispatcherSynchronizationBehavior.AsynchronousSendEnabled">
      <summary>Возвращает или задает значение, указывающее, включено ли поведение, обеспечивающее отправку в асинхронном режиме.</summary>
      <returns>Значение true, если поведение, обеспечивающее отправку в асинхронном режиме, включено; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DispatcherSynchronizationBehavior.MaxPendingReceives">
      <summary>Возвращает или задает максимальное число операций получения, которые можно обрабатывать одновременно.</summary>
      <returns>Максимальное число операций получения, которые можно обрабатывать одновременно.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Передает данные во время выполнения, что позволяет привязкам поддерживать поведение, обеспечивающее отправку в асинхронном режиме.</summary>
      <param name="serviceEndpoint">Изменяемая конечная точка.</param>
      <param name="parameters">Параметры, необходимые элементам привязки для реализации данного поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует изменение или расширение клиента по всей конечной точке, что обеспечивает отправку в асинхронном режиме.</summary>
      <param name="serviceEndpoint">Изменяемая конечная точка.</param>
      <param name="behavior">Клиентская среда выполнения для изменения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализует изменение или расширение службы по всей конечной точке, что обеспечивает отправку в асинхронном режиме.</summary>
      <param name="serviceEndpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Изменяемый или расширяемый диспетчер конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DispatcherSynchronizationBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Проверяет соответствие конечной точки критериям, обязательным для включения поведения, обеспечивающего отправку в асинхронном режиме.</summary>
      <param name="serviceEndpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Представляет ошибку SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.FaultDescription" />, используя указанное значение действия.</summary>
      <param name="action">Действие сообщения об ошибке SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Значение действия в сообщении об ошибке SOAP.</summary>
      <returns>Действие ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Тип сведений об ошибке SOAP.</summary>
      <returns>Тип сериализуемого объекта сведений.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, присвоен ли сообщению об ошибке уровень защиты.</summary>
      <returns>Значение true, если сообщению об ошибке присвоен уровень защиты; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Возвращает или задает имя ошибки SOAP.</summary>
      <returns>Имя ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Возвращает или задает пространство имен ошибки SOAP.</summary>
      <returns>Пространство имен ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.ProtectionLevel">
      <summary>Задает уровень защиты, который требуется от привязки для ошибки SOAP.</summary>
      <returns>Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.ShouldSerializeProtectionLevel">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.FaultDescription.ProtectionLevel" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.FaultDescription.ProtectionLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.Description.FaultDescription" />, которые можно использовать для получения сведений о сбоях протокола SOAP в контракте.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescriptionCollection.Find(System.String)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.FaultDescription" />, в котором имеется заданное значение действия.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.FaultDescription" />, в котором имеется заданное действие, или null.Если одно действие содержится в нескольких объектах <see cref="T:System.ServiceModel.Description.FaultDescription" />, возвращается первый объект в коллекции.</returns>
      <param name="action">Значение действия сбоя протокола SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescriptionCollection.FindAll(System.String)">
      <summary>Возвращает все объекты <see cref="T:System.ServiceModel.Description.FaultDescription" />, в которых имеется заданное значение действия.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.FaultDescription" />, в которой имеется заданное действие.При отсутствии объектов <see cref="T:System.ServiceModel.Description.FaultDescription" /> с действием возвращается пустая коллекция.</returns>
      <param name="action">Значение действия сбоя протокола SOAP.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Реализует методы, которые могут использоваться для расширения поведения времени выполнения для контракта приложения службы или клиентского приложения.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Настраивает элементы привязки для поддержки поведения контракта.</summary>
      <param name="contractDescription">Изменяемое описание контракта.</param>
      <param name="endpoint">Изменяемая конечная точка.</param>
      <param name="bindingParameters">Объекты, необходимые элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует изменение или расширение клиента для всего контракта.</summary>
      <param name="contractDescription">Описание контакта, для которого предназначено расширение.</param>
      <param name="endpoint">Конечная точка.</param>
      <param name="clientRuntime">Среда выполнения клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Реализует изменение или расширение клиента для всего контракта.</summary>
      <param name="contractDescription">Изменяемое описание контракта.</param>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="dispatchRuntime">Среда выполнения распределения, которая контролирует выполнение службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Реализуется для подтверждения того, что контракт и конечная точка могут поддерживать поведение контракта.</summary>
      <param name="contractDescription">Контракт, который необходимо проверить.</param>
      <param name="endpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehaviorAttribute">
      <summary>Задает контракт, для которого активен атрибут, реализующий интерфейс <see cref="T:System.ServiceModel.Description.IContractBehavior" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
      <summary>Получает тип контракта, к которому могут применяться расширения функциональности контракта.</summary>
      <returns>Контракт, к которому могут применяться расширения функциональности контракта.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Реализует методы, которые могут использоваться для расширения поведения времени выполнения для конечной точки службы или клиентского приложения.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Рекомендуется реализовать для передачи данных в среде выполнения привязкам для поддержки настраиваемых поведений.</summary>
      <param name="endpoint">Изменяемая конечная точка.</param>
      <param name="bindingParameters">Объекты, необходимые элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует изменение или оснастку расширения клиента на протяжении всей конечной точки.</summary>
      <param name="endpoint">Настраиваемая конечная точка.</param>
      <param name="clientRuntime">Настраиваемая клиентская среда выполнения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Реализует изменение или оснастку расширения службы на протяжении всей конечной точки.</summary>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Изменяемый или расширяемый диспетчер конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Рекомендуется реализовать, чтобы подтвердить соответствие конечной точки определенным критериям.</summary>
      <param name="endpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IMetadataExchange">
      <summary>Предоставляет методы, используемые для возвращения метаданных о службе.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.BeginGet(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронное получение метаданных.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />, который можно передать методу <see cref="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" />.</returns>
      <param name="request">
        <see cref="T:System.ServiceModel.Channels.Message" />, который следует обработать для определения метаданных, подлежащих возвращению.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" />, указывающий на метод, который будет обрабатывать метаданные.</param>
      <param name="state">Любые данные, позволяющие вызывающему объекту определить, какой асинхронный вызов возвращается.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)">
      <summary>Завершает получение метаданных.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" />, содержащий обработанные метаданные.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" />, который содержит данные, используемые для дальнейшей обработки метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.Get(System.ServiceModel.Channels.Message)">
      <summary>Возвращает метаданные службы.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.Message" />, в которой содержатся метаданные.</returns>
      <param name="request">Коллекция <see cref="T:System.ServiceModel.Channels.Message" />, которая содержит запрос для метаданных.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Реализует методы, которые могут использоваться для поведения во время выполнения для операции в службе или клиентском приложении.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Рекомендуется реализовать для передачи данных в среде выполнения привязкам для поддержки настраиваемых поведений.</summary>
      <param name="operationDescription">Проверяемая операция.Использовать только для проверки.Если изменяется описание операции, то результаты будут не определены.</param>
      <param name="bindingParameters">Коллекция объектов, необходимых элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Реализует изменение или расширение клиента во всей операции.</summary>
      <param name="operationDescription">Проверяемая операция.Использовать только для проверки.Если изменяется описание операции, то результаты будут не определены.</param>
      <param name="clientOperation">Объект времени выполнения, предоставляющий свойства настройки для операции, описываемой объектом <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует изменение или расширение службы во всей операции.</summary>
      <param name="operationDescription">Проверяемая операция.Использовать только для проверки.Если изменяется описание операции, то результаты будут не определены.</param>
      <param name="dispatchOperation">Объект времени выполнения, предоставляющий свойства настройки для операции, описываемой объектом <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Реализуйте, чтобы подтвердить соответствие операции определенным критериям.</summary>
      <param name="operationDescription">Проверяемая операция.Использовать только для проверки.Если изменяется описание операции, то результаты будут не определены.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationContractGenerationExtension">
      <summary>Определяет методы, вызываемые при создании контракта, которые могут использоваться, чтобы изменить создаваемый для операции код.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)">
      <summary>Рекомендуется реализовать, чтобы изменить документную объектную модель кода до процесса создания контракта.</summary>
      <param name="context">Рабочий контекст, который содержит типы<see cref="N:System.CodeDom" />, необходимые для изменения создаваемой операции.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IPolicyExportExtension">
      <summary>Реализуйте <see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /> для вставки настраиваемых утверждений политики привязки в сведениях о языке описания служб (SDL).</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Реализация необходима для включения для экспорта утверждения настраиваемой политики о привязках.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, который можно использовать для изменения процесса экспорта.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, который можно использовать для вставки утверждения пользовательской политики.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IPolicyImportExtension">
      <summary>Определяет метод для объектов, которые импортируют утверждения настраиваемой политики о привязках.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Определяет метод, который может импортировать утверждения пользовательской политики и добавлять реализующие элементы привязки.</summary>
      <param name="importer">Используемый объект <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</param>
      <param name="context">Объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, содержащий как утверждения политики, которые могут быть импортированы, так и коллекции элементов привязки, в которые могут быть добавлены реализующие элементы привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IServiceBehavior">
      <summary>Предоставляет механизм для изменения или вставки настраиваемых расширений в целые службы, включая <see cref="T:System.ServiceModel.ServiceHostBase" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Предоставляет возможности передачи настраиваемых данных в элементы привязки для предоставления поддержки реализации контракта.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <param name="endpoints">Конечные точки службы.</param>
      <param name="bindingParameters">Настраиваемые объекты, к которым имеют доступ элементы привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Предоставляет возможности для изменения значений свойства времени выполнения или для вставки объектов настраиваемых расширений, например, обработчиков ошибок, перехватчиков параметров или сообщений, а также других объектов настраиваемых расширений.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение, построение которого выполняется в настоящее время.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Предоставляет возможности проверки основного приложения и описания службы, чтобы подтвердить готовность службы.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение службы, которое создается в настоящий момент.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IServiceContractGenerationExtension">
      <summary>Определяет методы, вызываемые при создании контракта, которые могут использоваться, чтобы изменить создаваемый для контракта службы код.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)">
      <summary>Рекомендуется реализовать, чтобы изменить документную объектную модель кода до процесса создания контракта.</summary>
      <param name="context">Код создал контекст для использования для изменения документа кода до создания.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IWsdlExportExtension">
      <summary>Определяет поведение конечной точки или контракта, которое может экспортировать настраиваемые метаданные.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для контракта.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
      <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для конечной точки.</summary>
      <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о конечной точке.</param>
      <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию конечной точки.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IWsdlImportExtension">
      <summary>Реализация и присоединение к объекту <see cref="T:System.ServiceModel.Description.WsdlImporter" /> служит для управления способами, которыми средства импорта сопоставляют части WSDL с частями объекта <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Вызывает перед импортом документов метаданных.</summary>
      <param name="wsdlDocuments">Описания службы, которые требуется изменить.</param>
      <param name="xmlSchemas">Коллекция схемы, используемая при импорте.</param>
      <param name="policy">Операторы контроля, используемые при импорте.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Вызывается при импорте контракта.</summary>
      <param name="importer">Средство импортирования.</param>
      <param name="context">Контекст импортирования, который требуется изменить.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Вызывается при импорте конечной точки.</summary>
      <param name="importer">Средство импортирования.</param>
      <param name="context">Контекст импортирования, который требуется изменить.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ListenUriMode">
      <summary>Указывает, должен ли транспорт обеспечить уникальность универсального кода ресурса (URI), предоставляемого для службы, ожидающей передачи данных, уникальным или URI может быть использован без изменений.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ListenUriMode.Explicit">
      <summary>Использует <see cref="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" /> в том виде, в котором он предоставлен.Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ListenUriMode.Unique">
      <summary>Указывает, что транспорт должен использовать механизм, зависящий от транспорта, чтобы обеспечить уникальность <see cref="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Представляет текст сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Возвращает части для текста сообщения SOAP.</summary>
      <returns>Части текста, которые можно проверить или изменить.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Возвращает или задает часть сообщения SOAP, которая содержит возвращаемое значения.</summary>
      <returns>Возвращаемое значение, если таковое имеется.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Возвращает или задает имя элемента программы-оболочки внутри элемента текста SOAP, если таковой имеется.</summary>
      <returns>Элемент программы-оболочки, если таковой имеется.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Возвращает или задает пространство имен элемента программы-оболочки в тексте SOAP, если таковое имеется.</summary>
      <returns>Пространство имен элемента программы-оболочки, если таковое имеется.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Представляет описание сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessageDescription" /> с указанным действием или направлением.</summary>
      <param name="action">Параметр действия сообщения SOAP, определяющий цель сообщения.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />, если сообщение является входящим, или <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />, если сообщение является исходящим.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением параметра <paramref name="direction" /> не является ни <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />, ни <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Возвращает или задает параметр действия сообщения SOAP, определяющий цель сообщения.</summary>
      <returns>Экземпляр <see cref="T:System.String" />, в котором содержится универсальный код ресурса (URI) действия.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Возвращает текст сообщения SOAP.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, содержащее основную часть сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Возвращает направление, указывающее, является ли сообщение входящим или исходящим.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" />, указывающее, является ли сообщение входящим в службу или исходящим из нее.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, было ли задано значение <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" />.</summary>
      <returns>Значение true, если был задан объект <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Возвращает описание заголовков сообщения SOAP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" />, содержащий описания заголовков сообщения SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Возвращает или задает тип, определяющий тип контракта сообщения.</summary>
      <returns>
        <see cref="T:System.Type" />, определяющий тип контракта сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Возвращает описание свойств сообщения SOAP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" />, содержащий описания свойств сообщения SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel">
      <summary>Возвращает или задает службы безопасности, необходимые для сообщения. </summary>
      <returns>Значение <see cref="T:System.Net.Security.ProtectionLevel" />, задавшее службы безопасности, необходимые для сообщения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение является недопустимым значением для <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.ShouldSerializeProtectionLevel">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Предоставляет коллекцию, которая используется для хранения описаний сообщений, составляющих операцию, относящуюся к контракту.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Ищет и возвращает описание первого сообщения в коллекции для сообщения с заданным действием.</summary>
      <returns>Первое описание <see cref="T:System.ServiceModel.Description.MessageDescription" /> из коллекции, сообщение которой имеет заданное действие <paramref name="action" />, и значение null, если совпадающих <paramref name="action" /> не обнаружено.</returns>
      <param name="action">Действие найденного сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Ищет и возвращает все описания сообщений в коллекции, сообщения которых имеют заданное действие.</summary>
      <returns>Объект коллекции <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, который содержит описания сообщений из текущей коллекции, сообщения которых имеют заданное <paramref name="action" />.Если соответствующие объекты <see cref="T:System.ServiceModel.Description.MessageDescription" /> не найдены, возвращается пустая коллекция.</returns>
      <param name="action">Действие найденных сообщений.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Задает направление сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Сообщение является входящим сообщением.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Сообщение является исходящим сообщением.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Представляет заголовок сообщения протокола SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> с указанным полным именем.</summary>
      <param name="name">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Возвращает или устанавливает предполагаемого получателя заголовка сообщения.</summary>
      <returns>Универсальный код ресурса (URI), который указывает предполагаемого получателя заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Возвращает или устанавливает значение, указывающее, должен ли заголовок соответствовать спецификации протокола SOAP версий 1.1 и 1.2.</summary>
      <returns>Значение true, если обработка заголовка сообщения обязательна; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Возвращает значение, указывающее, требуется ли ретранслировать заголовок.</summary>
      <returns>Значение true, если заголовок сообщения может ретранслироваться; в противном случае — значение false.Значение по умолчанию — «false», в соответствие со спецификацией протокола SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Возвращает или задает значение, показывающее, является ли заголовок сообщения заголовком контракта сообщения.</summary>
      <returns>Значение true, если заголовок сообщения является заголовком контракта сообщения; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>При вызове из производного класса возвращает <see cref="T:System.Xml.XmlQualifiedName" /> для заголовка сообщения.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> заголовка сообщения.</returns>
      <param name="item">Искомый объект <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Представляет описание части сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessagePartDescription" />. </summary>
      <param name="name">Имя XML части сообщения.</param>
      <param name="ns">Пространство имен XML части сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.HasProtectionLevel">
      <summary>Получает значение, указывающее, содержит ли часть сообщения значение для свойства <see cref="P:System.ServiceModel.Description.MessagePartDescription.ProtectionLevel" />.</summary>
      <returns>Значение true, если часть сообщения содержит значение <see cref="T:System.Net.Security.ProtectionLevel" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Возвращает или задает индекс части сообщения.</summary>
      <returns>Индекс части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Возвращает или задает сведения о членстве для части сообщения.</summary>
      <returns>Сведения о членстве для данной части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Получает или задает значение, определяющее, может ли часть сообщения встречаться в сообщении несколько раз.</summary>
      <returns>Значение true, если часть сообщения может встречаться в сообщении несколько раз; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Возвращает или задает имя части сообщения.</summary>
      <returns>Имя части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Возвращает или задает пространство имен части сообщения.</summary>
      <returns>Пространство имен части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.ProtectionLevel">
      <summary>Получает или задает <see cref="T:System.Net.Security.ProtectionLevel" /> части сообщения.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" /> части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Возвращает или задает тип части сообщения.</summary>
      <returns>Тип части сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>При вызове из производного класса возвращает <see cref="T:System.Xml.XmlQualifiedName" /> для <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>Тип <see cref="T:System.Xml.XmlQualifiedName" /> объекта <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Искомый объект <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Представляет свойство сообщения, заданное с помощью <see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />. </summary>
      <param name="name">Имя свойства.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlQualifiedName" /> для <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <returns>Тип <see cref="T:System.Xml.XmlQualifiedName" /> объекта <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">Искомый объект <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataConversionError">
      <summary>Представляет ошибку или событие предупреждения, которое возникло во время использования <see cref="T:System.ServiceModel.Description.MetadataExporter" /> или <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataConversionError" />, используя указанное сообщение. </summary>
      <param name="message">Сообщение об ошибке или предупреждающее сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataConversionError" />, используя указанное сообщение и значение <paramref name="isWarning" />. </summary>
      <param name="message">Сообщение для предупреждения или ошибки.</param>
      <param name="isWarning">Является ли <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> ошибкой или предупреждением.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, имеют ли два объекта <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> равные значения.</summary>
      <returns>Значение true, если два объекта <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> имеют равные значения; в противном случае — значение false.</returns>
      <param name="obj">Объект, с которым сравнивается этот объект.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.GetHashCode">
      <summary>Возвращает значение, которое служит хэш-функцией для объекта <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</summary>
      <returns>Значение применимо в алгоритмах и структурах данных хэширования, например в хэш-таблицах.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataConversionError.IsWarning">
      <summary>Возвращает значение, указывающее, является ли объект <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> предупреждением или ошибкой.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> должен считаться предупреждением; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataConversionError.Message">
      <summary>Возвращает сообщение об ошибке или предупреждающее сообщение.</summary>
      <returns>Сообщение для <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeBindings">
      <summary>Используется для создания предоставляемых системой привязок для обмена метаданными WS-Transfer с помощью контракта <see cref="T:System.ServiceModel.Description.IMetadataExchange" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexHttpBinding">
      <summary>Возвращает <see cref="T:System.ServiceModel.WSHttpBinding" /> с отключенной безопасностью.</summary>
      <returns>
        <see cref="T:System.ServiceModel.WSHttpBinding" /> с отключенной безопасностью. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexHttpsBinding">
      <summary>Возвращает <see cref="T:System.ServiceModel.WSHttpBinding" /> с поддержкой безопасности уровня транспорта.</summary>
      <returns>
        <see cref="T:System.ServiceModel.WSHttpBinding" /> с поддержкой безопасности уровня транспорта.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexNamedPipeBinding">
      <summary>Возвращает <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexTcpBinding">
      <summary>Возвращает <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeClient">
      <summary>Загружает метаданные службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, используя указанную привязку.</summary>
      <param name="mexBinding">Привязка, используемая при получении метаданных с помощью WS-Transfer.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />. </summary>
      <param name="address">Адрес метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />. </summary>
      <param name="endpointConfigurationName">Имя данных конфигурации конечной точки, используемых при загрузке метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />. </summary>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим, используемый при загрузке метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов метода, который возвращает <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>Метаданные.</returns>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов метода, который возвращает <see cref="T:System.ServiceModel.Description.MetadataSet" /> с использованием заданного адреса, обратного вызова и асинхронного состояния.</summary>
      <returns>Метаданные, полученные по заданному <paramref name="address" />.</returns>
      <param name="address">Адрес метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов метода, который возвращает <see cref="T:System.ServiceModel.Description.MetadataSet" /> с использованием заданного адреса, обратного вызова, асинхронного состояния и механизма загрузки.</summary>
      <returns>Метаданные, полученные по заданному <paramref name="address" />.</returns>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Значение <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, используемое при загрузке метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)">
      <summary>Завершает асинхронный вызов метода, который возвращает <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MetadataSet" />, содержащий загруженные метаданные.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, полученный из вызова метода <see cref="Overload:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)">
      <summary>При переопределении в производном классе возвращает фабрику каналов, используемую для выполнения запроса к метаданным WS-Transfer.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.ChannelFactory`1" /> типа <see cref="T:System.ServiceModel.Channels.IRequestChannel" />, которая делает запрос к метаданным WS-Transfer.</returns>
      <param name="metadataAddress">Адрес метаданных.</param>
      <param name="dialect">Диалект метаданных.</param>
      <param name="identifier">Идентификатор метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata">
      <summary>Возвращает<see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MetadataSet" />, содержащий загруженные метаданные.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.MetadataSet" /> из указанного адреса.</summary>
      <returns>Метаданные, находящиеся по <paramref name="address" />.</returns>
      <param name="address">Адрес, откуда производится загрузка метаданных.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.MetadataSet" /> из указанного адреса и по указанному маршруту.</summary>
      <returns>Загруженные метаданные.</returns>
      <param name="address">Адрес, откуда производится загрузка метаданных.</param>
      <param name="via">URI-адрес, представляющий маршрут сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.MetadataSet" /> из указанного адреса с использованием заданного режима загрузки.</summary>
      <returns>Загруженные метаданные.</returns>
      <param name="address">Адрес, откуда производится загрузка метаданных.</param>
      <param name="mode">Используемый механизм загрузки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)">
      <summary>При переопределении в производном классе возвращает <see cref="T:System.Net.HttpWebRequest" />, используемый для выполнения запросов к метаданным HTTP/GET.</summary>
      <returns>Внутренний <see cref="T:System.Net.HttpWebRequest" />, используемый для выполнения запросов к метаданным HTTP GET.</returns>
      <param name="location">Расположение метаданных.</param>
      <param name="dialect">Диалект метаданных.</param>
      <param name="identifier">Идентификатор метаданных.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials">
      <summary>Возвращает или задает учетные данные, используемые для выполнения запроса HTTP/GET.</summary>
      <returns>Объект <see cref="T:System.Net.ICredentials" /> используется для установки учетных данных запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences">
      <summary>Возвращает или задает максимальное число ссылок на метаданные, которые загружает <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</summary>
      <returns>Количество ссылок на метаданные, которые разрешает <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.Значение по умолчанию — 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout">
      <summary>Возвращает или устанавливает период времени, в течение которого должны быть загружены метаданные, до возникновения исключения.</summary>
      <returns>Период, в течение которого должны быть загружены метаданные; значение по умолчанию — 1 минута.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences">
      <summary>Возвращает или задает значение, которое определяет, разрешаются ли ссылки на метаданные.</summary>
      <returns>Значение true, если ссылки на метаданные разрешаются; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials">
      <summary>Возвращает или задает учетные данные безопасности клиента, используемые для выполнения запроса к метаданным WS-Transfer.</summary>
      <returns>Учетные данные безопасности клиента, используемые для выполнения запроса к метаданным WS-Transfer.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeClientMode">
      <summary>Задает режим обмена, который используется для получения метаданных.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange">
      <summary>Используется запрос WS-Transfer Get.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MetadataExchangeClientMode.HttpGet">
      <summary>Используется запрос HTTP GET.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExporter">
      <summary>Экспортирует данные описания службы в метаданные.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.Errors">
      <summary>Возвращает коллекцию ошибок, которые возникли во время экспорта метаданных.</summary>
      <returns>Возникшие ошибки экспорта.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)">
      <summary>При переопределении в производном классе экспортирует описание контракта в метаданные. </summary>
      <param name="contract">Экспортируемый контракт.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>При переопределении в производном классе преобразует конечную точку в метаданные. </summary>
      <param name="endpoint">Преобразуемая конечная точка.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Преобразует утверждения политики в объект <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />. </summary>
      <returns>Объект, содержащий данные об утверждении политики для конечной точки.Утверждения политики могут затем быть внедрены в документ метаданных.</returns>
      <param name="endpoint">Конечная точка, из которой извлекаются утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata">
      <summary>При переопределении в производном классе возвращает метаданные, созданные вызовом к <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />, <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" /> или к <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" />. </summary>
      <returns>Перечисляемая коллекция объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />, которые содержат экспортированные метаданные.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.PolicyVersion">
      <summary>Задает версию используемой спецификации WS-Policy.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.State">
      <summary>Возвращает словарь объектов, использовавшихся при экспорте метаданных.</summary>
      <returns>Словарь объектов, использовавшихся средством импорта для экспорта контрактов и конечных точек.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataImporter">
      <summary>Импортирует метаданные в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.Errors">
      <summary>Возвращает значение, указывающее наличие ошибок при импорте метаданных.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
      <summary>При переопределении в производном классе возвращает коллекцию контрактов, импортированных из метаданных. </summary>
      <returns>Контракты, импортированные из метаданных.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
      <summary>При переопределении в производном классе возвращает все конечные точки в метаданных. </summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, опубликованных службой.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
      <summary>Возвращает словарь контрактов по имени, о котором знает средство импорта.</summary>
      <returns>Словарь контрактов, перечисленных по полному имени XML.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
      <summary>Возвращает коллекцию средств импорта политики, которые средство импорта вызывает для обработки утверждений политики.</summary>
      <returns>Коллекция средств импорта политики, которые <see cref="T:System.ServiceModel.Description.MetadataImporter" /> вызывает для обработки утверждений политики.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.State">
      <summary>Возвращает или задает коллекцию объектов, используемых при импорте метаданных.</summary>
      <returns>Словарь объектов, ключом которых является тип.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataImporterQuotas">
      <summary>Указывает квоты для средств импорта метаданных, производных от класса <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporterQuotas.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporterQuotas.Defaults">
      <summary>Получает набор квот по умолчанию для средств импорта метаданных.</summary>
      <returns>
Получает <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" />, который содержит набор квот по умолчанию для средств импорта метаданных.
</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporterQuotas.Max">
      <summary>Получает максимально допустимые значения квот для средств импорта метаданных.</summary>
      <returns>
Получает <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" />, который содержит максимально допустимые значения для средства импорта метаданных.
</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataLocation">
      <summary>Представляет адрес документов метаданных.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataLocation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataLocation" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataLocation.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataLocation" />, который присваивает заданное расположение метаданных свойству <see cref="P:System.ServiceModel.Description.MetadataLocation.Location" />. </summary>
      <param name="location">Адрес документов метаданных.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataLocation.Location">
      <summary>Возвращает или задает адрес документов метаданных.</summary>
      <returns>Адрес документов метаданных.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataReference">
      <summary>Представляет ссылку на документ метаданных, возвращаемых из конечной точки обмена метаданными.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataReference" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataReference" /> и указывает сетевой адрес и версию адреса конечной точки. </summary>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, который содержит универсальный код ресурса (URI) конечной точки.</param>
      <param name="addressVersion">Коллекция <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, которая содержит версию WS-Addressing, реализуемую конечной точкой.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataReference.Address">
      <summary>Получает или задает сетевой адрес службы, которая возвращает метаданные.</summary>
      <returns>Конечная точка, которая возвращает метаданные.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataReference.AddressVersion">
      <summary>Получает или задает версию, реализуемую или используемую конечной точкой.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, которая представляет версию, реализуемую или используемую конечной точкой.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Возвращает документ схемы XML для конечной точки ссылки метаданных.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Выполняет чтение с помощью предоставленного объекта средства чтения.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, используемый для чтения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Выполняет запись потока XML с помощью заданного объекта модуля записи.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, используемый для записи.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataResolver">
      <summary>Извлекает и импортирует метаданные как объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса и асинхронного состояния, и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения. </returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт или обратный вызов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один элемент параметра <paramref name="contracts" /> имеет значение null, или параметр <paramref name="contracts" /> содержит несколько контрактов с одинаковым именем и пространством имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, асинхронного состояния и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="client">
        <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт, клиент или обратный вызов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт или обратный вызов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /><see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <param name="client">
        <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт или обратный вызов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта, с помощью заданного адреса и асинхронного состояния, и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</returns>
      <param name="contract">Контракт, для которого требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт или обратный вызов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</returns>
      <param name="contract">Контракт, для которого требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <param name="callback">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</param>
      <param name="asyncState">Состояние, связанное с асинхронным вызовом.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, контракт или обратный вызов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)">
      <summary>Завершает асинхронный вызов для разрешения метаданных в коллекцию конечных точек.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для конечных точек, содержащихся в метаданных.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, полученный из вызова метода <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)">
      <summary>Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса метаданных.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <exception cref="T:System.ArgumentNullException">Адрес или коллекция контрактов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)">
      <summary>Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса метаданных и <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="client">
        <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, коллекция контрактов или клиент имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса и режима передачи.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <exception cref="T:System.ArgumentNullException">Адрес или коллекция контрактов имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)">
      <summary>Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса, режима передачи и клиента передачи.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contracts">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <param name="client">
        <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</param>
      <exception cref="T:System.ArgumentNullException">Адрес, коллекция контрактов или клиент имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)">
      <summary>Загружает и разрешает адрес метаданных в коллекцию объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта по заданному адресу.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contract">Контракты, для которых требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <exception cref="T:System.ArgumentNullException">Адрес или контракт имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта с помощью заданного адреса и режима передачи.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</returns>
      <param name="contract">Контракт, для которого требуется загрузить и разрешить метаданные.</param>
      <param name="address">Адрес метаданных.</param>
      <param name="mode">Режим получения.</param>
      <exception cref="T:System.ArgumentNullException">Адрес или контракт имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataSection">
      <summary>Представляет метаданные XML или ссылки на метаданные XML.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataSection" /> без диалекта, идентификатора и метаданных XML.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.#ctor(System.String,System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataSection" /> с использованием заданного диалекта, идентификатора и метаданных XML.</summary>
      <param name="dialect">Диалект метаданных.</param>
      <param name="identifier">Идентификатор метаданных.</param>
      <param name="metadata">Метаданные XML.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Attributes">
      <summary>Получает коллекцию атрибутов XML, которые можно использовать для добавления или удаления расширений атрибутов из метаданных.</summary>
      <returns>Коллекция XML-атрибутов для <see cref="T:System.ServiceModel.Description.MetadataSection" />.По умолчанию используется пустая коллекция.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromPolicy(System.Xml.XmlElement,System.String)">
      <summary>Создает <see cref="T:System.ServiceModel.Description.MetadataSection" /> из указанных сведений о политике.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MetadataSection" />, который содержит заданное выражение политики с указанным идентификатором.</returns>
      <param name="policy">Представление XML для политики, определенное в WS-Policy.</param>
      <param name="identifier">Идентификатор политики.</param>
      <exception cref="T:System.ArgumentException">Элемент XML не является элементом политики.</exception>
      <exception cref="T:System.ArgumentNullException">Политика имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromSchema(System.Xml.Schema.XmlSchema)">
      <summary>Создает <see cref="T:System.ServiceModel.Description.MetadataSection" /> из указанного объекта <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MetadataSection" />, содержащий заданную схему XML.</returns>
      <param name="schema">Документ схемы XML.</param>
      <exception cref="T:System.ArgumentNullException">Схема использует значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.MetadataSection" />, который содержит указанный <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MetadataSection" />, который содержит указанный <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="serviceDescription">
        <see cref="T:System.Web.Services.Description.ServiceDescription" />, используемый для создания нового объекта <see cref="T:System.ServiceModel.Description.MetadataSection" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serviceDescription" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Dialect">
      <summary>Получает или задает значение, указывающее тип метаданных.</summary>
      <returns>Диалект метаданных.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Identifier">
      <summary>Возвращает или задает идентификатор для метаданных.</summary>
      <returns>Идентификатор метаданных.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Metadata">
      <summary>Получает или задает вложенные объекты метаданных.</summary>
      <returns>Содержимое метаданных для этого <see cref="T:System.ServiceModel.Description.MetadataSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect">
      <summary>Содержит значение диалекта обмена метаданными.</summary>
      <returns>Диалект для документа WS-Metadata Exchange.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.PolicyDialect">
      <summary>Содержит значение диалекта WS-Policy.</summary>
      <returns>Диалект для выражения политики WS-Policy.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect">
      <summary>Содержит значение диалекта языка WSDL.</summary>
      <returns>Диалект для документа WSDL.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect">
      <summary>Содержит значение диалекта схемы XML.</summary>
      <returns>Диалект для документа схемы XML.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataSet">
      <summary>Представляет сериализуемую коллекцию метаданных службы в формате XML.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataSet" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.MetadataSection})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MetadataSet" />, содержащий указанную коллекцию объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />.</summary>
      <param name="sections">Значения метаданных, которые должен содержать объект <see cref="T:System.ServiceModel.Description.MetadataSet" />.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSet.Attributes">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Xml.XmlAttribute" />, которые представлены в сериализованной форме для <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>Объекты <see cref="T:System.Xml.XmlAttribute" />, которые представлены в сериализованной форме для <see cref="T:System.ServiceModel.Description.MetadataSet" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSet.MetadataSections">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />, представляющих метаданные.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />, представляющих метаданные.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.ReadFrom(System.Xml.XmlReader)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.MetadataSet" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MetadataSet" />, который содержит все метаданные, присутствующие в потоке XML.</returns>
      <param name="reader">Модуль чтения для чтения в формате XML.</param>
      <exception cref="T:System.ArgumentNullException">Модуль чтения равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> для предоставления поддержки сериализации.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> для поддержки десериализации из XML.</summary>
      <param name="reader">Модуль чтения, используемый при чтении XML.</param>
      <exception cref="T:System.ArgumentNullException">Модуль чтения равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> для поддержки сериализации в XML.</summary>
      <param name="writer">Модуль записи, используемый при записи XML.</param>
      <exception cref="T:System.ArgumentNullException">Модуль записи равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись <see cref="T:System.ServiceModel.Description.MetadataSet" /> в XML, используя заданный <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Модуль записи, используемый для записи XML.</param>
      <exception cref="T:System.ArgumentNullException">Модуль записи равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.MustUnderstandBehavior">
      <summary>Дает указания , чтобы отключить необязательную обработку заголовков за пределами коллекции <see cref="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders" />, которые должны быть понятными в соответствии со спецификациями протокола SOAP 1.1 и 1.2.  </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MustUnderstandBehavior" />, используя указанное значение. </summary>
      <param name="validate">Значение, указывающее, использовать ли принудительную проверку заголовков mustUnderstand.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Поддерживает функциональные возможности поведения.</summary>
      <param name="serviceEndpoint">Конечная точка, к которой применимо поведение.</param>
      <param name="bindingParameters">Параметры привязки для поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Присваивает значение <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> свойству <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />.</summary>
      <param name="serviceEndpoint">Конечная точка, к которой применимо поведение.</param>
      <param name="behavior">Среда выполнения клиента для задания.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Присваивает значение <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> свойству <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />.</summary>
      <param name="serviceEndpoint">Конечная точка, к которой применимо поведение.</param>
      <param name="endpointDispatcher">Диспетчер для задания.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Поддерживает функциональные возможности поведения.</summary>
      <param name="serviceEndpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand">
      <summary>Возвращает или задает значение, указывающее, гарантировать ли, что заголовок будет понятным в соответствии со спецификациями протокола SOAP 1.1 и 1.2.</summary>
      <returns>Значение true, если заголовок должен быть правильно обработан или возникнет ошибка; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationContractGenerationContext">
      <summary>Передается в метод <see cref="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" /> для разрешения изменения контракта операции и его контекста до создания кода.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ServiceContractGenerationContext,System.ServiceModel.Description.OperationDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" />, используя заданные генератор контракта, контекст контракта, описание операции, объявление типа кода и метод. </summary>
      <param name="serviceContractGenerator">Генератор контракта службы, который создает код.</param>
      <param name="contract">Контракт и его контекст создания.</param>
      <param name="operation">Описание операции для создаваемой операции.</param>
      <param name="declaringType">Тип объявляющего кода.</param>
      <param name="method">Создаваемый метод.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ServiceContractGenerationContext,System.ServiceModel.Description.OperationDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" />. </summary>
      <param name="serviceContractGenerator">Генератор контракта службы, который создает код.</param>
      <param name="contract">Контракт и его контекст создания.</param>
      <param name="operation">Описание операции для создаваемой операции.</param>
      <param name="declaringType">Тип объявляющего кода.</param>
      <param name="syncMethod">Синхронный метод.</param>
      <param name="beginMethod">Метод асинхронного начала.</param>
      <param name="endMethod">Метод асинхронного завершения.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.BeginMethod">
      <summary>Возвращает объект <see cref="T:System.CodeDom.CodeMemberMethod" /> для асинхронного начала операции.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeMemberMethod" /> для асинхронного начала операции.Возвращает null, если операция является синхронной.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.Contract">
      <summary>Возвращает контекст создания кода для контракта службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> для текущей операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.DeclaringType">
      <summary>Возвращает объявляющий тип для текущей операции.</summary>
      <returns>Объявляющий тип для текущей операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.EndMethod">
      <summary>Возвращает объявление операции асинхронного завершения.</summary>
      <returns>Операция асинхронного завершения.Возвращает null, если операция является синхронной.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.IsAsync">
      <summary>Возвращает значение, которое указывает, создаются ли асинхронные методы для текущей операции.</summary>
      <returns>Значение true, если операция является асинхронной; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.Operation">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.OperationDescription" /> для текущей операции.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.OperationDescription" /> для текущей операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.ServiceContractGenerator">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />, который создает текущую операцию.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />, который создает текущую операцию.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.SyncMethod">
      <summary>Возвращает объект <see cref="T:System.CodeDom.CodeMemberMethod" /> для синхронной операции.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeMemberMethod" /> для синхронной операции.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Представляет описание операции контракта, предоставляющее описание сообщений, составляющих операцию.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.OperationDescription" /> с заданным именем и описанием контракта.</summary>
      <param name="name">Имя описания операции.</param>
      <param name="declaringContract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, используемый для инициализации описания операции.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Возвращает или задает метод начала операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Behaviors">
      <summary>Возвращает или задает поведение операции, связанное с операцией.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />, содержащая объекты <see cref="T:System.ServiceModel.Description.IOperationBehavior" />, связанные с операцией.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Получает или задает контракт, к которому принадлежит операция.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> для операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Возвращает или задает метод завершения операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Возвращает описания ошибок, связанных с описанием операции.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />, который содержит сведения об ошибках, связанных с описанием операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.HasProtectionLevel">
      <summary>Возвращает значение, указывающее, установлен ли для операции уровень защиты.</summary>
      <returns>Значение true, если уровень защиты установлен; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsInitiating">
      <summary>Возвращает или задает значение, указывающее, реализует ли метод операцию, которая может инициировать сеанс на сервере (если такой сеанс существует). </summary>
      <returns>Значение true, если операции разрешено инициировать сеанс на сервере; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Возвращает или задает значение, указывающее, возвращает ли операция ответное сообщение.</summary>
      <returns>Значение true, если этот метод получает сообщение запроса и не возвращает ответное сообщение; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsTerminating">
      <summary>Возвращает или задает значение, указывающее, приводит ли операция службы к закрытию сеанса сервером после отправки ответного сообщения, если оно есть.</summary>
      <returns>Значение true, если операция приводит к закрытию сеанса сервером; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Возвращает известные типы, связанные с описанием операции.</summary>
      <returns>Коллекция известных типов, связанных с описанием операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Возвращает или задает описания сообщений, составляющих операцию.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, который содержит описания сообщений, составляющих операцию.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Возвращает или задает имя описания операции.</summary>
      <returns>Имя описания операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.ProtectionLevel">
      <summary>Возвращает или задает уровень защиты для операции.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" /> для операции.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.ShouldSerializeProtectionLevel">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.OperationDescription.ProtectionLevel" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.OperationDescription.ProtectionLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Возвращает или задает метод синхронизации службы описания операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Представляет коллекцию, в которой содержатся описания операций.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Возвращает описание операции с заданным именем из коллекции описаний операций.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.OperationDescription" /> с заданным именем.</returns>
      <param name="name">Имя операции.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Возвращает коллекцию всех описаний операций из коллекции с заданным именем.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.OperationDescription" />, который содержит описания операций с заданным именем.</returns>
      <param name="name">Имя операции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Вставляет элемент в коллекцию описания операции по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</param>
      <param name="item">Вставляемый объект <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="item" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Замещает элемент описания операции в коллекции по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</param>
      <param name="item">Вставляемый объект <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="item" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ParameterXPathQueryGenerator">
      <summary>Обеспечивает создание XPath из контракта данных.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>Создает XPath с помощью указанного имени операции, имени параметра и сведений о контракте данных.</summary>
      <returns>XPath, сформированный на основе указанного имени операции, имени параметра и сведений о контракте данных.</returns>
      <param name="serviceContractName">Имя XML-элемента контракта службы, который содержит пространство имен контракта службы.</param>
      <param name="operationName">Имя операции службы.</param>
      <param name="parameterName">Имя параметра операции службы.</param>
      <param name="isReply">Значение true, чтобы указать, что операцией службы является ответ; в противном случае — значение false.</param>
      <param name="type">Контракт данных.</param>
      <param name="pathToMember">Метаданные, сформированные с помощью метода <see cref="M:System.Type.GetMember(System.String)" /> класса <see cref="T:System.Type" />, указывающего определенный элемент данных, использованный для формирования запроса.</param>
      <param name="namespaces">Когда этот метод возвращает значение, он содержит пространства имен XML и их префиксы, встречающиеся в контракте данных.Создает экземпляр этого параметра прежде, чем передать его в данный метод.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyAssertionCollection">
      <summary>Содержит утверждения политики.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.PolicyAssertionCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.PolicyAssertionCollection" /> с помощью заданных объектов <see cref="T:System.Xml.XmlElement" />. </summary>
      <param name="elements">Утверждения политики, которые должны содержаться в коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Contains(System.String,System.String)">
      <summary>Возвращает значение, которое указывает, содержит ли коллекция заданное утверждение политики.</summary>
      <returns>Значение true, если коллекция содержит заданное утверждение; в противном случае — значение false.</returns>
      <param name="localName">Имя утверждения политики.</param>
      <param name="namespaceUri">Пространство имен утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Find(System.String,System.String)">
      <summary>Возвращает заданное утверждение политики.</summary>
      <returns>Заданное утверждение политики или значение null, если утверждение не удается найти.</returns>
      <param name="localName">Локальное имя утверждения политики.</param>
      <param name="namespaceUri">Пространство имен утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.FindAll(System.String,System.String)">
      <summary>Возвращает все заданные утверждения политики.</summary>
      <returns>Коллекция всех утверждений политики, соответствующих спецификации, или пустая коллекция.</returns>
      <param name="localName">Локальное имя утверждения политики.</param>
      <param name="namespaceUri">Пространство имен утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(System.Int32,System.Xml.XmlElement)">
      <summary>Вставляет заданное утверждение политики в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс для вставки параметра <paramref name="item" />.</param>
      <param name="item">Утверждение политики для вставки в <paramref name="index" />.Утверждение должно быть ненулевым.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Remove(System.String,System.String)">
      <summary>Удаляет заданное утверждение политики из коллекции.</summary>
      <returns>Утверждение политики, которое было удалено из коллекции, или значение null, если утверждения политики в коллекции не было.</returns>
      <param name="localName">Локальное имя утверждения политики.</param>
      <param name="namespaceUri">Пространство имен утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(System.String,System.String)">
      <summary>Удаляет все утверждения политики, не соответствующие заданному имени и пространству имен.</summary>
      <returns>Коллекция всех удаленных утверждений политики или пустая коллекция, если соответствующие заданному имени и пространству имен утверждения не были найдены.</returns>
      <param name="localName">Локальное имя утверждения политики.</param>
      <param name="namespaceUri">Пространство имен утверждения политики.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.SetItem(System.Int32,System.Xml.XmlElement)">
      <summary>Заменяет утверждение политики по указанному индексу заданным утверждением политики.</summary>
      <param name="index">Индекс, содержащий утверждение для замены.</param>
      <param name="item">Утверждение политики для замены утверждения уже в <paramref name="index" />.Утверждение должно быть ненулевым.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyConversionContext">
      <summary>Определяет класс, используемый для получения операторов контроля привязки в метаданных и для присоединения реализации элементов привязки в соответствующей области.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />. </summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для контекста политики.</param>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyConversionContext.BindingElements">
      <summary>Получает коллекцию элементов привязки, к которым добавляются элементы настраиваемой привязки, реализующие операторы контроля политики.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая элементы привязки для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyConversionContext.Contract">
      <summary>Получает контракт для конечной точки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions">
      <summary>Получает коллекцию операторов контроля политики из метаданных.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.Xml.XmlElement" />, которая содержит операторы контроля политики привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetFaultBindingAssertions(System.ServiceModel.Description.FaultDescription)">
      <summary>Возвращает коллекцию операторов контроля политики для указанной ошибки SOAP.</summary>
      <returns>Коллекция операторов контроля политики для указанной ошибки SOAP.</returns>
      <param name="fault">Объект <see cref="T:System.ServiceModel.Description.FaultDescription" />, для которого следует добавить операторы контроля политики или настроить привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions(System.ServiceModel.Description.MessageDescription)">
      <summary>Получает коллекцию операторов контроля политики для сообщения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescription" />, для которого следует добавить операторы контроля политики или настроить привязки.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Description.MessageDescription" />, для которого предназначены операторы контроля привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions(System.ServiceModel.Description.OperationDescription)">
      <summary>Возвращает коллекцию операторов контроля политики для указанной операции.</summary>
      <returns>Операторы контроля политики для операции.</returns>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, для которого следует добавить операторы контроля политики или настроить привязки.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyVersion">
      <summary>Класс, используемый для указания версии используемой спецификации WS-Policy.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Default">
      <summary>Получает версию WS-Policy по умолчанию.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />, который указывает версию политики по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Namespace">
      <summary>Получает пространство имен для версии политики.</summary>
      <returns>Строка, содержащая пространство имен WS-Policy.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Policy12">
      <summary>Получает экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />, который представляет WS-Policy 1,2.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />, который представляет WS-Policy 1,2.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Policy15">
      <summary>Получает экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />, который представляет WS-Policy 1.5.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" />, который представляет WS-Policy 1.5.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyVersion.ToString">
      <summary>Преобразует экземпляр <see cref="T:System.ServiceModel.Description.PolicyVersion" /> в строковое представление.</summary>
      <returns>Пространство имен для используемой версии WS-Policy.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.PrincipalPermissionMode">
      <summary>Задает режим проверки авторизации при использовании <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> для управления доступом к методу. </summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.None">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> не задано.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> задан на основе Windows <see cref="T:System.Security.Principal.WindowsPrincipal" /> ().Если идентификация пользователя не связана с учетной записью Windows, используется анонимный вход Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> задан на основе поставщика ролей ASP.NET (<see cref="T:System.Web.Security.RoleProvider" />). </summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom">
      <summary>Позволяет пользователю указать настраиваемый класс <see cref="T:System.Security.Principal.IPrincipal" /> для <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceAuthenticationBehavior">
      <summary>Описывает поведение проверки подлинности службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthenticationBehavior.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceAuthenticationBehavior" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthenticationBehavior.ServiceAuthenticationManager">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.ServiceAuthenticationManager" />, связанный с этим поведением.</summary>
      <returns>Возвращает <see cref="T:System.ServiceModel.ServiceAuthenticationManager" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthenticationBehavior.ShouldSerializeServiceAuthenticationManager">
      <summary>Значение true, если <see cref="T:System.ServiceModel.ServiceAuthenticationManager" /> следует сериализовать; в противном случае — значение false.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthenticationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)"></member>
    <member name="M:System.ServiceModel.Description.ServiceAuthenticationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)"></member>
    <member name="M:System.ServiceModel.Description.ServiceAuthenticationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)"></member>
    <member name="T:System.ServiceModel.Description.ServiceAuthorizationBehavior">
      <summary>Предоставляет свойства, связанные с поведением авторизации службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies">
      <summary>Возвращает или задает коллекцию внешних политик авторизации. </summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> элементов <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
      <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations">
      <summary>Возвращает или задает значение, указывающее, выполняет ли служба олицетворение для всех операций, которые она поддерживает. </summary>
      <returns>Значение true, если служба выполняет олицетворение для всех операций, которые она поддерживает; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode">
      <summary>Получает или задает режим разрешений участника. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider">
      <summary>Получает или задает настраиваемого поставщика ролей.</summary>
      <returns>
        <see cref="T:System.Web.Security.RoleProvider" />.</returns>
      <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager">
      <summary>Получает или задает диспетчера авторизации служб.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Явная реализация интерфейса, добавляющая параметры для настройки привязки.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">Объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
      <param name="endpoints">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Явная реализация интерфейса, добавляющая поведение диспетчера для настройки привязки.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">Объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет поведение.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">Объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerationContext">
      <summary>Передается в метод <see cref="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)" /> для разрешения изменения контракта службы и его контекста до создания кода.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" />, используя заданные генератор контракта, описание контракта и объявление типа кода контракта. </summary>
      <param name="serviceContractGenerator">Генератор, создающий код для контракта.</param>
      <param name="contract">Описание контракта для создаваемого контракта.</param>
      <param name="contractType">
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для создаваемого кода контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" />, используя заданные генератор контракта, описание контракта и объявление типа кода контракта. </summary>
      <param name="serviceContractGenerator">Генератор, создающий код для контракта.</param>
      <param name="contract">Описание контракта для создаваемого контракта.</param>
      <param name="contractType">
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для создаваемого кода контракта.</param>
      <param name="duplexCallbackType">
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для создаваемого дуплексного кода контракта.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.Contract">
      <summary>Возвращает контекст <see cref="T:System.ServiceModel.Description.ContractDescription" /> для текущего действия.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> для текущего контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.ContractType">
      <summary>Возвращает контекст <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для текущего действия.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для текущего контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.DuplexCallbackType">
      <summary>Возвращает <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для дуплексного контракта обратного вызова в контракте службы.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> для дуплексного контракта обратного вызова в контракте службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.Operations">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" />, представляющих операции контракта.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" />, представляющих операции контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.ServiceContractGenerator">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />, предназначенный для создания контракта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />, предназначенный для создания контракта.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerationOptions">
      <summary>Представляет параметры создания контракта, доступные посредством <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.None">
      <summary>Параметры не заданы.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.AsynchronousMethods">
      <summary>Дополнительно к синхронным версиям методов для операций создает также асинхронные.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.ChannelInterface">
      <summary>Создает интерфейс, который является производным от интерфейса контракта и <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.InternalTypes">
      <summary>Задает маркировку всех типов как внутренних типов.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.ClientClass">
      <summary>Создает клиентский класс , который выполняет расширение <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.TypedMessages">
      <summary>Создает контракты сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.EventBasedAsynchronousMethods">
      <summary>Дополнительно к синхронным версиям методов для операций создает также асинхронные методы на основе событий.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerator">
      <summary>Тип <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> создает код контракта службы и конфигурации привязок из объектов описания <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> с новым экземпляром <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.CodeDom.CodeCompileUnit)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> с указанным экземпляром <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="targetCompileUnit">Экземпляр <see cref="T:System.CodeDom.CodeCompileUnit" />, используемый для создания кода.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.CodeDom.CodeCompileUnit,System.Configuration.Configuration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> с указанным экземпляром <see cref="T:System.CodeDom.CodeCompileUnit" /> и указанным экземпляром <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="targetCompileUnit">Экземпляр <see cref="T:System.CodeDom.CodeCompileUnit" />, используемый для создания кода.</param>
      <param name="targetConfig">Экземпляр <see cref="T:System.Configuration.Configuration" />, используемый для создания конфигураций привязок.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.Configuration.Configuration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> с указанным экземпляром <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="targetConfig">Экземпляр <see cref="T:System.Configuration.Configuration" />, используемый для создания конфигураций привязок.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Configuration">
      <summary>Возвращает экземпляр <see cref="T:System.Configuration.Configuration" />, содержащий созданные конфигурации привязок.</summary>
      <returns>Экземпляр <see cref="T:System.Configuration.Configuration" />, содержащий созданные конфигурации конечных точек.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Errors">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.MetadataConversionError" />, созданных при создании кода контракта службы и конфигураций конечных точек.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateBinding(System.ServiceModel.Channels.Binding,System.String@,System.String@)">
      <summary>Создает конфигурацию привязки для указанного экземпляра <see cref="T:System.ServiceModel.Channels.Binding" />.</summary>
      <param name="binding">Экземпляр <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для создания конфигурации привязки.</param>
      <param name="bindingSectionName">Имя созданного раздела привязки.</param>
      <param name="configurationName">Имя созданной конфигурации привязки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateServiceContractType(System.ServiceModel.Description.ContractDescription)">
      <summary>Создает тип контракта службы из указанного экземпляра <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <returns>Экземпляр <see cref="T:System.CodeDom.CodeTypeReference" /> для созданного типа контракта.</returns>
      <param name="contractDescription">Экземпляр <see cref="T:System.ServiceModel.Description.ContractDescription" />, используемый для создания типа контракта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement@)">
      <summary>Создает тип контракта службы и конфигурацию конечной точки из указанного экземпляра <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <returns>Экземпляр <see cref="T:System.CodeDom.CodeTypeReference" /> для созданного типа контракта.</returns>
      <param name="endpoint">Экземпляр <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, используемый для создания типа контракта.</param>
      <param name="channelElement">Созданная конфигурация конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.NamespaceMappings">
      <summary>Возвращает сопоставление из пространств имен описания контракта управляемым пространствам имен, которые используются при создании кода.</summary>
      <returns>Сопоставление между пространствами имен описания контракта и управляемыми пространствами имен.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Options">
      <summary>Возвращает или устанавливает параметры для создания кода контракта службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceContractGenerationOptions" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.ReferencedTypes">
      <summary>Возвращает сопоставление между описаниями контракта и типами контракта, на которые имеются ссылки.  </summary>
      <returns>Сопоставление между описаниями контракта и типами контракта, на которые имеются ссылки.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.TargetCompileUnit">
      <summary>Возвращает целевой объект <see cref="T:System.CodeDom.CodeCompileUnit" /> для создания кода контракта службы.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeCompileUnit" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceCredentials">
      <summary>Настраивает учетные данные службы.Используйте этот класс, чтобы указать учетные данные для службы, например, сертификат X.509.Также используйте этот класс, чтобы указать модель проверки подлинности для разных клиентских учетных данных, например, проверку имени пользователя и пароля.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> из заданного <see cref="T:System.ServiceModel.Description.ServiceCredentials" />. </summary>
      <param name="other">Экземпляр <see cref="T:System.ServiceModel.Description.ServiceCredentials" />, используемый для инициализации нового экземпляра.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate">
      <summary>Возвращает текущие параметры проверки подлинности сертификата клиента и подготовки для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.Clone">
      <summary>Создает копию текущего экземпляра.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.CloneCore">
      <summary>Копирует необходимых участников текущего экземпляра.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager">
      <summary>Создает диспетчер маркеров для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication">
      <summary>Возвращает параметры проверки подлинности текущего выданного маркера (например, SAML) для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.Peer">
      <summary>Возвращает текущие параметры проверки подлинности учетных данных и подготовки для использования конечными точками однорангового транспорта, настроенными в службе.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.PeerCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication">
      <summary>Возвращает текущие параметры для использования безопасным обменом данными.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.SecureConversationServiceCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate">
      <summary>Возвращает текущий сертификат, связанный с этой службой.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет этот экземпляр к коллекции параметров привязки.Это метод инфраструктуры, и он не предназначен для непосредственного вызова.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <param name="endpoints">Коллекция конечных точек службы.</param>
      <param name="parameters">Коллекция параметров.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Примените поведение диспетчера.Это метод инфраструктуры, и он не предназначен для непосредственного вызова.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет описание службы.Это метод инфраструктуры, и он не предназначен для непосредственного вызова.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication">
      <summary>Возвращает текущие параметры проверки подлинности имени пользователя и пароля для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication">
      <summary>Возвращает текущие параметры проверки подлинности Windows для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Security.WindowsServiceCredential" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceDebugBehavior">
      <summary>Включает функции по отладке и функции справочной информации для службы .</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding">
      <summary>Возвращает или задает высокоуровневый доступ к определению привязки.</summary>
      <returns>Привязка канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled">
      <summary>Получает или задает значение, которое определяет, выполняет ли  публикацию справочной HTML-страницы по адресу, который задан в свойстве <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />.</summary>
      <returns>Значение true, если  публикует справочную HTML-страницу; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl">
      <summary>Возвращает или задает путь для публикации файлов справочной HTML-страницы.</summary>
      <returns>Относительный или абсолютный URL-адрес на основе HTTP для специального файла справки HTML, который показывается пользователю при просмотре конечной точки с помощью HTML-обозревателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding">
      <summary>Возвращает или задает высокоуровневый доступ к определению привязки.</summary>
      <returns>Привязка канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled">
      <summary>Получает или задает значение, указывающее, возвращает ли  файл справки HTML через HTTPS по адресу, заданному в свойстве <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />.</summary>
      <returns>Значение true, если файл справки HTML возвращается клиентам в результате отправки ими запроса HTTPS/GET, например в HTML-обозревателе; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl">
      <summary>Возвращает или задает путь публикации файлов HTML для извлечения с помощью HTTPS.</summary>
      <returns>Относительный или абсолютный URL-адрес на основе HTTPS для специального файла справки HTML, который показывается пользователю при просмотре конечной точки с помощью HTML-обозревателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, которое определяет, включать ли информацию по управляемым исключениям в подробную информацию об ошибках SOAP, которая возвращается клиенту для отладки.</summary>
      <returns>Значение true, если  возвращает клиенту сведения об управляемых исключениях в ошибках SOAP в целях отладки; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> для поддержки расширений функциональности.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
      <param name="endpoints">Конечные точки службы.</param>
      <param name="parameters">Параметр привязки, который поддерживает изменение привязок.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> для поддержки расширений функциональности.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> для поддержки расширений функциональности.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceDescription">
      <summary>Представляет собой полное хранимое в памяти описание службы, включающее все конечные точки для службы и спецификации для соответствующих им адресов, привязок, контрактов и поведений.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceDescription" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceDescription" /> из указанного перечисления конечных точек службы.</summary>
      <param name="endpoints">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который используется для инициализации описания службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="endpoints" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Behaviors">
      <summary>Возвращает поведения, связанные с этой службой.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> типа <see cref="T:System.ServiceModel.Description.IServiceBehavior" />, который содержит поведения, связанные с этой службой.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.ConfigurationName">
      <summary>Возвращает или задает имя элемента конфигурации &lt;service&gt;.</summary>
      <returns>Имя элемента конфигурации &lt;service&gt;, используемое для настройки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Endpoints">
      <summary>Возвращает коллекцию конечных точек из описания службы.</summary>
      <returns>Коллекция конечных точек службы <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, содержащая конечные точки, определенные для службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.GetService(System.Object)">
      <summary>Возвращает описание службы, инициализированное с помощью указанного объекта службы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceDescription" /> для указанного объекта службы.</returns>
      <param name="serviceImplementation">Объект <see cref="T:System.Object" />, реализующий службу.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serviceImplementation" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.GetService(System.Type)">
      <summary>Возвращает описание службы, инициализированное с помощью указанного типа службы.</summary>
      <returns>Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> для указанного типа службы.</returns>
      <param name="serviceType">Описание <see cref="T:System.Type" /> службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serviceType" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Name">
      <summary>Возвращает или задает имя службы.</summary>
      <returns>Имя службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Namespace">
      <summary>Возвращает или задает пространство имен для службы.</summary>
      <returns>Пространство имен для службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.ServiceType">
      <summary>Возвращает тип службы.</summary>
      <returns>Экземпляр <see cref="T:System.Type" />, реализующий службу.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Представляет конечную точку для службы, которая позволяет клиентам службы выполнять поиск и обмен данными со службой.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта.</summary>
      <param name="contract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для конечной точки службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с указанным адресом, контрактом и привязкой.</summary>
      <param name="contract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для конечной точки службы.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" />, который указывает способ обмена данными между конечной точкой службы и остальным окружением.</param>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" /> для конечной точки службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Получает или задает адрес конечной точки для конечной точки службы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" />, который задает место расположения конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Behaviors">
      <summary>Получает расширения функциональности для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> типа <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />, который содержит поведения, заданные для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Получает или задает привязку для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" /> для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Получает контракт для конечной точки службы.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" />, который задает контракт для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint">
      <summary>Возвращает или задает значение, указывающее, формируется ли конечная точка службы системой, а не определяется пользователем.</summary>
      <returns>Значение true, если конечная точка службы формируется системой; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri">
      <summary>Получает или задает универсальный код ресурса (URI), при котором конечная точка службы ожидает передачи данных.</summary>
      <returns>Адрес <see cref="T:System.Uri" />, по которому конечная точка службы ожидает передачи данных.Значение по умолчанию предоставляется <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> для <see cref="T:System.ServiceModel.EndpointAddress" />, возвращаемого посредством <see cref="P:System.ServiceModel.Description.ServiceEndpoint.Address" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode">
      <summary>Получает или задает способ обработки транспортом универсального кода ресурса, предоставляемого службы для ожидания передачи данных.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ListenUriMode" /> для конечной точки службы.Значение по умолчанию — <see cref="F:System.ServiceModel.Description.ListenUriMode.Explicit" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Получает или задает имя конечной точки службы.</summary>
      <returns>Имя конечной точки службы.По умолчанию используется составное значение имени привязки и имя описания контракта.Например, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpointCollection">
      <summary>Коллекция, содержащая конечные точки службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)">
      <summary>Возвращает первую из найденных в коллекции конечных точек службы, которая соответствует заданному типу контракта.</summary>
      <returns>Первая конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> указанного типа контракта или значение null, если конечные точки не найдены.</returns>
      <param name="contractType">Тип <see cref="T:System.Type" /> контракта для конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)">
      <summary>Возвращает конечную точку службы с заданным типом контракта, именем и пространством имен привязки из коллекции конечных точек службы.</summary>
      <returns>Первая <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с заданным типом контракта, именем и пространством имен привязки или значение null, если конечные точки не найдены.</returns>
      <param name="contractType">Тип <see cref="T:System.Type" /> контракта для конечной точки службы.</param>
      <param name="bindingName">Тип <see cref="T:System.Xml.XmlQualifiedName" /> для привязки службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> или <paramref name="bindingName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)">
      <summary>Возвращает конечную точку службы с заданным адресом из коллекции конечных точек службы.</summary>
      <returns>Первая <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> указанного адреса или значение null, если конечные точки не найдены.</returns>
      <param name="address">Объект <see cref="T:System.Uri" /> для конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)">
      <summary>Возвращает конечную точку службы с заданным пространством имен и именем контракта из коллекции конечных точек службы.</summary>
      <returns>Первая <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с заданным пространством имен и именем контракта или значение null, если конечные точки не найдены.</returns>
      <param name="contractName">Тип <see cref="T:System.Xml.XmlQualifiedName" /> для контракта службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Возвращает первую конечную точку службы с заданным именем и пространством имен контракта, и с заданным именем и пространством имен привязки из коллекции конечных точек службы.</summary>
      <returns>Первая <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с заданным пространством имен и именем контракта и привязки.</returns>
      <param name="contractName">Тип <see cref="T:System.Xml.XmlQualifiedName" /> для контракта службы.</param>
      <param name="bindingName">Тип <see cref="T:System.Xml.XmlQualifiedName" /> для привязки службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> или <paramref name="bindingName" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)">
      <summary>Возвращает коллекцию всех конечных точек службы для заданного типа службы.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, в которой содержатся конечные точки службы заданного типа или пустая коллекция, если конечные точки не найдены.</returns>
      <param name="contractType">Тип <see cref="T:System.Type" /> контракта для конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)">
      <summary>Возвращает коллекцию всех конечных точек службы для заданного имени службы.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, которая содержит конечные точки службы с заданным именем и пространством имен контракта, или пустая коллекция, если конечные точки не найдены.</returns>
      <param name="contractName">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент.</param>
      <param name="item">Элемент <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для вставки по указанному <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.— или —Значение параметра <paramref name="index" />больше числа элементов, содержащихся в коллекции.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Замещает элемент в коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение для элемента <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с указанным <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.— или —Значение параметра <paramref name="index" />больше числа элементов, содержащихся в коллекции.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataBehavior">
      <summary>Контролирует публикацию метаданных службы и связанной с ними информации.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation">
      <summary>Возвращает или задает значение, являющееся расположением метаданных службы.</summary>
      <returns>Расположение метаданных службы.</returns>
      <exception cref="T:System.ArgumentException">Значение является абсолютным, а схемой не является ни http, ни https.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding">
      <summary>Возвращает или задает привязку, используемую для настройки извлечения метаданных при передаче по протоколу HTTP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> можно использовать для получения метаданных по протоколу HTTP. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled">
      <summary>Возвращает или задает значение, указывающее, следует ли опубликовывать метаданные службы для извлечения с помощью запроса HTTP/GET.</summary>
      <returns>Значение true, если WSDL опубликован; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl">
      <summary>Возвращает или задает расположение публикации метаданных для запросов HTTP/GET.</summary>
      <returns>Абсолютное или относительное расположение метаданных.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding">
      <summary>Возвращает или задает привязку, используемую для настройки извлечения метаданных при передаче по протоколу HTTPS.</summary>
      <returns>Привязку <see cref="T:System.ServiceModel.Channels.Binding" /> можно использовать для получения метаданных по протоколу HTTPS.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled">
      <summary>Возвращает или задает значение, указывающее, следует ли опубликовывать метаданные службы для извлечения с помощью запроса HTTPS/GET.</summary>
      <returns>Значение true, если WSDL опубликован; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl">
      <summary>Возвращает или задает расположение публикации метаданных для запросов HTTPS/GET.</summary>
      <returns>Адрес метаданных HTTPS.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter">
      <summary>Возвращает или задает внутренний объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />, используемый для публикации метаданных службы.</summary>
      <returns>Внутренний объект <see cref="T:System.ServiceModel.Description.MetadataExporter" />.</returns>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName">
      <summary>Возвращает строку IMetadataContract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализация <see cref="T:System.ServiceModel.Description.IServiceBehavior" />, которая настраивает соответствующие привязки для поддержки поведения.</summary>
      <param name="description">Описание службы, которую необходимо настроить.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <param name="endpoints">Конечные точки, которые необходимо настроить.</param>
      <param name="parameters">Параметры привязки, которые необходимо настроить.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Реализация <see cref="T:System.ServiceModel.Description.IServiceBehavior" />, которая настраивает соответствующие привязки для поддержки поведения в службе.</summary>
      <param name="description">Описание службы, которую необходимо изменить.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <exception cref="T:System.ArgumentNullException">Либо <paramref name="description" />, либо <paramref name="serviceHostBase" /> имеют значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Целевой адрес для <paramref name="serviceHostBase" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Реализация <see cref="T:System.ServiceModel.Description.IServiceBehavior" />, которая проверяет возможность поддержки поведения описанием службы.</summary>
      <param name="description">Описание службы, которую необходимо проверить.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataContractBehavior">
      <summary>Поведение контракта, позволяющее указать, нужно ли публиковать метаданные для данной конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataContractBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataContractBehavior" />.</summary>
      <param name="metadataGenerationDisabled">Указывает, отключено ли создание метаданных для конечной точки.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataContractBehavior.MetadataGenerationDisabled">
      <summary>Возвращает или задает значение, указывающее, нужно ли отключить создание метаданных для конечной точки.</summary>
      <returns>Значение true, если создание метаданных должно быть отключено; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Настраивает элементы привязки для поддержки поведения контракта.</summary>
      <param name="description">Изменяемое описание контракта.</param>
      <param name="endpoint">Изменяемая конечная точка.</param>
      <param name="parameters">Объекты, необходимые элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализует изменение клиента для всего контракта.</summary>
      <param name="description">Описание контакта, для которого предназначено расширение.</param>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="proxy">Среда выполнения клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Реализует изменение среды выполнения службы для всего контракта.</summary>
      <param name="description">Изменяемое описание контракта.</param>
      <param name="endpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="dispatch">Среда выполнения распределения, которая контролирует выполнение службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataContractBehavior.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Подтверждает, что контракт и конечная точка могут поддерживать поведение контракта.</summary>
      <param name="description">Контракт, который необходимо проверить.</param>
      <param name="endpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataEndpoint">
      <summary>Стандартная конечная точка с фиксированным контрактом (<see cref="T:System.ServiceModel.Description.IMetadataExchange" />) и привязкой HTTP по умолчанию, используемой для предоставления метаданных. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataEndpoint.#ctor">
      <summary>Создает и инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Создает и инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" />, используя указанные привязку и адрес конечной точки. </summary>
      <param name="binding">Привязка, используемая для конечной точки метаданных службы.</param>
      <param name="address">Адрес конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataEndpoint.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Создает и инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceMetadataEndpoint" />, используя указанный адрес конечной точки.</summary>
      <param name="address">Адрес конечной точки.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataExtension">
      <summary>Обеспечивает реализацию для протоколов публикации метаданных.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.#ctor">
      <summary>Создает экземпляр объекта <see cref="T:System.ServiceModel.Description.ServiceMetadataExtension" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataExtension.Metadata">
      <summary>Получает метаданные службы в среде выполнения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MetadataSet" />, который содержит метаданные службы в среде выполнения. ПримечаниеИзменения в возвращаемой коллекции отражены в последовательных запросах метаданных службы. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.System#ServiceModel#IExtension{T}#Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Разрешает участие объекта в настраиваемых расширениях функциональности.Вызывается в случае, когда среда выполнения присоединяет расширение к экземпляру класса <see cref="T:System.ServiceModel.ServiceHostBase" />.Только для внутреннего использования.</summary>
      <param name="owner">Объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.System#ServiceModel#IExtension{T}#Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Разрешает участие объекта в настраиваемых расширениях функциональности.Вызывается в случае, когда среда выполнения отсоединяет расширение от экземпляра класса <see cref="T:System.ServiceModel.InstanceContext" />.Только для внутреннего использования.</summary>
      <param name="owner">Объект <see cref="T:System.ServiceModel.InstanceContext" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior">
      <summary>Задает расширения функциональности аудита для событий безопасности.В целом события безопасности включают события проверки подлинности, например, проверку подлинности транспорта, сообщения или переговоров, а также событие авторизации.Дополнительные сведения см. в разделе <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation">
      <summary>Возвращает или задает путь для записи журналов событий, относящихся к безопасности. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.AuditLogLocation" />.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLogLocation.Default" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set и value не являются допустимыми элементами <see cref="T:System.ServiceModel.AuditLogLocation" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel">
      <summary>Получает или задает тип событий проверки подлинности для аудита на уровне сообщения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.AuditLevel" />.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set и value не являются допустимыми элементами <see cref="T:System.ServiceModel.AuditLevel" />. </exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel">
      <summary>Получает или задает тип событий авторизации для аудита на уровне службы.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ServiceModel.AuditLevel" />.Значение по умолчанию — None.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set и value не являются допустимыми элементами <see cref="T:System.ServiceModel.AuditLevel" />.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure">
      <summary>Возвращает или задает значение, указывающее, влияет ли сбой аудита на работу приложения. </summary>
      <returns>Значение true, если сбой аудита не влияет на работу приложения; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Передает настраиваемые данные в элементы привязки для предоставления поддержки реализации контракта.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <param name="endpoints">Конечные точки службы.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">set и <paramref name="parameters" /> имеют значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Предоставляет возможности для изменения значений свойства времени выполнения или для вставки объектов настраиваемых расширений, например, обработчиков ошибок, перехватчиков параметров или сообщений, а также других объектов настраиваемых расширений.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="description" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serviceHostBase" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Не реализовано.</summary>
      <param name="description">Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы.</param>
      <param name="serviceHostBase">Основное приложение службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceThrottlingBehavior">
      <summary>Настраивает параметры производительности времени выполнения, которые позволяют настроить производительность службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceThrottlingBehavior" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls">
      <summary>Возвращает или устанавливает значение, которое определяет максимальное количество обрабатываемых сообщений в <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
      <returns>Верхний предел активных сообщений в службе.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances">
      <summary>Возвращает или устанавливает значение, которое определяет максимальное количество одновременно выполняющихся объектов <see cref="T:System.ServiceModel.InstanceContext" /> в службе.</summary>
      <returns>Максимальное число объектов <see cref="T:System.ServiceModel.InstanceContext" />, существующих в службе одновременно.Значение по умолчанию — 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions">
      <summary>Возвращает или устанавливает значение, которое определяет максимальное количество сеансов, которые может принимать объект <see cref="T:System.ServiceModel.ServiceHost" /> одновременно.</summary>
      <returns>Максимальное количество сеансов, принимаемых узлом службы.Значение по умолчанию — 10.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Настраивает привязки для поддержки поведения службы.</summary>
      <param name="description">Описание службы.</param>
      <param name="serviceHostBase">Узел для службы.</param>
      <param name="endpoints">Конечные точки, предоставляемые службой.</param>
      <param name="parameters">Параметры привязки, которые необходимо настроить для поддержки поведения службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Настраивает службу для поддержки поведения службы.</summary>
      <param name="description">Описание службы, которую необходимо настроить.</param>
      <param name="serviceHostBase">Узел для службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет, что служба и узел могут поддерживать поведение службы.</summary>
      <param name="description">Описание службы, которое должно быть проверено поведением службы.</param>
      <param name="serviceHostBase">Узел службы, который должен быть проверен поведением службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.SynchronousReceiveBehavior">
      <summary>Контролирует синхронный или асинхронный способ ожидания передачи данных каналами.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Description.SynchronousReceiveBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Реализация в этом классе отсутствует. </summary>
      <param name="serviceEndpoint">Изменяемая конечная точка.</param>
      <param name="parameters">Объекты, необходимые элементам привязки для поддержки поведения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Реализация в этом классе отсутствует. </summary>
      <param name="serviceEndpoint">Настраиваемая конечная точка.</param>
      <param name="behavior">Настраиваемая клиентская среда выполнения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Задает для свойства <see cref="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" /> значение true.</summary>
      <param name="serviceEndpoint">Конечная точка, предоставляющая контракт.</param>
      <param name="endpointDispatcher">Изменяемый или расширяемый диспетчер конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Реализация в этом классе отсутствует.</summary>
      <param name="serviceEndpoint">Проверяемая конечная точка.</param>
    </member>
    <member name="T:System.ServiceModel.Description.TransactedBatchingBehavior">
      <summary>Представляет поведение, которое оптимизирует операции получения для транспорта, поддерживающего транзакционные получения.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.TransactedBatchingBehavior" /> с заданным размером пакета.</summary>
      <param name="maxBatchSize">Максимальное количество операций получения, которые могут быть объединены.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="MaxBatchSize" /> меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize">
      <summary>Возвращает или задает максимальное число операций получения, которые могут быть объединены в одну транзакцию.</summary>
      <returns>Максимальное число операций получения, которые могут быть объединены в одну транзакцию.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="MaxBatchSize" /> меньше 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Применяет параметры привязки к заданной конечной точке службы.Наследовать этот метод нельзя.</summary>
      <param name="serviceEndpoint">Конечная точка службы, к которой применимы параметры поведения.</param>
      <param name="bindingParameters">Коллекция параметров привязки, в которой хранятся сведения, используемые элементами привязки для построения фабрик.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Применяет параметры поведения объединения транзакций к заданной конечной точке службы.Наследовать этот метод нельзя.</summary>
      <param name="serviceEndpoint">Конечная точка службы, к которой применимы параметры поведения.</param>
      <param name="behavior">Содержит поведение объединения транзакций.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Связывает диспетчера конечной точки с заданной конечной точкой службы.Наследовать этот метод нельзя.</summary>
      <param name="serviceEndpoint">Конечная точка службы, к которой применимы параметры поведения.</param>
      <param name="endpointDispatcher">Диспетчеризация конечной точки для сообщений диспетчеризации </param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Гарантирует, что объединение транзакций применимо только к привязкам, поддерживающим операцию получения транзакции.Наследовать этот метод нельзя.</summary>
      <param name="serviceEndpoint">Конечная точка службы, для которой проверяется поведение объединения.</param>
    </member>
    <member name="T:System.ServiceModel.Description.TypedMessageConverter">
      <summary>Преобразовывает типизированное сообщение в нетипизированное, или нетипизированное сообщение в типизированное.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
      <param name="formatterAttribute">Строка <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, указывающая модуль форматирования для использования.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
      <param name="formatterAttribute">Строка <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />, указывающая модуль форматирования для использования.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
      <param name="defaultNamespace">Пространство имен.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
      <param name="defaultNamespace">Пространство имен.</param>
      <param name="formatterAttribute">Строка <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, указывающая модуль форматирования для использования.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Представляет статический метод, возвращающий экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
      <param name="messageContract">Тип сообщения контракта, являющийся типом <see cref="T:System.Type" /> с аннотацией <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">Строка действия.</param>
      <param name="defaultNamespace">Пространство имен.</param>
      <param name="formatterAttribute">Строка <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />, указывающая модуль форматирования для использования.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)">
      <summary>Создает типизированное сообщение из заданного экземпляра <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект, являющийся типизированным сообщением.</returns>
      <param name="message">Нетипизированное сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)">
      <summary>Создает экземпляр <see cref="T:System.ServiceModel.Channels.Message" /> из заданного типизированного сообщения.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="typedMessage">Типизированное сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)">
      <summary>Создает экземпляр <see cref="T:System.ServiceModel.Channels.Message" /> из заданного типизированного сообщения с помощью заданной версии.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="typedMessage">Типизированное сообщение.</param>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />, который указывает версии SOAP и WS-Addressing, связанные с сообщением и его передачей.</param>
    </member>
    <member name="T:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior">
      <summary>Включает получение сведений об адресе метаданных из заголовков сообщений запроса для службы .</summary>
    </member>
    <member name="M:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior.DefaultPortsByScheme">
      <summary>Возвращает словарь портов по умолчанию, ключом являются схемы адресации.</summary>
      <returns>Словарь портов по умолчанию, ключом являются схемы адресации.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализовано.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
      <param name="endpoints">Не реализовано.</param>
      <param name="bindingParameters">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Не реализовано.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.UseRequestHeadersForMetadataAddressBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Не реализовано.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlContractConversionContext">
      <summary>Передается пользовательским средствам импорта и экспорта WSDL, чтобы обеспечить настройку процессов экспорта и импорта метаданных для контракта.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlContractConversionContext.Contract">
      <summary>Возвращает экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.ContractDescription" />.</summary>
      <returns>Экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.ContractDescription" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetFaultDescription(System.Web.Services.Description.OperationFault)">
      <summary>Возвращает описание ошибки для указанной ошибки.</summary>
      <returns>Описание ошибки для указанной ошибки.</returns>
      <param name="operationFault">Объект <see cref="T:System.Web.Services.Description.OperationFault" /> для запрошенного <see cref="T:System.ServiceModel.Description.FaultDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetMessageDescription(System.Web.Services.Description.OperationMessage)">
      <summary>Возвращает описание сообщения для указанного сообщения.</summary>
      <returns>Описание сообщения для указанного сообщения.</returns>
      <param name="operationMessage">Объект <see cref="T:System.Web.Services.Description.OperationMessage" /> для запрошенного <see cref="T:System.ServiceModel.Description.MessageDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperation(System.ServiceModel.Description.OperationDescription)">
      <summary>Возвращает операцию для указанного описания операции.</summary>
      <returns>Операция для указанного описания операции.</returns>
      <param name="operation">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" /> для запрошенного <see cref="T:System.Web.Services.Description.Operation" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationDescription(System.Web.Services.Description.Operation)">
      <summary>Возвращает описание операции, связанное с операцией.</summary>
      <returns>Описание операции, связанное с операцией.</returns>
      <param name="operation">Объект <see cref="T:System.Web.Services.Description.Operation" /> для запрошенного <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationFault(System.ServiceModel.Description.FaultDescription)">
      <summary>Возвращает объект <see cref="T:System.Web.Services.Description.OperationFault" /> для запрошенного <see cref="T:System.ServiceModel.Description.FaultDescription" />.</summary>
      <returns>Объект <see cref="T:System.Web.Services.Description.OperationFault" /> для запрошенного <see cref="T:System.ServiceModel.Description.FaultDescription" />.</returns>
      <param name="fault">Объект <see cref="T:System.ServiceModel.Description.FaultDescription" /> для запрошенного <see cref="T:System.Web.Services.Description.OperationFault" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationMessage(System.ServiceModel.Description.MessageDescription)">
      <summary>Возвращает объект <see cref="T:System.Web.Services.Description.OperationMessage" /> для указанного сообщения <paramref name="message" />, представляющий тип сообщения, переданного действием веб-службы XML.</summary>
      <returns>Объект <see cref="T:System.Web.Services.Description.OperationMessage" />, представляющий тип сообщения, переданного действием веб-службы XML.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Description.MessageDescription" /> для запрошенного <see cref="T:System.Web.Services.Description.OperationMessage" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Значение не найдено.</exception>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlContractConversionContext.WsdlPortType">
      <summary>Возвращает объект <see cref="T:System.Web.Services.Description.PortType" />, предоставляющий контракт.</summary>
      <returns>Объект <see cref="T:System.Web.Services.Description.PortType" />, который представляет контракт.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlEndpointConversionContext">
      <summary>Передается пользовательским средствам импорта и экспорта WSDL, чтобы обеспечить настройку процессов экспорта и импорта метаданных для конечной точки WSDL.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.ContractConversionContext">
      <summary>Возвращает экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />.</summary>
      <returns>Экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.Endpoint">
      <summary>Возвращает экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <returns>Экспортируемый или импортируемый объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetFaultBinding(System.ServiceModel.Description.FaultDescription)">
      <summary>Получает привязку WSDL, связанную с ошибкой.</summary>
      <returns>WSDL <see cref="T:System.Web.Services.Description.FaultBinding" />, связанный с ошибкой.</returns>
      <param name="fault">
        <see cref="T:System.ServiceModel.Description.FaultDescription" /> для ошибки, связанной с привязкой WSDL.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetFaultDescription(System.Web.Services.Description.FaultBinding)">
      <summary>Получает описание для ошибки, связанной с привязкой ошибки WSDL.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescription" /> для ошибки, связанной с привязкой WSDL.</returns>
      <param name="faultBinding">
        <see cref="T:System.Web.Services.Description.FaultBinding" />, связанный с привязкой ошибки WSDL.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetMessageBinding(System.ServiceModel.Description.MessageDescription)">
      <summary>Получает привязку WSDL для сообщения, заданного описанием.</summary>
      <returns>
        <see cref="T:System.Web.Services.Description.MessageBinding" /> для сообщения, заданного описанием.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Description.MessageDescription" />, связанный с описанием.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetMessageDescription(System.Web.Services.Description.MessageBinding)">
      <summary>Получает описание сообщения для сообщения, заданного привязкой WSDL.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.MessageDescription" /> для сообщения, заданного привязкой.</returns>
      <param name="messageBinding">Объект <see cref="T:System.Web.Services.Description.MessageBinding" />, связанный с сообщением.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetOperationBinding(System.ServiceModel.Description.OperationDescription)">
      <summary>Получает привязку WSDL для операции, заданной описанием.</summary>
      <returns>
        <see cref="T:System.Web.Services.Description.OperationBinding" /> для операции, заданной описанием.</returns>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> операции, связанной с привязкой.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetOperationDescription(System.Web.Services.Description.OperationBinding)">
      <summary>Возвращает описание операции для операции, связанной с привязкой WSDL.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> операции, связанной с привязкой.</returns>
      <param name="operationBinding">Объект <see cref="T:System.Web.Services.Description.OperationBinding" />, связанный с описанием.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.WsdlBinding">
      <summary>Получает <see cref="T:System.Web.Services.Description.Binding" /> для конечной точки WSDL.</summary>
      <returns>
        <see cref="T:System.Web.Services.Description.Binding" /> для конечной точки WSDL.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.WsdlPort">
      <summary>Получает <see cref="T:System.Web.Services.Description.Port" /> для конечной точки WSDL.</summary>
      <returns>Объект <see cref="T:System.Web.Services.Description.Port" /> для конечной точки WSDL.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlExporter">
      <summary>Преобразовывает сведения о службе, контракте и конечной точке в документы метаданных.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Description.WsdlExporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportContract(System.ServiceModel.Description.ContractDescription)">
      <summary>Экспортирует метаданные, описывающие только сведения о контракте, из заданного описания контракта.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> для создания метаданных.</param>
      <exception cref="T:System.InvalidOperationException">В средстве экспорта возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">Контракт имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Создает метаданные о заданной конечной точке.</summary>
      <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, о котором следует возвратить метаданные.</param>
      <exception cref="T:System.InvalidOperationException">В средстве экспорта возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Привязка имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoints(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint},System.Xml.XmlQualifiedName)">
      <summary>Создает метаданные о группе конечных точек из заданной службы.</summary>
      <param name="endpoints">Объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, о которых следует создавать метаданные.</param>
      <param name="wsdlServiceQName">Имя службы.</param>
      <exception cref="T:System.InvalidOperationException">В средстве экспорта возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="endpoints" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="wsdlServiceQName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Привязка имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlExporter.GeneratedWsdlDocuments">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Web.Services.Description.ServiceDescription" /> после вызова одного из методов экспорта. </summary>
      <returns>Коллекция объектов <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlExporter.GeneratedXmlSchemas">
      <summary>Возвращает набор объектов <see cref="T:System.Xml.Schema.XmlSchema" /> после вызова одного из методов экспорта.</summary>
      <returns>Набор объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.GetGeneratedMetadata">
      <summary>Возвращает перечисляемую коллекцию созданных объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />.</summary>
      <returns>Перечисляемая коллекция созданных объектов <see cref="T:System.ServiceModel.Description.MetadataSection" />, которая представляет метаданные, созданные в результате вызовов <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />, <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" /> или <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoints(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint},System.Xml.XmlQualifiedName)" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlImporter">
      <summary>Импортирует метаданные на языке WSDL 1.1 с вложениями WS-Policy.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
      <param name="metadata">Коллекция документов метаданных, из которых следует извлечь сведения о контракте, конечной точке и привязке.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})">
      <summary>Создает объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> из заданных метаданных, настраиваемых средств импорта политики и настраиваемых средств импорта WSDL.</summary>
      <param name="metadata">Загруженные метаданные.</param>
      <param name="policyImportExtensions">Настраиваемые средства импорта политики, используемое для импорта настраиваемых операторов политики.</param>
      <param name="wsdlImportExtensions">Настраиваемые средства импорта WSDL, используемое для импортирования настраиваемых элементов WSDL.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="metadata" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)">
      <summary>Создает объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> из заданных метаданных, настраиваемых средств импорта политики и настраиваемых средств импорта WSDL.</summary>
      <param name="metadata">Загруженные метаданные.</param>
      <param name="policyImportExtensions">Настраиваемые средства импорта политики, используемое для импорта настраиваемых операторов политики.</param>
      <param name="wsdlImportExtensions">Настраиваемые средства импорта WSDL, используемое для импортирования настраиваемых элементов WSDL.</param>
      <param name="quotas">Количество одновременно получаемых метаданных</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="metadata" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings">
      <summary>Возвращает набор объектов <see cref="T:System.ServiceModel.Channels.Binding" />, импортированных из документов метаданных.</summary>
      <returns>Набор объектов <see cref="T:System.ServiceModel.Channels.Binding" />, импортированных из документов метаданных.</returns>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts">
      <summary>Возвращает набор объектов <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющих сведения о типе порта в документах метаданных.</summary>
      <returns>Набор объектов <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющих сведения о типе порта в документах метаданных.</returns>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, который представляет конечные точки в документах WSDL.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, который представляет конечные точки в документах WSDL.</returns>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий сведения о привязке из набора документов метаданных.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий сведения о привязке из набора документов метаданных.</returns>
      <param name="wsdlBinding">Объект <see cref="T:System.Web.Services.Description.Binding" />, представляющий сведения о привязке в файле метаданных.</param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="wsdlBinding" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющий метаданные, поиск которых выполняется по сведениям о конкретном типе порта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющий метаданные, поиск которых выполняется по сведениям о конкретном типе порта.</returns>
      <param name="wsdlPortType">Объект <see cref="T:System.Web.Services.Description.PortType" />, представляющий требуемый тип порта.</param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">Тип порта — null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> из набора документов метаданных, которые используют сведения из указанного объекта <see cref="T:System.Web.Services.Description.Port" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, представляющий сведения о конкретном порте WSDL в документах метаданных.</returns>
      <param name="wsdlPort">Объект <see cref="T:System.Web.Services.Description.Port" />, представляющий требуемые сведения о портах WSDL.</param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlPort" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, используя заданный <see cref="T:System.Web.Services.Description.Binding" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, используя заданный <see cref="T:System.Web.Services.Description.Binding" />.</returns>
      <param name="wsdlBinding">Объект <see cref="T:System.Web.Services.Description.Binding" />, используемый в порте WSDL. </param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlBinding" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, связанные с заданным <see cref="T:System.Web.Services.Description.PortType" />.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющая все типы порта WSDL, связанные с заданным <see cref="T:System.Web.Services.Description.PortType" />.</returns>
      <param name="wsdlPortType">Объект <see cref="T:System.Web.Services.Description.PortType" />, используемый для поиска сведений о связанном порте WSDL.</param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlBinding" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlPortType" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)">
      <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL в заданном <see cref="T:System.Web.Services.Description.Service" />.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющая все типы порта WSDL в заданном <see cref="T:System.Web.Services.Description.Service" />.</returns>
      <param name="wsdlService">Объект <see cref="T:System.Web.Services.Description.Service" />, в котором следует выполнять поиск сведений о порте WSDL.</param>
      <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlService" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments">
      <summary>Получает набор объектов <see cref="T:System.Web.Services.Description.ServiceDescription" />, которые описывают сведения о контракте в документах метаданных.</summary>
      <returns>Коллекция объектов <see cref="T:System.Web.Services.Description.ServiceDescription" />, которые описывают сведения о контракте в документах метаданных.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions">
      <summary>Получает набор объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL.</summary>
      <returns>Набор объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas">
      <summary>Получает набор объектов <see cref="T:System.Xml.Schema.XmlSchema" />, которые описывают типы в документах метаданных.</summary>
      <returns>Набор объектов <see cref="T:System.Xml.Schema.XmlSchema" />, которые описывают типы в документах метаданных.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerMessageContractImporter">
      <summary>Обрабатывает импортирование сообщений из документов WSDL с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.XmlSerializerMessageContractImporter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Задает описание службы и набор схем для импорта набора документов WSDL.</summary>
      <param name="wsdlDocuments">
        <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />, представляющий документы WSDL для проверки.</param>
      <param name="xmlSchemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, представляющий схемы для использования при преобразовании сообщений.</param>
      <param name="policy">
        <see cref="T:System.Collections.Generic.ICollection`1" />, где содержатся документы политики для использования при импорте сообщений.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Импортирует контракт.</summary>
      <param name="importer">
        <see cref="T:System.ServiceModel.Description.WsdlImporter" />, используемый для импортирования.</param>
      <param name="contractContext">
        <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />, представляющий используемый контекст.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Импортирует заданную конечную точку.</summary>
      <param name="importer">
        <see cref="T:System.ServiceModel.Description.WsdlImporter" />, представляющий используемое средство импорта.</param>
      <param name="endpointContext">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" />, представляющий импортируемую конечную точку.</param>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Контролирует поведение времени выполнения <see cref="T:System.Xml.Serialization.XmlSerializer" />, связанное с операцией.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" /> с заданной операцией.</summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> для экспорта или сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" />. </summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> для экспорта или сериализации.</param>
      <param name="attribute">Объект <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> используется для хранения использования SOAP и параметров формата.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.GetXmlMappings">
      <summary>Возвращает коллекцию сопоставлений между элементами схемы XML и типами данных среды CLR.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />
        <see cref="T:System.Xml.Serialization.XmlMapping" />, где содержатся сопоставления.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Добавляет набор параметров к описанию операции.</summary>
      <param name="description">Целевой <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="parameters">Объект <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, содержащий параметры.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Применяет поведение клиента к операции.</summary>
      <param name="description">Объект <see cref="T:System.ServiceModel.Description.OperationDescription" />, представляющий операцию.</param>
      <param name="proxy">Объект <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, представляющий клиентскую операцию.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Применяет поведение диспетчера к операции.</summary>
      <param name="description">Целевой <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="dispatch">Применяемое семейство <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Проверяет операцию.</summary>
      <param name="description">Целевой <see cref="T:System.ServiceModel.Description.OperationDescription" /> для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Экспортирует данные операции, например документ WSDL.</summary>
      <param name="exporter">
        <see cref="T:System.ServiceModel.Description.WsdlExporter" /> для использования для экспорта.</param>
      <param name="contractContext">Объект <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> для экспорта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Экспортирует данные конечной точки, например документ WSDL.</summary>
      <param name="exporter">
        <see cref="T:System.ServiceModel.Description.WsdlExporter" /> для использования для экспорта.</param>
      <param name="endpointContext">Объект <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> для экспорта.</param>
    </member>
    <member name="P:System.ServiceModel.Description.XmlSerializerOperationBehavior.XmlSerializerFormatAttribute">
      <summary>Возвращает объект, хранящий использование SOAP и параметры формата.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />, хранящий использование SOAP и параметры формата.</returns>
    </member>
    <member name="T:System.ServiceModel.Diagnostics.PerformanceCounterScope">
      <summary>Указывает, включены ли счетчики производительности для сборки. </summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.Off">
      <summary>Счетчики производительности отключены.Это значение используется по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.ServiceOnly">
      <summary>Включены только счетчики производительности, относящиеся к данной службе.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.All">
      <summary>Счетчики производительности можно просматривать во время выполнения.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.Default">
      <summary>Создается единичный экземпляр счетчика производительности _WCF_Admin.Данный экземпляр используется, чтобы включить коллекцию данных SQM для использования инфраструктурой.Значения счетчика для данного экземпляра не обновляются и, соответственно, остаются нулевыми.Если для  не задана конфигурация, это значение используется по умолчанию.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <summary>Представляет запрос, проверяющий, относится ли действие сообщения к указанному набору действий.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.#ctor(System.String[])">
      <summary>Выполняется инициализация нового экземпляра этого класса с набором действий, которые в нем проверяются.</summary>
      <param name="actions">Массив <see cref="T:System.Array" />, содержащий набор действий, которые проверяет фильтр.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="actions" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name=" actions" /> является пустым. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions">
      <summary>Получает копию строк действий, доступную только для чтения, которую проверяет этот объект <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая строки действий, которые проверяет этот объект <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1">
      <summary>Создается новая таблица фильтров, проверяющая эффективность действий сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, которому могут добавляться объекты <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> и связанные с ними параметры <paramref name="FilterData" />.</returns>
      <typeparam name="FilterData">Данные, связанные с фильтрами в таблице.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Проверяет, соответствует ли одно из действий, указанных в объекте <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />, действию сообщения.</summary>
      <returns>true, если заголовок действия объекта <see cref="T:System.ServiceModel.Channels.Message" /> соответствует одному из указанных действий; в ином случае — false.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Проверяет, соответствует ли одно из действий, указанных в объекте <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />, заголовку действия буферизованного сообщения.</summary>
      <returns>true, если заголовок действия объекта <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> соответствует одному из указанных действий; в ином случае — false.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <summary>Компонент, который принимает каналы и связывает их со службой.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />. </summary>
      <param name="listener">Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" /> для диспетчера каналов.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />. </summary>
      <param name="listener">Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" /> для диспетчера каналов.</param>
      <param name="bindingName">Имя привязки, используемое для настройки службы.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />. </summary>
      <param name="listener">Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" /> для службы.</param>
      <param name="bindingName">Имя привязки, используемое для настройки службы.</param>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> для службы.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Прикрепляет диспетчер каналов к узлу.</summary>
      <param name="host">Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы.</param>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName">
      <summary>Возвращает имя привязки, используемое для настройки службы.</summary>
      <returns>Имя привязки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers">
      <summary>Возвращает набор объектов <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />, которые можно использовать для проверки и добавления состояния к каналам при их создании.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> объектов типа <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput">
      <summary>Заставляет прослушиватель прекратить прием новых каналов.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout">
      <summary>Возвращает длительность временного интервала по умолчанию, выделенного для операции закрытия диспетчера каналов.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает длительность временного интервала по умолчанию, выделенного для операции закрытия диспетчера каналов.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout">
      <summary>Возвращает длительность временного интервала по умолчанию, выделенного для операции открытия диспетчера каналов.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает длительность временного интервала по умолчанию, выделенного для операции закрытия диспетчера каналов.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Открепляет узел службы от диспетчера каналов.</summary>
      <param name="host">Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="host" /> не является узлом диспетчера каналов.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints">
      <summary>Возвращает диспетчеры конечных точек, которые пересылают сообщения конечным точкам канала.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> диспетчеров <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />, которые пересылают сообщения конечным точкам канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers">
      <summary>возвращает набор объектов <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />, которые можно использовать для вставки пользовательских функций обработки ошибок для конечной точки.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> объектов <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host">
      <summary>Возвращает узел для службы, связанной с диспетчером.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы, связанной с диспетчером.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, указывающее, следует ли включать сведения об исключении в сообщение об ошибке.</summary>
      <returns>Значение true, если сведения об исключении включаются в сообщения об ошибках. В противном случае — значение false. </returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept">
      <summary>Возвращает значение, указывающее, выполняются ли вызовы метода приема на прослушивателе в рамках транзакции.</summary>
      <returns>Значение true, если вызовы метода приема в прослушивателе выполняются в рамках транзакции. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive">
      <summary>Возвращает значение, указывающее, выполняются ли вызовы метода получения на прослушивателе в рамках транзакции.</summary>
      <returns>Значение true, если вызовы метода получения в прослушивателе выполняются в рамках транзакции. В противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener">
      <summary>Возвращает прослушиватель, связанный с диспетчером каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, связанный с данным диспетчером каналов.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing">
      <summary>Возвращает или задает значение, указывающее, добавляет ли диспетчер каналов заголовки адресации в сообщения типа запрос-ответ.</summary>
      <returns>Значение true, если прокси не добавляет заголовки адресации. В противном случае — значение false.Значение по умолчанию — false.См. «Примечания».</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives">
      <summary>Возвращает или задает максимальное количество ожидающих сообщений на канал.</summary>
      <returns>Целое число, представляющее максимальное количество сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize">
      <summary>Возвращает или задает максимальный размер транзакционного пакета.</summary>
      <returns>Максимальный размер транзакционного пакета.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion">
      <summary>Возвращает или задает используемые или ожидаемые версии сообщения SOAP и WS-Addressing.</summary>
      <returns>Используемая или ожидаемая версия <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort">
      <summary>Прерывает работу прослушивателя, связанного с диспетчером.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия прослушивателя канала для диспетчера, которая должна завершиться в течение указанного временного интервала.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию, чтобы закрыть прослушиватель канала для диспетчера. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия прослушивателя канала для диспетчера, которая должна завершиться в течение указанного временного интервала.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию, чтобы открыть прослушиватель канала для диспетчера. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции открытия.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.InvalidOperationException">Узел или версия сообщения имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)">
      <summary>Закрывает прослушиватель канала, связанный с диспетчером, в течение указанного временного интервала.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает длительность временного интервала, выделенного для операции закрытия прослушивателя.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed">
      <summary>Обеспечивает трассировку закрытия диспетчеров конечных точек, связанных с диспетчером каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, чтобы закрыть прослушиватель канала для диспетчера.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, чтобы открыть прослушиватель канала для диспетчера.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный методом <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)">
      <summary>Открывает прослушиватель, связанный с диспетчером каналов.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает длительность временного интервала, выделенного для операции открытия прослушивателя.</param>
      <exception cref="T:System.InvalidOperationException">Узел или версия сообщения имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened">
      <summary>Заполняет и проверяет таблицу фильтров, используемую для перенаправления к конечным точкам.</summary>
      <exception cref="T:System.InvalidOperationException">Узел имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening">
      <summary>Проверяет, прикреплен ли диспетчер каналов к узлу.</summary>
      <exception cref="T:System.InvalidOperationException">Узел имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled">
      <summary>Возвращает или задает значение, указывающее, включен ли ReceiveContext. </summary>
      <returns>Значение true, если включен ReceiveContext, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously">
      <summary>Возвращает или задает значение, указывающее, использует ли диспетчер синхронные вызовы для чтения сообщений из каналов.</summary>
      <returns>Значение true, если диспетчер использует синхронные методы для чтения сообщений из каналов. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously">
      <summary>Возвращает или задает значение, показывающее, отправляются ли сообщения в асинхронном режиме.</summary>
      <returns>Значение true, если сообщения отправляются асинхронно, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle">
      <summary>Возвращает или задает регулирование для службы, связанной с диспетчером каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel">
      <summary>Возвращает или задает уровень изоляции по умолчанию для транзакций.</summary>
      <returns>Одно из значений <see cref="T:System.Transactions.IsolationLevel" />.По умолчанию установлено значение <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданный уровень изоляции не определен.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout">
      <summary>Возвращает или задает значение, указывающее время ожидания по умолчанию для новых транзакций, созданных диспетчером от имени службы.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, которое представляет время ожидания по умолчанию для транзакций.По умолчанию установлено значение <see cref="F:System.TimeSpan.Zero" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше нуля или слишком велико.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <summary>Абстрактный базовый класс для канального диспетчера, который принимает каналы и привязывает их к службам.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>При переопределении в производном классе прикрепляет диспетчер каналов к указанному узлу размещения.</summary>
      <param name="host">Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />, или узел размещения уже задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
      <summary>При переопределении в производном классе удаляет диспетчеры конечной точки, связанные с диспетчером канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>При переопределении в производном классе открепляет диспетчер каналов от указанного узла размещения.</summary>
      <param name="host">Объект <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />, или узел размещения уже задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
      <summary>При переопределении в производном классе получает размещение узла, связанного с диспетчером канала. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы, связанной с диспетчером.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
      <summary>При переопределении в производном классе получает прослушивателя канала, связанного с диспетчером канала. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, связанный с данным диспетчером каналов.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <summary>Предоставляет потокобезопасную коллекцию, содержащую диспетчеры каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.ClearItems">
      <summary>Удаляет все диспетчеры каналов из коллекции.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <summary>Вставляет диспетчер каналов в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс диспетчера каналов, извлекаемого из коллекции.</param>
      <param name="item">Диспетчер каналов, добавляемый в коллекцию в качестве элемента.</param>
      <exception cref="T:System.ObjectDisposedException">Узел службы, связанный с коллекцией диспетчеров каналов, закрыт.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
      <exception cref="T:System.InvalidOperationException">Объект коммутации находится не в состоянии. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.RemoveItem(System.Int32)">
      <summary>Удаляет диспетчер каналов из коллекции по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс диспетчера каналов, который удаляется из коллекции.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <summary>Заменяет диспетчер каналов по указанному индексу другим элементом.</summary>
      <param name="index">Отсчитываемый от нуля индекс заменяемого диспетчера каналов.</param>
      <param name="item">Заменяемый диспетчер каналов. </param>
      <exception cref="T:System.ObjectDisposedException">Служба, связанная с этой коллекцией диспетчеров каналов, находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение параметра <paramref name="index" /> меньше нуля или больше числа элементов в коллекции.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Используется для изменения или поведения исполнения+ определенной операции контракта в объекте клиента или в объекте канала клиента.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, используя указанные значения <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, имени и действия. </summary>
      <param name="parent">Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Имя операции.</param>
      <param name="action">Действие операции.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, используя указанные значения <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, имени, действия и ответного действия. </summary>
      <param name="parent">Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Имя операции.</param>
      <param name="action">Действие операции.</param>
      <param name="replyAction">Действие ответного сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Возвращает действие операции.</summary>
      <returns>Действие операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Возвращает или задает метод, связанный с асинхронной операцией.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод, обрабатывающий начальную часть пары асинхронных методов, либо значение null, если операция не является частью пары асинхронных методов.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Возвращает или задает значение, указывающее, используется ли значение свойства <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> для десериализации ответного сообщения.</summary>
      <returns>Значение true, если возвращаемый тип не является <see cref="T:System.ServiceModel.Channels.Message" />. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Возвращает или задает метод, который реализует асинхронный метод «End» для данной операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод завершения для операции, либо значение null, если операция не является асинхронной.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" />, которые представляют ошибки SOAP, указанные для данной операции.</summary>
      <returns>Коллекция ошибок SOAP, указанных для данной операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Возвращает или задает модуль форматирования, который выполняет десериализацию объектов в сообщения и десериализацию сообщений в объекты.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Возвращает или задает значение, указывающее, можно ли запустить сеанс сообщением к данной операции.</summary>
      <returns>Значение true, если сообщение к данной операции может запустить сеанс. В противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Возвращает или задает значение, указывающее, является ли операция односторонней.</summary>
      <returns>Значение true, если клиент indigo2 не должен ожидать ответа. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Возвращает или задает значение, указывающее, является ли данная операция последней в сеансе.</summary>
      <returns>Значение true, если связанный сеанс закрывается после вызова операции; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Возвращает имя операции.</summary>
      <returns>Имя операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
      <summary>Возвращает или задает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" />, которые могут проверять и изменять входящие и исходящие объекты для определенного клиентского метода.</summary>
      <returns>Коллекция реализаций <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Возвращает содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</summary>
      <returns>Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Возвращает действие ответного сообщения для данной операции.</summary>
      <returns>Действие ответного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Возвращает или задает значение, которое указывает, выполняет ли объект <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> сериализацию исходящего сообщения.</summary>
      <returns>Значение true, если свойство <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> сериализует возвращаемые значения в ответное сообщение; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Возвращает или задает метод, который связан с данной операцией.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод, реализующий операцию.Если операция является асинхронной, то значение равно null, а реализующие методы хранятся в свойствах <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> и <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Точка вставки для классов, расширяющих функциональность клиентских объектов  для всех сообщений, обрабатываемых клиентским приложением.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType">
      <summary>Возвращает или задает тип контракта обратного вызова, связанного с дуплексным клиентом.</summary>
      <returns>Объект <see cref="T:System.Type" />, который представляет контракт обратного вызова, связанный с дуплексным клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
      <summary>Возвращает объект диспетчеризации времени выполнения, который осуществляет диспетчеризацию операций, инициируемых службой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.Если контракт является дуплексным, то поведение диспетчера включает операции, инициируемые службой; в противном случае поведение диспетчера не содержит операций.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
      <summary>Возвращает коллекцию объектов инициализации канала, используемых для настройки канала, связанного с клиентом.</summary>
      <returns>Коллекция реализаций <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Возвращает тип контракта, связанного с клиентом.</summary>
      <returns>Объект <see cref="T:System.Type" />, который представляет контракт, связанный с данным клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Возвращает имя контракта, связанного с клиентом.</summary>
      <returns>Имя контракта для клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Возвращает пространство имен контракта, связанного с клиентом.</summary>
      <returns>Пространство имен контракта, связанного с клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
      <summary>Интерактивный инициализатор канала.</summary>
      <returns>Синхронизированная коллекция типа <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Возвращает или задает значение, указывающее, добавляет ли клиент заголовки адресации в сообщения типа запрос-ответ.</summary>
      <returns>Значение true, если клиент не добавляет заголовки адресации. В противном случае — значение false.Значение по умолчанию — false.См. «Примечания».</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Возвращает или задает максимальный размер ошибки. </summary>
      <returns>Целое число, представляющее максимальный размер ошибки.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
      <summary>Возвращает коллекцию реализаций инспектора сообщений для клиента.</summary>
      <returns>Коллекция реализаций <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled"></member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
      <summary>Возвращает коллекцию клиентских операций для клиента.</summary>
      <returns>Синхронизированная коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Возвращает или задает реализацию <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />, которую можно использовать для выбора <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />, который выбирает <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Возвращает клиентскую операцию для методов, которые не имеют соответствующего <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> в коллекции <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, который представляет метод, которому перенаправляется содержимое текущего сообщения, когда селектор операций не может найти операцию, соответствующую сообщению.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
      <summary>Возвращает или задает значение, определяющее, кем выполняется принудительная обработка заголовка SOAP MustUnderstand: системой или приложением.</summary>
      <returns>true, если обработка заголовка SOAP MustUnderstand должна выполняться системой; в противном случае — false, что означает, что эта обработка выполняется приложением.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Возвращает или задает адрес транспорта, который используется для отправки сообщений через клиент.</summary>
      <returns>
        <see cref="T:System.Uri" />, который является адресом назначения для транспорта.Значением по умолчанию является значение <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> клиента.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Используется для изменения или расширения поведения исполнения определенной операции службы в конечной точке службы.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />, используя заданные значения диспетчеризации времени выполнения, имени и действия.</summary>
      <param name="parent">Связанный объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</param>
      <param name="name">Имя операции диспетчеризации. Используется в качестве ключа в коллекции <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</param>
      <param name="action">Действие сообщения, для которого создается операция диспетчеризации.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />, используя заданные значения диспетчеризации времени выполнения, имени, действия и ответного действия.</summary>
      <param name="parent">Связанный объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</param>
      <param name="name">Имя операции диспетчеризации.</param>
      <param name="action">Действие сообщения SOAP, для которого создается эта операция диспетчеризации.</param>
      <param name="replyAction">Ответное действие, связанное с данной операцией диспетчеризации.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Возвращает значение действия для данной операции.</summary>
      <returns>Значение действия для данной операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Возвращает или задает значение, определяющее, следует ли автоматически удалять параметры.</summary>
      <returns>Значение true, если параметры следует автоматически удалять; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />, которая определяет методы, позволяющие потоку, вызывающему пользовательский код, инициализировать и уничтожать локальную память потока.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Возвращает или задает значение, указывающее, используется ли значение свойства <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> для десериализации сообщения запроса.</summary>
      <returns>Значение false, если возвращаемое значение имеет тип <see cref="T:System.ServiceModel.Channels.Message" /> и отсутствуют выходные параметры. В противном случае — значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.FaultContractInfos">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" />, которые представляют ошибки SOAP, указанные для данной операции.</summary>
      <returns>Коллекция ошибок SOAP, указанных для данной операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter">
      <summary>Возвращает или задает модуль форматирования, который выполняет десериализацию сообщений в объекты и сериализацию объектов в сообщения.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation">
      <summary>Возвращает или задает значение, указывающее необходимую степень олицетворения для операции.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.ImpersonationOption" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Invoker">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Dispatcher.IOperationInvoker" />, который вызывает пользовательский метод.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IOperationInvoker" />, который вызывает пользовательский метод.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsInsideTransactedReceiveScope">
      <summary>Возвращает или задает значение, показывающее, входит ли область операции в транзакционное действие приема.</summary>
      <returns>Значение true, если область входит в транзакционное действие приема, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Возвращает значение, указывающее, является ли операция односторонней.</summary>
      <returns>Значение true, если операция содержит только входной параметр, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsTerminating">
      <summary>Возвращает или задает значение, указывающее, является ли данная операция последней в сеансе.</summary>
      <returns>Значение true, если связанный сеанс закрывается после вызова операции; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Возвращает имя операции.</summary>
      <returns>Имя операции.Используется в качестве ключа в коллекции <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors">
      <summary>Возвращает или задает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" />, которые могут проверять и изменять входящие и исходящие объекты для определенного прокси-метода.</summary>
      <returns>Коллекция реализаций <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Возвращает связанный объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>Связанный объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceAfterCall">
      <summary>Возвращает или задает значение, которое указывает, следует ли уничтожать объект службы после вызова.</summary>
      <returns>Значение true, если экземпляр освобождается после завершения вызова. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceBeforeCall">
      <summary>Возвращает или задает значение, которое указывает, следует ли уничтожать объект службы перед перенаправлением вызова.</summary>
      <returns>Значение true, если перед перенаправлением вызова экземпляр освобождается и создается новый. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReplyAction">
      <summary>Возвращает действие ответного сообщения для данной операции.</summary>
      <returns>Действие ответного сообщения для данной операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Возвращает или задает значение, которое указывает, выполняет ли объект <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> сериализацию ответных сообщений.</summary>
      <returns>Значение true, если свойство <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> сериализует возвращаемые значения в ответное сообщение; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionAutoComplete">
      <summary>Возвращает или задает значение, которое указывает, завершается ли текущая транзакция автоматически при успешном возврате операции.</summary>
      <returns>Значение true, если при успешном возврате операция завершается автоматически. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionRequired">
      <summary>Возвращает или задает значение, которое указывает, должна ли операция выполняться в рамках транзакции.</summary>
      <returns>Значение true, если операция должна выполняться в области транзакции. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Предоставляет свойства, которые можно использовать для изменения поведения службы по умолчанию, а также для вложения настраиваемых объектов, которые могут изменить способ преобразования входящих сообщений в объекты и распределения их по операциям.Наследовать этот класс нельзя.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
      <summary>Возвращает или задает значение, указывающее, будет ли служба закрывать входящий сеанс, когда клиент закрывает выходящий сеанс. </summary>
      <returns>Значение true, если служба завершает входной сеанс, когда клиент закрывает выходной сеанс. В противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, представляющий точку установки для расширений  для исходящих вызовов дуплексных конечных точек, вызываемых обратно.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, являющийся точкой установки для среды выполнения настройки клиента в дуплексных контрактах.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> для данного объекта среды выполнения распределения.</summary>
      <returns>Диспетчер каналов для объекта среды выполнения распределения.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
      <summary>Возвращает или задает, будет ли экземпляр службы обрабатывать сообщения последовательно или параллельно.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ConcurrencyMode" />, определяющий, будет ли экземпляр службы обрабатывать сообщения последовательно или параллельно.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> для данной среды выполнения распределения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> для данной среды выполнения распределения.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
      <summary>Возвращает или задает политики внешней авторизации, которые определяют набор правил авторизации пользователя, к которому предъявляется набор требований.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, определяющих набор правил авторизации пользователя, к которому предъявляется набор требований.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
      <summary>Возвращает или задает значение, указывающее, следует ли пропускать <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" />.</summary>
      <returns>Значение true, если свойство <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /> не учитывается при выполнении метода службы. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
      <summary>Возвращает или задает значение, которое определяет, будет ли служба пытаться производить олицетворение при помощи учетных данных, предоставленных во входящем сообщении.</summary>
      <returns>Значение true, если служба выполняет олицетворение на основании учетных данных сообщения, когда свойство <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> операции имеет значение <see cref="F:System.ServiceModel.ImpersonationOption.Required" /> или <see cref="F:System.ServiceModel.ImpersonationOption.Allowed" />. Значение false, если служба выполняет олицетворение, только когда свойство <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> операции имеет значение <see cref="F:System.ServiceModel.ImpersonationOption.Required" />.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />, которые можно использовать для добавления настраиваемого обработчика, чтобы управлять способом завершения входящих сеансов.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> объектов типа <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />, которую можно использовать для проверки или изменения объекта <see cref="T:System.ServiceModel.InstanceContext" />, когда он впервые создается.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> типа <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider">
      <summary>Возвращает или задает экземпляр <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> для использование экземпляром <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> для использования <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" />, который можно использовать для управления созданием и удалением объектов служб.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" />, управляющий созданием и удалением объектов служб, связанных с объектом <see cref="T:System.ServiceModel.InstanceContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
      <summary>Возвращает или задает значение, определяющее, будут ли события успешной проверки подлинности сообщения записываться в журнал событий, указанный в <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.AuditLevel" />.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />, которую можно использовать для прикрепления настраиваемого инспектора сообщений для всех входящих и исходящих сообщений внутри конечной точки.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> типа <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />, которую можно использовать для выполнения поведения конкретной операции.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> типа <see cref="T:System.String" /> и объекты <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />, который управляет выбором назначения <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> для конкретного сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage">
      <summary>Возвращает или задает значение, которое показывает, сохраняется ли сообщение.</summary>
      <returns>Значение true, если сообщение сохраняется, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
      <summary>Возвращает или задает значение, указывающее, как будет задаваться свойство <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />; значением по умолчанию является <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
      <summary>Возвращает или задает значение, указывающее, будет ли объект службы утилизироваться после успешного выполнения транзакции.</summary>
      <returns>Значение true, если объект службы освобождается после успешного выполнения транзакции. В противном случае — значение false.Значением по умолчанию является значение <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider">
      <summary>Возвращает или задает настраиваемый экземпляр <see cref="T:System.Web.Security.RoleProvider" />, который используется экземпляром <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>Настраиваемый экземпляр <see cref="T:System.Web.Security.RoleProvider" />, используемый данным экземпляром <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation">
      <summary>Возвращает или задает расположение журнала аудита.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.AuditLogLocation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager">
      <summary>Возвращает или задает объект, который управляет процессом проверки подлинности для операций службы. </summary>
      <returns>Объект управления проверкой подлинности.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
      <summary>Возвращает или задает значение, определяющее, какие события авторизации службы будут аудироваться.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.AuditLevel" />.Значение по умолчанию — <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />, предоставляющий проверку авторизации для <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />, предоставляющий проверку авторизации для <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext">
      <summary>Возвращает или задает одноэлементный экземпляр <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> для использование экземпляром <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>Одноэлементный экземпляр <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> для использования экземпляром <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
      <summary>Возвращает или задает значение, которое указывает, будут ли подавляться некритические исключения, создаваемые в ходе процесса ведения журнала.</summary>
      <returns>Значение true, если некритические исключения, создаваемые во время ведения журнала, подавляются. В противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
      <summary>Возвращает или задает контекст синхронизации, используемый для вызова операций службы.</summary>
      <returns>Объект <see cref="T:System.Threading.SynchronizationContext" /> используется для определения, в каком потоке вызывается операция службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
      <summary>Возвращает или задает значение, которое указывает, завершается ли автоматически текущая транзакция при завершении сеанса. </summary>
      <returns>Значение true, если транзакции автоматически завершаются при завершении сеанса. В противном случае — значение false.Значением по умолчанию является значение, заданное свойством <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type">
      <summary>Возвращает или задает тип контракта.</summary>
      <returns>Тип контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
      <summary>Возвращает или задает операцию, которой передаются неопознанные сообщения.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />, которому передаются неопознанные сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
      <summary>Возвращает или задает значение <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</summary>
      <returns>Значение <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <summary>Представляет запрос, проверяющий, удовлетворяет ли сообщение требованиям указанного адреса конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> с указанным адресом, по которому требуется проверить сообщение.</summary>
      <param name="address">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</summary>
      <param name="address">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</param>
      <param name="includeHostNameInComparison">Значение true, если имя узла включается в сравнение адресов конечной точки; в противном случае — значение false. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address">
      <summary>Возвращает адрес, по которому объект <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> проверяет сообщения.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.EndpointAddress" />, по которой сообщения проверяются фильтром <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1">
      <summary>Создает новую таблицу фильтров, одновременно проверяющую сообщения по нескольким адресам конечной точки.</summary>
      <returns>Объект, реализующий интерфейс <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, который может содержать фильтры <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> со связанным параметром <paramref name="FilterData" />. </returns>
      <typeparam name="FilterData">Данные, связанные с фильтрами в таблице.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison">
      <summary>Возвращает значение, которое указывает, включено ли имя узла в сравнение адресов конечной точки.</summary>
      <returns>Значение true, если имя узла включается в сравнение адресов конечной точки; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Проверяет, соответствует ли сообщение указанному адресу конечной точки.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.Message" /> соответствует адресу конечной точки, указанному в фильтре; в противном случае — значение false. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Проверяет, удовлетворяет ли буферизованное сообщение указанному адресу конечной точки.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> соответствует адресу конечной точки; в противном случае — значение false. </returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Объект времени выполнения, который предоставляет собой свойства, позволяющие выполнять вставку расширений времени выполнения или изменений для сообщений в службах. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> с указанным адресом, именем контракта и пространством имен контракта. </summary>
      <param name="address">Адрес конечной точки.</param>
      <param name="contractName">Имя контракта конечной точки.</param>
      <param name="contractNamespace">Пространство имен контракта конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> с указанным адресом, именем контракта, пространством имен контракта и значением, показывающим, является ли конечная точка открытой и системной.</summary>
      <param name="address">Адрес конечной точки.</param>
      <param name="contractName">Имя контракта конечной точки.</param>
      <param name="contractNamespace">Пространство имен контракта конечной точки.</param>
      <param name="isSystemEndpoint">Конечная точка создана не пользователем, а сервером внутренним образом.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, который используется для определения того, предназначено ли определенное сообщение для адреса конечной точки.</summary>
      <returns>Фильтр адресов, используемый для перенаправления сообщения к соответствующей конечной точке.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher">
      <summary>Возвращает связанный объект <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />, который можно использовать для проверки или изменения других значений и поведений, относящихся к каналу.</summary>
      <returns>Свойство <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> возвращает связанный объект <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, который используется для определения того, предназначено ли сообщение для данного контракта.</summary>
      <returns>Фильтр, используемый для перенаправления сообщений соответствующему контракту.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName">
      <summary>Возвращает имя контракта конечной точки.</summary>
      <returns>Имя контракта конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace">
      <summary>Возвращает пространство имен контракта конечной точки.</summary>
      <returns>Пространство имен контракта конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />, используемый для проверки, изменения или расширения поведения времени выполнения в рамках конечной точки службы или конечной точки обратного вызова клиента. </summary>
      <returns>Объект <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />, используемый для проверки, изменения или расширения поведения времени выполнения в рамках конечной точки службы или конечной точки обратного вызова клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress">
      <summary>Возвращает адрес конечной точки.</summary>
      <returns>Адрес конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority">
      <summary>Возвращает или задает приоритет комбинации <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> и <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />, когда конечные точки выбираются объектом <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />.</summary>
      <returns>Приоритет фильтра.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint">
      <summary>Возвращает значение, которое показывает, создана ли конечная точка сервером внутренним образом (а не пользователем).</summary>
      <returns>Значение true, если конечная точка создана системой, и значение false в противном случае.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <summary>Расширьте класс <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> для создания обработчика исключений для необработанных исключений, появляющихся во время работы .</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
      <summary>Получает экземпляр объекта <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />, обрабатывающий все исключения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />, возвращающий значение true для всех исключений.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
      <summary>Получает или задает реализацию текущего объекта <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> для домена приложения.</summary>
      <returns>Присваивает настраиваемый объект <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />, принимающий необработанные исключения, происходящие в асинхронных потоках .</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
      <summary>При переопределении в производном классе возвращает значение true, если исключение было обработано, или значение false, если необходимо повторно вызвать исключение и завершить приложение. </summary>
      <returns>Значение true, если исключение обработано, и значение false в противном случае.</returns>
      <param name="exception">Исключение, произошедшее во время работы  и которое может закрыть приложение.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
      <summary>Получает или задает реализацию текущего транспортного объекта <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> для домена приложения.</summary>
      <returns>Настраиваемый объект <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />, принимающий необработанные исключения, происходящие внутри общих транспортировок .</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Предоставляет информацию о сбоях протокола SOAP, указанных в атрибуте <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" />, использующий указанное действие и тип сведений.</summary>
      <param name="action">Действие ошибки SOAP.</param>
      <param name="detail">Тип сведений, сериализуемый в виде сведений о сбое SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Получает значение действия сбоя SOAP.</summary>
      <returns>Значение действия сбоя SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Тип объекта, сериализуемый в виде сведений о сбое SOAP.</summary>
      <returns>
        <see cref="T:System.Type" />, представляющий сериализуемые сведения о сбое SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <summary>Исключение, которое вызывается, когда фильтр или таблица фильтров обращается к тексту небуферизованного сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр исключения <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> с указанным сообщением об ошибке и фильтрами, которые пытались выполнить проверку текста сообщения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="filters">Фильтр <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, который пытался проверить текст сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения. </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> с указанным сообщением об ошибке, внутренним исключением, вызвавшим текущее исключение, и коллекцией, которая содержит фильтр, пытавшийся проверить текст сообщения. </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
      <param name="filters">Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> фильтров <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, в которую входит фильтр, пытавшийся проверить текст сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters">
      <summary>Возвращает коллекцию фильтров, которая содержит фильтр, вызвавший создаваемое исключение.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> фильтров <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, которая содержит фильтры, вызвавшие создаваемое исключение.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
      <summary>Определяет методы, которые позволяют выполнять инициализацию и уничтожение локальной памяти для потока, который вызывает пользовательский код.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
      <summary>Реализуйте для участия в очистке потока, который вызвал операцию.</summary>
      <param name="correlationState">Объект корреляции, возвращаемый из метода <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
      <summary>Реализуйте для участия в инициализации потока операции.</summary>
      <returns>Объект корреляции, передаваемый обратно в качестве параметра метода <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />.</returns>
      <param name="instanceContext">Экземпляр службы для операции.</param>
      <param name="channel">Клиентский канал.</param>
      <param name="message">Входящее сообщение.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <summary>Определяет интерфейс уведомления службы или клиента при создании канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)">
      <summary>Инициализирует класс <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> с указанным объектом <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
      <param name="channel">Объект <see cref="T:System.ServiceModel.IClientChannel" />, который используется для инициализации <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Определяет методы, используемые для правления преобразованием сообщений в объекты и объектов в сообщения для клиентских приложений.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Преобразует сообщение в возвращаемое значение и выходные параметры, которые передаются обратно вызывающей операции.</summary>
      <returns>Возвращаемое значение операции.</returns>
      <param name="message">Входящее сообщение.</param>
      <param name="parameters">Выходные значения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Преобразует массив <see cref="T:System.Object" /> в исходящее сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Сообщение SOAP, направляемое операции службы.</returns>
      <param name="messageVersion">Версия сообщения SOAP для использования.</param>
      <param name="parameters">Параметры, передаваемые клиентской операции .</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Определяет объект инспектора сообщений, который можно добавить в коллекцию <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> для просмотра или изменения сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Разрешает проверку или изменение сообщения после получения ответного сообщения, но перед его передачей клиентскому приложению.</summary>
      <param name="reply">Сообщение, преобразуемое в типы и передающееся обратно клиентскому приложению.</param>
      <param name="correlationState">Данные состояния корреляции.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Разрешает проверку или изменение сообщения до того, как сообщение запроса отправляется службе.</summary>
      <returns>Объект, который возвращается как аргумент <paramref name="correlationState " /> метода <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />.Значение null, если не используется состояние корреляции.Рекомендуется сделать его типом <see cref="T:System.Guid" />, чтобы гарантировать отсутствие совпадающих объектов <paramref name="correlationState" />.</returns>
      <param name="request">Сообщение, отправляемое службе.</param>
      <param name="channel">Канал объекта клиента .</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Задает контракт для селектора операций.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Получает значение, указывающее, требуются ли параметры для определения выделения.</summary>
      <returns>Значение true, если параметры являются обязательными, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Возвращает выделенную операцию.</summary>
      <returns>Операция, выбранная настраиваемым селектором операций.</returns>
      <param name="method">Вызываемый метод.</param>
      <param name="parameters">Передаваемые методу параметры.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Определяет методы, десериализующие сообщения запросов и сериализующие ответные сообщения в службе.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Десериализует сообщение в массив параметров.</summary>
      <param name="message">Входящее сообщение.</param>
      <param name="parameters">Объекты, которые передаются в операцию в качестве параметров.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Сериализует ответное сообщение из заданной версии сообщения, массива параметров и возвращаемого значения.</summary>
      <returns>Сериализованное ответное сообщение.</returns>
      <param name="messageVersion">Версия сообщения SOAP.</param>
      <param name="parameters">Выходные параметры.</param>
      <param name="result">Возвращаемое значение.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <summary>Определяет методы, разрешающие производить настраиваемую проверку или изменение входящих и исходящих сообщений приложения в приложениях служб.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
      <summary>Вызывается после приема входящего сообщения, но после распределения сообщения на надлежащую операцию.</summary>
      <returns>Объект, используемый для корреляции состояния.Этот объект передается обратно в методе <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)" />.</returns>
      <param name="request">Сообщение запроса.</param>
      <param name="channel">Входящий канал.</param>
      <param name="instanceContext">Текущий экземпляр службы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Вызывается после возвращения операции, но после отправки ответного сообщения.</summary>
      <param name="reply">Ответное сообщение.Это значение равно нулю, если операция является односторонней.</param>
      <param name="correlationState">Объект корреляции, возвращаемый из метода <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector">
      <summary>Определяет контракт, связывающий входящие сообщения с локальной операцией, для настройки поведения выполнения службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <summary>Сопоставляет локальную операцию с методом получения сообщений.</summary>
      <returns>Имя операции, сопоставленной с параметром <paramref name="message" />.</returns>
      <param name="message">Входящее <see cref="T:System.ServiceModel.Channels.Message" />, сопоставляемое с операцией.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IErrorHandler">
      <summary>Позволяет разработчику управлять сообщениями об ошибках, возвращаемыми вызывающему объекту, и дополнительно выполнять пользовательскую обработку ошибок, например ведение журнала.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)">
      <summary>Включает обработку, связанную с ошибками, и возвращает значение, которое показывает, прерывает ли диспетчер в определенных случаях сеанс и контекст экземпляра. </summary>
      <returns>Значение true, если служба  не должна прерывать сеанс (если он имеется) и контекст экземпляра, если он отличен от <see cref="F:System.ServiceModel.InstanceContextMode.Single" />. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="error">Исключение, созданное при обработке.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
      <summary>Позволяет создать пользовательское исключение <see cref="T:System.ServiceModel.FaultException`1" />, которое возвращается из исключения в ходе работы метода службы.</summary>
      <param name="error">Исключение <see cref="T:System.Exception" /> вызывается во время работы службы.</param>
      <param name="version">SOAP-версия сообщения.</param>
      <param name="fault">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который возвращается клиенту или службе (при наличии дуплексного взаимодействия).</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInputSessionShutdown">
      <summary>Определяется контракт, который необходимо реализовать для закрытия сеанса ввода данных.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)">
      <summary>Указывает на то, что в канале произошел сбой.</summary>
      <param name="channel">Канал <see cref="T:System.ServiceModel.IDuplexContextChannel" />, в котором произошел сбой.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)">
      <summary>Указывает, когда клиентский канал заканчивает прием сообщений, являющийся частью дуплексного обмена сообщениями.</summary>
      <param name="channel">Канал <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />, завершивший прием.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer">
      <summary>Определяет методы, необходимые для проверки или изменения создания объектов <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <summary>Предоставляет возможность изменять вновь созданный объект <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
      <param name="instanceContext">Контекст экземпляра, предоставляемый системой.</param>
      <param name="message">Сообщение, вызывающее создание контекста экземпляра.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
      <summary>Реализуйте для участия в создании или выборе объекта <see cref="T:System.ServiceModel.InstanceContext" />, в особенности для обеспечения общих сеансов.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <summary>Вызывается при получении нового сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.InstanceContext" />, который используется для обработки сообщения. Возвращайте значение null, чтобы дать службе  указание о создании нового объекта <see cref="T:System.ServiceModel.InstanceContext" />.</returns>
      <param name="message">Входящее сообщение.</param>
      <param name="channel">Канал, получивший сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <summary>Вызывается, если из метода <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> возвращается значение null.</summary>
      <param name="instanceContext">Новый объект <see cref="T:System.ServiceModel.InstanceContext" />.</param>
      <param name="message">Входящее сообщение.</param>
      <param name="channel">Канал, получивший сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
      <summary>Вызывается, когда все действия <see cref="T:System.ServiceModel.InstanceContext" /> завершаются, чтобы позволить разработчикам предотвратить уничтожение объекта <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
      <returns>Значение true, если служба  должна закрыть и освободить объект <see cref="T:System.ServiceModel.InstanceContext" />, а также изменить значение свойства <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />. В противном случае — значение false.</returns>
      <param name="instanceContext">Объект <see cref="T:System.ServiceModel.InstanceContext" />, который считается бездействующим.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
      <summary>Вызывается, если метод <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> возвращает значение false, чтобы позволить разработчику реализовать обратный вызов с целью уведомить службу  о завершении объекта <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
      <param name="callback">Объект <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />, который уведомляет службу , когда объект <see cref="T:System.ServiceModel.InstanceContext" /> должен быть закрыт и уничтожен.</param>
      <param name="instanceContext">Текущий объект <see cref="T:System.ServiceModel.InstanceContext" />. </param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceProvider">
      <summary>Объявляются методы, предоставляющие объекты служб или перезапускающие объекты служб для службы .</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)">
      <summary>Возвращает объект службы, которому дан указанный объект <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
      <returns>Объект службы, задаваемый пользователем.</returns>
      <param name="instanceContext">Текущий объект <see cref="T:System.ServiceModel.InstanceContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <summary>Возвращает объект службы, которому дан указанный объект <see cref="T:System.ServiceModel.InstanceContext" />.</summary>
      <returns>Объект службы.</returns>
      <param name="instanceContext">Текущий объект <see cref="T:System.ServiceModel.InstanceContext" />.</param>
      <param name="message">Сообщение, вызывающее создание объекта службы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
      <summary>Вызывается, когда объект <see cref="T:System.ServiceModel.InstanceContext" /> перезапускает объект службы.</summary>
      <param name="instanceContext">Контекст экземпляра службы.</param>
      <param name="instance">Перезапускаемый объект службы.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <summary>Определяет методы, позволяющие приложению клиента отображать пользовательский интерфейс, чтобы собирать данные идентификации до создания канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</returns>
      <param name="channel">Клиентский канал.</param>
      <param name="callback">Вызываемый обратно объект.</param>
      <param name="state">Данные в любом состоянии.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Вызывается при завершении свойства <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <summary>Интерфейс, определяющий контракт, который должен быть реализован в таблице фильтров для проверки сообщений по критериям запроса, унаследованным от одного или нескольких фильтров.</summary>
      <typeparam name="TFilterData">Тип данных, сопоставленный с каждым фильтром в таблице.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия точно одного фильтра, и возвращает этот фильтр в выходном параметре.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное или буферизованное сообщение критерию соответствия точно одного фильтра, и возвращает этот фильтр в выходном параметре.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия хотя бы одного фильтра, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение или буферизованное сообщение критерию соответствия хотя бы одного фильтра, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия одного фильтра, и добавляет соответствующие данные фильтра в коллекцию.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия только одного фильтра из таблицы; false, если сообщение не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="value">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="message" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия одного фильтра, и добавляет соответствующие данные фильтра в коллекцию.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия только одного фильтра из таблицы; false, если сообщение не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="value">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="messageBuffer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия хотя бы одного фильтра, и добавляет параметр <paramref name="FilterData" /> из соответствующих фильтров в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Ссылочный параметр, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного фильтра, и добавляет параметр <paramref name="FilterData" /> из соответствующих фильтров в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Ссылочный параметр, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
      <summary>Представляет метод, который вызывается, когда объект <see cref="T:System.ServiceModel.InstanceContext" /> завершает обработку. </summary>
      <param name="instanceContext">Контекст экземпляра, который завершил обработку.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <summary>Абстрактный базовый класс для исключений, которые вызываются, если выполняется попытка доступа к тексту сообщения, когда доступ не разрешается.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> с указанными сведениями о сериализации и контексте.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <summary>Объявляет методы, берущие объект и массив параметров, извлеченных из сообщения, вызывающие метод для этого объекта с этими параметрами и возвращающие выходное значение и параметры вывода метода.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
      <summary>Возвращает <see cref="T:System.Array" /> объектов параметров.</summary>
      <returns>Параметры, которые должны использоваться в качестве аргументов в операции.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
      <summary>Возвращает объект и набор выходных данных объектов из экземпляра и набора входных значений объектов.  </summary>
      <returns>Возвращаемое значение.</returns>
      <param name="instance">Вызываемый объект.</param>
      <param name="inputs">Входные данные для метода.</param>
      <param name="outputs">Выходные данные метода.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Асинхронная реализация метода <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для выполнения асинхронного вызова.</returns>
      <param name="instance">Вызываемый объект.</param>
      <param name="inputs">Входные данные для метода.</param>
      <param name="callback">Асинхронный обратный вызов объекта.</param>
      <param name="state">Связанные данные состояния.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
      <summary>Метод асинхронного завершения.</summary>
      <returns>Возвращаемое значение.</returns>
      <param name="instance">Вызываемый объект.</param>
      <param name="outputs">Выходные данные метода.</param>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
      <summary>Получает значение, указывающее какой из методов: <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> или <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />, вызывается диспетчером.</summary>
      <returns>Значение true, если диспетчер вызывает синхронную операцию, и значение false в противном случае.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Определяет контракт, реализуемый пользовательскими инспекторами параметров, которые обеспечивают проверку или модификацию данных до и после вызовов со стороны службы или клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Вызывается после возвращения вызовов клиента и до отправления ответных сообщений службы.</summary>
      <param name="operationName">Имя вызываемой операции.</param>
      <param name="outputs">Любые выходные объекты.</param>
      <param name="returnValue">Возвращаемое значение операции.</param>
      <param name="correlationState">Любое состояние корреляции, возвращаемое методом <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />, или значение null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Вызывается до отправления вызовов клиента и после возвращения ответных сообщений службы.</summary>
      <returns>Состояние корреляции, возвращаемое в качестве параметра <paramref name="correlationState" /> в методе <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.Если не планируется использовать состояние корреляции, возвращайте значение null.</returns>
      <param name="operationName">Имя операции.</param>
      <param name="inputs">Объекты, передаваемые в метод клиентом.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter">
      <summary>Представляет запрос, которому соответствует любое проверяемое сообщение, отличное от null.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Этот метод возвращает значение true для каждого сообщения, отличного от null.</summary>
      <returns>Возвращает значение true.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Метод <see cref="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.MessageBuffer)" /> возвращает значение true для каждого сообщения, отличного от null.</summary>
      <returns>Возвращает значение true.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter">
      <summary>Представляет запрос, которому не соответствует ни одно проверяемое сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Данный метод возвращает значение false для каждого сообщения, отличного от null.</summary>
      <returns>Возвращает значение false.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Данный метод возвращает значение false для каждого сообщения, отличного от null.</summary>
      <returns>Возвращает значение false.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilter">
      <summary>Абстрактный базовый класс для различных классов фильтров, используемых для запроса сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor">
      <summary>При вызове в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
      <summary>Создается таблица фильтров для фильтра, который имеет заданный тип данных, связанных с ним.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, к которому могут добавляться фильтры, связанные с <paramref name="FilterData" />.</returns>
      <typeparam name="FilterData">Данные, связанные с фильтрами в таблице.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>При переопределении в производном классе проверяет, удовлетворяет ли сообщение критериям фильтра.Текст сообщения не проверяется.</summary>
      <returns>true, если объект <see cref="T:System.ServiceModel.Channels.Message" /> удовлетворяет критериям фильтра; в ином случае — false.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>При переопределении в производном классе проверяет, удовлетворяет ли буферизованное сообщение условиям фильтра.</summary>
      <returns>true, если объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> удовлетворяет критериям фильтра; в ином случае — false.</returns>
      <param name="buffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки. </param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilterException">
      <summary>Базовый класс для исключений, которые вызываются при превышении квоты узлов, проверенных фильтром.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> с заданными объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для отмены сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" />.</summary>
      <param name="message">Сообщение, сопровождающее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> с указанными сообщениями об ошибках и коллекцией фильтров, превысивших квоту узлов.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="filters">Коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, превысивших квоту узлов.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" />, внутреннее исключение, приведшее к текущему исключению, и коллекцию фильтров, превысивших квоту узлов.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
      <param name="filters">Коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, превысивших квоту узлов.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterException.Filters">
      <summary>Получает коллекцию объектов <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, превысивших квоту узлов.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, превысивших квоту узлов.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <summary>Предоставляется информация по общему применению таблицы фильтров.</summary>
      <typeparam name="TFilterData">Тип параметра <paramref name="FilterData" />, связанного с фильтром.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> с приоритетом по умолчанию 0.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> с исходным приоритетом, заданным по умолчанию.</summary>
      <param name="defaultPriority">Приоритет таблицы фильтров по умолчанию.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Добавляет пару «фильтр-<paramref name="FilterData" />» (ключ-значение) в таблицу фильтров.</summary>
      <param name="item">Пара <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;фильтр, <paramref name="FilterData" />&gt;, добавляемая в таблицу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <summary>Добавляет фильтр и сопоставленные <paramref name="FilterData" /> в таблицу фильтров.</summary>
      <param name="filter">Свойство <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, используемое в качестве ключа в добавляемой паре.</param>
      <param name="data">Параметр <paramref name="FilterData" />, связанный с фильтром, используемым в качестве значения в добавляемой паре.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filter" /> уже присутствует в таблице.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)">
      <summary>Добавляет фильтр и сопоставленные ему <paramref name="FilterData" /> в таблицу фильтров действий с указанным приоритетом.</summary>
      <param name="filter">Свойство <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, используемое в качестве ключа в добавляемой паре.</param>
      <param name="data">Параметр <paramref name="FilterData" />, связанный с фильтром, используемым в качестве значения в добавляемой паре.</param>
      <param name="priority">Приоритет добавляемого фильтра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filter" /> не может иметь значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filter" /> уже присутствует в таблице.</exception>
      <exception cref="T:System.InvalidOperationException">Тип параметра <paramref name="filter" />не соответствует типу таблицы.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear">
      <summary>Удаляет все фильтры и сопоставленные им данные фильтра из таблицы фильтров.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Определяет, содержит ли таблица фильтров указанный фильтр и соответствующий ему параметр <paramref name="FilterData" />.</summary>
      <returns>Значение true, если пара <paramref name="filter" />/<paramref name="FilterData" /> содержится в таблице фильтров; в противном случае — значение false.</returns>
      <param name="item">Значение <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <paramref name="FilterData" />&gt;, искомое в таблице.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Определяет, содержит ли таблица фильтров указанный фильтр.</summary>
      <returns>Имеет значение true, если параметр <paramref name="filter" /> содержится в таблице фильтров; в ином случае принимает значение false.</returns>
      <param name="filter">Проверка на наличие <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <summary>Копирует пары фильтр/<paramref name="FilterData" /> в массив, начинающийся с указанного индекса.</summary>
      <param name="array">Массив типа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;фильтр, <paramref name="FilterData" />&gt; с индексацией от нуля, в который копируются пары.</param>
      <param name="arrayIndex">Индекс, с которого начинается копирование.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count">
      <summary>Получает количество пар фильтр/<paramref name="FilterData" />, находящихся в таблице фильтров.</summary>
      <returns>Количество пар фильтр/<paramref name="FilterData" />, находящихся в таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Приписывает таблице фильтров указанный тип фильтров.</summary>
      <returns>Создаваемый объект <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, содержащий указанный фильтр.</returns>
      <param name="filter">Объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, помещаемый в создаваемую таблицу фильтров.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority">
      <summary>Получает или задает для таблицы фильтров приоритет по умолчанию.</summary>
      <returns>Приоритет, присваиваемый фильтрам, добавляемым в таблицу фильтров, по умолчанию.Значение по умолчанию для приоритета по умолчанию равно 0.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по таблице фильтров.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; для прохода по таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия ровно одного фильтра в таблице, и возвращает этот фильтр в параметре out.</summary>
      <returns>Значение true, если сообщение удовлетворяет условиям сопоставления одного из <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> в таблице; значение false, если не выполняются условия ни одного фильтра.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Более одного объекта <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> соответствует параметру <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия ровно одного фильтра в таблице, и возвращает этот фильтр в параметре out.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия ровно одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="buffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Более одного объекта <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> соответствует параметру <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия хотя бы одного объекта <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет условиям сопоставления по крайней мере одного <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> из таблицы; значение false, если не выполняются условия ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного фильтра, и добавляет соответствующие критериям фильтры из блока наивысших приоритетов фильтров, в котором найдено хотя бы одно соответствие, в коллекцию. </summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="buffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия одного объекта <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, и добавляет соответствующие данные фильтра в коллекцию.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="message" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="message" />.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия одного фильтра, и добавляет соответствующие данные фильтра в коллекцию.</summary>
      <returns>Значение true, если буферизованное сообщение удовлетворяет критерию соответствия одного фильтра из таблицы; false, если сообщение не удовлетворяет ни одному критерию фильтров.</returns>
      <param name="buffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное или буферизованное сообщение критерию соответствия хотя бы одного фильтра, и добавляет параметр <paramref name="FilterData" /> фильтров, для которых имеется соответствие, в коллекцию.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия ровно одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий параметр <paramref name="FilterData" /> найденных фильтров действий в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия одного фильтра, и добавляет параметр <paramref name="FilterData" /> найденных фильтров в коллекцию <paramref name="results" />.</summary>
      <returns>Значение true, если буферизованное сообщение удовлетворяет условию сопоставления ровно одного <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> из таблицы; значение false, если не выполняются условия ни одного из фильтров.</returns>
      <param name="buffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий данные фильтров, которые удовлетворяют условию параметра <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Возвращает приоритет конкретного фильтра в таблице.</summary>
      <returns>Приоритет фильтра <paramref name="filter" />.</returns>
      <param name="filter">Объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, помещаемый в создаваемую таблицу фильтров.</param>
      <exception cref="T:System.InvalidOperationException">Указанного фильтра нет в таблице фильтров.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли фильтр только для чтения.</summary>
      <returns>Значение false для всех таблиц фильтров.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Получает или задает данные фильтра, связанные с указанным параметром <paramref name="filter" />.</summary>
      <returns>Данные фильтра, связанные с параметром <paramref name="filter" />.Если указанный параметр <paramref name="filter" /> не найден, операция получения создает исключение <see cref="T:System.Collections.Generic.KeyNotFoundException" />, а операция задания значения создает новый элемент с указанным параметром <paramref name="filter" /> в качестве ключа.</returns>
      <param name="filter">Фильтр <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, связанный с данными фильтра для получения или задания данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> равен null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Свойство получено и параметр <paramref name="filter" /> не найден в таблице.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys">
      <summary>Получает коллекцию всех фильтров, содержащихся в таблице фильтров.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> всех фильтров, содержащихся в таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Удаляет указанную пару фильтр/<paramref name="FilterData" /> из таблицы фильтров.</summary>
      <returns>Значение true, если пара фильтр/<paramref name="FilterData" /> была найдена и удалена; false, если пара не была найдена.</returns>
      <param name="item">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; для удаления из таблицы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Удаляет фильтр и сопоставленный ему параметр <paramref name="FilterData" /> из таблицы фильтров.</summary>
      <returns>Значение true, если фильтр обнаружен и удален; значение false, если фильтр не найден.</returns>
      <param name="filter">Интерфейс <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по таблице фильтров.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для итерации по таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <summary>Проверяет, хранится ли фильтр в таблице фильтров.</summary>
      <returns>Значение true, если в таблице фильтров существует фильтр, с которым связаны данные; в противном случае — значение false.</returns>
      <param name="filter">Параметр <paramref name="filter" />, используемый в качестве ключа для извлечения данных.</param>
      <param name="data">Тип <paramref name="data" />, связанный с <paramref name="filter" />.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values">
      <summary>Получает коллекцию всех параметров <paramref name="FilterData" />, содержащихся в таблице фильтров.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> всех параметров <paramref name="FilterData" />, содержащихся в таблице фильтров.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageQuery">
      <summary>Определяет основные правила работы для классов, которые используются для поиска в сообщении данных, взаимосвязанных определенным образом.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection">
      <summary>Создает коллекцию запросов, которые возвращают определенный тип данных, связанный с запросом.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> запросов, связанных с типом данных.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>При переопределении в производном классе выполняет запрос к сообщению и возвращает результат.Невозможно запросить текст сообщения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />Перечислимая коллекция результатов, отвечающих запросу.</returns>
      <param name="message">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого значения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>При переопределении в производном классе выполняет запрос к сообщению и возвращает результат.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />Перечислимая коллекция результатов, отвечающих запросу.</returns>
      <param name="buffer">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого объекта.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageQueryCollection">
      <summary>Коллекция объектов запроса сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>Выполняет запрос к сообщению и возвращает результат.Невозможно запросить текст сообщения.</summary>
      <returns>Результат запроса.Тип определяется универсальным аргументом <paramref name="TResult" />.</returns>
      <param name="message">Сообщение, к которому должен выполняться запрос.</param>
      <typeparam name="TResult">Тип результата запроса.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Выполняет запрос к сообщению и возвращает результат.</summary>
      <returns>Результат запроса.Тип определяется универсальным аргументом <paramref name="TResult" />.</returns>
      <param name="buffer">Сообщение, к которому должен выполняться запрос.</param>
      <typeparam name="TResult">Тип возвращаемого объекта.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageQueryTable`1">
      <summary>Управляет коллекцией объектов запроса сообщений.</summary>
      <typeparam name="TItem">Тип значений, возвращаемых запросами.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <summary>Добавляет элемент, определенный в виде пары «ключ-значение».</summary>
      <param name="item">Универсальный объект <see cref="T:System.Collections.Generic.KeyValuePair`2" /> для добавления.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)">
      <summary>Добавляет элемент в коллекцию с использованием системы «ключ-значение».</summary>
      <param name="key">Объект <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" />, выступающий в качестве ключа.</param>
      <param name="value">Добавляемое значение, связанное с ключом.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <summary>Определяет, содержит ли коллекция определенный элемент в формате структуры «ключ-значение».</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение true, если элемент найден в коллекции, и значение false в противном случае.</returns>
      <param name="item">Ключ искомого объекта.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageQuery)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным ключом.</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение true, если коллекция содержит элемент с данным ключом, и значение false в противном случае.</returns>
      <param name="key">Искомый ключ.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0}[],System.Int32)">
      <summary>Копирует элементы коллекции в массив <see cref="T:System.Array" />, начиная с заданного индекса. </summary>
      <param name="array">Одномерный массив, куда копируются элементы из данной коллекции.Индекс в массиве должен начинаться с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Count">
      <summary>Возвращает количество пар «запрос-данные» в таблице.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>Выполняет запрос к сообщению и возвращает коллекцию результатов.Невозможно запросить текст сообщения.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />Перечисляемая коллекция результатов.</returns>
      <param name="message">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого результата.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Выполняет запрос к сообщению и возвращает результат.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />Результат запроса.Можно перечислять несколько результатов.</returns>
      <param name="buffer">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого результата.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.GetEnumerator">
      <summary>Возвращает перечислитель, который последовательно просматривает коллекцию.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" />Объект перечислителя, который может использоваться для итерации по коллекции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступна ли таблица только для чтения.</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение false для всех таблиц.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Item(System.ServiceModel.Dispatcher.MessageQuery)">
      <summary>Возвращает или задает объект запроса, связанный с типом данных.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
      <param name="key">Возвращаемый или задаваемый объект запроса.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Keys">
      <summary>Возвращает коллекцию всех ключей коллекции, содержащихся в таблице.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />Коллекция всех объектов запроса, содержащихся в таблице.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <summary>Удаляет первое вхождение указанного объекта из коллекции.</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение true, если элемент успешно удален из коллекции, и значение false в противном случае.Этот метод также возвращает значение false, если элемент не найден в коллекции.</returns>
      <param name="item">Объект <see cref="T:System.Collections.Generic.KeyValuePair" />, удаляемый из коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)">
      <summary>Удаляет из коллекции элемент, связанный с указанным ключом.</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение true, если элемент обнаружен и удален, и значение false, если элемент не найден.</returns>
      <param name="key">Ключ элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, используемый для прохода по коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />Перечислитель для прохода по коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageQuery,`0@)">
      <summary>Проверяет, хранится ли в таблице совпадающий запрос.</summary>
      <returns>
        <see cref="T:System.Boolean" />Значение true, если в таблице присутствует совпадающий запрос (значение, связанное с запросом, находится в параметре out<paramref name="value" />), и значение false в противном случае.</returns>
      <param name="key">Запрос, используемый в качестве ключа для получения данных.</param>
      <param name="value">Значение, связанное с запросом.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Values">
      <summary>Возвращает коллекцию всех результирующих значений, содержащихся в таблице.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />Все результирующие значения, содержащиеся в таблице.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <summary>Исключение, которое создается в том случае, когда совпадения есть по нескольким фильтрам, а ожидался только один.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> с указанным сообщением об ошибке и коллекцией фильтров. </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="filters">Коллекция фильтров сообщений.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />. </summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> с указанным сообщением об ошибке, исключением и коллекцией фильтров.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
      <param name="filters">Коллекция фильтров сообщений.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.Filters">
      <summary>Возвращает коллекцию фильтров, вызвавших создаваемое исключение.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> фильтров <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, которая содержит фильтры, вызвавшие создаваемое исключение.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <summary>Исключение, которое происходит при направлении <see cref="T:System.Xml.XPath.XPathNavigator" /> для проверки тела небуферизованного сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <summary>Представляет запрос, проверяющий, соответствует ли сообщение адресу конечной точки, при помощи метода Соответствия самого длинного префикса для компонента URI.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />. </summary>
      <param name="address">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />. </summary>
      <param name="address">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</param>
      <param name="includeHostNameInComparison">Значение true, если имя узла включается в сравнение адресов конечной точки; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address">
      <summary>Получает адрес конечной точки, для которого класс <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> проверяет сообщения.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.EndpointAddress" />, по которой сообщения проверяются фильтром <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1">
      <summary>Создает новую таблицу фильтров, одновременно проверяющую сообщения по нескольким адресам конечной точки.</summary>
      <returns>Объект, реализующий интерфейс <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, который может содержать фильтры <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> со связанным параметром <paramref name="FilterData" />. </returns>
      <typeparam name="FilterData">Данные, связанные с фильтрами в таблице.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison">
      <summary>Возвращает значение, которое указывает, включено ли имя узла в сравнение адресов конечной точки.</summary>
      <returns>Значение true, если имя узла включается в сравнение адресов конечной точки; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Проверяет, соответствует ли сообщение указанному адресу конечной точки.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.Message" /> соответствует адресу конечной точки, указанному в фильтре; в противном случае — значение false. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Проверяет, удовлетворяет ли буферизованное сообщение указанному адресу конечной точки.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> соответствует адресу конечной точки; в противном случае — значение false. </returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <summary>Открывает произвольный доступ только для чтения к данным, содержащимся в документах XML, и предоставляет возможности создания запросов для заданных узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)">
      <summary>При переопределении в производном классе возвращает значение, которое описывает порядок двух заданных позиций в документе.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeOrder" />, которое описывает отношение позиций <paramref name="firstPosition" /> и <paramref name="secondPosition" /> в документе.</returns>
      <param name="firstPosition">Первая позиция в сравнении.</param>
      <param name="secondPosition">Вторая позиция в сравнении.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="firstPosition" /> или <paramref name="secondPosition" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition">
      <summary>При переопределении в производном классе возвращает или задает значение, связанное с узлом данных, на который указывает навигатор XPath.</summary>
      <returns>Значение, связанное с текущей позицией курсора навигатора. </returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)">
      <summary>При переопределении в производном классе возвращает локальное имя узла в указанной позиции.</summary>
      <returns>Локальное имя узла в заданной позиции.Возвращается значение <see cref="F:System.String.Empty" />, если узел не имеет локального имени, например, если текущая позиция указывает на текстовый узел.</returns>
      <param name="nodePosition">Позиция узла, для которого извлекается локальное имя.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="nodePosition" /> недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)">
      <summary>При переопределении в производном классе возвращает имя узла в заданной позиции.</summary>
      <returns>Имя узла в позиции <paramref name="nodePosition" />.Возвращается значение <see cref="F:System.String.Empty" />, если у узла нет имени.</returns>
      <param name="nodePosition">Позиция узла, для которого извлекается имя.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="nodePosition" /> недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)">
      <summary>При переопределении в производном классе возвращает пространство имен узла в заданной позиции.</summary>
      <returns>Пространство имен узла в позиции <paramref name="nodePosition" />.Возвращается значение <see cref="F:System.String.Empty" />, если у узла нет пространства имен.</returns>
      <param name="nodePosition">Позиция узла, для которого извлекается пространство имен.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="nodePosition" /> недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)">
      <summary>При переопределении в производном классе возвращает тип узла в заданной позиции.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XPath.XPathNodeType" />, указывающих тип узла XML.</returns>
      <param name="nodePosition">Позиция узла, для которого извлекается тип.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="nodePosition" /> недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)">
      <summary>При переопределении в производном классе возвращает текстовое значение узла в заданной позиции.</summary>
      <returns>Текстовое значение узла в позиции <paramref name="nodePosition" />.Возвращается значение <see cref="F:System.String.Empty" />, если у узла нет текстового значения.</returns>
      <param name="nodePosition">Позиция узла, для которого извлекается текстовое значение.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="nodePosition" /> недопустимо.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <summary>Управляет производительностью службы для оптимизации доступности и эффективности.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls">
      <summary>Возвращает или задает максимальное количество сообщений, которые могут одновременно обрабатываться во всех объектах диспетчера в объекте <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
      <returns>Верхний предел активных сообщений в службе.Значение по умолчанию — 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances">
      <summary>Возвращает или устанавливает максимальное число объектов службы, которые могут выполняться одновременно.</summary>
      <returns>Максимальное число объектов <see cref="T:System.ServiceModel.InstanceContext" />, существующих в службе одновременно.Значение по умолчанию — 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions">
      <summary>Возвращает или устанавливает значение, которое определяет максимальное количество сеансов, которые может принимать объект <see cref="T:System.ServiceModel.ServiceHost" /> одновременно.</summary>
      <returns>Максимальное количество сеансов, принимаемых узлом службы.Значение по умолчанию — 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <summary>Определяет несколько функций XPath и сопоставления пространства имен, обычно используемые при оценке выражений XPath вместе с документами SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> с заданным объектом <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">Класс <see cref="T:System.Xml.NameTable" />, используемый для внутреннего хранения строк.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)">
      <summary>Сравнивает базовый идентификатор URI двух документов, основываясь на порядке загрузки документов процессором XSLT.</summary>
      <returns>Всегда возвращает значение 0.</returns>
      <param name="baseUri">Базовый универсальный код ресурса (URI) первого документа.</param>
      <param name="nextBaseUri">Базовый URI второго документа.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Оценивает, будут ли узлы пустых пространств сохранены или срезаны в данном контексте.</summary>
      <returns>Всегда возвращает значение false.</returns>
      <param name="node">Узел пустого пространства, который должен быть сохранен или отброшен в текущем контексте.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>Разрешает ссылку на функцию и возвращает объект T:System.Xml.Xsl.IXsltContextFunction, представляющий функцию.</summary>
      <returns>Объект T:System.Xml.Xsl.IXsltContextFunction, представляющий функцию.</returns>
      <param name="prefix">Префикс функции для использования в выражениях XPath.</param>
      <param name="name">Имя функции.</param>
      <param name="argTypes">Массив типов аргументов разрешаемой функции.Это позволяет выбрать нужный метод из нескольких, имеющих одно и то же имя (например, перегруженных методов).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argTypes" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)">
      <summary>Разрешает ссылку переменной и возвращает объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий переменную.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий переменную во время выполнения.</returns>
      <param name="prefix">Префикс переменной для использования в выражениях XPath.</param>
      <param name="name">Имя переменной.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace">
      <summary>Получает значение, указывающее, следует ли включать узлы пустых пространств в выходной поток данных.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <summary>Представляет запрос XML документа, определенного выражением XPath 1.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, который соответствует всем XML документам с правильным форматом.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> с использованием выражения XPath для задания условий запроса для фильтра.</summary>
      <param name="xpath">Значение <see cref="T:System.String" />, содержащее выражение XPath 1.0. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, используя указанное выражение XPath и диспетчер пространства имен.</summary>
      <param name="xpath">Выражение XPath 1.0. </param>
      <param name="namespaces">Объект <see cref="T:System.Xml.XmlNamespaceManager" />, который разрешает все префиксы пространств имен в <paramref name="xpath" />. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, используя указанное выражение XPath и <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
      <param name="xpath">Выражение XPath 1.0 для фильтра. </param>
      <param name="context">Средство <see cref="T:System.Xml.Xsl.XsltContext" />, разрешающее любые префиксы пространства имен, настраиваемые функции или переменные в <paramref name="xpath" />. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> путем считывания потокового XPath с указанным модулем чтения XML.</summary>
      <param name="reader">Средство <see cref="T:System.Xml.XmlReader" /> предназначено для чтения потоковых выражений XPath. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> путем считывания потокового XPath с указанным средством чтения XML и использования указанного диспетчера пространства имен.</summary>
      <param name="reader">Средство <see cref="T:System.Xml.XmlReader" /> предназначено для чтения потоковых выражений XPath. </param>
      <param name="namespaces">Средство <see cref="T:System.Xml.XmlNamespaceManager" />, разрешающее любые префиксы пространства имен в выражениях XPath из <paramref name="reader" />.Также может быть объектом <see cref="T:System.Xml.Xsl.XsltContext" />, который определяет пользовательские функции или переменные.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> не расположен в элементе запуска.</exception>
      <exception cref="T:System.InvalidOperationException">Возникли проблемы при чтении атрибута диалекта или URI пространства имен, либо обнаружены повторяющиеся атрибуты.</exception>
      <exception cref="T:System.InvalidOperationException">Считан неверный атрибут диалекта: не относящийся к XPath.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> путем считывания потокового выражения XPath с помощью указанного модуля чтения XML и объекта <see cref="T:System.Xml.Xsl.XsltContext" /> для разрешения пространства имен, пользовательских функций и переменных.</summary>
      <param name="reader">Средство <see cref="T:System.Xml.XmlReader" /> предназначено для чтения потоковых выражений XPath. </param>
      <param name="context">Объект <see cref="T:System.Xml.Xsl.XsltContext" />, разрешающий все префиксы пространств имен, функции и переменные в выражении XPath из <paramref name="reader" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1">
      <summary>Создает <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />, имеющую указанный тип данных, связанных с ней.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, к которому могут добавляться фильтры, связанные с <paramref name="FilterData" />.</returns>
      <typeparam name="FilterData">Данные, связанные с фильтрами в таблице.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Проверяет, удовлетворяет ли критериям фильтра XPath указанное сообщение.Такая форма не разрешается для доступа к тексту сообщения.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.Message" /> удовлетворяет условиям фильтра, и значение false в противном случае. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null. </exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">В процессе вычисления XPath выполнена попытка проверить текст сообщения.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Определяет, удовлетворяет ли буферизованное сообщение критериям запроса фильтра XPath.</summary>
      <returns>Значение true, если объект <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.MessageBuffer)" /> удовлетворяет условиям фильтра, и значение false в противном случае. </returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)">
      <summary>Определяет, удовлетворяет ли критериям запроса фильтра XPath предоставленный указанным оптимизированным навигатором XPath документ XML.</summary>
      <returns>Значение true, если данные из <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> удовлетворяют условиям фильтра, и значение false в противном случае. </returns>
      <param name="navigator">Объект <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />, предоставляющий данные для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)">
      <summary>Оценивает фильтр посредством указанного навигатора XPath.</summary>
      <returns>Значение true, если данные из <see cref="T:System.Xml.XPath.XPathNavigator" /> удовлетворяют условиям фильтра, и значение false в противном случае. </returns>
      <param name="navigator">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, предоставляющий данные для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces">
      <summary>Возвращает диспетчер, который разрешает префиксы пространств имен в выражении XPath, определяющем фильтр.</summary>
      <returns>Интерфейс <see cref="T:System.Xml.XmlNamespaceManager" /> для текущего объекта <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota">
      <summary>Получает или задает максимальное количество узлов, которые необходимо просматривать во время оценки фильтра.</summary>
      <returns>Максимальное количество узлов, которые необходимо просматривать во время оценки фильтра.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Квота равна нулю или имеет отрицательное значение. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema">
      <summary>Получает схему для текущего документа XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий текущий документ.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)">
      <summary>Считывает текущий узел XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения документа XML.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> не расположен в элементе запуска.</exception>
      <exception cref="T:System.ArgumentException">Средством <paramref name="reader" /> был найден пустой элемент.</exception>
      <exception cref="T:System.InvalidOperationException">Содержимое узла недопустимо.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)">
      <summary>Записывает узел при помощи <paramref name="writer" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, используемое для записи узла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <summary>Инициализирует текущий экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> с XPath, полученным из указанного средства чтения XML, при помощи указанного диспетчера пространства имен.</summary>
      <param name="reader">Средство <see cref="T:System.Xml.XmlReader" />, используемое для десериализации фильтра XPath.</param>
      <param name="namespaces">Средство <see cref="T:System.Xml.XmlNamespaceManager" />, используемое для управления пространством имен, из которого производится чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Получает тип схемы XML, используемый для сериализации фильтра XPath.</summary>
      <returns>Средство <see cref="T:System.Xml.Schema.XmLSchemaType" />, используемое для сериализации фильтра XPath.</returns>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmLSchemaSet" />, содержащий кэш схем языка определения схемы XML (XSD).</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="schemas" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Явная реализация интерфейса, получающего текущую схему.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий текущий документ.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Явная реализация интерфейса, считывающего текущий узел XML.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения документа XML.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Явная реализация интерфейса, записывающего узел XML при помощи <paramref name="writer" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, используемое для записи узла.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize">
      <summary>Сжимает фильтр XPath, который высвобождает всю неиспользуемую память.</summary>
      <exception cref="T:System.NotImplementedException">Во всех случаях. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)">
      <summary>Сериализует фильтр XPath в объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство <see cref="T:System.Xml.XmlWriter" />, используемое для сериализации фильтра XPath.</param>
      <param name="resolver">Средство <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемое для разрешения любого конфликта пространства имен для фильтра XPath.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)">
      <summary>Выполняет запись элемента XML XPath с помощью указанного модуля записи.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, используемый для записи объекта <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />. </param>
      <param name="prefix">Префикс пространства имен элемента XML XPath. </param>
      <param name="localName">Локальное имя элемента XML XPath. </param>
      <param name="ns">URI пространства имен, который связывается с элементом XML. </param>
      <param name="writeNamespaces">Значение true, если пространства имен должны проходить сериализацию по отдельности в виде атрибутов. В противном случае — значение false. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="writer" /> равно null. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="localName" /> равно null. </exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="localName" /> имеет длину, равную 0. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath">
      <summary>Получает выражение XPath, определяющее критерии запроса для фильтра.</summary>
      <returns>Выражение XPath для фильтра.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <summary>Содержит коллекцию пар фильтр/данные для эффективного сопоставления.</summary>
      <typeparam name="TFilterData">Тип данных фильтра, сопоставленных с каждым фильтром в таблице.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <param name="capacity">Исходная емкость таблицы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Добавляет пару фильтр/<paramref name="FilterData" /> (ключ/значение) в <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <param name="item">Пара <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;фильтр, <paramref name="FilterData" />&gt;, добавляемая в таблицу.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <summary>Добавляет пару фильтр/данные в таблицу фильтров.</summary>
      <param name="filter">Свойство <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, используемое в качестве ключа в добавляемой паре.Должно быть экземпляром <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</param>
      <param name="data">Параметр <paramref name="FilterData" />, связанный с фильтром, используемым в качестве значения в добавляемой паре.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="filter" /> не является классом <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)">
      <summary>Добавляет пару фильтр/данные в таблицу фильтров.</summary>
      <param name="filter">Свойство <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, используемое в качестве ключа в добавляемой паре.</param>
      <param name="data">Параметр <paramref name="FilterData" />, связанный с фильтром, используемым в качестве значения в добавляемой паре.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear">
      <summary>Удаление всех пар фильтр/данные из таблицы фильтров.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Определяет, содержит ли таблица фильтров указанный фильтр и соответствующий ему параметр <paramref name="FilterData" />.</summary>
      <returns>Значение true, если пара «фильтр-FilterData» содержится в таблице фильтров; в противном случае — значение false.</returns>
      <param name="item">Значение <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <paramref name="FilterData" />&gt;, искомое в таблице.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Определяет, содержит ли таблица фильтров указанный фильтр.</summary>
      <returns>Имеет значение true, если параметр <paramref name="filter" /> содержится в таблице фильтров; в ином случае принимает значение false.</returns>
      <param name="filter">Проверка на наличие <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <summary>Копирует пары фильтр/<paramref name="FilterData" /> в массив, начинающийся с указанного индекса.</summary>
      <param name="array">Массив типа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;фильтр, <paramref name="FilterData" />&gt;, в который копируются пары.</param>
      <param name="arrayIndex">Индекс, с которого начинается копирование.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count">
      <summary>Получает количество пар фильтр/данные, находящиеся в таблице фильтров на данный момент.</summary>
      <returns>Количество пар фильтр/данные, находящиеся в таблице фильтров на данный момент.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по таблице фильтров.</summary>
      <returns>Метод <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt;, который можно использовать для итерации по таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия ровно одного фильтра в таблице, и возвращает этот фильтр в параметре out.</summary>
      <returns>Фильтр <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, условиям запроса которого отвечает сообщение, или значение null, если не найдены фильтры для сопоставления.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="message" />.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное или буферизованное сообщение критерию соответствия ровно одного фильтра в таблице, и возвращает этот фильтр в параметре out.</summary>
      <returns>Фильтр <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, условиям запроса которого отвечает буферизованное сообщение, или значение null, если не найдены фильтры для сопоставления.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBuffer" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное или буферизованное сообщение критерию соответствия для одного объекта <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />, и возвращает этот фильтр в параметре out.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, чьим критериям запроса отвечает навигатор; или значение null, если по запросу не найдено ни одного фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="message" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное или буферизованное сообщение критерию соответствия для одного объекта <see cref="T:System.Xml.XPath.XPathNavigator" />, и возвращает этот фильтр в параметре out.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, чьим критериям запроса отвечает навигатор; или значение null, если по запросу не найдено ни одного фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для проверки.</param>
      <param name="filter">Параметр out, содержащий фильтр, которому удовлетворяет параметр <paramref name="navigator" />.Если фильтр не найден, параметру присваивается значение по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия хотя бы одного <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="navigator">Объект <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного <see cref="T:System.Xml.XPath.XPathNavigator" />, и добавляет соответствующие фильтры в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="messageBuffer" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="navigator">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для проверки.</param>
      <param name="results">Ссылочный параметр, в котором хранятся объекты <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, соответствующие условиям фильтра <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="matches" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия одного <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> в таблице, и возвращает данные найденного фильтра.</summary>
      <returns>Значение true, если сообщение удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" /> для фильтра, удовлетворяющего условиям <paramref name="message" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="message" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия одного <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> в таблице, и возвращает данные найденного фильтра.</summary>
      <returns>Значение true, если буферизованное сообщение удовлетворяет критерию соответствия одного фильтра из таблицы; false, если сообщение не удовлетворяет ни одному критерию фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" /> для фильтра, удовлетворяющего условиям <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли критерию соответствия одного <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> в таблице указанному в параметре <paramref name="navigator" />, и возвращает данные найденного фильтра в параметре out.</summary>
      <returns>true, если параметр <paramref name="navigator" /> удовлетворяет критериям соответствия точно одного фильтра в таблице; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="navigator" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)">
      <summary>Возвращает значение, указывающее, удовлетворяет ли критерию соответствия одного <see cref="T:System.Xml.Xpath.XPathNavigator" /> в таблице указанному в параметре <paramref name="navigator" />, и возвращает данные найденного фильтра в параметре out.</summary>
      <returns>true, если параметр <paramref name="navigator" /> удовлетворяет критериям соответствия точно одного фильтра в таблице; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для проверки.</param>
      <param name="data">Параметр out, в котором хранится параметр <paramref name="FilterData" />, удовлетворяющий условиям <paramref name="navigator" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">Найдено несколько фильтров, соответствующих параметру <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное сообщение критерию соответствия хотя бы одного фильтра, и добавляет данные фильтров, для которых имеется соответствие, в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">Была предпринята попытка проверить содержимое текста сообщения с помощью фильтра.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли заданное буферизованное сообщение критерию соответствия хотя бы одного фильтра, и добавляет данные фильтров, для которых имеется соответствие, в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="message" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если не удовлетворяются критерии ни одного из фильтров.</returns>
      <param name="messageBuffer">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли критерию соответствия хотя бы одного <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> в таблице заданный параметр <paramref name="navigator" /> и добавляет данные фильтров, отвечающих запросу, в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="navigator" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})">
      <summary>Возвращает значение, указывающее, удовлетворяет ли критерию соответствия хотя бы одного <see cref="T:System.Xml.Xpath.XPathNavigator" /> в таблице заданный параметр <paramref name="navigator" /> и добавляет данные фильтров, отвечающих запросу, в коллекцию.</summary>
      <returns>Значение true, если параметр <paramref name="navigator" /> удовлетворяет критерию соответствия по крайней мере одного фильтра из таблицы; false, если параметр не удовлетворяет ни одному критерию фильтра.</returns>
      <param name="navigator">Объект <see cref="T:System.Xml.Xpath.XPathNavigator" /> для проверки.</param>
      <param name="results">Параметр ссылки, хранящий данные фильтров, которые удовлетворяют условию, в универсальной коллекции <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="navigator" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="results" /> равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly">
      <summary>Список <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> доступен не только для чтения.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Получает или задает данные фильтра, связанные с указанным параметром <paramref name="filter" />.</summary>
      <returns>Данные фильтра, связанные с параметром <paramref name="filter" />.Если указанный параметр <paramref name="filter" /> не найден, операция получения создается исключение <see cref="T:System.Collections.Generic.KeyNotFoundException" />, а операция задания значения создает новый элемент с указанным параметром <paramref name="filter" /> в качестве ключа.</returns>
      <param name="filter">Фильтр <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, связанный с данными фильтра для получения или задания данных.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Произошла ошибка компилятора. </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Свойство получено, а параметр <paramref name="filter" /> не найден в таблице.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys">
      <summary>Получает коллекцию всех фильтров, содержащихся в списке <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> всех объектов <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, содержащихся в таблице фильтров.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota">
      <summary>Возвращает или задает максимальное количество узлов XML-документа, которые можно проверить отдельными фильтрами за один вызов метода Match.Это значение применяется к каждому фильтру.</summary>
      <returns>Количество узлов, которые можно проверить.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Удаляет фильтр и сопоставленные данные фильтра из таблицы фильтров.</summary>
      <returns>Значение true, если пара фильтр/<paramref name="FilterData" /> была найдена и удалена; false, если пара не была найдена.</returns>
      <param name="item">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; для удаления из таблицы.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Удаляет фильтр и сопоставленные данные фильтра из таблицы фильтров.</summary>
      <returns>Значение true, если фильтр обнаружен и удален; в противном случае — значение false. </returns>
      <param name="filter">Интерфейс <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="filter" /> не является объектом <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)">
      <summary>Удаляет объект <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> и сопоставленные ему данные фильтра из таблицы фильтров.</summary>
      <returns>Значение true, если <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> обнаружен и удален; в противном случае — значение false.</returns>
      <param name="filter">Интерфейс <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="filter" /> равно null.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="filter" /> не является классом <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по таблице фильтров.</summary>
      <returns>Метод <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt;, который можно использовать для итерации по таблице фильтров.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize">
      <summary>Сжимает таблицу фильтров, удаляя все лишние распределения или буферы.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <summary>Проверяет, хранится ли фильтр в таблице фильтров.</summary>
      <returns>Значение true, если параметр <paramref name="filter" /> присутствует в таблице фильтров; в противном случае — значение false.</returns>
      <param name="filter">Ключ для извлечения данных.</param>
      <param name="data">Параметр <paramref name="data" />, связанный с параметром <paramref name="filter" />, если этот метод возвращает значение true; в противном случае — значение по умолчанию для типа параметра <paramref name="data" />.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values">
      <summary>Получает коллекцию всех параметров <paramref name="FilterData" />, содержащихся в списке <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> всех параметров <paramref name="FilterData" />, содержащихся в таблице фильтров.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.ServiceModel.XPathMessageQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>Выполняет запрос к сообщению.Невозможно запросить текст сообщения.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />Перечислимая коллекция результатов, отвечающих запросу.</returns>
      <param name="message">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого объекта.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Выполняет запрос XPath к сообщению.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />Перечислимая коллекция результатов, отвечающих запросу.</returns>
      <param name="buffer">Сообщение для запроса.</param>
      <typeparam name="TResult">Тип возвращаемого результата.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)">
      <summary>Вставляет объект запроса XPath в коллекцию по указанному индексу.</summary>
      <param name="index">Расположение в коллекции, по которому вставляется элемент.</param>
      <param name="item">Объект запроса XPath для вставки.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.RemoveItem(System.Int32)">
      <summary>Удаляет из коллекции элемент по указанному индексу.</summary>
      <param name="index">Расположение удаляемого элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)">
      <summary>Заменяет элемент по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение элемента по указанному индексу.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <summary>Исключение, которое вызывается, когда превышается квота узлов, доступных для проверки объектом XPathNavigator.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> с данными, которые указывают источник и назначение потока, а также сведения, которые требуются для сериализации исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathResult">
      <summary>Содержит значение, возвращаемое запросом XPath.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathResult.Dispose">
      <summary>Освобождает все ресурсы, принадлежащие объекту.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean">
      <summary>Возвращает результат запроса XPath в виде логического значения.</summary>
      <returns>
        <see cref="T:System.Boolean" />
      </returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset">
      <summary>Возвращает результат запроса XPath в виде перечисляемого набора узлов.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" />Коллекция узлов XPath, доступная для итерации. </returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber">
      <summary>Возвращает результат запроса XPath в виде числа.</summary>
      <returns>
        <see cref="T:System.Double" />
      </returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsString">
      <summary>Возвращает результат запроса XPath в виде строки.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathResult.ResultType">
      <summary>Возвращает тип значения, возвращаемого запросом XPath.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathResultType" />Одно из значений перечисления.Чтобы получить фактический результат, используйте соответствующий метод.Например, для значения <see cref="M:System.Xml.XPath.XPathResultType.Number" /> используйте метод <see cref="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding">
      <summary>Класс <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> сопоставляет сообщения Microsoft Message Queuing (MSMQ) с сообщениями .</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor(System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> с помощью заданного объекта <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />.</summary>
      <param name="securityMode">Режим безопасности поддерживается каналом интеграции службы Message Queuing (MSMQ).</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение находится вне диапазона значений перечисления <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> на основе параметров указанного элемента привязки конфигурации.</summary>
      <param name="configurationName">Значение атрибута configurationName, идентифицирующее элемент binding, параметры которого используются для инициализации привязки.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.CreateBindingElements">
      <summary>Возвращает элементы привязки в основном стеке профиля.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащий стек элементов привязки в основном стеке профиля.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.Security">
      <summary>Получает объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" />, связанный с данной привязкой.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" />, связанный с данной привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.SerializationFormat">
      <summary>Получает или задает формат сериализации, используемый при сериализации и десериализации сообщения.</summary>
      <returns>Объект перечисления <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, представляющий используемый тип сериализации.</returns>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.ShouldSerializeSecurity">
      <summary>Возвращает значение, показывающее, следует ли сериализовать сведения о безопасности.</summary>
      <returns>Значение true, если сведения о безопасности следует сериализовать; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement">
      <summary>Этот элемент привязки можно использовать, чтобы разрешить приложениям  отправлять и принимать сообщения от существующих приложений MSMQ, в которых используется COM, собственные API-интерфейсы MSMQ или API-интерфейсы в <see cref="N:System.Messaging" />.Этот класс используется для отправки сообщений приложениям на базе MSMQ и получения сообщений от таких приложений.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет построение фабрики канала с использованием предоставленного контекста.</summary>
      <returns>Фабрику канала интеграции MSMQ можно использовать для создания каналов для отправки сообщений в существующие приложения MSMQ.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение фабрики канала.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение контекста — null.</exception>
      <exception cref="T:System.ArgumentException">Значение свойства <paramref name="TChannel" /> отличается от IOutputChannel.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <paramref name="ExactlyOnce" /> имеет значение true, а свойство <paramref name="Durable" /> — значение false.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство CustomDeadLetterQueue имеет значение, отличное от null; свойство DeadLetterQueue имеет значение, отличное от Custom.</exception>
      <exception cref="T:System.InvalidOperationException">В Windows 2003/XP свойству DeadLetterQueue присваивается значение «Custom».</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение «false»; свойство DeadLetterQueue имеет значение «Custom».</exception>
      <exception cref="T:System.InvalidOperationException">Задано свойство CustomDeadLetterQueue, и отсутствует разрешение на запись в очередь, или очередь не существует.</exception>
      <exception cref="T:System.InvalidOperationException">Если очередь CustomDeadLetterQueue является нетранзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> задан как «WindowsDomain», и если MSMQ установлен без интеграции Active Directory.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> имеет значение «None», и <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> имеет значение, отличное от «None».</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> имеет значение «Certificate» или «WindowsDomain», а <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> имеет значение «None».</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет построение прослушивателя канала с использованием предоставленного контекста.</summary>
      <returns>Прослушиватель канала интеграции MSMQ можно использовать для создания каналов для отправки сообщений в существующие приложения MSMQ.</returns>
      <param name="context">Метод <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение прослушивателя канала.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение контекста — null.</exception>
      <exception cref="T:System.ArgumentException">Значение свойства <paramref name="TChannel" /> отличается от IInputChannel.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение true, а свойство Durable — значение false.</exception>
      <exception cref="T:System.InvalidOperationException">Очередь не доступна для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение true, очередь является нетранзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство ExactlyOnce имеет значение false, очередь является транзакционной.</exception>
      <exception cref="T:System.InvalidOperationException">В Windows Vista свойству ReceiveErrorHandling присвоено значение Move, и имя очереди содержит знак ";".</exception>
      <exception cref="T:System.InvalidOperationException">Свойству ExactlyOnce присвоено значение true, поэтому в Windows Vista невозможно открыть вложенную очередь повторной отправки.</exception>
      <exception cref="T:System.InvalidOperationException">Свойству ReceiveErrorHandling присвоено значение Reject или Move, и платформой является Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> задан как «WindowsDomain», и если MSMQ установлен без интеграции Active Directory.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> имеет значение «None», и <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> имеет значение, отличное от «None».</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> имеет значение «Certificate» или «WindowsDomain», а <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> имеет значение «None».</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, которое позволяет определить, можно ли выполнить построение фабрики канала с использованием предоставленного контекста.</summary>
      <returns>Значение true, если возможно выполнить построение фабрики канала с использованием предоставленного контекста; в противном случае — значение false.Этот метод возвращает значение true только в случае, если свойство <paramref name="TChannel" /> имеет значение <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение фабрики канала.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, которое позволяет определить, можно ли выполнить построение прослушивателя канала с использованием предоставленного контекста.</summary>
      <returns>Значение true, если можно построить прослушиватель канала с использованием предоставленного контекста; в противном случае — значение false.Этот метод возвращает значение true только в случае, если свойство <paramref name="TChannel" /> имеет значение <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</returns>
      <param name="context">Метод <see cref="T:System.ServiceModel.Channels.BindingContext" />, с помощью которого выполняется построение прослушивателя канала.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Clone">
      <summary>Возвращает клон элемента привязки.</summary>
      <returns>Клон элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Получает свойство запрашиваемого типа из заданного контекста BindingContext.</summary>
      <returns>Объект типа <paramref name="T" />.</returns>
      <param name="context">Контекст привязок.</param>
      <typeparam name="T">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Контекст имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme">
      <summary>Получает строку <see cref="T:System.String" />, в которой содержится схема, используемая данным элементом привязки.</summary>
      <returns>Строка <see cref="T:System.String" />, в которой содержится схема, используемая элементом привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat">
      <summary>Возвращает или задает формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений MSMQ.</summary>
      <returns>Формат <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />, используемый при сериализации сообщений MSMQ.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение находится вне диапазона значений <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes">
      <summary>Возвращает или задает массив объектов <see cref="T:System.Type" />, содержащий типы, в которые следует выполнить десериализацию сообщений.</summary>
      <returns>Массив объектов <see cref="T:System.Type" />, содержащий типы, в которые следует выполнить десериализацию сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty">
      <summary>Представляет свойства интеграции службы Message Queuing (MSMQ) для сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AcknowledgeType">
      <summary>Получает или задает тип подтверждения, которое должно возвращаться передающему приложению.</summary>
      <returns>Тип подтверждения, которое должно возвращаться передающему приложению.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Acknowledgment">
      <summary>Получает сообщение подтверждения, сформированное службой Message Queuing (MSMQ).</summary>
      <returns>Сообщение подтверждения, сформированное службой Message Queuing.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AdministrationQueue">
      <summary>Получает или задает очередь, принимающую подтверждающие сообщения, созданные службой Message Queuing (MSMQ).</summary>
      <returns>Очередь, принимающая подтверждающие сообщения, созданные службой Message Queuing.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AppSpecific">
      <summary>Указывает дополнительные сведения, относящиеся к приложению.</summary>
      <returns>Значение типа  integer, представляющее дополнительные сведения, относящиеся к приложению.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.ArrivedTime">
      <summary>Получает или задает время поступления сообщения в конечную очередь.</summary>
      <returns>Время поступления сообщения в конечную очередь.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Authenticated">
      <summary>Возвращает или задает значение, указывающее, прошло ли сообщение проверку подлинности.</summary>
      <returns>Значение true, если сообщение прошло проверку подлинности; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Body">
      <summary>Получает или задает содержимое сообщения.</summary>
      <returns>Содержимое текста сообщения MSMQ.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.BodyType">
      <summary>Получает или задает тип данных, содержащихся в тексте сообщения.</summary>
      <returns>Тип данных, содержащихся в тексте сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.CorrelationId">
      <summary>Получает или задает идентификатор сообщения, используемый подтверждениями, отчетами и ответными сообщениями для ссылки на исходное сообщение.</summary>
      <returns>Идентификатор сообщения, используемый подтверждениями, отчетами и ответными сообщениями для ссылки на исходное сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.DestinationQueue">
      <summary>Получает или задает планируемую конечную очередь для сообщения.</summary>
      <returns>Планируемая конечная очередь для сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Extension">
      <summary>Получает или задает дополнительные, определяемые приложением сведения, связанные с данным сообщением.</summary>
      <returns>Байтовый массив, содержащий дополнительные сведения, определяемые приложением, связанные с данным сообщением.</returns>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Get(System.ServiceModel.Channels.Message)">
      <summary>Получает объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" /> для заданного сообщения.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" />, содержащий свойства интеграции службы Message Queuing для указанного сообщения.</returns>
      <param name="message">Сообщение, для которого требуется извлечь свойства сообщения интеграции службы Message Queuing (MSMQ).</param>
      <exception cref="T:System.ArgumentNullException">Сообщение является нулевым.</exception>
      <exception cref="T:System.ArgumentNullException">Коллекция свойств для сообщения является нулевой.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Id">
      <summary>Получает идентификатор сообщения.</summary>
      <returns>Идентификатор сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Label">
      <summary>Получает или задает определяемую приложением строку в кодировке Юникод, описывающую данное сообщение.</summary>
      <returns>Определяемая приложением строка в кодировке Юникод, описывающая данное сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.MessageType">
      <summary>Возвращает тип сообщения Обычный, Подтверждение или Отчет.</summary>
      <returns>Тип сообщений: Обычный, Подтверждение или Отчет.</returns>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Name">
      <summary>Значение константы «MsmqIntegrationMessageProperty».</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Priority">
      <summary>Получает или задает приоритет сообщения, используемый для определения места сообщения при его поступлении в очередь.</summary>
      <returns>Приоритет сообщения.Значения определяются посредством перечисления <see cref="T:System.Messaging.MessagePriority" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение не является нулевым и находится вне диапазона значений перечисления <see cref="T:System.Messaging.MessagePriority" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.ResponseQueue">
      <summary>Получает или задает очередь, принимающую ответные сообщения, создаваемые приложением.</summary>
      <returns>Универсальный код ресурса (URI) для очереди, принимающей ответные сообщения, создаваемые приложением.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.SenderId">
      <summary>Получает идентификатор пользователя, отправившего сообщение.</summary>
      <returns>Идентификатор пользователя, отправившего сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.SentTime">
      <summary>Получает дату и время, установленные на передающем компьютере на момент передачи данного сообщения диспетчером исходной очереди.</summary>
      <returns>Дата и время, установленные на передающем компьютере на момент передачи данного сообщения диспетчером исходной очереди.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.TimeToReachQueue">
      <summary>Получает или задает максимальное время, в течение которого сообщение должно дойти до очереди.</summary>
      <returns>Максимальное время, в течение которого сообщение должно дойти до очереди.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение не является нулевым; оно меньше нуля.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра не является бесконечным; значение больше Int32.MaxValue миллисекунд.</exception>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity">
      <summary>Объект класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" /> инкапсулирует параметры безопасности транспорта для канала интеграции службы Message Queuing (MSMQ).</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.Mode">
      <summary>Возвращает или задает перечисление <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />, связанное с каналом интеграции службы Message Queuing (MSMQ).</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />, связанное с каналом интеграции службы Message Queuing.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.Transport">
      <summary>Возвращает объект класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с каналом интеграции очереди сообщений (MSMQ).</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MsmqTransportSecurity" />, связанный с каналом интеграции очереди сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode">
      <summary>Объект <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> представляет собой перечисление, которое указывает режимы безопасности, поддерживаемые каналом интеграции MSMQ.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode.None">
      <summary>Безопасность отсутствует.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode.Transport">
      <summary>Используется безопасности транспорта MSMQ.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1">
      <summary>Класс <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> инкапсулирует отправляемое и получаемое сообщение службы Message Queuing (MSMQ) по каналу интеграции службы Message Queuing в/из существующего приложения Message Queuing.</summary>
      <typeparam name="T">Представляет текст сообщения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Текст сообщения является нулевым.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqMessage`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> с предоставленным текстом сообщения.</summary>
      <param name="body">Текст сообщения, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" />.</param>
      <exception cref="T:System.ArgumentNullException">Текст сообщения является нулевым.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AcknowledgeType">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Messaging.AcknowledgeTypes" />, связанный с данным сообщением.</summary>
      <returns>Перечисление <see cref="T:System.Messaging.AcknowledgeTypes" />, связанное с этим сообщением.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Acknowledgment">
      <summary>Получает экземпляр класса <see cref="T:System.Messaging.Acknowledgment" />, связанный с этим сообщением.</summary>
      <returns>Перечисление <see cref="T:System.Messaging.Acknowledgment" />, связанное с этим сообщением.Используется значение по умолчанию Acknowledgement.None.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AdministrationQueue">
      <summary>Получает или задает экземпляр класса <see cref="T:System.Uri" /> очереди администрирования, связанный с данным сообщением.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" /> очереди администрирования, связанный с данным сообщением.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AppSpecific">
      <summary>Получает или задает значение экземпляра класса <see cref="T:System.Int32" />, которое представляет все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</summary>
      <returns>Значение экземпляра класса <see cref="T:System.Int32" />, представляющее все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.Если доступ осуществляется с помощью передающего приложения, по умолчанию используется значение null; если доступ осуществляется с помощью принимающего приложение, используется значение 0.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ArrivedTime">
      <summary>Получает или задает значение структуры <see cref="T:System.DateTime" />, которое указывает, доставлено ли сообщение в конечную очередь.</summary>
      <returns>Значение структуры <see cref="T:System.DateTime" />, указывающее, доставлено ли сообщение в конечную очередь.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Authenticated">
      <summary>Получает логическое значение, указывающее, прошло ли сообщение проверку подлинности.</summary>
      <returns>Значение true, если сообщение прошло проверку подлинности; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Body">
      <summary>Получает или задает текст сообщения.</summary>
      <returns>Текст сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Текст сообщения является нулевым.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.BodyType">
      <summary>Получает или задает значение структуры <see cref="T:System.Int32" />, которое указывает тип текста сообщения.</summary>
      <returns>Значение структуры <see cref="T:System.Int32" />, указывающее тип текста сообщения.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.CorrelationId">
      <summary>Возвращает или задает объект класса <see cref="T:System.String" />, содержащий идентификатор корреляции для данного сообщения.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий код корреляции для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.DestinationQueue">
      <summary>Получает объект класса <see cref="T:System.Uri" /> конечной очереди для данного сообщения.</summary>
      <returns>Объект класса <see cref="T:System.Uri" /> конечной очереди для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Extension">
      <summary>Получает или задает массив экземпляров класса <see cref="T:System.Byte" />, который содержит все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</summary>
      <returns>Массив экземпляров класса <see cref="T:System.Byte" />, который содержит все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Id">
      <summary>Получает объект класса <see cref="T:System.String" />, содержащий идентификатор сообщения для данного сообщения.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий идентификатор сообщения для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Label">
      <summary>Получает или задает объект класса <see cref="T:System.String" />, содержащий метку сообщения.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий метку сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.MessageType">
      <summary>Получает экземпляр класса <see cref="T:System.Messaging.MessageType" />, связанный с этим сообщением.</summary>
      <returns>Экземпляр класса <see cref="T:System.Messaging.MessageType" />, связанный с этим сообщением.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Priority">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Messaging.MessagePriority" />, связанный с данным сообщением.</summary>
      <returns>Экземпляр класса <see cref="T:System.Messaging.MessagePriority" />, связанный с этим сообщением.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ResponseQueue">
      <summary>Возвращает или задает объект класса <see cref="T:System.Uri" /> очереди сообщений, который получает ответные сообщения от принимающего приложения.</summary>
      <returns>По умолчанию это свойство имеет значение  null.Данное свойство идентифицирует очередь, принимающую ответные сообщения, которые принимающее приложение возвращает в отправляющее приложение.Передающее приложение задает очереди ответов при передаче сообщений в принимающее приложение.Передающее приложение может указать любую доступную очередь как очередь ответов.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SenderId">
      <summary>Получает массив объектов структуры <see cref="T:System.Byte" />, содержащий идентификатор отправителя передающего приложения.</summary>
      <returns>Массив объектов структуры <see cref="T:System.Byte" />, содержащий идентификатор отправителя передающего приложения.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SentTime">
      <summary>Получает значение структуры <see cref="T:System.DateTime" />, указывающее, когда сообщение было отправлено диспетчером очереди на компьютере, где установлено передающее приложение.</summary>
      <returns>Значение структуры <see cref="T:System.DateTime" />, указывающее, когда сообщение было отправлено диспетчером очереди на компьютере, где установлено отправляющее приложение.Может принимать значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.TimeToReachQueue">
      <summary>Возвращает или задает объект структуры <see cref="T:System.TimeSpan" />, который указывает максимальное время, в течение которого сообщение должно быть доставлено в целевую очередь.</summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, указывающий максимальное время, в течение которого сообщение должно быть доставлено в целевую очередь.Может принимать значение null.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat">
      <summary>Задает модуль форматирования, используемый для сериализации объектов, отправляемых как текст сообщения MSMQ.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Xml">
      <summary>Объект класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> используется при сериализации объекта.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Binary">
      <summary>Объект класса <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> используется для сериализации этого объекта.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.ActiveX">
      <summary>Модуль форматирования Active X используется для сериализации объекта.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.ByteArray">
      <summary>Сериализует объект в массив байтов.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Stream">
      <summary>Выполняет сериализацию объекта в поток.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService">
      <summary>Предоставляет базовую реализацию настраиваемой службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval">
      <summary>Возвращает или задает повторяющуюся длительность периода, после которого устаревшие записи удаляются из таблицы уточняющих запросов регистрации для службы арбитра одноранговых узлов.</summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, указывающий временной интервал, по истечении которого устаревшие записи удаляются из таблицы подстановок регистрации службы распознавателя одноранговых узлов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Интервал должен иметь нулевое значение или значение больше, чем <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">Попытка задать свойство предпринята после вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close">
      <summary>Закрывает службу распознавателя одноранговых узлов.</summary>
      <exception cref="T:System.InvalidOperationException">Служба закрыта посредством предыдущего вызова этого метода.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape">
      <summary>Получает или задает значение, указывающее, требуется ли совместное использование ссылок службой распознавателя одноранговых узлов.</summary>
      <returns>Используется значение «true», если ссылки в службе распознавателя одноранговых узлов используются совместно; в противном случае используется значение «false».</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings">
      <summary>Получает определенные настройки ответа для службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />, содержащий определенные настройки ответа для настраиваемой службы распознавателя одноранговых узлов, включая настройки интервала очистки и обновления.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open">
      <summary>Открывает службу распознавателя одноранговых узлов.</summary>
      <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> или <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> задан интервал времени, равный 0.</exception>
      <exception cref="T:System.InvalidOperationException">Служба запущена посредством предыдущего вызова этого метода.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <summary>Обновляет срок истечения записи в таблице подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />, содержащий недавно обновленную запись регистрации.</returns>
      <param name="refreshInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" />, содержащий идентификатор сетки и идентификатор регистрации записи, который требуется обновить в таблице подстановок регистрации службы распознавателя одноранговых узлов.</param>
      <exception cref="T:System.ArgumentException">Для <paramref name="refreshInfo" /> задано нулевое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Настраиваемая служба распознавателя одноранговых узлов не была запущена посредством предыдущего вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval">
      <summary>Получает или задает длительность периода в течение которого записи в таблицы подстановок регистрации службы распознавателя одноранговых узлов остаются действительными.</summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, указывающий длительность периода в течение которого записи в таблицы подстановок регистрации службы распознавателя одноранговых узлов остаются действительными.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Интервал должен иметь нулевое значение или значение больше, чем <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">Попытка задать свойство предпринята после вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Добавляет новую запись в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />, содержащий копию записи, добавленной в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</returns>
      <param name="clientId">Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор регистрационной записи для регистрации с помощью службы распознавателя.</param>
      <param name="meshId">Объект класса <see cref="T:System.String" />, указывающий идентификатор одноранговой сетки, в которой участвует регистрационная запись.</param>
      <param name="address">Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащий адрес конечной точки регистрационной записи.</param>
      <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      <exception cref="T:System.ArgumentException">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, предоставляемый для данного метода, имеет нулевое значение или неправильно сформирован.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство MeshId и/или RegistrationId объекта, предоставляемого параметру <paramref name="refreshInfo" />, имеет нулевое значение.</exception>
      <exception cref="T:System.NullReferenceException">Свойство MeshId объекта, предоставляемого параметру <paramref name="refreshInfo" />, неизвестно.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <summary>Добавляет новую запись в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />, содержащий копию записи, добавленной в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</returns>
      <param name="registerInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, содержащий сведения о записи регистрации, которую необходимо зарегистрировать с помощью службы распознавателя одноранговых узлов.</param>
      <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      <exception cref="T:System.ArgumentException">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, предоставляемый для данного метода, имеет нулевое значение или неправильно сформирован.</exception>
      <exception cref="T:System.NullReferenceException">Свойство AddressInfo объекта, предоставляемого параметру <paramref name="registerInfo" />, имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="meshId" />, предоставляемое данному методу, задано как нулевое.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <summary>Возвращает список известных конечных точек для регистрационной записи.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />, содержащий конечные точки для регистрационной записи в таблице подстановок, которые соответствуют сведениям, предоставленным в параметре <paramref name="resolveInfo" />. </returns>
      <param name="resolveInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" />, содержащий сведения о регистрационной записи, для которой выполняется поиск конечных точек (если они известны) службой распознавателя одноранговых узлов.</param>
      <exception cref="T:System.ArgumentException">Данный объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
      <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <summary>Удаляет определенную запись из таблицы подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <param name="unregisterInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />, содержащий сведения, используемые для однозначного определения регистрационной записи, которую требуется удалить из таблицы подстановок регистрации.</param>
      <exception cref="T:System.ArgumentException">Не удалось обнаружить запись для указанной регистрационной записи, или предоставленный объект класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
      <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <summary>Обновляет существующую регистрационную запись в таблице подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, содержащий копию обновленной записи регистрационной записи.</returns>
      <param name="updateInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, который однозначно идентифицирует конкретную регистрационную запись и предоставляет для нее обновленные сведения.</param>
      <exception cref="T:System.ArgumentException">Не удалось обнаружить запись для указанной регистрационной записи, или предоставленный объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
      <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.IPeerResolverContract">
      <summary>Определяет контракт для основных операций службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings">
      <summary>Получает параметры службы пользовательского распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />, содержащий сведения о службе распознавателя одноранговых узлов.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <summary>Обновляет срок истечения записи в таблице подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />, содержащий недавно обновленную запись регистрации.</returns>
      <param name="refreshInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" />, содержащий идентификатор сетки и идентификатор регистрации записи, который требуется обновить в таблице подстановок регистрации службы распознавателя одноранговых узлов.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <summary>Регистрирует одноранговый узел в настраиваемой службе распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />, содержащий копию записи, добавленной в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</returns>
      <param name="registerInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, содержащий сведения об одноранговом узле, который необходимо зарегистрировать с помощью службы распознавателя одноранговых узлов.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <summary>Возвращает список известных конечных точек для регистрационной записи.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />, содержащий конечные точки для регистрационной записи в таблице подстановок, которые соответствуют сведениям, предоставленным в параметре <paramref name="resolveInfo" />. </returns>
      <param name="resolveInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" />, содержащий сведения об одноранговом узле, для которого выполняется поиск конечных точек (если они известны) службой распознавателя одноранговых узлов.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <summary>Удаляет регистрацию из таблицы подстановок регистрации службы распознавателя одноранговых узлов.</summary>
      <param name="unregisterInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />, содержащий сведения, используемые для однозначного определения однорангового узла, который требуется удалить из таблицы подстановок регистрации.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <summary>Обновляет запись для определенного однорангового узла в таблице подстановок службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, содержащий копию обновленной записи однорангового узла.</returns>
      <param name="updateInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, однозначно идентифицирующие конкретный одноранговый узел и предоставляет для него обновленные сведения.</param>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings">
      <summary>Содержит определенные настройки для экземпляр настраиваемой службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address">
      <summary>Получает или задает адрес конечной точки однорангового узла, на котором размещается настраиваемая служба распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.EndpointAddress" />, содержащий адрес конечной точки однорангового узла, на котором запущена настраиваемая служба распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding">
      <summary>Получает или задает привязку канала, используемую настраиваемой службой распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Channels.Binding" />, содержащий параметры привязки для этой службы.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.IsBindingSpecified">
      <summary>Получает значение, указывающее, задано ли свойство <see cref="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" />.</summary>
      <returns>Значение «true» используется, если свойство <see cref="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" /> задано; в противном случае используется значение «false». </returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Resolver">
      <summary>Получает или задает экземпляр настраиваемого распознавателя одноранговых узлов для этой службы.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.PeerResolver" /> используется службой.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy">
      <summary>Определяет политику совместного использования ссылок в одноранговых узлах.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Service">
      <summary>Политика ссылок определяется службой распознавателя.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Share">
      <summary>Ссылки используются совместно.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.DoNotShare">
      <summary>Ссылки не используются совместно.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerResolverMode">
      <summary>Определяет тип используемой службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Auto">
      <summary>Автоматически определяет тип используемого распознавателя на основе сведений, заданных в привязке. </summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Pnrp">
      <summary>Используется распознаватель PNRP.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Custom">
      <summary>Используется настраиваемый распознаватель.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerResolverSettings">
      <summary>Определяет параметры службы пользовательского распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Custom">
      <summary>Получает определенные параметры настраиваемой службы распознавателя одноранговых узлов.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />, содержащий определенные настройки и экземпляр распознавателя для связанной настраиваемой службы распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Mode">
      <summary>Получает или задает значение, указывающее, зависит ли экземпляр распознавателя одноранговых узлов, связанный с данной службой, от PNRP, является ли он настраиваемым распознавателем или определяется автоматически.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverMode" />, указывающее режим службы распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.ReferralPolicy">
      <summary>Получает или задает определенную политику ссылок, используемую службой распознавателя одноранговых узлов.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, указывающее, используются ли ссылки однорангового узла совместно или нет.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshInfo">
      <summary>Определяет сведения для обновления регистрационной записи службой распознавателя однорангового узла.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor(System.String,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> с предоставленным идентификатором сетки и уникальным идентификатором регистрации.</summary>
      <param name="meshId">Объект класса <see cref="T:System.String" />, идентифицирующий сетку, в которой участвует одноранговый узел.</param>
      <param name="regId">Объект структуры <see cref="T:System.Guid" />, однозначно идентифицирующий регистрационную запись для однорангового узла.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст данных обновления правильно сформировано отправителем (клиент службы), в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshInfo.MeshId">
      <summary>Получает идентификатор сетки для регистрационной записи, которую требуется обновить.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки и идентификатор регистрационной записи, который будет обновлен в таблице подстановок регистрации службы распознавателя одноранговых узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshInfo.RegistrationId">
      <summary>Получает уникальный идентификатор регистрации для регистрационной записи, которую требуется обновить.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, содержащий идентификатор регистрации для однорангового узла, запись которого будет обновлена в таблице подстановок регистрации службы распознавателя одноранговых узлов.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo">
      <summary>Содержит ответные данные, возвращаемые распознавателем одноранговых узлов в результате выполнения операции обновления таблицы подстановок регистрации в распознавателе одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor(System.TimeSpan,System.ServiceModel.PeerResolvers.RefreshResult)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> с предоставленным временем существования и результатами обновления регистрации.</summary>
      <param name="registrationLifetime">Объект структуры <see cref="T:System.TimeSpan" />, который задает новое время существования регистрации однорангового узла.</param>
      <param name="result">Значение перечисления <see cref="T:System.ServiceModel.PeerResolvers.RefreshResult" />, которое указывает результат обновления.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст ответных данных обновления правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.RegistrationLifetime">
      <summary>Получает или задает период времени, по истечении которого срок действия регистрации завершается, и регистрация удаляется службой распознавателя. </summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, указывающий новый период времени, по истечении которого срок действия регистрационной записи завершается, и регистрационная запись удаляется службой распознавателя. </returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.Result">
      <summary>Получает или задает результат операции обновления.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.PeerResolvers.RefreshResult" /> указывает результат выполнения операции обновления для распознавателя одноранговых узлов.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshResult">
      <summary>Указывает результаты попытки обновить время завершения действия регистрационной записи в запущенной службе распознавателя однорангового узла.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.RefreshResult.Success">
      <summary>Выполнено обновление регистрационной записи.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.RefreshResult.RegistrationNotFound">
      <summary>Не найдена регистрационная запись.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RegisterInfo">
      <summary>Определяет сведения о регистрации узла, предоставляемые службе распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> с предоставленным идентификатором клиента, идентификатором сетки и адресом (адресами) конечной точки.</summary>
      <param name="client">Объект структуры <see cref="T:System.Guid" />, однозначно определяющий регистрируемый одноранговый узел.</param>
      <param name="meshId">Объект класса <see cref="T:System.String" />, указывающий идентификатор сетки, в которой участвует одноранговый узел.</param>
      <param name="address">Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, указывающий адрес (адреса) конечной точки регистрируемого однорангового узла.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.ClientId">
      <summary>Получает объект структуры <see cref="T:System.Guid" />, однозначно определяющий регистрационную запись для однорангового узла.</summary>
      <returns>Объект структуры<see cref="T:System.Guid" />, однозначно идентифицирующий регистрационную запись для однорангового узла.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст сведений о регистрации правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.MeshId">
      <summary>Получает идентификатор сетки, связанный с регистрационной записью.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки (или имя сетки), связанной с регистрационной записью.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.NodeAddress">
      <summary>Получает адрес (адреса) конечной точки, которые следует связать с узлом, регистрируемым в службе распознавателя.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащий адрес (адреса) конечной точки, которые следует связать с узлом, регистрируемым в службе распознавателя.Адрес или адреса, содержащиеся в этом экземпляре, можно использовать для подключения к одноранговому узлу в пределах сетки.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo">
      <summary>Содержит ответные данные, возвращаемые распознавателем одноранговых узлов в результате выполнения операции регистрации.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor(System.Guid,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> с предоставленным идентификатором и временем действия регистрации.</summary>
      <param name="registrationId">Объект структуры <see cref="T:System.Guid" />, однозначно идентифицирующий зарегистрированный одноранговый узел.</param>
      <param name="registrationLifetime">Объект структуры <see cref="T:System.TimeSpan" />, указывающий время существования регистрации однорангового узла.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст ответных данных регистрации правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationId">
      <summary>Получает или задает глобальный уникальный идентификатор GUID, который однозначно определяет вновь зарегистрированный одноранговый узел.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, однозначно идентифицирующий зарегистрированный одноранговый узел.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationLifetime">
      <summary>Получает или задает период времени, по истечении которого срок действия регистрации завершается, и регистрация удаляется службой распознавателя. </summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, указывающий время существования регистрации однорангового узла.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ResolveInfo">
      <summary>Определяет сведения для разрешения конечной точки регистрационной записи службой распознавателя однорангового узла.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor(System.Guid,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> с предоставленным идентификатором клиента и сетки, а также с максимальным количеством возвращаемых адресов конечных точек.</summary>
      <param name="clientId">Объект структуры <see cref="T:System.Guid" />, содержащий уникальный идентификатор для клиента, для которого требуется выполнить разрешение конечных точек.</param>
      <param name="meshId">Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки, в которой участвует клиент.</param>
      <param name="maxAddresses">Объект структуры <see cref="T:System.Int32" />, содержащий максимальное количество адресов конечных точек клиента, возвращаемых при операции разрешения.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.ClientId">
      <summary>Получает уникальный идентификатор регистрации для регистрационной записи, которую требуется разрешить.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, содержащий уникальный идентификатор для регистрационной записи.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст данных запроса на разрешение правильно сформировано отправителем (клиент службы), в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses">
      <summary>Получает максимальное количество адресов конечных точек клиента, возвращаемых при операции разрешения.</summary>
      <returns>Объект структуры <see cref="T:System.Int32" />, содержащий максимальное количество адресов конечных точек клиента, возвращаемых при операции разрешения.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.MeshId">
      <summary>Получает идентификатор сетки для записи, для адресов конечных точек которой будет выполнена операция разрешения.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки, в которой участвует клиент.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo">
      <summary>Содержит ответные данные, возвращаемые распознавателем одноранговых узлов в результате выполнения операции разрешения конечной точки однорангового узла в распознавателе одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor(System.ServiceModel.PeerNodeAddress[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> с предоставленным набором адресов конечных точек однорангового узла.</summary>
      <param name="addresses">Массив объектов класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащих адреса конечных точек, зарегистрированных для однорангового узла, конечные точки которого запрашивались при выполнении предыдущей операции разрешения.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveResponseInfo.Addresses">
      <summary>Возвращает или задает коллекцию адресов однорангового узла.</summary>
      <returns>Универсальный список &lt;IList&gt; объектов класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащих адреса конечных точек, зарегистрированных для однорангового узла, конечные точки которого запрашивались при выполнении предыдущей операции разрешения.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст ответных данных разрешения правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo">
      <summary>Содержит сведения, возвращаемые при запросе одноранговым узлом настроек для службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> с предоставленным значением политики ссылок.</summary>
      <param name="control">Значение структуры <see cref="T:System.Boolean" />, указывающее, передаются ли ссылки службой распознавателя.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.ControlMeshShape">
      <summary>Получает или задает значение, указывающее, передаются ли ссылки службой распознавателя.</summary>
      <returns>Имеет значение «true», если выполняется передача ссылок из одноранговых узлов, участвующих в сетке; если ссылки пропускаются, имеет значение «false».</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст ответных данных настроек службы правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.UnregisterInfo">
      <summary>Содержит сведения, используемые для удаления регистрационной записи из службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor(System.String,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />, с идентификатором сетки и регистрации однорангового узла, удаляемым из таблицы подстановок регистрации в службе распознавателя.</summary>
      <param name="meshId">Объект класса <see cref="T:System.String" />, указывающий идентификатор сетки однорангового узла, запись которого требуется удалить.</param>
      <param name="registrationId">Объект структуры <see cref="T:System.Guid" />, однозначно определяющий запись, которую требуется удалить из таблицы подстановок регистрации службы распознавателя.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст данных об удалении регистрации правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UnregisterInfo.MeshId">
      <summary>Получает идентификатор сетки однорангового узла, запись которого требуется удалить.</summary>
      <returns>Объект класса <see cref="T:System.String" />, указывающий идентификатор сетки однорангового узла, запись которого требуется удалить.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UnregisterInfo.RegistrationId">
      <summary>Получает уникальный идентификатор записи, которую требуется удалить из таблицы подстановок регистрации службы распознавателя.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, однозначно определяющий запись, которую требуется удалить из таблицы подстановок регистрации службы распознавателя.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.UpdateInfo">
      <summary>Содержит сведения, используемые при обновлении адреса конечной точки заданной регистрационной записи в таблице подстановок службы распознавателя одноранговых узлов.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor">
      <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor(System.Guid,System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> с предоставленными идентификаторами клиента однорангового узла, регистрации и сетки однорангового узла, а также адресом конечной точки однорангового узла.</summary>
      <param name="registrationId">Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор обновляемой регистрационной записи.</param>
      <param name="client">Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор клиента однорангового узла, который выполнил отправку обновленных данных регистрационной записи.</param>
      <param name="meshId">Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки для записи.</param>
      <param name="address">Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащий адрес конечной точки, обновляемой для регистрационной записи.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.ClientId">
      <summary>Получает уникальный идентификатор клиента однорангового узла, который выполнил отправку обновленных данных регистрационной записи.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор клиента однорангового узла, который выполнил отправку обновленных данных регистрационной записи.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.HasBody">
      <summary>Указывает, имеет ли текст сообщения, содержащего сериализованный экземпляр данного типа, правильный формат.</summary>
      <returns>Имеет значение «true», если текст сведений об обновлении регистрации правильно сформировано отправителем, в противном случае — значение «false».</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.MeshId">
      <summary>Получает идентификатор сетки для регистрационной записи.</summary>
      <returns>Объект класса <see cref="T:System.String" />, содержащий идентификатор сетки обновленной записи регистрационной записи.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.NodeAddress">
      <summary>Получает адрес конечной точки, обновляемой для регистрационной записи.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащий адрес конечной точки, обновляемой для регистрационной записи.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.RegistrationId">
      <summary>Получает уникальный идентификатор регистрации для регистрационной записи, которую требуется обновить.</summary>
      <returns>Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор обновляемой регистрационной записи.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite">
      <summary>Базовый 128-разрядный набор алгоритмов безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor">
      <summary>Создает и инициализирует экземпляр <see cref="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа RsaOaepKeyWrap.</summary>
      <returns>Алгоритм шифрования асимметричного ключа RsaOaepKeyWrap по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры, RsaSha1Signature.</summary>
      <returns>Асимметричный алгоритм создания сигнатуры RsaSha1Signature по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм канонизации, ExclusiveC14n.</summary>
      <returns>Алгоритм канонизации ExclusiveC14n по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм хэширования, Sha1Digest.</summary>
      <returns>Алгоритм хэширования Sha1Digest по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования — Aes128Encryption.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования — Aes128Encryption.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Возвращает длину производного ключа шифрования по умолчанию, 128.</summary>
      <returns>Длину производного ключа шифрования по умолчанию, 128.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Возвращает длину производного ключа сигнатуры по умолчанию, 128.</summary>
      <returns>Длина производного ключа сигнатуры по умолчанию, 128.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Возвращает длину симметричного ключа по умолчанию, 128.</summary>
      <returns>Длина симметричного ключа по умолчанию, 128.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования симметричных ключей — Aes128KeyWrap.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования симметричных ключей — Aes128KeyWrap.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию симметричный алгоритм создания сигнатуры, HmacSha1Signature.</summary>
      <returns>Симметричный алгоритм создания сигнатуры по умолчанию, HmacSha1Signature.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 1024 до 4096.</summary>
      <returns>Значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина асимметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 128 до 256.</summary>
      <returns>Значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина симметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString">
      <summary>Возвращает строковое представление текущего <see cref="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite">
      <summary>Базовый 192-разрядный набор алгоритмов безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor">
      <summary>Создает и инициализирует экземпляр <see cref="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа RsaOaepKeyWrap.</summary>
      <returns>Алгоритм шифрования асимметричного ключа RsaOaepKeyWrap по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры, RsaSha1Signature.</summary>
      <returns>Асимметричный алгоритм создания сигнатуры RsaSha1Signature по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм канонизации, ExclusiveC14n.</summary>
      <returns>Алгоритм канонизации ExclusiveC14n по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм хэширования, Sha1Digest.</summary>
      <returns>Алгоритм хэширования Sha1Digest по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования — Aes192Encryption.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования — Aes192Encryption.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Возвращает длину производного ключа шифрования по умолчанию, 192.</summary>
      <returns>Длину производного ключа шифрования по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Возвращает длину производного ключа сигнатуры по умолчанию, 192.</summary>
      <returns>Длина производного ключа сигнатуры по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Возвращает длину симметричного ключа по умолчанию, 192.</summary>
      <returns>Длина симметричного ключа по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования симметричных ключей — Aes192KeyWrap.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования симметричных ключей — Aes192KeyWrap.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию симметричный алгоритм создания сигнатуры, HmacSha1Signature.</summary>
      <returns>Симметричный алгоритм создания сигнатуры по умолчанию, HmacSha1Signature.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.Диапазон допустимых значений длины: от 1024 до 4096.</summary>
      <returns>Значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина асимметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 192 до 256.</summary>
      <returns>Значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина симметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.ToString">
      <summary>Возвращает строковое представление текущего <see cref="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite">
      <summary>Базовый 256-разрядный набор алгоритмов безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor">
      <summary>Создает и инициализирует экземпляр <see cref="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа RsaOaepKeyWrap.</summary>
      <returns>Алгоритм шифрования асимметричного ключа RsaOaepKeyWrap по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры, RsaSha1Signature.</summary>
      <returns>Асимметричный алгоритм создания сигнатуры RsaSha1Signature по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм канонизации, ExclusiveC14n.</summary>
      <returns>Алгоритм канонизации ExclusiveC14n по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм хэширования, Sha1Digest.</summary>
      <returns>Алгоритм хэширования Sha1Digest по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования — Aes256Encryption.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования — Aes256Encryption.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Возвращает длину производного ключа шифрования по умолчанию, 256.</summary>
      <returns>Длину производного ключа шифрования по умолчанию, 256.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Возвращает длину производного ключа сигнатуры по умолчанию, 192.</summary>
      <returns>Длина производного ключа сигнатуры по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Возвращает длину симметричного ключа по умолчанию, 256.</summary>
      <returns>Длина симметричного ключа по умолчанию, 256.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования симметричных ключей — Aes256KeyWrap.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования симметричных ключей — Aes256KeyWrap.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию симметричный алгоритм создания сигнатуры, HmacSha1Signature.</summary>
      <returns>Симметричный алгоритм создания сигнатуры по умолчанию, HmacSha1Signature.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 1024 до 4096.</summary>
      <returns>Значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина асимметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.Допускается только длина 256.</summary>
      <returns>Значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина симметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.ToString">
      <summary>Возвращает строковое представление текущего <see cref="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <summary>Предоставляет версию сообщения, соответствующую спецификации основного профиля безопасности.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10">
      <summary>Предоставляет версию сообщения, соответствующую спецификации основного профиля безопасности.</summary>
      <returns>Класс, в котором реализован метод ToString, возвращающий версию в текстовом виде.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause">
      <summary>Представляет собой выражение идентификатора ключа в двоичном секретном маркере безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />. </summary>
      <param name="key">Массив <see cref="T:System.Byte" />, представляющий собой ключ.</param>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />. </summary>
      <param name="key">Ключ.</param>
      <param name="cloneBuffer">Значение, указывающее, следует ли клонировать буфер.</param>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />. </summary>
      <param name="key">Ключ.</param>
      <param name="cloneBuffer">Значение, указывающее, следует ли клонировать буфер.</param>
      <param name="derivationNonce">«Однократно используемое число» (nonce), применяемое для создания производного ключа.</param>
      <param name="derivationLength">Длина производного ключа.</param>
    </member>
    <member name="P:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CanCreateKey">
      <summary>Возвращает значение, указывающее на то, может ли данный экземпляр класса использоваться для создания ключа безопасности. </summary>
      <returns>Всегда имеет значение true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CreateKey">
      <summary>Создает ключ безопасности.</summary>
      <returns>Тип <see cref="T:System.IdentityModel.Tokens.SecurityKey" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.GetKeyBytes">
      <summary>Возвращает массив байтов, представляющий собой ключ.</summary>
      <returns>Ключ.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Определяет, соответствует ли ключ указанного выражения ключу данного экземпляра класса.</summary>
      <returns>Значение true, если соответствие существует; в противном случае — значение false. </returns>
      <param name="keyIdentifierClause">Выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сопоставления.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ChannelProtectionRequirements">
      <summary>Описывает требования к шифрованию и подписыванию, применяемые к различным частям сообщений, передаваемых по этому каналу.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> на основе другого экземпляра этого же класса. </summary>
      <param name="other">Другой экземпляр класса <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Добавляет коллекции частей сообщения из указанного объекта <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> в текущий экземпляр этого класса.</summary>
      <param name="protectionRequirements">Заданный объект <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)">
      <summary>Добавляет коллекции частей сообщения из указанного объекта <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> в текущий экземпляр этого класса.</summary>
      <param name="protectionRequirements">Заданный объект <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <param name="channelScopeOnly">Указывает, ограничена ли область только каналом.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse">
      <summary>Создает новый экземпляр этого класса, в котором входящие и исходящие части поменяны местами.</summary>
      <returns>Новый экземпляр этого класса, в котором входящие и исходящие части поменяны местами.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts">
      <summary>Возвращает коллекцию частей сообщения, зашифрованных в сообщениях от клиента серверу.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts">
      <summary>Возвращает коллекцию частей сообщения, подписанных в сообщениях от клиента серверу.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly">
      <summary>Возвращает значение, определяющее, предназначен ли экземпляр класса только для чтения. </summary>
      <returns>Значение true, если этот экземпляр класса доступен только для чтения. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly">
      <summary>Делает этот класс и его коллекцию частей доступными только для чтения.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts">
      <summary>Возвращает коллекцию частей сообщения, зашифрованных в сообщениях от сервера клиенту.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts">
      <summary>Возвращает коллекцию частей сообщения, подписанных в сообщениях от сервера клиенту.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder">
      <summary>Предоставляет механизмы кодирования и декодирования состояния безопасности на основе функций API Windows DataProtection. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor">
      <summary>Инициализирует новый экземпляр этого класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр этого класса. </summary>
      <param name="useCurrentUserProtectionScope">Указывает, следует ли использовать область защиты текущего пользователя.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean,System.Byte[])">
      <summary>Инициализирует новый экземпляр этого класса. </summary>
      <param name="useCurrentUserProtectionScope">Указывает, следует ли использовать область защиты текущего пользователя.</param>
      <param name="entropy">Массив значений типа byte, указывающий энтропию — дополнительную степень случайности, которая может использоваться кодировщиком при кодировании состояния безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <summary>Декодирует состояние безопасности.</summary>
      <returns>Массив значений типа byte, представляющий декодированное состояние безопасности.</returns>
      <param name="data">Массив byte, представляющий закодированное состояние безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <summary>Кодирует состояние безопасности.</summary>
      <returns>Массив byte, представляющий закодированное состояние безопасности.</returns>
      <param name="data">Массив byte, представляющий декодированное состояние безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.GetEntropy">
      <summary>Указывает степень случайности данного кодировщика.</summary>
      <returns>Массив типа <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.ToString">
      <summary>Возвращает строку, представляющую текущий экземпляр класса <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</summary>
      <returns>Строка <see cref="T:System.String" />, представляющая текущий экземпляр класса <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.UseCurrentUserProtectionScope">
      <summary>Возвращает значение, указывающее, следует ли использовать область защиты текущего пользователя. </summary>
      <returns>Значение true, если будет использоваться область защиты текущего пользователя. В противном случае — значение false. </returns>
    </member>
    <member name="T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <summary>Когда срок действия маркера безопасности  истекает, вызывается исключение.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" /> для исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />. </summary>
      <param name="message">Отображаемое сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />. </summary>
      <param name="message">Отображаемое сообщение.</param>
      <param name="innerException">Внутреннее исключение <see cref="T:System.Exception" /> для этого экземпляра.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Используется для дайджест-проверки подлинности HTTP-клиентов.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel">
      <summary>Возвращает или задает уровень олицетворения, разрешенный клиентом для предоставленных учетных данных.</summary>
      <returns>Уровень олицетворения <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, предоставляемый клиентом серверу в рамках дайджест-проверки подлинности HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Возвращает или задает сетевые учетные данные, используемые для дайджест-проверки подлинности.</summary>
      <returns>Учетные данные <see cref="T:System.Net.NetworkCredential" />, используемые для дайджест-проверки подлинности.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.IdentityVerifier">
      <summary>Абстрактный базовый класс, который можно реализовать для проверки ожидаемого удостоверения в контексте авторизации, представляющем удаленную конечную точку, а также для создания удостоверения на основе адреса конечной точки.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.#ctor">
      <summary>Создает экземпляр этого класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Реализует метод проверки удостоверения.</summary>
      <returns>Значение true, если удостоверение прошло проверку. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="identity">Объект <see cref="T:System.ServiceModel.EndpointIdentity" /> для проверки.</param>
      <param name="authContext">Контекст авторизации <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, в котором будет проверяться удостоверение <paramref name="identity" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault">
      <summary>Создает экземпляр этого класса по умолчанию.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Security.IdentityVerifier" /> по умолчанию.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)">
      <summary>Пытается создать удостоверение на основе конечной точки.</summary>
      <returns>Значение true, если возвращено удостоверение. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="reference">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, используемый для создания удостоверения.</param>
      <param name="identity">Возвращаемое удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
    </member>
    <member name="T:System.ServiceModel.Security.IEndpointIdentityProvider">
      <summary>Предоставляет удостоверение конечной точки. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Возвращает удостоверение текущей конечной точки на основе переданных требований к маркеру безопасности.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> текущей конечной точки.</returns>
      <param name="tokenRequirement">Свойство <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />, в котором описываются требования к маркеру безопасности.</param>
    </member>
    <member name="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer">
      <summary>Инициализирует интерактивный канал .</summary>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.#ctor(System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />. </summary>
      <param name="credentials">Класс <see cref="T:System.ServiceModel.Description.ClientCredentials" />, из которого был вызван этот метод.</param>
      <param name="binding">Привязка к конечной точке службы.</param>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронный метод для отображения пользовательского интерфейса инициализации.</summary>
      <returns>Данные <see cref="T:System.IAsyncResult" />, полученные в результате вызова этого метода.</returns>
      <param name="channel">Канал.</param>
      <param name="callback">Асинхронный метод обратного вызова, вызываемый по завершении данного метода.</param>
      <param name="state">Хранит текущее состояние.</param>
    </member>
    <member name="P:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.Binding">
      <summary>Возвращает привязку к конечной точке службы.</summary>
      <returns>Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> к конечной точке службы.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Асинхронный метод обратного вызова, связанный с отображением пользовательского интерфейса инициализации.</summary>
      <param name="result">Данные <see cref="T:System.IAsyncResult" />, полученные от соответствующего метода Begin.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ISecureConversationSession">
      <summary>Представляет собой сеанс безопасности для безопасного диалога.Взаимодействующие стороны защищают все сообщения в сеансе с помощью маркера SecurityContextToken, который создается сервером при установлении сеанса.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ISecureConversationSession.TryReadSessionTokenIdentifier(System.Xml.XmlReader)">
      <summary>Пытается прочитать идентификатор маркера сеанса, на который указывает модуль чтения XML.</summary>
      <returns>Значение true, если XML-код, на который указывает модуль чтения XML, соответствует объекту SecurityKeyIdentifierClause, который, в свою очередь, соответствует маркеру сеанса безопасности. В противном случае — значение false.</returns>
      <param name="reader">Модуль чтения <see cref="T:System.Xml.XmlReader" />, с помощью которого будет считываться маркер.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ISecureConversationSession.WriteSessionTokenIdentifier(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает объект SecurityKeyIdentifierClause, соответствующий маркеру сеанса безопасности.Этот метод полезно использовать для таких сеансов, как WS-RM, которые основаны на сеансах безопасности и в протоколе установления сеанса которых используется идентификатор маркера сеанса безопасности.</summary>
      <param name="writer">Модуль записи <see cref="T:System.Xml.XmlDictionaryWriter" />, с помощью которого будет записываться маркер.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ISecuritySession">
      <summary>Представляет разновидность интерфейса ISession, в которой требуется, чтобы обмен всеми сообщениями в сеансе производился между теми же сторонами, которые устанавливали сеанс.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity">
      <summary>Возвращает удостоверение удаленного участника.</summary>
      <returns>Удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> удаленного участника.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.IssuedTokenClientCredential">
      <summary>Представляет сведения, используемые для получения выданного маркера от службы маркеров безопасности.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens">
      <summary>Возвращает или задает логическое значение, указывающее, будут ли выданные маркеры кэшироваться каналом.</summary>
      <returns>Значение true, если маркеры будут кэшироваться; в противном случае — значение false.Значение по умолчанию — true.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задать учетные данные, доступные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode">
      <summary>Возвращает или задает значение <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> по умолчанию.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.Значение по умолчанию — <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать (set) учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage">
      <summary>Возвращает или задает для выданных маркеров пороговое значение обновления (в процентах).</summary>
      <returns>Пороговое значение обновления (в процентах) для выданных маркеров.Значение по умолчанию — 60.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать (set) учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors">
      <summary>Возвращает коллекцию поведений канала издателя.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.Dictionary`2" /> элементов <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress">
      <summary>Возвращает или задает адрес локального издателя.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> локального издателя.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать (set) учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding">
      <summary>Возвращает или задает привязку локального издателя.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.Channels.Binding" /> локального издателя.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать (set) учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors">
      <summary>Возвращает коллекцию поведений канала локального издателя.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> элементов <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime">
      <summary>Возвращает или задает максимальное время кэширования выданного маркера.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, представляющее максимальное время кэширования выпущенного маркера.Значение по умолчанию — <see cref="F:System.TimeSpan.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение set меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать (set) учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.IssuedTokenServiceCredential">
      <summary>Позволяет службе настраивать свойства, связанные с предоставленными клиентом федеративными учетными данными.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowedAudienceUris">
      <summary>Возвращает коллекцию строк, указывающих пользователей службы, имеющих имена.</summary>
      <returns>Универсальный список URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers">
      <summary>Возвращает или задает значение, указывающее, следует ли разрешить использование недоверенных издателей маркеров RSA. </summary>
      <returns>Значение true, если разрешены недоверенные поставщики маркеров RSA. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.InvalidOperationException">Выполняется попытка изменить маркер, доступный только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AudienceUriMode">
      <summary>Возвращает перечисляемое значение, которое показывает, нужно ли проверять условие ограничения аудитории.</summary>
      <returns>Значение true, если нужно проверять условие ограничения аудитории, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode">
      <summary>Возвращает или задает режим проверки сертификата. </summary>
      <returns>Запись перечисления <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />, в которой указывается способ проверки сертификата.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator">
      <summary>Возвращает или задает настраиваемый проверяющий элемент управления для сертификата X.509. </summary>
      <returns>Пользовательский проверяющий элемент управления для сертификатов X.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates">
      <summary>Возвращает список известных сертификатов. </summary>
      <returns>Список известных сертификатов.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификатов. </summary>
      <returns>Режим отзыва.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer">
      <summary>Возвращает или задает настраиваемый объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> для выпущенных учетных данных службы.</summary>
      <returns>Настраиваемый объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> для службы.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища. </summary>
      <returns>Расположение доверенного хранилища.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.KeyNameIdentifierClause">
      <summary>Представляет собой выражение идентификатора имени ключа в маркере безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.KeyNameIdentifierClause" />. </summary>
      <param name="keyName">Имя ключа.</param>
    </member>
    <member name="P:System.ServiceModel.Security.KeyNameIdentifierClause.KeyName">
      <summary>Возвращает имя ключа.</summary>
      <returns>Имя ключа.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Проверяет, соответствует ли выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> текущему экземпляру этого класса.</summary>
      <returns>Значение true, если соответствие существует; в противном случае — значение false. </returns>
      <param name="keyIdentifierClause">Выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)">
      <summary>Проверяет, совпадает ли указанное имя ключа с именем ключа текущего экземпляра.</summary>
      <returns>Значение true, если соответствие существует; в противном случае — значение false. </returns>
      <param name="keyName">Предложение имени ключа безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.ToString">
      <summary>Возвращает значение типа <see cref="T:System.String" />, представляющее текущий объект.(Наследуется от <see cref="T:System.Object" />)</summary>
      <returns>Текущий объект.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessagePartSpecification">
      <summary>Указывает, какие элементы необходимо включить в сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor">
      <summary>Инициализирует пустой объект <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)">
      <summary>Инициализирует новый объект <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> и указывает, следует ли включить текст сообщения.</summary>
      <param name="isBodyIncluded">Указывает, следует ли включить в спецификацию текст сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
      <summary>Инициализирует новый объект <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> на основе массива заголовков сообщения.  </summary>
      <param name="isBodyIncluded">Указывает, следует ли включить в спецификацию текст сообщения.</param>
      <param name="headerTypes">Используемый массив типов заголовков.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Инициализирует новый объект <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> на основе массива заголовков сообщения.</summary>
      <param name="headerTypes">Используемый массив типов заголовков.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.Clear">
      <summary>Очищает список заголовков в данной спецификации.</summary>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> доступно только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes">
      <summary>Возвращает типы заголовков для данной спецификации.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типов заголовков для данной спецификации сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
      <summary>Возвращает или задает значение, указывающее, следует ли включать в данную спецификацию текст сообщения.</summary>
      <returns>Значение true, если текст сообщения включается в данную спецификацию. В противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> доступно только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступна ли спецификация только для чтения.</summary>
      <returns>Значение true, если спецификация доступна только для чтения, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly">
      <summary>Переводит спецификацию в режим только для чтения.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
      <summary> Возвращает пустой экземпляр этого класса.</summary>
      <returns>Пустой экземпляр этого класса. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
      <summary>Объединяет две спецификации частей сообщения.</summary>
      <param name="specification">Спецификация <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, предназначенная для объединения.</param>
      <exception cref="T:System.InvalidOperationException">Эта спецификация <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="specification" /> равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.MessageProtectionOrder">
      <summary>Указывает порядок операций при защите сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt">
      <summary>Указывает, что цифровая сигнатура создается для сообщения SOAP перед шифрованием любой другой части сообщения, однако сама цифровая сигнатура не шифруется.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature">
      <summary>Указывает, что цифровая сигнатура создается для сообщения SOAP перед шифрованием любой другой части сообщения, а сама цифровая сигнатура также шифруется.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign">
      <summary>Указывает, что сообщение SOAP шифруется перед созданием для этого сообщения цифровой сигнатуры.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Представляет собой исключение, возникающее при сбоях в процессе обеспечения безопасности сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Инициализирует пустой экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> на основе указанных экземпляров классов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации нового экземпляра класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</param>
      <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник сериализованного потока, связанного с новым экземпляром класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> на основе строки с сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> на основе строки с сообщением об ошибке и ссылки на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.PeerCredential">
      <summary>Содержит учетные данные, используемые при проверки подлинности кэширующего узла в сетке узлов.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.Certificate">
      <summary>Возвращает или задает для кэширующего узла сертификат X509.</summary>
      <returns>Свойство <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, в котором содержится сертификат X509 для кэширующего узла.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.MeshPassword">
      <summary>Возвращает или задает пароль, используемый кэширующим узлом для проверки подлинности в сетке узлов.</summary>
      <returns>Строка, в которой указывается пароль, используемый кэширующим узлом для проверки подлинности в сетке узлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication">
      <summary>Возвращает или задает элемент управления проверки подлинности отправителя сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />, содержащий элемент управления проверки подлинности отправителя сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication">
      <summary>Возвращает или задает объект проверки подлинности кэширующего узла.</summary>
      <returns>Свойство <see cref="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />, в котором содержится объект проверки подлинности кэширующего узла.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Задает сертификат с конкретными условиями поиска.</summary>
      <param name="storeLocation">Свойство <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, в котором хранится расположение хранилища сертификатов.</param>
      <param name="storeName">Свойство <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, в котором хранится имя сертификата.</param>
      <param name="findType">Свойство <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />, в котором хранятся условия поиска. </param>
      <param name="findValue">Объект <see cref="T:System.Object" />, в котором хранится значение для поиска.</param>
    </member>
    <member name="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Задает сертификат.</summary>
      <param name="subjectName">Имя субъекта для сертификата.</param>
      <param name="storeLocation">Свойство <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />, в котором хранится расположение хранилища сертификатов.</param>
      <param name="storeName">Свойство <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />, в котором хранится имя сертификата.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ScopedMessagePartSpecification">
      <summary>Указывает, какие элементы необходимо включить в сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> на основе другого экземпляра этого же класса. </summary>
      <param name="other">Другой класс <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.Actions">
      <summary>Возвращает коллекцию ключей действий.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.String" />, содержащая ключи коллекции элементов действия.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)">
      <summary>Добавляет части сообщения канала в коллекции экземпляра этого класса.</summary>
      <param name="parts">Спецификация <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, содержащая добавляемые части сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="parts" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Список <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)">
      <summary>Добавляет части сообщения в спецификацию MessagePartSpecification, соответствующую указанному действию.</summary>
      <param name="parts">Спецификация <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, содержащая добавляемые части сообщения.</param>
      <param name="action">Ключ действия для сопоставления.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parts" /> или <paramref name="action" /> равны null.</exception>
      <exception cref="T:System.InvalidOperationException">Список <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> доступен только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts">
      <summary>Возвращает спецификацию частей сообщения, содержащую элементы канала.</summary>
      <returns>Спецификация <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, содержащая элементы канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly">
      <summary>Указывает, предназначена ли спецификация только для чтения.</summary>
      <returns>Значение true, если спецификация доступна только для чтения, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly">
      <summary>Переводит спецификацию в режим только для чтения.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)">
      <summary>Проверяет, существуют ли части, соответствующие указанному ключу действия.</summary>
      <returns>Значение true, если совпадающие части сообщения были найдены. В противном случае — значение false.</returns>
      <param name="action">Ключ действия.</param>
      <param name="excludeChannelScope">Если установлено значение true, части ограничиваются текущим каналом.</param>
      <param name="parts">После завершения этого метода данный параметр содержит спецификацию <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, содержащую найденные части.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)">
      <summary>Проверяет, существуют ли части, соответствующие указанному ключу действия.</summary>
      <returns>Значение true, если совпадающие части сообщения были найдены. В противном случае — значение false. </returns>
      <param name="action">Ключ действия.</param>
      <param name="parts">После завершения этого метода данный параметр содержит спецификацию <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />, содержащую найденные части.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecureConversationServiceCredential">
      <summary>Предоставляет параметры учетных данных для службы безопасного диалога.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
      <summary>Возвращает коллекцию утверждений <see cref="T:System.Type" /> для сериализации файлов cookie. </summary>
      <returns>Коллекция утверждений <see cref="T:System.Type" /> для сериализации куки-файлов.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
      <summary>Возвращает или задает настраиваемый кодировщик <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, предназначенный для кодирования и декодирования сериализации куки-файлов. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, который представляет собой настраиваемую версию объекта <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecureConversationVersion">
      <summary>Содержит набор поддерживаемых версий WS-SecureConversation.Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Default">
      <summary>Возвращает версию по умолчанию.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Namespace">
      <summary>Возвращает пространство имен для данной версии WS-SecureConversation.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Prefix">
      <summary>Возвращает префикс.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13">
      <summary>Возвращает WS-SecureConversation версии 1.3.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005">
      <summary>Возвращает WS-SecureConversation версии за февраль 2005 г.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Представляет собой исключение безопасности, вызываемое при неудачном запросе авторизации в системе безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> на основе указанных сведений о сериализации и контекстных объектов. </summary>
      <param name="info">Сведения о процессе десериализации.</param>
      <param name="context">Контекст процесса десериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />, используя указанное сообщение. </summary>
      <param name="message">Описание условия ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> на основе указанного сообщения об ошибке и внутреннего исключения. </summary>
      <param name="message">Описание условия ошибки.</param>
      <param name="innerException">Используемое внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <summary>Задает свойства алгоритмов.Этот класс является абстрактным.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128">
      <summary>Возвращает набор алгоритмов Basic128.</summary>
      <returns>Базовый 128-разрядный набор алгоритмов <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования сообщений используется базовый 192-разрядный алгоритм.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования сообщений используется базовый 256-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default">
      <summary>Возвращает набор алгоритмов по умолчанию.</summary>
      <returns>В качестве набора алгоритмов <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> по умолчанию выбран <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, в котором используется 256-разрядный алгоритм симметричного шифрования AES (Advanced Encryption Standard).</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм канонизации в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм хэширования в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Возвращает длину производного ключа шифрования по умолчанию в виде значения <see cref="T:System.Int32" />.</summary>
      <returns>Значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Возвращает длину производного ключа сигнатуры по умолчанию в виде значения <see cref="T:System.Int32" />.</summary>
      <returns>Значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Возвращает длину симметричного ключа по умолчанию в виде значения <see cref="T:System.Int32" />.</summary>
      <returns>Значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования симметричного ключа в виде строки.</summary>
      <returns>Объект <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм симметричного шифрования в виде строки.</summary>
      <returns>
        <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Указывает, поддерживается ли асимметричным алгоритмом конкретная длина ключа.</summary>
      <returns>Значение true, если длина ключа поддерживается асимметричным алгоритмом. В противном случае — значение false.</returns>
      <param name="length">Проверяемая длина ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм шифрования асимметричного ключа.</summary>
      <returns>Значение true, если поддерживается алгоритм шифрования асимметричных ключей. В противном случае — значение false.</returns>
      <param name="algorithm">Проверяемый алгоритм.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли асимметричный алгоритм создания сигнатуры.</summary>
      <returns>Значение true, если поддерживается асимметричный алгоритм создания сигнатур. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм канонизации.</summary>
      <returns>Значение true, если алгоритм канонизации поддерживается. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм хэширования.</summary>
      <returns>Значение true, если алгоритм выборки поддерживается. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм шифрования.</summary>
      <returns>Значение true, если алгоритм шифрования поддерживается. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм создания производных ключей шифрования.</summary>
      <returns>Значение true, если алгоритм создания производных ключей шифрования поддерживается. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм создания производных ключей сигнатуры.</summary>
      <returns>Значение true, если алгоритм создания производных ключей сигнатуры поддерживается. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>При переопределении в производном классе указывает, поддерживается ли конкретная длина симметричного ключа.</summary>
      <returns>Значение true, если длина симметричного ключа поддерживается. В противном случае — значение false.</returns>
      <param name="length">Проверяемая длина ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли алгоритм шифрования симметричного ключа.</summary>
      <returns>Значение true, если поддерживается алгоритм шифрования симметричных ключей. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Указывает, поддерживается ли симметричный алгоритм создания сигнатуры.</summary>
      <returns>Значение true, если поддерживается симметричный алгоритм создания сигнатур. В противном случае — значение false.</returns>
      <param name="algorithm">Имя алгоритма для проверки.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes">
      <summary>Возвращает набор алгоритмов 3DES (Triple Data Encryption Standard).</summary>
      <returns>Набор алгоритмов 3DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15">
      <summary>Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause">
      <summary>Представляет выражение идентификатора ключа для маркера контекста безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />. </summary>
      <param name="contextId">Объект <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />. </summary>
      <param name="contextId">Объект <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста безопасности.</param>
      <param name="generation">Объект <see cref="T:System.Xml.UniqueId" />, ссылающийся на процедуру создания ключа маркера контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId,System.Byte[],System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />. </summary>
      <param name="contextId">Часть выражения идентификатора, соответствующая идентификатору контекста.</param>
      <param name="generation">Часть выражения идентификатора, соответствующая процедуре создания.</param>
      <param name="derivationNonce">«Однократно используемое число» (nonce), применяемое для создания производного ключа на основе маркера.</param>
      <param name="derivationLength">Длина производного ключа.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ContextId">
      <summary>Возвращает идентификатор контекста безопасности.</summary>
      <returns>Объект <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Generation">
      <summary>Возвращает процедуру создания.</summary>
      <returns>Объект <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Сравнивает указанное выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> с текущим экземпляром класса <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />.</summary>
      <returns>Возвращает значение true, если два экземпляра объектов равны; в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для сравнения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Сравнивает указанное выражение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> с текущим экземпляром класса <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />.</summary>
      <returns>Возвращает значение true, если два экземпляра объектов равны; в противном случае — значение false.</returns>
      <param name="contextId">Часть выражения идентификатора, соответствующая идентификатору контекста.</param>
      <param name="generation">Часть выражения идентификатора, соответствующая процедуре создания.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ToString">
      <summary>Предоставляет текстовое представление данного экземпляра класса.</summary>
      <returns>Текстовое представление данного экземпляра класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityCredentialsManager">
      <summary>Абстрактный класс, который при реализации представляет собой диспетчер учетных данных безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.ServiceModel.Security.SecurityCredentialsManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager">
      <summary>При переопределении в производном классе создает новый объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityKeyEntropyMode">
      <summary>Описывает источник энтропии, используемый для создания ключей.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ClientEntropy">
      <summary>Клиент предоставляет ключ, используемый для выпущенного маркера.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ServerEntropy">
      <summary>Сервер предоставляет ключ для выпущенного маркера.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy">
      <summary>Клиент и сервер предоставляют энтропию, которая, совместно с функцией P-SHA1, используется для получения ключа выпущенного маркера.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityMessageProperty">
      <summary>Содержит связанные с безопасностью свойства и вкладывается в сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy">
      <summary>Клонирует текущий экземпляр класса.</summary>
      <returns>Свойство <see cref="T:System.ServiceModel.Channels.IMessageProperty" />, клонированное из текущего экземпляра данного класса.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose">
      <summary>Удаляет текущий экземпляр класса.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies">
      <summary>Возвращает или задает коллекцию внешних политик авторизации. </summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)">
      <summary>Возвращает или создает экземпляр данного класса на основе указанного сообщения.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens">
      <summary>Указывает, содержит ли входящее сообщение хотя бы один поддерживающий маркер безопасности.</summary>
      <returns>Значение true, если <see cref="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens" /> содержит хотя бы одну запись. В противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens">
      <summary>Возвращает или задает коллекцию входящих поддерживающих маркеров. </summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> объектов типа <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken">
      <summary>Возвращает или задает маркер инициатора <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</summary>
      <returns>Маркер инициатора <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens">
      <summary>Возвращает коллекцию исходящих объектов <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />. </summary>
      <returns>Коллекция исходящих поддерживающих маркеров.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken">
      <summary>Возвращает или задает маркер защиты <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</summary>
      <returns>Маркер защиты <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken">
      <summary>Возвращает или задает маркер получателя <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</summary>
      <returns>Маркер получателя <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix">
      <summary>Возвращает или задает префикс идентификатора отправителя для данного сообщения.</summary>
      <returns>Префикс идентификатора отправителя для данного сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина значения свойства равна нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Первый знак значения свойства не является буквой, цифрой или знаком подчеркивания («_»).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ни один из знаков значения свойства не является буквой, цифрой, знаком подчеркивания («_»), запятой («,»), точкой («.») или дефисом («-»).</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.ServiceSecurityContext" /> для данного сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceSecurityContext" /> для данного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken">
      <summary>Возвращает или задает маркер транспорта <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</summary>
      <returns>Маркер транспорта <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> для данного сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityNegotiationException">
      <summary>Указывает, что во время согласования контекста безопасности сообщения произошла ошибка.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий источник и назначение потока.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> на основе указанных сведений о сериализации и внутреннего исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityPolicyVersion">
      <summary>Содержит набор поддерживаемых версий WS-SecurityPolicy.Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace">
      <summary>Возвращает пространство имен для данной версии WS-SecurityPolicy.</summary>
      <returns>Версия WS-SecurityPolicy.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix">
      <summary>Возвращает префикс.</summary>
      <returns>Префикс.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11">
      <summary>Возвращает WS-SecurityPolicy версии 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12">
      <summary>Возвращает WS-SecurityPolicy версии 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityStateEncoder">
      <summary>Абстрактный класс, реализация которого используется для кодирования состояния безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <summary>Декодирует состояние безопасности.</summary>
      <returns>Массив байтов, представляющий состояние безопасности.</returns>
      <param name="data">Данные безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <summary>Кодирует состояние безопасности.</summary>
      <returns>Массив байтов, представляющий собой закодированное состояние безопасности.</returns>
      <param name="data">Данные состояния безопасности.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenAttachmentMode">
      <summary>Перечисление, представляющее собой список способов прикрепления маркеров безопасности.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Signed">
      <summary>Маркер включается в сигнатуру сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Endorsing">
      <summary>Для шифрования сигнатуры сообщения используется маркер.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEndorsing">
      <summary>Маркер включается в сигнатуру сообщения и подписывает ее.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted">
      <summary>Маркер включается в сигнатуру сообщения и шифруется.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenSpecification">
      <summary>Представляет маркер безопасности и связанные с ним политики авторизации.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" />. </summary>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="tokenPolicies">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenPolicies" /> равен null.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken">
      <summary>Возвращает маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies">
      <summary>Возвращает коллекцию политик маркеров безопасности.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityVersion">
      <summary>Содержит набор поддерживаемых версий WS-Security.Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10">
      <summary>Возвращает WS-Security версии 1,0.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11">
      <summary>Возвращает WS-Security версии 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
      <summary>Представляет собой реализацию <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />, которая предоставляет сериализаторы маркеров безопасности на основе настроенных для службы учетных данных <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> на основе переданных учетных данных <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</summary>
      <param name="parent">Учетные данные службы.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Создает структуру проверки подлинности для маркеров безопасного диалога на основании переданных требований свойств.</summary>
      <returns>Структура проверки подлинности для маркеров безопасности.</returns>
      <param name="recipientRequirement">Представляет требования свойств безопасности, относящиеся к прослушивателю. </param>
      <param name="preserveBootstrapTokens">Значение true, если нужно сохранять маркеры начальной загрузки. В противном случае — значение false.</param>
      <param name="sctResolver">Объект арбитра маркеров безопасности, который может получать маркеры безопасности или ключи при наличии идентификатора ключа или предложения идентификатора ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Создает структуру проверки подлинности маркеров безопасности на основе свойства <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>Структура проверки подлинности для маркеров безопасности.</returns>
      <param name="tokenRequirement">Требование маркера безопасности.</param>
      <param name="outOfBandTokenResolver">Когда этот метод возвращает управление, он содержит объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="tokenRequirement" /> равно null.</exception>
      <exception cref="T:System.NotSupportedException">Невозможно создать для переданного значения<paramref name=" tokenRequirement" /> структуру проверки подлинности для маркеров безопасности.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Создает поставщик маркеров безопасности на основе свойства <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>Поставщик маркеров безопасности.</returns>
      <param name="requirement">Требование маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="requirement" /> равно null.</exception>
      <exception cref="T:System.NotSupportedException">Невозможно создать поставщик маркеров безопасности для переданного значения <paramref name="requirement" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Создает сериализатор маркеров безопасности на основе переданной версии маркера безопасности.</summary>
      <returns>Сериализатор маркеров безопасности.</returns>
      <param name="version">Версия маркера безопасности.</param>
      <exception cref="T:System.NotSupportedException">Невозможно создать сериализатор маркеров безопасности для переданного значения <paramref name="version" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Возвращает удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" /> на основе требований маркера безопасности. </summary>
      <returns>Идентификатор конечной точки, соответствующий объекту <paramref name="tokenRequirement" />.Возвращается null, если идентификатор не может быть создан из объекта <paramref name="tokenRequirement" />.</returns>
      <param name="tokenRequirement">Требование маркера безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="tokenRequirement" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Определяет, относится ли требование маркера безопасности к выданному маркеру.</summary>
      <returns>Значение true, если требование маркера безопасности предназначено для созданного маркера. В противном случае — значение false. </returns>
      <param name="requirement">Требование маркера безопасности.</param>
    </member>
    <member name="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials">
      <summary>Возвращает учетные данные службы, использовавшиеся для создания данного экземпляра этого класса.</summary>
      <returns>Учетные данные службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SspiSecurityTokenProvider">
      <summary>Представляет собой поставщик маркеров безопасности, который предоставляет маркеры безопасности SSPI.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />. </summary>
      <param name="credential">Класс <see cref="T:System.Net.NetworkCredential" />, представляющий удостоверение сервера.</param>
      <param name="extractGroupsForWindowsAccounts">Если задано значение true, к числу пользователей добавляются группы Windows.</param>
      <param name="allowUnauthenticatedCallers">Если задано значение true, то разрешаются вызывающие объекты, не прошедшие проверку подлинности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />. </summary>
      <param name="credential">Класс <see cref="T:System.Net.NetworkCredential" />, представляющий удостоверение клиента.</param>
      <param name="allowNtlm">Если задано значение true, разрешается проверка подлинности NTLM.</param>
      <param name="impersonationLevel">Предоставленный серверу уровень олицетворения <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Возвращает маркер безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, представляющий интервал времени ожидания.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SupportingTokenSpecification">
      <summary>Представляет поддерживающий маркер безопасности и связанные с ним политики авторизации.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />. </summary>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="tokenPolicies">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <param name="attachmentMode">Объект <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение параметра <paramref name="attachmentMode" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />. </summary>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="tokenPolicies">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <param name="attachmentMode">Объект <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</param>
      <param name="tokenParameters">В этом примере показано, как использовать конструктор по умолчанию.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode">
      <summary>Возвращает режим вложения маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite">
      <summary>Набор алгоритмов безопасности triple-DES.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor">
      <summary>Создает и инициализирует экземпляр <see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа RsaOaepKeyWrap.</summary>
      <returns>Алгоритм шифрования асимметричного ключа RsaOaepKeyWrap по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры, RsaSha1Signature.</summary>
      <returns>Асимметричный алгоритм создания сигнатуры RsaSha1Signature по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм канонизации, ExclusiveC14n.</summary>
      <returns>Алгоритм канонизации ExclusiveC14n по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм хэширования, Sha1Digest.</summary>
      <returns>Алгоритм хэширования Sha1Digest по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования — TripleDesEncryption.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования — TripleDesEncryption.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Возвращает длину производного ключа шифрования по умолчанию, 192.</summary>
      <returns>Длину производного ключа шифрования по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Возвращает длину производного ключа сигнатуры по умолчанию, 192.</summary>
      <returns>Длина производного ключа сигнатуры по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Возвращает длину симметричного ключа по умолчанию, 192.</summary>
      <returns>Длина симметричного ключа по умолчанию, 192.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Возвращает используемый по умолчанию алгоритм шифрования симметричных ключей — TripleDesKeyWrap.</summary>
      <returns>Используемый по умолчанию алгоритм шифрования симметричных ключей — TripleDesKeyWrap.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Возвращает используемый по умолчанию симметричный алгоритм создания сигнатуры, HmacSha1Signature.</summary>
      <returns>Симметричный алгоритм создания сигнатуры по умолчанию, HmacSha1Signature.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 1024 до 4096.</summary>
      <returns>Значение true, если указанная длина асимметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина асимметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>Возвращает значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.Допустимы значения длины: от 192 до 256.</summary>
      <returns>Значение true, если указанная длина симметричного ключа поддерживается, в противном случае возвращает значение false.</returns>
      <param name="length">Длина симметричного ключа.</param>
    </member>
    <member name="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString">
      <summary>Возвращает строковое представление текущего <see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.TrustVersion">
      <summary>Содержит набор поддерживаемых версий WS-Trust.Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Default">
      <summary>Возвращает версию по умолчанию.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Namespace">
      <summary>Возвращает пространство имен для данной версии WS-Trust.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Prefix">
      <summary>Возвращает префикс.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrust13">
      <summary>Возвращает WS-Trust версии 1.3.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005">
      <summary>Возвращает WS-Trust версии за февраль 2005 г.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Представляет собой учетные данные клиента на основе имени пользователя и пароля.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Возвращает или задает пароль.</summary>
      <returns>Пароль.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Возвращает или задает имя пользователя.</summary>
      <returns>Имя пользователя.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordServiceCredential">
      <summary>Этот класс используется для настройки способа проверки службой подлинности пользователей, которые вводят имя пользователя и пароль, а также для настройки кэширования маркеров входа в систему.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime">
      <summary>Возвращает или задает максимальную продолжительность времени хранения маркера в кэше. </summary>
      <returns>Значение <see cref="T:System.Timespan" />, представляющее максимальную продолжительность времени хранения маркера в кэше. Значение по умолчанию — 15 минут.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens">
      <summary>Возвращает или задает значение, указывающее, кэшируются ли маркеры входа в систему. </summary>
      <returns>Значение true, если маркеры входа в систему будут кэшироваться; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator">
      <summary>Возвращает или задает настраиваемый проверяющий элемент управления для имени пользователя и пароля.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст безопасности группы Windows. </summary>
      <returns>Значение true, если группы Windows включены в контекст безопасности; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens">
      <summary>Возвращает или задает максимальное количество кэшируемых маркеров входа в систему. </summary>
      <returns>Максимальное количество кэшируемых маркеров входа в систему.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider">
      <summary>Возвращает или задает поставщик членства.</summary>
      <returns>Поставщик членства <see cref="T:System.Web.Security.MembershipProvider" /> для данной службы.Значение по умолчанию — <see cref="T:System.Web.Security.SqlMembershipProvider" />.</returns>
      <exception cref="T:System.InvalidOperationException">Была предпринята попытка присвоить этому свойству значение, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode">
      <summary>Возвращает или задает метод проверки имени пользователя и пароля. </summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordValidationMode">
      <summary>Выводит список способов проверки в режиме «имя пользователя и пароль».</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows">
      <summary>Имена пользователей сопоставлены пользователям Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider">
      <summary>Выполняет проверку пароля на основе настроенного объекта <see cref="T:System.Web.Security.MembershipProvider" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom">
      <summary>Настраиваемая проверка подлинности на основе настраиваемого объекта <see cref="T:System.IdentityModel.Selectors.UsernamePasswordValidator" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Позволяет указать свойства, связанные с учетными данными Windows, используемыми для представления клиента.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Возвращает или задает допустимый уровень олицетворения. </summary>
      <returns>Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm">
      <summary>Возвращает или задает значение, указывающее, следует ли разрешить использовать проверку подлинности NTLM в качестве проверки подлинности Windows SSPI. </summary>
      <returns>Значение true, если проверку подлинности NTLM разрешено использовать в качестве проверки подлинности Windows SSPI, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Возвращает или задает учетные данные клиента Windows.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" /> для клиента.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsServiceCredential">
      <summary>Предоставляет свойства, в которых описываются учетные данные службы, используемые для проверки подлинности Windows.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons">
      <summary>Возвращает или задает значение, указывающее, следует ли разрешить доступ анонимным пользователям (относится только к безопасности на уровне сообщений). </summary>
      <returns>Значение true, если разрешен доступ анонимных пользователей. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст безопасности группы Windows, в которые входит клиент.</summary>
      <returns>Значение true, если группы Windows включены в контекст безопасности; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WSSecurityTokenSerializer">
      <summary>Класс, используемый для сериализации и десериализации маркеров безопасности, идентификаторов ключей безопасности и предложений идентификаторов ключей безопасности, определенных в спецификациях безопасности WS-Security, WS-Trust и WS-SecureConversation.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.Если задано значение true, сюда входят атрибуты ValueType и EncodingType (там, где применимо в ходе сериализации маркеров безопасности).</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="securityVersion">Версия системы безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
      <param name="samlSerializer">Точка расширения для сериализации и десериализации маркеров SAML.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />.</summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
      <param name="samlSerializer">Точка расширения для сериализации и десериализации маркеров SAML.</param>
      <param name="securityStateEncoder">Кодировщик, используемый для кодирования и декодирования состояния безопасности, прикрепленного к маркерам контекста безопасности в виде файла cookie.</param>
      <param name="knownTypes">Коллекция типов.Эти известные типы необходимо предварительно объявить, чтобы включить настраиваемые утверждения в файл cookie маркера контекста безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="securityVersion" /> равен null. </exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />.</summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
      <param name="samlSerializer">Точка расширения для сериализации и десериализации маркеров SAML.</param>
      <param name="securityStateEncoder">Кодировщик, используемый для кодирования и декодирования состояния безопасности, прикрепленного к маркерам контекста безопасности в виде файла cookie.</param>
      <param name="knownTypes">Коллекция известных типов.Эти известные типы необходимо предварительно объявить, чтобы включить настраиваемые утверждения в файл cookie маркера контекста безопасности.</param>
      <param name="maximumKeyDerivationOffset">Максимальное смещение производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
      <param name="maximumKeyDerivationLabelLength">Максимальная длина метки производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
      <param name="maximumKeyDerivationNonceLength">Максимальная длина однократно используемого числа (nonce) для производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="securityVersion" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="maximumKeyDerivationOffset" /> меньше 0, значение <paramref name="maximumKeyDerivationLabelLength" /> меньше 0 или значение <paramref name="maximumKeyDerivationNonceLength" /> меньше или равно 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="trustVersion">Набор поддерживаемых версий спецификации WS-Trust.</param>
      <param name="secureConversationVersion">Набор поддерживаемых версий спецификации WS-SecureConversation.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
      <param name="samlSerializer">Точка расширения для сериализации и десериализации маркеров SAML.</param>
      <param name="securityStateEncoder">Кодировщик, используемый для кодирования и декодирования состояния безопасности, прикрепленного к маркерам контекста безопасности в виде файла cookie.</param>
      <param name="knownTypes">Коллекция известных типов.Эти известные типы необходимо предварительно объявить, чтобы включить настраиваемые утверждения в файл cookie маркера контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />. </summary>
      <param name="securityVersion">Версия системы безопасности.</param>
      <param name="trustVersion">Набор поддерживаемых версий спецификации WS-Trust.</param>
      <param name="secureConversationVersion">Набор поддерживаемых версий спецификации WS-SecureConversation.</param>
      <param name="emitBspRequiredAttributes">Значение, используемое для свойства <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />.</param>
      <param name="samlSerializer">Точка расширения для сериализации и десериализации маркеров SAML.</param>
      <param name="securityStateEncoder">Кодировщик, используемый для кодирования и декодирования состояния безопасности, прикрепленного к маркерам контекста безопасности в виде файла cookie.</param>
      <param name="knownTypes">Коллекция известных типов.Эти известные типы необходимо предварительно объявить, чтобы включить настраиваемые утверждения в файл cookie маркера контекста безопасности.</param>
      <param name="maximumKeyDerivationOffset">Максимальное смещение производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
      <param name="maximumKeyDerivationLabelLength">Максимальная длина метки производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
      <param name="maximumKeyDerivationNonceLength">Максимальная длина однократно используемого числа (nonce) для производного ключа.Этот параметр накладывает ограничение на объем вычислений, производимых сервером при десериализации маркеров производных ключей.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Возвращает значение, определяющее, можно ли считать ядро выражения идентификатора ключа с помощью указанного модуля чтения. </summary>
      <returns>Значение true, если ядро предложения идентификатора ключа можно считать с помощью указанного модуля чтения. В противном случае — значение false. </returns>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Возвращает значение, определяющее, можно ли считать ядро идентификатора ключа с помощью указанного модуля чтения.</summary>
      <returns>Значение true, если ядро идентификатора ключа можно считать с помощью указанного модуля чтения. В противном случае — значение false.</returns>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>Возвращает значение, определяющее, можно ли считать ядро маркера с помощью указанного модуля чтения.</summary>
      <returns>Значение true, если ядро маркера можно считать с помощью указанного модуля чтения. В противном случае — значение false.</returns>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, определяющее, можно ли записать ядро выражения идентификатора ключа с указанным выражением идентификатора ключа.</summary>
      <returns>Значение true, если можно записать ядро предложения идентификатора ключа с указанным предложением идентификатора ключа. В противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Предложение идентификатора ключа безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Возвращает значение, определяющее, можно ли записать ядро идентификатора ключа с указанным выражением идентификатора ключа.</summary>
      <returns>Значение true, если можно записать ядро идентификатора ключа с указанным предложением идентификатора ключа. В противном случае — значение false.</returns>
      <param name="keyIdentifier">Идентификатор ключа безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Возвращает значение, определяющее, можно ли записать ядро маркера с указанным маркером безопасности.</summary>
      <returns>Значение true, если можно записать ядро маркера с указанным маркером безопасности. В противном случае — значение false.</returns>
      <param name="token">Маркер безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает выражение идентификатора ключа на основе маркера в формате XML.</summary>
      <returns>Созданный идентификатор ключа безопасности.</returns>
      <param name="element">Маркер безопасности.</param>
      <param name="tokenReferenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.Xml.XmlException">При десериализации предложения идентификатора ключа произошла ошибка, либо не удалось прочитать предложение идентификатора ключа.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.DefaultInstance">
      <summary>Возвращает экземпляр этого класса по умолчанию.</summary>
      <returns>Экземпляр этого класса по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes">
      <summary>Возвращает значение, указывающее, следует ли создать необходимые атрибуты BSP. </summary>
      <returns>Значение true, если требуется создать обязательные атрибуты BSP. В противном случае — значение false. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.GetTokenTypeUri(System.Type)">
      <summary>Возвращает универсальный код ресурса (URI) маркера безопасности указанного типа.</summary>
      <returns>Универсальный код ресурса (URI) маркера безопасности указанного типа.</returns>
      <param name="tokenType">Тип маркера безопасности.</param>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationLabelLength">
      <summary>Возвращает максимальную длину метки производного ключа.</summary>
      <returns>Максимальная длина метки производного ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationNonceLength">
      <summary>Возвращает максимальную длину однократно используемого числа (nonce) для производного ключа.</summary>
      <returns>Максимальная длина однократно используемого числа (nonce) для производного ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationOffset">
      <summary>Возвращает максимальное смещение производного ключа.</summary>
      <returns>Максимальное смещение производного ключа.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Считывает ядро выражения идентификатора ключа с помощью указанного модуля чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Считанное предложение идентификатора ключа безопасности.</returns>
      <param name="reader">Указанное средство чтения XML.</param>
      <exception cref="T:System.Xml.XmlException">При десериализации предложения идентификатора ключа произошла ошибка, либо не удалось прочитать предложение идентификатора ключа.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Считывает ядро идентификатора ключа с помощью указанного модуля чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Считанный идентификатор ключа безопасности.</returns>
      <param name="reader">Указанное средство чтения XML.</param>
      <exception cref="T:System.Xml.XmlException">При десериализации идентификатора ключа произошла ошибка, либо не удалось считать идентификатор ключа.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Считывает ядро маркера с помощью указанного модуля чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Считанный маркер безопасности.</returns>
      <param name="reader">Указанное средство чтения XML.</param>
      <param name="tokenResolver">Арбитр маркеров безопасности. </param>
      <exception cref="T:System.Xml.XmlException">При десериализации маркера произошла ошибка, либо не удалось считать маркер.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.SecurityVersion">
      <summary>Возвращает версию системы безопасности.</summary>
      <returns>Версия системы безопасности.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.TryCreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle,System.IdentityModel.Tokens.SecurityKeyIdentifierClause@)">
      <summary>Создает предложение идентификатора ключа на основе маркера в формате XML.</summary>
      <returns>Значение true, если создано предложение идентификатора ключа. В противном случае — значение false.</returns>
      <param name="element">Маркер безопасности.</param>
      <param name="tokenReferenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <param name="securityKeyIdentifierClause">Часть элемента, содержащая маркер идентификатора ключа безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Записывает ядро выражения идентификатора ключа с заданным выражением идентификатора ключа с помощью указанного модуля записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Указанное средство записи XML.</param>
      <param name="keyIdentifierClause">Предложение идентификатора ключа безопасности.</param>
      <exception cref="T:System.Xml.XmlException">При сериализации выражения идентификатора ключа произошла ошибка.</exception>
      <exception cref="T:System.InvalidOperationException">Не удалось записать выражение идентификатора ключа.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Записывает ядро идентификатора ключа с заданным выражением идентификатора ключа с помощью указанного модуля записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Указанное средство записи XML.</param>
      <param name="keyIdentifier">Предложение идентификатора ключа безопасности.</param>
      <exception cref="T:System.Xml.XmlException">При сериализации идентификатора ключа произошла ошибка.</exception>
      <exception cref="T:System.InvalidOperationException">Не удалось записать идентификатор ключа.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Записывает ядро маркера с заданным маркером безопасности с помощью указанного модуля записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Указанное средство записи XML.</param>
      <param name="token">Маркер безопасности.</param>
      <exception cref="T:System.Xml.XmlException">При сериализации маркера безопасности произошла ошибка.</exception>
      <exception cref="T:System.InvalidOperationException">Не удалось записать маркер.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <summary>Задает сертификат, используемый клиентом для самоидентификации.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate">
      <summary>Возвращает или задает сертификат, используемый для представления службы, с которой взаимодействует клиент.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для представления службы при взаимодействии с клиентом.</returns>
      <exception cref="T:System.InvalidOperationException">Метод set использовался для учетных данных, доступных только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Позволяет указать сертификат, используемый для представления клиента, путем указания параметров запроса, например <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> и <paramref name="findValue" />.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого клиент получает сертификат клиента.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
      <param name="findType">Определяет тип поиска сертификата X.509.</param>
      <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Позволяет указать сертификат, используемый для представления службы, путем указания различающегося имени субъекта.</summary>
      <param name="subjectName">Различающееся имя субъекта.</param>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
      <summary>Представляет параметры, используемые службой для проверки предоставленного клиентом сертификата.Также содержит сертификат, используемый службой для шифрования ответов или обратных вызовов для клиентов в режиме проверки подлинности сообщений MutualCertificateDuplex.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication">
      <summary>Возвращает параметры, используемые для проверки сертификата, предоставленного клиентом при проверке подлинности.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate">
      <summary>Возвращает или задает сертификат, используемый в режиме проверки подлинности сообщений MutualCertificateDuplex. </summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для шифрования сообщений, отправляемых клиенту службой по некоррелированному дуплексному транспорту в режиме проверки подлинности сообщений MutualCertificateDuplex.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, предназначенные только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Указывает сертификат, используемый для шифрования сообщений клиенту.Этот параметр используется только для привязок, настроенных на работу в режиме проверки подлинности сообщений MutualCertificateDuplex.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат.</param>
      <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
      <param name="findType">Тип поиска сертификата X.509.</param>
      <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Позволяет указать сертификат, который будет использоваться для шифрования сообщений клиенту, по различающемуся имени субъекта.Этот параметр используется только для привязок, настроенных на работу в режиме проверки подлинности сообщений MutualCertificateDuplex.</summary>
      <param name="subjectName">Различающееся имя субъекта.</param>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат.</param>
      <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <summary>Представляет параметры, используемые клиентом для проверки сертификата, предоставленного службой с помощью проверки подлинности SSL.Он также содержит сертификат для службы, который явно задан в клиенте для шифрования сообщений для службы с помощью безопасности сообщений.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication">
      <summary>Возвращает параметры, используемые для проверки сертификата службы, полученного при проверке подлинности SSL.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate">
      <summary>Возвращает или задает используемый для службы сертификат по умолчанию. </summary>
      <returns>Сертификат <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для защиты сообщений, отправляемых службе.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, доступные только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates">
      <summary>Возвращает или задает сертификат в области действия, используемый для представления службы, с которой взаимодействует клиент. </summary>
      <returns>Сертификат <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для защиты сообщений, отправляемых службе.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Задает используемый для службы сертификат по умолчанию.Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
      <param name="findType">Определяет тип поиска сертификата X.509.</param>
      <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, доступные только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Задает используемый для службы сертификат по умолчанию.Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.</summary>
      <param name="subjectName">Различающееся имя субъекта.</param>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)">
      <summary>Загружает сертификат по расположению хранилища сертификатов, имени хранилища сертификатов, типу поиска сертификатов X.509 и значению для поиска и сохраняет его в коллекцию для URL-адреса, задающего область.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
      <param name="findType">Тип поиска сертификата X.509.</param>
      <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
      <param name="targetService">URL-адрес, задающий область.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetService" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, доступные только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)">
      <summary>Загружает сертификат по имени субъекта, расположению хранилища сертификатов и имени хранилища сертификатов и сохраняет его в коллекцию для URL-адреса, задающего область.</summary>
      <param name="subjectName">Полное имя субъекта.</param>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
      <param name="targetService">URL-адрес, задающий область.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetService" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, доступные только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
      <summary>Задает сертификат, используемый службой для самоидентификации.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate">
      <summary>Возвращает или задает сертификат, используемый для представления службы, с которой взаимодействует клиент.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для представления службы при взаимодействии с клиентом.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Задает сертификат, используемый для представления службы, путем указания параметров запроса, например <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> и <paramref name="findValue" />.</summary>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого клиент получает сертификат клиента.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
      <param name="findType">Определяет тип поиска сертификата X.509.</param>
      <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)">
      <summary>Задает сертификат, используемый для представления службы, путем указания различающегося имени субъекта.</summary>
      <param name="subjectName">Различающееся имя субъекта.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Задает сертификат, используемый для представления службы, путем указания различающегося имени субъекта, хранилища сертификатов и расположения хранилища сертификатов.</summary>
      <param name="subjectName">Различающееся имя субъекта.</param>
      <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
      <param name="storeName">Задает имя открываемого хранилища сертификатов X.509.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateValidationMode">
      <summary>Перечисление со списком способов проверки сертификата.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.None">
      <summary>Проверка сертификата не выполнена. </summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust">
      <summary>Сертификат является действительным, если он находится в хранилище «Доверенные лица».</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust">
      <summary>Сертификат является действительным, если цепь сертификатов начинается в центре сертификации в доверенном корневом хранилище.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust">
      <summary>Сертификат является действительным, если он находится в хранилище «Доверенные лица», или цепь сертификатов начинается в центре сертификации в доверенном корневом хранилище.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom">
      <summary>Для проверки сертификата пользователь должен подключить настраиваемый объект <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.X509ClientCertificateAuthentication">
      <summary>Задает свойства проверки подлинности для проверки сертификата клиента.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator">
      <summary>Возвращает или задает настраиваемый проверяющий элемент управления для сертификата клиента.</summary>
      <returns>Настраиваемый проверяющий элемент управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">set, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups">
      <summary>Возвращает или задает значение, указывающее, будут ли включены в контекст авторизации группы Windows.</summary>
      <returns>Значение true, если группы Windows включены в контекст авторизации. В противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount">
      <summary>Возвращает или задает значение, указывающее, сопоставлен ли сертификат учетным записям Windows. </summary>
      <returns>Значение true, если сертификат сопоставлен с учетными записями Windows; в противном случае — значение false.Значение по умолчанию — false.</returns>
      <exception cref="T:System.InvalidOperationException">set, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата для проверки сертификата X.509 методом ChainTrust и PeerOrChainTrust.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: NoCheck, Online или Offline.Значение по умолчанию — Online.</returns>
      <exception cref="T:System.InvalidOperationException">set, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, в контексте которого проверяется цепь сертификатов клиента.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">set, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509PeerCertificateAuthentication">
      <summary>Задает свойства проверки подлинности для сертификата кэширующего узла.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CustomCertificateValidator">
      <summary>Возвращает или задает настраиваемый проверяющий элемент управления для сертификата клиента.</summary>
      <returns>Настраиваемый проверяющий элемент управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">Задается, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата.</summary>
      <returns>Одно из значений перечисления <see cref="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode" />: None, Online или Cached.</returns>
      <exception cref="T:System.InvalidOperationException">Задается, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, относительно которого проверяется сертификат клиента.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Задается, если учетные данные доступны только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <summary>Представляет параметры, которые использует прокси клиента для проверки подлинности сертификатов службы, полученных при помощи согласования SSL/TLS.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode">
      <summary>Возвращает режим проверки сертификата.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator">
      <summary>Возвращает или задает настраиваемый проверяющий элемент управления для сертификата клиента.</summary>
      <returns>Настраиваемый проверяющий элемент управления <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode">
      <summary>Возвращает или задает режим отзыва сертификата для режимов проверки сертификата X.509 ChainTrust и PeerOrChainTrust.</summary>
      <returns>Одно из значений перечисления <see cref="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode" />: NoCheck, Online или Offline.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation">
      <summary>Возвращает или задает расположение доверенного хранилища, в контексте которого проверяется цепь сертификатов клиента.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken">
      <summary>Представляет двоичный маркер безопасности секрета.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="key">Байтовый массив, представляющий ключ.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="keySizeInBits">Размер ключа в битах.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Байтовый массив, представляющий ключ.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Байтовый массив, представляющий ключ.</param>
      <param name="allowCrypto">Объект структуры <see cref="T:System.Boolean" />, указывающий, следует ли разрешить шифрование.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="id">Идентификатор маркера.</param>
      <param name="keySizeInBits">Размер ключа в битах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="keySizeInBits" /> меньше или равно нулю, либо оно больше или равно 512 или не кратно 8.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" />. </summary>
      <param name="id">Идентификатор маркера.</param>
      <param name="keySizeInBits">Размер ключа в битах.</param>
      <param name="allowCrypto">Объект структуры <see cref="T:System.Boolean" />, указывающий, следует ли разрешить шифрование.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="keySizeInBits" /> меньше или равно нулю, либо оно больше или равно 512 или не кратно 8.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.GetKeyBytes">
      <summary>Получает байты, представляющие ключ.</summary>
      <returns>Ключ.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.Id">
      <summary>Получает идентификатор маркера.</summary>
      <returns>Идентификатор маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.KeySize">
      <summary>Получает размер ключа маркера.</summary>
      <returns>Размер ключа маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.SecurityKeys">
      <summary>Получает коллекцию ключей безопасности.</summary>
      <returns>Коллекция объектов <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidFrom">
      <summary>Получает эффективное время запуска маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий эффективное время запуска маркера. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidTo">
      <summary>Получает эффективное время запуска маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий эффективное время запуска маркера.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
      <summary>Задает типы обязательных и необязательных утверждений, которые могут появляться в федеративных учетных данных.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> для указанного обязательного утверждения заданного типа. </summary>
      <param name="claimType">Тип утверждения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> для указанного обязательного утверждения заданного типа. </summary>
      <param name="claimType">Тип утверждения.</param>
      <param name="isOptional">Если задано значение false, то утверждение является обязательным. В противном случае утверждение необязательно.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
      <summary>Получает тип утверждения, заданный в конструкторе.</summary>
      <returns>Тип утверждения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
      <summary>Получает значение, указывающее, является ли утверждение необязательным.</summary>
      <returns>Значение true, если этот экземпляр класса предназначен для необязательного утверждения, и значение false, если он задает обязательное утверждение.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator">
      <summary>Указывает контракт, который следует реализовать с помощью структуры проверки подлинности маркера безопасности, который выдает маркеры клиенту.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler">
      <summary>Получает или задает обработчик на момент выдачи маркера.</summary>
      <returns>Делегат, который обрабатывает событие во время выдачи маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler">
      <summary>Получает или задает обработчик на момент обновления маркера.</summary>
      <returns>Делегат, который обрабатывает событие во время обновления маркера.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager">
      <summary>Этот интерфейс позволяет приложению по запросу выполнять очистку кэша маркера Windows.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache">
      <summary>Удаляет все маркеры из кэша входа в систему.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)">
      <summary>Удаляет указанный маркер из кэша входа в систему.</summary>
      <returns>Значение true, если маркер пользователя удален успешно, в противном случае — значение false. </returns>
      <param name="username">Имя пользователя на удаляемом маркере.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement">
      <summary>Задает требования к свойству безопасности, относящиеся к созданию канала в .</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.TargetAddress">
      <summary>Получает и задает адрес целевого объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.ToString">
      <summary>Выводит текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление данного экземпляра класса.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.Via">
      <summary>Возвращает и задает Via.</summary>
      <returns>Объект класса <see cref="T:System.Uri" />, который представляет Via.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache">
      <summary>Этот интерфейс при реализации задает контракт для кэша маркера контекста безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Добавляет маркер безопасности контекста безопасности в кэш маркера.</summary>
      <param name="token">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts">
      <summary>Удаляет содержимое кэша маркера.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)">
      <summary>Получает коллекцию идентификаторов маркера безопасности контекста безопасности, соответствующих указанному идентификатору контекста.</summary>
      <returns>Универсальная коллекция значений объектов класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Получает идентификатор маркера безопасности контекста безопасности, соответствующий указанному идентификатору и созданию контекста.</summary>
      <returns>Соответствующий объект класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
      <param name="generation">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий создание.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)">
      <summary>Удаляет из кэша все маркеры, которые соответствуют данному идентификатору контекста.</summary>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Удаляет из кэша маркер, которые соответствует данному идентификатору и созданию контекста.</summary>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
      <param name="generation">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий создание.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Пытается добавить маркер в кэш.</summary>
      <returns>Имеет значение true, если маркер добавлен в кэш успешно, в противном случае значение false. </returns>
      <param name="token">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Дата или время <paramref name="token" /> выходит за границы диапазона.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)">
      <summary>Обновляет дату истечения срока действия для маркера в кэше.</summary>
      <param name="context">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <param name="expirationTime">Новое время и дата истечения срока действия.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler">
      <summary>Делегат указывает на метод, который при реализации будет вызываться структурами проверки подлинности до выдачи маркера клиенту.</summary>
      <param name="issuedToken">Маркер, который требуется выдать клиенту.</param>
      <param name="tokenRequestor">Конечная точка, для которой запрашивается маркер.Этой конечной точке клиент представляет выданный маркер.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters">
      <summary>Представляет параметры маркера безопасности, выданного в федеративном сценарии безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />. </summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />. </summary>
      <param name="tokenType">Тип маркера.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />. </summary>
      <param name="tokenType">Тип маркера.</param>
      <param name="issuerAddress">Адрес конечной точки, которая выдает маркер.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />. </summary>
      <param name="tokenType">Тип маркера.</param>
      <param name="issuerAddress">Адрес конечной точки, которая выдает маркер.</param>
      <param name="issuerBinding">Привязка издателя.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.AdditionalRequestParameters">
      <summary>Коллекция дополнительных параметров запроса</summary>
      <returns>Объект класса <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.Xml.XmlElement" />, который содержит дополнительные параметры запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ClaimTypeRequirements">
      <summary>Получает коллекцию требований для типа утверждения.</summary>
      <returns>Объект класса <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />, который содержит дополнительные требования для типа утверждения.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> не является External или Internal.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CreateRequestParameters(System.ServiceModel.MessageSecurityVersion,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Создает коллекцию XML-элементов параметра запроса для выданного маркера, которые включаются в запрос, отправляемый клиентов в службу маркера безопасности.</summary>
      <returns>Объект класса <see cref="T:System.Collections.ObjectModel.Collection`1" />, содержащий объекты класса <see cref="T:System.Xml.XmlElement" />, которые представляют параметры запроса.</returns>
      <param name="messageSecurityVersion">Объект <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</param>
      <param name="securityTokenSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.DefaultMessageSecurityVersion">
      <summary>Получает набор по умолчанию версий спецификаций безопасности.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MessageSecurityVersion" />, представляющий набор по умолчанию версий спецификаций безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, указывающее, имеет ли выданный маркер асимметричный ключ.</summary>
      <returns>Значение true используется, если маркер имеет асимметричный ключ, в противном случае — используется значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>При реализации инициализирует требование маркера безопасности на основе свойств, заданных в объекте класса IssuedSecurityTokenParameters.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerAddress">
      <summary>Получает или задает адрес издателя маркера.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.EndpointAddress" /> издателя маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerBinding">
      <summary>Возвращает или задает привязку издателя маркера, используемую клиентом.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Channels.Binding" /> издателя маркера для использования клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerMetadataAddress">
      <summary>Получает или задает адрес метаданных издателя маркера.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.EndpointAddress" /> издателя маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeySize">
      <summary>Получает или задает размер ключа выданного маркера.</summary>
      <returns>Размер ключа маркера.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Предпринята попытка задать значение меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType">
      <summary>Получает или задает тип ключа выданного маркера.</summary>
      <returns>Одно из значений <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.TokenType">
      <summary>Получает или задает тип выданного маркера.</summary>
      <returns>Тип маркера.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider">
      <summary>Поставщик маркера для выданных маркеров безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.#ctor">
      <summary>Создает новый экземпляр данного класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Abort">
      <summary>Прерывает работу поставщика.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Асинхронно начинает закрытие поставщика.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />.</returns>
      <param name="callback">Объект <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Объект класса <see cref="T:System.Object" />, представляющий состояние.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно начинает закрытие поставщика.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
      <param name="callback">Объект <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Объект класса <see cref="T:System.Object" />, представляющий состояние.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно начинает получение ядра маркера.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
      <param name="callback">Объект <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Объект класса <see cref="T:System.Object" />, представляющий состояние.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Асинхронно начинает открытие поставщика.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />.</returns>
      <param name="callback">Объект <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Объект класса <see cref="T:System.Object" />, представляющий состояние.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно начинает открытие поставщика.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
      <param name="callback">Объект <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Объект класса <see cref="T:System.Object" />, представляющий состояние.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.CacheIssuedTokens">
      <summary>Возвращает или задает значение, указывающее, кэшируются ли выданные маркеры. </summary>
      <returns>Значение true, если созданные маркеры кэшируются. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Close">
      <summary>Закрывает поставщик.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Close(System.TimeSpan)">
      <summary>Закрывает поставщик.</summary>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Closed">
      <summary>Обеспечивает регистрацию и отмену регистрации для события Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Closing">
      <summary>Обеспечивает регистрацию и отмену регистрации для события Closing.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.DefaultCloseTimeout">
      <summary>Получает таймаут по умолчанию для закрытия соединения.</summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, представляющий таймаут по умолчанию для закрытия соединения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.DefaultOpenTimeout">
      <summary>Получает таймаут по умолчанию для открытия соединения.</summary>
      <returns>Объект структуры <see cref="T:System.TimeSpan" />, представляющий таймаут по умолчанию для открытия соединения.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Dispose">
      <summary>Удаляет текущий экземпляр объекта.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndClose(System.IAsyncResult)">
      <summary>Асинхронный обратный вызов для закрытия поставщика.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)">
      <summary>Асинхронный обратный вызов для получения ядра маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndOpen(System.IAsyncResult)">
      <summary>Асинхронный обратный вызов для открытия поставщика.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Faulted">
      <summary>Обеспечивает регистрацию и отмену регистрации для события Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Получает ядро маркера.</summary>
      <returns>Объект класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий ядро маркера.</returns>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IdentityVerifier">
      <summary>Возвращает или задает средство проверки удостоверения.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuedTokenRenewalThresholdPercentage">
      <summary>Получает или задает пороговое значение (в процентах) для обновления выданных маркеров.</summary>
      <returns>Пороговое значение обновления (в процентах) для выданных маркеров.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerAddress">
      <summary>Получает или задает адрес издателя.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerBinding">
      <summary>Получает или задает привязку издателя.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerChannelBehaviors">
      <summary>Получает или задает расширения функциональности канала издателя.</summary>
      <returns>Объект класса <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />, который содержит интерфейс <see cref="T:System.ServiceModel.Description.IEndpointBehavior" /> для канала издателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.KeyEntropyMode">
      <summary>Возвращает или задает режим энтропии ключа.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.MaxIssuedTokenCachingTime">
      <summary>Получает или задает максимальное время, в течение которого выполняется кэширование выданного маркера.</summary>
      <returns>Объект структуры <see cref="T:System.Timespan" />, представляющий максимальное время кэширования выданного маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.MessageSecurityVersion">
      <summary>Возвращает или задает версию системы безопасности для защиты сообщения.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Open">
      <summary>Открывает поставщик.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Open(System.TimeSpan)">
      <summary>Открывает поставщик.</summary>
      <param name="timeout">Момент времени, определяемый структурой <see cref="T:System.TimeSpan" />, после которого истекает время ожидания вызова.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Opened">
      <summary>Обеспечивает регистрацию и отмену регистрации для события Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Opening">
      <summary>Обеспечивает регистрацию и отмену регистрации для события Opening.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SecurityAlgorithmSuite">
      <summary>Получает или задает набор алгоритмов безопасности.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SecurityTokenSerializer">
      <summary>Возвращает или задает сериализатор маркера безопасности.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.State">
      <summary>Получает состояние обмена данными.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.CommunicationState" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SupportsTokenCancellation">
      <summary>Возвращает или задает значение, указывающее, поддерживается ли отмена маркера. </summary>
      <returns>Значение true, если поддерживается отмена маркера, в противном случае значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.TargetAddress">
      <summary>Получает или задает адрес целевого объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.TokenRequestParameters">
      <summary>Получает параметры запроса маркера.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.Xml.XmlElement" />, которая представляет параметры запроса маркера.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters">
      <summary>Представляет параметры для маркера безопасности Kerberos.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters" />.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Значение true используется, если маркер имеет асимметричный ключ, в противном случае — используется значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement">
      <summary>Задает требования к свойству безопасности, относящиеся к службе прослушивателя в .</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.AuditLogLocation">
      <summary>Получает или задает местоположение журнала аудита.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.AuditLogLocation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.ListenUri">
      <summary>Возвращает или задает универсальный код ресурса (URI) прослушивателя.</summary>
      <returns>Прослушиватель <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.MessageAuthenticationAuditLevel">
      <summary>Получает и задает уровень аудита проверки подлинности сообщения.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.AuditLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.SuppressAuditFailure">
      <summary>Возвращает или задает значение, указывающее, следует ли подавлять сбой аудита. </summary>
      <returns>Значение true, если сбои аудита подавляются. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление данного экземпляра класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler">
      <summary>При реализации делегат вызывается до того, как обновленный маркер возвращается клиенту. </summary>
      <param name="newSecurityToken">Обновленный маркер.</param>
      <param name="oldSecurityToken">Просроченные маркер безопасности.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters">
      <summary>Представляет параметры маркера безопасности RSA.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters" />.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Значение true используется, если маркер имеет асимметричный ключ, в противном случае — используется значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters">
      <summary>Представляет параметры маркера безопасности безопасного диалога.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе свойств заданного <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />. </summary>
      <param name="bootstrapSecurityBindingElement">Объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе свойств заданного <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />. </summary>
      <param name="bootstrapSecurityBindingElement">Объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Значение true используется, если требуется отмена; в противном случае используется значение false. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе свойств заданного <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</summary>
      <param name="bootstrapSecurityBindingElement">Объект элемента привязки безопасности, который защищает сообщения, обмен которыми осуществляется в рамках выдачи маркер безопасного диалога.</param>
      <param name="requireCancellation">Значение true используется, если требуется отмена; в противном случае используется значение false. </param>
      <param name="canRenewSession">true, если сеанс связи можно возобновить; в противном случае — false. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе свойств заданного <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> с заданным <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</summary>
      <param name="bootstrapSecurityBindingElement">Объект элемента привязки безопасности, который защищает сообщения, обмен которыми осуществляется в рамках выдачи маркер безопасного диалога.</param>
      <param name="requireCancellation">Значение true используется, если требуется отмена; в противном случае используется значение false. </param>
      <param name="canRenewSession">true, если сеанс связи можно возобновить; в противном случае — false. </param>
      <param name="bootstrapProtectionRequirements">Требования к защите канала.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе свойств заданного <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> с заданным <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />. </summary>
      <param name="bootstrapSecurityBindingElement">Объект <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Значение true используется, если требуется отмена; в противном случае используется значение false. </param>
      <param name="bootstrapProtectionRequirements">Объект <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> на основе другого экземпляра этого же класса. </summary>
      <param name="other">Другой экземпляр данного класса.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.BootstrapProtectionRequirements">
      <summary>Получает требования к защите начальной загрузки.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.BootstrapSecurityBindingElement">
      <summary>Возвращает или задает класс <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CanRenewSession">
      <summary>Возвращает или задает значение, указывающее, можно ли обновлять сеанс связи.</summary>
      <returns>Значение true, если сеанс связи можно обновить. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> не является External или Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли выданный маркер безопасности асимметричный ключ. </summary>
      <returns>Это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.RequireCancellation">
      <summary>Возвращает или задает значение, указывающее, требуется ли отмена. </summary>
      <returns>Значение true используется, если требуется отмена; в противном случае используется значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientAuthentication">
      <summary>Получает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>Получает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsServerAuthentication">
      <summary>Получает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken">
      <summary>Представляет маркер, определяемый спецификацией WS-SecureConversation.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />. </summary>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />. </summary>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />. </summary>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
      <param name="authorizationPolicies">Коллекция экземпляров интерфейса <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, доступная только для чтения, которая представляет сторону, которой выдается маркер.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />. </summary>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
      <param name="keyGeneration">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий создание ключа.</param>
      <param name="keyEffectiveTime">Эффективное время запуска ключа.</param>
      <param name="keyExpirationTime">Время завершения действия ключа.</param>
      <param name="authorizationPolicies">Коллекция экземпляров интерфейса <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, доступная только для чтения, которая представляет сторону, которой выдается маркер.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies">
      <summary>Получает коллекцию со свойством «только чтение», содержащую политики авторизации маркера.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая экземпляры <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />, извлеченный из сообщения начальной загрузки.</summary>
      <returns>Свойство сообщения безопасности.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Возвращает значение, определяющее, можно ли записать ядро идентификатора ключа с указанным типом предложения идентификатора ключа. </summary>
      <returns>Значение true, если можно создать указанный тип предложения идентификатора ключа. В противном случае — значение false.</returns>
      <typeparam name="T">Указанный тип предложения идентификатора ключа.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId">
      <summary>Получает идентификатор контекста.</summary>
      <returns>Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)">
      <summary>Создает файл cookie маркера контекста безопасности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
      <param name="authorizationPolicies">Коллекция со свойством «только чтение», содержащая экземпляры <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <param name="securityStateEncoder">Объект <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)">
      <summary>Создает файл cookie маркера контекста безопасности.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий идентификатор контекста.</param>
      <param name="id">Идентификатор маркера.</param>
      <param name="key">Массив байтов, представляющий ключ.</param>
      <param name="validFrom">Эффективное время запуска.</param>
      <param name="validTo">Время завершения.</param>
      <param name="keyGeneration">Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий создание ключа.</param>
      <param name="keyEffectiveTime">Эффективное время запуска ключа.</param>
      <param name="keyExpirationTime">Время завершения действия ключа.</param>
      <param name="authorizationPolicies">Коллекция со свойством «только чтение», содержащая экземпляры <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <param name="securityStateEncoder">Объект <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создает предложение идентификатора ключа заданного типа.</summary>
      <returns>
        <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> для приведения к типу <paramref name="T" />.</returns>
      <typeparam name="T">Заданный тип.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose">
      <summary>Освобождает все управляемые и неуправляемые ресурсы, используемые экземпляром этого объекта.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id">
      <summary>Получает идентификатор маркера.</summary>
      <returns>Идентификатор маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode">
      <summary>Возвращает значение, которое показывает, считывается ли маркер контекста безопасности с параметром режима, указывающим порядок обработки файлов cookie.</summary>
      <returns>Значение true, если считывается маркер контекста безопасности с режимом файлов cookie. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime">
      <summary>Получает эффективное время запуска ключа.</summary>
      <returns>Объект <see cref="T:System.DateTime" />, представляющий эффективное время запуска ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime">
      <summary>Получает время завершения действия ключа.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий время завершения действия ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration">
      <summary>Получает процедуру создания ключа.</summary>
      <returns>Объект класса <see cref="T:System.Xml.UniqueId" />, представляющий создание ключа.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Возвращает значение, определяющее, соответствует ли текущее предложение идентификатора ключа маркера указанному предложению идентификатора ключа. </summary>
      <returns>Значение true, если текущее предложение идентификатора ключа маркера соответствует указанному предложению идентификатора ключа. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="keyIdentifierClause">Указанное предложение идентификатора ключа.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys">
      <summary>Получает коллекцию со свойством «только чтение», содержащую ключи безопасности.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая экземпляры <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString">
      <summary>Создает текстовое представление текущего экземпляра этого объекта.</summary>
      <returns>Текстовое представление текущего экземпляра этого объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom">
      <summary>Получает эффективное время запуска маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий эффективное время запуска маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo">
      <summary>Получает время завершения действия маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий время завершения действия маркера.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator">
      <summary>Проверяет маркеры и извлекает утверждения.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Получает значение, указывающее, можно ли выполнить проверку заданного маркера. </summary>
      <returns>Значение true, если можно выполнить проверку заданного маркера. В противном случае — значение false.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Выполняет проверку заданного маркера.</summary>
      <returns>Коллекция экземпляров класса <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver">
      <summary>Разрешает маркеры контекста безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />. </summary>
      <param name="securityContextCacheCapacity">Размер кэша контекста безопасности.</param>
      <param name="removeOldestTokensOnCacheFull">Значение true, если необходимо удалять самые старые маркеры при заполнении кэша; в противном случае используется значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> с указанной емкостью кэша для контекста безопасности и максимальной разницей в показаниях часов.</summary>
      <param name="securityContextCacheCapacity">Размер кэша контекста безопасности.</param>
      <param name="removeOldestTokensOnCacheFull">Значение true, если необходимо удалять самые старые маркеры при заполнении кэша; в противном случае используется значение false.</param>
      <param name="clockSkew">Максимально возможная временная разница между настройками времени клиента и сервера.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Добавляет маркер безопасности контекста безопасности в кэш маркера.</summary>
      <param name="token">Маркер контекста безопасности.</param>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Свойство <see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> имеет значение false, и достигнута либо превышена предельная емкость кэша.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts">
      <summary>Удаляет содержимое кэша маркера.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew">
      <summary>Возвращает максимально возможную разницу во времени между параметрами времени клиента и сервера.</summary>
      <returns>Максимально возможная временная разница между настройками времени клиента и сервера.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)">
      <summary>Получает коллекцию идентификаторов маркера безопасности контекста безопасности, соответствующих указанному идентификатору контекста.</summary>
      <returns>Универсальная коллекция маркеров контекста безопасности.</returns>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Получает идентификатор маркера безопасности контекста безопасности, соответствующий указанному идентификатору и созданию контекста.</summary>
      <returns>Соответствующий маркер контекста безопасности.</returns>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
      <param name="generation">Создание.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)">
      <summary>Удаляет из кэша все маркеры, которые соответствуют данному идентификатору контекста.</summary>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Удаляет из кэша маркер, которые соответствует данному идентификатору и созданию контекста.</summary>
      <param name="contextId">Заданный идентификатор контекста безопасности.</param>
      <param name="generation">Создание.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull">
      <summary>Получает значение, которое указывает, следует ли удалять самые старые маркеры при заполнении кэша. </summary>
      <returns>Значение true, если необходимо удалять самые старые маркеры при заполнении кэша; в противном случае используется значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity">
      <summary>Получает размер кэша маркера контекста безопасности.</summary>
      <returns>Размер кэша маркера контекста безопасности.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Добавляет маркер в кэш.</summary>
      <returns>Имеет значение true, если маркер добавлен в кэш успешно, в противном случае значение false. </returns>
      <param name="token">Маркер контекста безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Дата или время <paramref name="token" /> выходят за допустимые пределы.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Разрешает ядро ключа безопасности по заданному предложению идентификатора ключа.</summary>
      <returns>Значение true, если ядро ключа разрешено успешно. В противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Предложение идентификатора ключа безопасности.</param>
      <param name="key">Когда этот метод завершает работу, содержит разрешенное ядро ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Пытается разрешить маркер, для которого назначено указанное предложение идентификатора ключа.</summary>
      <returns>Имеет значение true, если маркер был разрешен успешно, в противном случае — значение false.</returns>
      <param name="keyIdentifier">Идентификатор ключа безопасности.</param>
      <param name="token">Возвращаемый метод содержит разрешаемое ядро ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Разрешает маркер по заданному предложению идентификатора ключа.</summary>
      <returns>Имеет значение true, если маркер был разрешен успешно, в противном случае — значение false.</returns>
      <param name="keyIdentifierClause">Предложение идентификатора ключа безопасности.</param>
      <param name="token">Возвращаемый метод содержит разрешаемое ядро ключа.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)">
      <summary>Обновляет дату истечения срока действия для маркера в кэше.</summary>
      <param name="context">Контекст безопасности.</param>
      <param name="expirationTime">Новое время и дата истечения срока действия.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode">
      <summary>Список требований к включению маркера для сообщений.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient">
      <summary>Маркер всегда включается в сообщения получателю, и никогда — в сообщения инициатору.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never">
      <summary>Маркер никогда не включается в сообщения, но на него создается ссылка.Маркер должен быть известен получателю вне диапазона.Данный параметр не работает вне блока.Чтобы он работал, необходимо включить настраиваемые учетные данные.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once">
      <summary>Маркер включается один раз.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator">
      <summary>Маркер всегда включается в сообщения инициатору, и никогда — в сообщения получателю.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters">
      <summary>Абстрактный класс, который при реализации представляет собой параметры маркера безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> на основе другого экземпляра.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Класс <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
      <exception cref="T:System.InvalidOperationException">Не удалось клонировать данный экземпляр класса.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey">
      <summary>При реализации получает значение, определяющее, имеет ли выданный маркер асимметричный ключ. </summary>
      <returns>Значение true используется, если маркер имеет асимметричный ключ, в противном случае — используется значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode">
      <summary>Получает или задает требования для включения маркера.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>При реализации инициализирует требование маркера безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Получает значение, которое указывает, соответствует ли маркер предложению идентификатора ключа.</summary>
      <returns>Значение true, если маркер соответствует предложению идентификатора ключа. В противном случае — значение false.</returns>
      <param name="token">Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="referenceStyle" /> имеет значение, отличное от <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External" /> или <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle">
      <summary>Получает или задет ссылочный тип маркера.</summary>
      <returns>Перечисление <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" /> для маркера.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Задан недопустимый стиль ссылки на маркер.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys">
      <summary>Получает или задает значение, которое указывает, могут ли ключи быть производными от исходных ключей подтверждения. </summary>
      <returns>Значение true, если требуется ключ, производный от ключа маркера, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента. </summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle">
      <summary>Данное перечисление задает требуемый ссылочный тип, используемый при создании ссылок маркера безопасности (STR) на маркеры безопасности из элементов сигнатуры и шифрования в сообщении.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal">
      <summary>Созданные ссылки STR ссылаются на маркер, как если бы он был включен в сообщение.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External">
      <summary>Созданные ссылки STR ссылаются на маркер, как если бы он не был присоединен собственно к сообщению.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement">
      <summary>Абстрактный класс, который в случае реализации задает требования, характерные для , к свойствам безопасности запрашиваемого маркера или маркера, для которого выполняется проверка подлинности.Диспетчер маркера безопасности создает поставщиков маркера безопасности и структуры проверки подлинности маркера безопасности, используемые процессором безопасности  на основе требований маркера.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.AuditLogLocationProperty">
      <summary>Получает имя свойства требования маркера, значение которого представляет собой местоположение журнала аудита, который следует использовать при записи результатов проверки подлинности (только служба).</summary>
      <returns>Ключ для AuditLogLocation в словаре свойств требований маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ChannelParametersCollectionProperty">
      <summary>Получает имя свойства требования маркера, значение которого является коллекцией параметров канала (только клиент).</summary>
      <returns>Ключ для ChannelParametersCollection в словаре свойств требования маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.DuplexClientLocalAddressProperty">
      <summary>Возвращает значение, определяющее имя индекса в коллекции свойства <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства DuplexClientLocalAddress.</summary>
      <returns>Имя индекса в коллекции <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> для свойства DuplexClientLocalAddress.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.EndpointFilterTableProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является таблицей фильтра конечной точки, содержащей фильтры для сообщений, которые принимаются конечной точкой службы.Данное свойство является свойством службы.</summary>
      <returns>Ключ для свойства таблицы фильтра конечной точки требования маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ExtendedProtectionPolicy">
      <summary>Возвращает политику защиты, используемую сервером для проверки входящих клиентских соединений.</summary>
      <returns>Политика защиты, используемая сервером.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.HttpAuthenticationSchemeProperty">
      <summary>Получает ключ свойства требования маркера, значение которого представляет собой схему проверки подлинности по протоколу HTTP, если этот запрос создан для поставщика маркера или структуры проверки подлинности маркера, которую следует использовать при проверке подлинности по протоколу HTTP.</summary>
      <returns>Ключ для свойства схемы проверки подлинности по протоколу HTTP требования маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiator">
      <summary>Получает значение, которое указывает, является ли конечная точка, создающая требование маркера безопасности, инициатором или получателем. </summary>
      <returns>Значение true, если запрос выполнен инициатором канала. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiatorProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого указывает, создается ли запрос инициатором или получателем канала.</summary>
      <returns>Ключ для свойства требования маркера, значение которого указывает, является ли конечная точка, создающая требование, инициатором или получателем.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsOutOfBandTokenProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого указывает, выполняется ли настройка этого запроса для маркера на клиенте или в службе.</summary>
      <returns>Ключ для свойства требования маркера, значение которого указывает, выполняется ли настройка этого запроса для маркера на клиенте или в службе.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuedSecurityTokenParametersProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является объект класса<see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />, содержащий сведения о маркере, если требование относится к выданному маркеру.</summary>
      <returns>Ключ для свойства требования маркера, значение которого является объект класса<see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />, содержащий сведения о маркере, если требование относится к выданному маркеру.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddress">
      <summary>Если требование маркера относится к выданному маркеру, данное свойство содержит адрес конечной точки издателя.</summary>
      <returns>Адрес конечной точки для поставщика маркера.Используется для типов выданного маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddressProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.EndpointAddress" /> издателя, если требование относится к выданному маркеру.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.EndpointAddress" /> издателя.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBinding">
      <summary>Если требование маркера относится к выданному маркеру, данное свойство содержит привязку, которую следует использовать для обмена данными с издателем.</summary>
      <returns>Привязка, используемая для связи с пользователем.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingContextProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является объект класса <see cref="T:System.ServiceModel.Channels.BindingContext" />, который следует использовать для звонка издателю, если требование относится к выданному маркеру.</summary>
      <returns>Ключ для свойства требования маркера, значение которого является объект класса <see cref="T:System.ServiceModel.Channels.BindingContext" />, который следует использовать для звонка издателю, если требование относится к выданному маркеру.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой привязку, которую следует использовать для звонка издателю, если требование относится к выданному маркеру.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой привязку, которую следует использовать для разговора с издателем, если требование относится к выданному маркеру.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ListenUriProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой универсальный код ресурса (URI), обмена данными с которым ожидает конечная точка службы, создающей запрос (только служба).</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой универсальный код ресурса (URI), обмена данными с которым ожидает конечная точка службы, создающей запрос (только служба).</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageAuthenticationAuditLevelProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой уровень аудита, который следует использовать при записи результатов проверки подлинности (только служба).</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой уровень аудита, который следует использовать при записи результатов проверки подлинности.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageDirectionProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является членом используемого перечисления <see cref="T:System.ServiceModel.Description.MessageDirection" /> и указывает, требуется ли поставщик для сообщений, отправляемых с клиента на сервер или с сервера на клиент. </summary>
      <returns>Получает ключ для свойства требования маркера, значение которого представляет собой член используемого перечисления <see cref="T:System.ServiceModel.Description.MessageDirection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersion">
      <summary>Получает или задает используемую версию безопасности сообщения (если требуется).</summary>
      <returns>Версия механизмов безопасности сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersionProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.Channels.MessageVersion" />, с помощью которого выполняется настройка канала.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.Channels.MessageVersion" />, с помощью которого выполняется настройка канала.</returns>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.Namespace">
      <summary>Текущее пространство имен.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeUriProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является ссылкой на универсальный код ресурса (URI), который указывает на политику конфиденциальности службы, если таковая имеется.</summary>
      <returns>Ключ для свойства требования маркера, значение которого является ссылкой на универсальный код ресурса (URI), который указывает на политику конфиденциальности службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeVersionProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой строку, представляющую версию уведомления о конфиденциальности.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой строку, представляющую версию уведомления о конфиденциальности.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElement">
      <summary>Получает или задает элемент привязки безопасности, используемый для защиты сообщений начальной загрузки безопасного диалога. </summary>
      <returns>Элемент привязки безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElementProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой элемент привязки безопасности, используемый для защиты сообщений начальной загрузки безопасного диалога.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет элемент привязки безопасности, используемый для защиты сообщений начальной загрузки безопасного диалога.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuite">
      <summary>Получает или задает используемый набор алгоритмов безопасности (если требуется).</summary>
      <returns>Набор алгоритмов безопасности для использования.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuiteProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является набором алгоритмов, используемых каналом для обеспечения безопасности сообщения.</summary>
      <returns>Ключ для свойства требования маркера, значение которого равно объекту класса<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElement">
      <summary>Получает или задает элемент привязки безопасности.</summary>
      <returns>Элемент привязки безопасности.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElementProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является элементом привязки безопасности, используемым при создании канала.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />, используемый при создании канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportingTokenAttachmentModeProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого представляет собой связанный член перечисления <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />, если запрос относится к поддерживающему маркеру. </summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой связанный член используемого перечисления <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportSecurityContextCancellationProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого указывает, относится ли маркер безопасного диалога к сеансу безопасности (в этом случае время существования маркера зависит от времени существования пользовательского канала) или к каналу безопасности датаграммы.</summary>
      <returns>Ключ для свойства требования маркера, значение которого указывает, требуется ли возможность отмены маркера безопасного диалога.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SuppressAuditFailureProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого указывает, следует ли пропускать ошибки, возникающие при записи результатов проверки подлинности (только служба).</summary>
      <returns>Ключ для свойства требования маркера, значение которого указывает, следует ли пропускать ошибки, возникающие при записи результатов проверки подлинности (только служба).</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TargetAddressProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является адресом конечной службы, с которой канал осуществляет обмен данными (только клиент).</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой объект класса <see cref="T:System.ServiceModel.EndpointAddress" />, с которым канал осуществляет обмен данными.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportScheme">
      <summary>Получает или задает схему транспорта.</summary>
      <returns>Схема транспорта.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportSchemeProperty">
      <summary>При создании запроса для поставщика/структуры проверки подлинности маркера, используемого с безопасностью транспорта, эта строка является ключом для свойства требования маркера, значение которого представляет собой схему транспорта.</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой схему транспорта.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ViaProperty">
      <summary>Получает ключ для свойства требования маркера, значение которого является транзитным универсальным кодом ресурса (URI), к которому подключается канал (только клиент).</summary>
      <returns>Ключ для свойства требования маркера, значение которого представляет собой транзитный URI, к которому подключается канал.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes">
      <summary>Представляет типы маркеров безопасности, распознаваемых .</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.AnonymousSslnego">
      <summary>Получает строку, указывающую на то, что инициатор является анонимным, но сертификат отвечающего устройства доступен как часть согласования SOAP SSL.</summary>
      <returns>Строка, указывающая на то, что инициатор является анонимным, но сертификат отвечающего устройства доступен как часть согласования SOAP SSL.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.MutualSslnego">
      <summary>Получает строку, указывающую на то, что инициатор и отвечающее устройство выполняют проверку подлинности друг друга, используя сертификаты Х.509.</summary>
      <returns>Строка, указывающая на то, что инициатор и отвечающее устройство выполняют проверку подлинности друг друга, используя сертификаты Х.509.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SecureConversation">
      <summary>Получает строку, указывающую, использует ли служба проверку подлинности WS-SecureConversation.</summary>
      <returns>Строка, указывающая, использует ли служба проверку подлинности WS-SecureConversation.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SecurityContext">
      <summary>Получает строку, указывающую, использует ли служба проверку подлинности SOAP SecurityContext.</summary>
      <returns>Строка, указывающая, использует ли служба проверку подлинности SOAP SecurityContext.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.Spnego">
      <summary>Получает строку, которая указывает, выполняется ли проверка подлинности посредством протокола Windows Services SP Negotiation (SPNEGO).</summary>
      <returns>Строка, которая указывает, выполняется ли проверка подлинности посредством протокола Windows Services SPNEGO.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SspiCredential">
      <summary>Получает строку, которая указывает, осуществляется ли проверка подлинности клиента посредством учетных данных Windows.</summary>
      <returns>Строка, которая указывает, осуществляется ли проверка подлинности клиента посредством учетных данных Windows.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters">
      <summary>Представляет параметры для маркера безопасности протокола SSL, получаемый при применении на сервере протокола SSL на уровне SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" />. </summary>
      <param name="requireClientCertificate">
        <see cref="T:System.Boolean" />, определяющий, требуется ли сертификат клиента.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" />. </summary>
      <param name="requireClientCertificate">
        <see cref="T:System.Boolean" />, определяющий, требуется ли сертификат клиента.</param>
      <param name="requireCancellation">
        <see cref="T:System.Boolean" />, определяющий, требуется ли отмена.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" />. </summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> не является External или Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Значение true используется, если маркер имеет асимметричный ключ, в противном случае — используется значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation">
      <summary>Возвращает или задает значение, указывающее, требуется ли отмена. </summary>
      <returns>Значение true используется, если требуется отмена; в противном случае используется значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate">
      <summary>Возвращает или задает значение, указывающее, требуется ли сертификат клиента.</summary>
      <returns>Значение true, если требуется сертификат клиента. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности клиента; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Значение true, если маркер поддерживает идентификацию Windows для проверки подлинности; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Значение true, если маркер поддерживает проверку подлинности сервера; в противном случае — false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление данного экземпляра класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SspiSecurityToken">
      <summary>Представляет маркер безопасности SSPI.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />. </summary>
      <param name="networkCredential">Объект <see cref="T:System.Net.NetworkCredential" />.</param>
      <param name="extractGroupsForWindowsAccounts">Имеет значение true, если извлечены группы, к которым принадлежат учетные записи Windows, в противном случае — значение false.</param>
      <param name="allowUnauthenticatedCallers">Значение true, если разрешаются вызывающие объекты, не прошедшие проверку подлинности (анонимные). В противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />. </summary>
      <param name="impersonationLevel">Объект <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</param>
      <param name="allowNtlm">Имеет значение true, если разрешена проверка подлинности NTLM, в противном случае — значение false.</param>
      <param name="networkCredential">Объект <see cref="T:System.Net.NetworkCredential" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm">
      <summary>Возвращает значение, указывающее, следует ли разрешить проверку подлинности NTLM. </summary>
      <returns>Имеет значение true, если разрешена проверка подлинности NTLM, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers">
      <summary>Возвращает значение, указывающее, следует ли разрешить анонимный доступ для вызывающих. </summary>
      <returns>Значение true, если разрешаются анонимные вызывающие объекты. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts">
      <summary>Возвращает или задает значение, указывающее, следует ли извлечь группы, к которым принадлежат учетные записи Windows. </summary>
      <returns>Имеет значение true, если извлечены группы, к которым принадлежат учетные записи Windows, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.Id">
      <summary>Получает идентификатор маркера.</summary>
      <returns>Идентификатор маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel">
      <summary>Получает уровень воплощения для маркера.</summary>
      <returns>Объект <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential">
      <summary>Получает сетевые учетные данные.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys">
      <summary>Получает коллекцию ключей безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom">
      <summary>Получает эффективную дату запуска для маркера.</summary>
      <returns>Объект структуры<see cref="T:System.DateTime" />, представляющий эффективную дату запуска маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo">
      <summary>Получает дату завершения действия маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий дату завершения действия маркера.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters">
      <summary>Представляет параметры для маркера безопасности протокола SSPI, получаемый при применении на сервере протокола SPNEGO на уровне SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" />.</summary>
      <param name="requireCancellation">Требуется ли отмена для маркера.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" />.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.RequireCancellation">
      <summary>Возвращает или задает значение, указывающее, требуется ли отмена для маркера. </summary>
      <returns>Значение true, если требуется отмена маркера. В противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters">
      <summary>Представляет параметры для поддержки маркеров безопасности, требуемых для элемента привязки безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект класса <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing">
      <summary>Получает коллекцию параметров маркера безопасности для подтверждающих поддерживающих маркеров, требуемых элементом привязки безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)">
      <summary>Получает значение, которое указывает, требуются ли производные ключи для всех параметров подтверждающих или подписанных подтверждающих маркеров. </summary>
      <param name="requireDerivedKeys">Объект структуры <see cref="T:System.Boolean" />, указывающий, требуются ли производные ключи для параметров.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Signed">
      <summary>Получает коллекцию параметров маркера безопасности для подписанных поддерживающих маркеров, требуемых элементом привязки безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted">
      <summary>Получает коллекцию параметров маркера безопасности для подписанных и шифрованных поддерживающих маркеров, требуемых элементом привязки безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEndorsing">
      <summary>Получает коллекцию параметров маркера безопасности для подписанных и подтверждающих поддерживающих маркеров, требуемых элементом привязки безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters">
      <summary>Представляет параметры для маркера безопасности имени пользователя.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" />.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> не является External или Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken">
      <summary>Представляет маркер безопасности, ключ которого упакован в другой маркер.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken" />. </summary>
      <param name="id">Идентификатор маркера ключа.</param>
      <param name="keyToWrap">Ключ, который следует упаковать.</param>
      <param name="wrappingAlgorithm">Алгоритм, используемый для упаковки.</param>
      <param name="wrappingToken">Объект класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер упаковки.</param>
      <param name="wrappingTokenReference">Объект класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий ссылку на маркер упаковки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Получает значение, которое указывает, может ли маркер создать предложению идентификатора ключа.</summary>
      <returns>Значение true, если маркер может создать предложение идентификатора ключа. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <typeparam name="T">Тип класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1">
      <summary>Создайте предложение идентификатора ключа.</summary>
      <returns>Тип класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <typeparam name="T">Тип класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey">
      <summary>Получает упакованный ключ.</summary>
      <returns>Упакованный ключ.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id">
      <summary>Получает идентификатор маркера.</summary>
      <returns>Идентификатор маркера.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Сравнивает равенство текущего предложения идентификатора ключа безопасности с заданным предложением.</summary>
      <returns>Значение true, если текущее предложение идентификатора ключа безопасности равно заданному предложению. В противном случае — значение false.Значение по умолчанию — false.</returns>
      <param name="keyIdentifierClause">Указанный тип предложения идентификатора ключа безопасности.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys">
      <summary>Получает коллекцию ключей безопасности.</summary>
      <returns>Коллекция объектов класса <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom">
      <summary>Получает эффективную дату запуска маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий эффективную дату запуска маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo">
      <summary>Получает дату истечения срока действия маркера.</summary>
      <returns>Объект структуры <see cref="T:System.DateTime" />, представляющий дату истечения срока действия маркера.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm">
      <summary>Получает алгоритм упаковки.</summary>
      <returns>Объект класса <see cref="T:System.String" />, указывающий алгоритм упаковки или алгоритм, используемый для шифрования симметричного ключа.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken">
      <summary>Получает маркер упаковки.</summary>
      <returns>Объект класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий маркер упаковки.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference">
      <summary>Получает ссылку маркера упаковки.</summary>
      <returns>Объект класса <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, представляющий ссылку на маркер упаковки.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType">
      <summary>Перечисление, в котором перечислены возможные типы предложений идентификатора ключа Х.509.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.Any">
      <summary>Используется значение <see cref="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.SubjectKeyIdentifier" />, если присутствует в сертификате Х.509, в противном случае — значение <see cref="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.IssuerSerial" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.Thumbprint">
      <summary>Используется Х.509 Thumbprint.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.IssuerSerial">
      <summary>Используется ссылка IssuerSerial: идентификатор поставщика плюс порядковый номер, который является уникальным для поставщика.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.SubjectKeyIdentifier">
      <summary>Ссылка основана на расширении идентификатора ключа темы сертификата Х.509 (имеется не у всех сертификатов; необязательное свойство).</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.RawDataKeyIdentifier">
      <summary>Ссылка содержит необработанные данные для целого сертификата Х.509.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters">
      <summary>Представляет параметры маркера безопасности Х.509.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" />.</summary>
      <param name="x509ReferenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType,System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" />.</summary>
      <param name="x509ReferenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</param>
      <param name="inclusionMode">Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509SecurityTokenParameters)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" />.</summary>
      <param name="other">Другой экземпляр данного класса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.CloneCore">
      <summary>Создает еще один экземпляр данного экземпляра класса.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Создает предложение идентификатора ключа для маркера.</summary>
      <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">Маркер.</param>
      <param name="referenceStyle">Объект <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.HasAsymmetricKey">
      <summary>Возвращает значение, определяющее, имеет ли маркер асимметричный ключ.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Инициализирует требование к маркеру безопасности.</summary>
      <param name="requirement">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsClientAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности клиента.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности с использованием удостоверения Windows.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsServerAuthentication">
      <summary>При реализации возвращает значение, указывающее, поддерживает ли маркер проверку подлинности сервера.</summary>
      <returns>Всегда возвращает значение true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.ToString">
      <summary>Отображает текстовое представление экземпляра класса.</summary>
      <returns>Текстовое представление экземпляра данного класса.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.X509ReferenceStyle">
      <summary>Получает и задает ссылочный тип X.509.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
      <summary>Класс, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> в формат Atom 1.0 или из этого формата.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
      <param name="feedTypeToCreate">Производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> экземпляр для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный <see cref="T:System.Xml.XmlReader" /> допустимый веб-канал синдикации Atom 1.0.</summary>
      <returns>Значение, которое указывает, содержит ли <see cref="T:System.Xml.XmlReader" /> допустимый веб-канал синдикации Atom 1.0.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
      <summary>Создает новый <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.FeedType">
      <summary>Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с экземпляром <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
      <returns>Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с экземпляром <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
      <summary>Возвращает и задает значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
      <summary>Возвращает и задает значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Выполняет чтение веб-канал синдикации Atom 1.0 из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Выполняет чтение элемента синдикации из указанного экземпляра <see cref="T:System.Xml.XmlReader" /> с использованием экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Выполняет чтение в коллекции экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из заданного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Коллекция экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
      <param name="areAllItemsRead">Значение, которое указывает, выполнено ли чтение всех экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из экземпляра <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемого модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Выполняет запись указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="item">Документ <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для записи.</param>
      <param name="feedBaseUri">Базовый URI-адрес веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Выполняет запись коллекции экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="items">Коллекция экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для записи.</param>
      <param name="feedBaseUri">Базовый URI-адрес веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанного с <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />, в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1">
      <summary>Класс, который выполняет сериализацию классов, производных от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, в формат Atom 1.0 или из этого формата.</summary>
      <typeparam name="TSyndicationFeed">Тип, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, для сериализации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor(`0)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Веб-канал для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.CreateFeedInstance">
      <summary>Создает новый экземпляр производного класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter">
      <summary>Класс, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в формат Atom 1.0 или из этого формата.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> с указанным <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">Элемент <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</summary>
      <param name="itemTypeToCreate">Производный экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сопоставления с <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный <see cref="T:System.Xml.XmlReader" /> допустимый элемент синдикации Atom 1.0.</summary>
      <returns>Значение, которое указывает, содержит ли <see cref="T:System.Xml.XmlReader" /> допустимый элемент синдикации Atom 1.0.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CreateItemInstance">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.ItemType">
      <summary>Возвращает тип элемента синдикации, связанного с <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</summary>
      <returns>Тип элемента синдикации, связанного с <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveAttributeExtensions">
      <summary>Возвращает или задает значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveElementExtensions">
      <summary>Возвращает или задает значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Выполняет чтение элементов синдикации Atom 1.0 из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемого модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, связанного с <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />, в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1">
      <summary>Класс, который выполняет сериализацию классов, производных от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, в формат Atom 1.0 или из этого формата.</summary>
      <typeparam name="TSyndicationItem">Класс, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, для сериализации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor(`0)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.CreateItemInstance">
      <summary>Создает новый экземпляр класса, производного от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter">
      <summary>Класс, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> в формат Atom 1.0 или из этого формата.
</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> с указанным <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <param name="documentToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor(System.Type,System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> с указанным <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <param name="inlineDocumentType">Объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; в документе службы, а также набор категорий, заданных в элементе.</param>
      <param name="referencedDocumentType">Объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; в документе службы, а также набор категорий, заданных при помощи URI.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный <see cref="T:System.Xml.XmlReader" /> допустимый документ категорий Atom 1.0.</summary>
      <returns>Значение, которое указывает, содержит ли объект <see cref="T:System.Xml.XmlReader" /> допустимый документ категорий Atom 1.0.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CreateInlineCategoriesDocument">
      <summary>Создает объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа и содержит набор категорий в данном элементе.</summary>
      <returns>
Возвращает объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CreateReferencedCategoriesDocument">
      <summary>Создает объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа и содержит ссылку URI на набор категорий в данном элементе. </summary>
      <returns>
Возвращает объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Считывает элемент Atom 1.0 &lt;atom:categories&gt; из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>
Версия механизма синдикации, используемого модулем форматирования.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись документа <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, связанного с модулем форматирования <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" />, в указанный модуль<see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter">
      <summary>Модуль форматирования, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> в представление XML или из него, используя форматы Atom 1.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />, основанного на Atom 1.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />, основанного на Atom 1.0, для сериализации заданных сервисных документов.</summary>
      <param name="documentToWrite">Документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования Atom 1.0.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="documentToWrite" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />, основанного на Atom 1.0.</summary>
      <param name="documentTypeToCreate">Экземпляр объекта, производного от типа <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанного с модулем форматирования Atom 1.0.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="documentTypeToCreate" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Указан недопустимый параметр <paramref name="documentTypeToCreate" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли заданное средство чтения XML допустимый документ службы.</summary>
      <returns>Значение true, если средство чтения XML содержит допустимый документ службы; в противном случае — значение false.
</returns>
      <param name="reader">Средство чтения XML.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.CreateDocumentInstance">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования Atom 1.0.</summary>
      <returns>
Возвращает экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Создает объект <see cref="T:System.ServiceModelSyndication.ServiceDocument" /> из заданного средства чтения XML.</summary>
      <param name="reader">Средство чтения XML, из которого выполняется чтение веб-канала синдикации.</param>
      <exception cref="T:System.XmlException">
        <paramref name="reader" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">Не удалось выполнить синтаксический анализ XML.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный метод зарезервирован и не используется.</summary>
      <returns>
Возвращает значение null.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Создает документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> из представления XML.</summary>
      <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Преобразует документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> в представление XML.</summary>
      <param name="writer">Поток средства записи XML, в который выполняется сериализация объекта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Отсутствует экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с данным модулем форматирования.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.Version">
      <summary>Возвращает имя пространства имен «Atom Publishing Protocol».</summary>
      <returns>
Возвращает «http://www.w3.org/2007/app».
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись объекта <see cref="T:System.ServiceModelSyndication.ServiceDocument" />, связанного с модулем форматирования, в заданное средство записи XML.</summary>
      <param name="writer">Средство чтения XML, в которое выполняется запись модулем форматирования.</param>
      <exception cref="T:System.XmlException">
        <paramref name="writer" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">С данным модулем форматирования связан сервисный документ со значением null.</exception>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1">
      <summary>Модуль форматирования, который выполняет сериализацию классов, производных от экземпляра <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, в представление XML или из него, используя форматы Atom 1.0.</summary>
      <typeparam name="TServiceDocument">Класс, производный от экземпляра <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, который должен быть сериализован в XML или десериализован из XML с помощью форматирования Atom 1.0.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.#ctor(`0)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter`1" />, основанного на Atom 1.0.</summary>
      <param name="documentToWrite">Документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования Atom 1.0.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="documentToWrite" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.CreateDocumentInstance">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования Atom 1.0.</summary>
      <returns>
Возвращает экземпляр объекта <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.
</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.CategoriesDocument">
      <summary>Представляет документ категорий.</summary>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.AttributeExtensions">
      <summary>Возвращает коллекцию расширений атрибутов.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.Generic.Dictionary`2" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.BaseUri">
      <summary>Базовый универсальный код ресурса (URI) документа <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Collections.ObjectModel.Collection{System.ServiceModel.Syndication.SyndicationCategory})">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.
</returns>
      <param name="categories">Коллекция экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, используемых для инициализации нового экземпляра <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />. </param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Collections.ObjectModel.Collection{System.ServiceModel.Syndication.SyndicationCategory},System.Boolean,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.
</returns>
      <param name="categories">Коллекция категорий.</param>
      <param name="isFixed">Значение, которое указывает, может ли пользователь добавлять категорию в документ категорий.</param>
      <param name="scheme">Схема документа категорий.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Uri)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> и инициализирует его с заданным <see cref="T:System.Uri" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.
</returns>
      <param name="linkToCategoriesDocument">Универсальный код ресурса (URI) документа категорий.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.ElementExtensions">
      <summary>Возвращает расширения элемента для <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.GetFormatter">
      <summary>Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" />, инициализированный с документом <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, в котором выполняется вызов данного метода.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.Language">
      <summary>Возвращает или задает язык для <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> из модуля <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Save(System.Xml.XmlWriter)">
      <summary>Сохраняет <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Выполняет запись расширений атрибута в указанный <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Выполняет запись расширения элемента в указанный <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter">
      <summary>Абстрактный класс, используемый как базовый класс для остальных модулей форматирования (например, <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.#ctor(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" /> с указанным <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />. </summary>
      <param name="documentToWrite">Элемент <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный <see cref="T:System.Xml.XmlReader" /> допустимый документ категорий Atom 1.0.</summary>
      <returns>Значение, которое указывает, содержит ли объект <see cref="T:System.Xml.XmlReader" /> допустимый документ категорий Atom 1.0.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CreateInlineCategoriesDocument">
      <summary>Создает объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа и содержит набор категорий в данном элементе.</summary>
      <returns>
Возвращает объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CreateReferencedCategoriesDocument">
      <summary>Создает объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа и содержит ссылку URI на набор категорий в данном элементе.</summary>
      <returns>
Возвращает объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />, который может быть сериализован в элемент &lt;atom:categories&gt; сервисного документа.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocumentFormatter.Document">
      <summary>Получает документ категорий.</summary>
      <returns>
Возвращает <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, связанный с данным <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Считывает элемент Atom 1.0 &lt;atom:categories&gt; из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.SetDocument(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Задает документ <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, с которым требуется связать данный модуль форматирования <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</summary>
      <param name="document">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, который требуется связать с <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocumentFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемого модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись экземпляра <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, связанного с <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />, в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.InlineCategoriesDocument">
      <summary>Представляет элемент &lt;atom:categories&gt; в сервисном документе.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationCategory})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <param name="categories">Коллекция категорий синдикации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationCategory},System.Boolean,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <param name="categories">Коллекция категорий синдикации.</param>
      <param name="isFixed">Указывает, можно ли добавить категории синдикации в <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
      <param name="scheme">Схема <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.Categories">
      <summary>Возвращает коллекцию категорий синдикации, связанных с <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>
Возвращает коллекцию категорий синдикации.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.CreateCategory">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>
Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.IsFixed">
      <summary>Возвращает и задает значение, которое указывает, можно ли добавить категории синдикации в <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, можно ли добавить новые категории синдикации.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.Scheme">
      <summary>Возвращает и задает схему для <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>
Возвращает схему для <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.
</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument">
      <summary>Представляет ссылку на документ категорий.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ReferencedCategoriesDocument.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ReferencedCategoriesDocument.#ctor(System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</summary>
      <param name="link">URL-адрес документа категорий, на который есть ссылки.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ReferencedCategoriesDocument.Link">
      <summary>Возвращает и задает универсальный код ресурса (URI) для документа категорий.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ResourceCollectionInfo">
      <summary>Представляет коллекцию ресурсов, представленных элементом &lt;atom:collection&gt;.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <param name="title">Заголовок коллекции.</param>
      <param name="link">Универсальный код ресурса (URI) коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.CategoriesDocument},System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <param name="title">Заголовок коллекции.</param>
      <param name="link">Универсальный код ресурса (URI) коллекции.</param>
      <param name="categories">Коллекция документов категорий.</param>
      <param name="allowsNewEntries">Значение, которое указывает, можно ли добавить новые элементы &lt;accept&gt; в коллекцию.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.CategoriesDocument},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <param name="title">Заголовок коллекции.</param>
      <param name="link">Универсальный код ресурса (URI) коллекции.</param>
      <param name="categories">Коллекция документов категорий.</param>
      <param name="accepts">Коллекция типов ресурса, которые могут быть добавлены в коллекцию.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.String,System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <param name="title">Заголовок коллекции.</param>
      <param name="link">Универсальный код ресурса (URI) коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Accepts">
      <summary>Возвращает коллекцию типов ресурса, которые могут быть добавлены в коллекцию.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.ObjectModel.Collection`1" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.AttributeExtensions">
      <summary>Возвращает коллекцию расширений атрибутов.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.Generic.Dictionary`2" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.BaseUri">
      <summary>Возвращает и задает базовый универсальный код ресурса (URI) для экземпляра класса <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Categories">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.ObjectModel.Collection`1" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.CreateInlineCategoriesDocument">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.CreateReferencedCategoriesDocument">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.ElementExtensions">
      <summary>Получает расширения элемента для документа службы.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Link">
      <summary>Возвращает и задает универсальный код ресурса (URI) для коллекции.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Title">
      <summary>Заголовок коллекции.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter">
      <summary>Класс, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> в формат RSS 2.0 или из этого формата.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для сериализации.</param>
      <param name="serializeExtensionsAsAtom">Значение, которое указывает, следует ли выполнить сериализацию элементов, определенных в спецификации Atom 1.0, а не в RSS 2.0.Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <param name="feedTypeToCreate">Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный экземпляр <see cref="T:System.Xml.XmlReader" /> допустимый веб-канал синдикации RSS 2.0.</summary>
      <returns>Значение, которое указывает, содержит ли <see cref="T:System.Xml.XmlReader" /> допустимый веб-канал синдикации RSS 2.0.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CreateFeedInstance">
      <summary>Создает новый <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.FeedType">
      <summary>Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с экземпляром <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <returns>Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с экземпляром <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveAttributeExtensions">
      <summary>Возвращает и задает значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveElementExtensions">
      <summary>Возвращает и задает значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Выполняет чтение веб-канал синдикации RSS 2.0 из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Выполняет чтение элемента синдикации из указанного экземпляра <see cref="T:System.Xml.XmlReader" /> с использованием экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Выполняет чтение в коллекции экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из заданного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Коллекция экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
      <param name="areAllItemsRead">Значение, которое указывает, выполнено ли чтение всех экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из экземпляра <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.SerializeExtensionsAsAtom">
      <summary>Возвращает и задает значение, определяющее порядок сериализации расширений в пространстве имен Atom 1.0.</summary>
      <returns>Значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Задает экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с модулем <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, который требуется связать с <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемого модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Выполняет запись указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="item">Документ <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для записи.</param>
      <param name="feedBaseUri">Базовый URI-адрес веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Выполняет запись коллекции экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="items">Коллекция экземпляров <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для записи.</param>
      <param name="feedBaseUri">Базовый URI-адрес веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанного с <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />, в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1">
      <summary>Класс, который выполняет сериализацию классов, производных от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, в формат RSS 2.0.</summary>
      <typeparam name="TSyndicationFeed">Тип, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, для сериализации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Веб-канал для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Веб-канал для сериализации.</param>
      <param name="serializeExtensionsAsAtom">Значение, которое указывает, следует ли выполнить сериализацию элементов, определенных в спецификации Atom 1.0, а не в RSS 2.0.Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.CreateFeedInstance">
      <summary>Создает новый экземпляр производного класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter">
      <summary>Класс, который выполняет сериализацию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в формат RSS 2.0 или из этого формата.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <param name="itemToWrite">Элемент <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <param name="itemToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
      <param name="serializeExtensionsAsAtom">Значение, которое указывает, следует ли выполнить сериализацию элементов, определенных в спецификации Atom 1.0, а не в RSS 2.0.Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <param name="itemTypeToCreate">Экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, для сопоставления с <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный экземпляр <see cref="T:System.Xml.XmlReader" /> допустимый элемент синдикации RSS 2.0.</summary>
      <returns>Значение, которое указывает, содержит ли экземпляр <see cref="T:System.Xml.XmlReader" /> допустимый элемент синдикации RSS 2.0.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CreateItemInstance">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.ItemType">
      <summary>Возвращает имя элемента синдикации, связанного с <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <returns>Тип элемента синдикации, связанного с <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveAttributeExtensions">
      <summary>Возвращает или задает значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения атрибута при сериализации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveElementExtensions">
      <summary>Возвращает или задает значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</summary>
      <returns>Значение, которое указывает, следует ли сохранить расширения элемента при сериализации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Выполняет чтение элемента синдикации RSS 2.0 из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.SerializeExtensionsAsAtom">
      <summary>Возвращает и задает значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</summary>
      <returns>Значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Реализует метод <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемого модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись элемента <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, связанного с <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />, в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1">
      <summary>Класс, который выполняет сериализацию классов, производных от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, в формат RSS 2.0 или из этого формата.</summary>
      <typeparam name="TSyndicationItem">Тип, производный от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, для сериализации.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> с указанным экземпляром, производным от <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для сериализации.</param>
      <param name="serializeExtensionsAsAtom">Значение, которое указывает, следует ли выполнить сериализацию элементов, определенных в спецификации Atom 1.0, а не в RSS 2.0.Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.CreateItemInstance">
      <summary>Создает новый экземпляр производного класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ServiceDocument">
      <summary>Представляет документ службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.Workspace})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> и инициализирует его с указанной коллекцией объектов <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <param name="workspaces">Коллекция рабочих областей.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.AttributeExtensions">
      <summary>Возвращает коллекцию расширений атрибутов.</summary>
      <returns>
Экземпляр <see cref="T:System.Collections.Generic.Dictionary`2" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.BaseUri">
      <summary>Возвращает и задает базовый универсальный код ресурса (URI) для экземпляра класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</summary>
      <returns>
Базовый URI.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.CreateWorkspace">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <returns>
Новая рабочая область.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.ElementExtensions">
      <summary>Получает расширения элемента для документа службы.</summary>
      <returns>
Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, содержащий расширения элемента.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.GetFormatter">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter" />.</summary>
      <returns>
Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.Language">
      <summary>Возвращает и задает язык документа службы.</summary>
      <returns>
Язык документа службы.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Load``1(System.Xml.XmlReader)">
      <summary>Загружает документ службы из указанного средства <see cref="T:System.Xml.XmlReader" /> в экземпляр, производный от <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение документа службы.</param>
      <typeparam name="TServiceDocument">Тип документа службы.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает сервисный документ из указанного средства чтения <see cref="T:System.Xml.XmlReader" /> в экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</summary>
      <returns>
Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.
</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение документа службы.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Save(System.Xml.XmlWriter)">
      <summary>Сохраняет экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> в указанный экземпляр класса <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="writer">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, в котором требуется сохранить документ службы.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение true, если анализ атрибута выполнен успешно; в противном случае — значение false.Возвращает значение <see cref="T:System.Boolean" />.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение true, если анализ элемента выполнен успешно; в противном случае — значение false.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.Workspaces">
      <summary>Возвращает коллекцию рабочих областей, содержащихся в документе службы.</summary>
      <returns>
Коллекция рабочих областей.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.ServiceDocumentFormatter">
      <summary>Абстрактный класс, используемый как базовый класс для остальных модулей форматирования, например, <see cref="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.#ctor(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" />.</summary>
      <param name="documentToWrite">Элемент <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> для сериализации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный экземпляр <see cref="T:System.Xml.XmlReader" /> допустимый документ службы.</summary>
      <returns>Значение true, если средство чтения XML содержит допустимый документ службы; в противном случае — значение false.
</returns>
      <param name="reader">Средство чтения XML для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateCategory(System.ServiceModel.Syndication.InlineCategoriesDocument)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>
Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.
</returns>
      <param name="inlineCategories">Экземпляр <see cref="T:System.ServiceModel.Syndication.InlineCategories" />, используемый для создания нового документа категорий.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateCollection(System.ServiceModel.Syndication.Workspace)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <returns>
Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.
</returns>
      <param name="workspace">Экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для создания новой коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateDocumentInstance">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</summary>
      <returns>
Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateInlineCategories(System.ServiceModel.Syndication.ResourceCollectionInfo)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>
Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.
</returns>
      <param name="collection">Экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для создания нового документа <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateReferencedCategories(System.ServiceModel.Syndication.ResourceCollectionInfo)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</summary>
      <returns>
Возвращает новый объект <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.
</returns>
      <param name="collection">Экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для создания нового документа <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateWorkspace(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Создает новый <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <returns>
Возвращает новый объект <see cref="T:System.ServiceModel.Syndication.Workspace" />.
</returns>
      <param name="document">Документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для создания новой рабочей области.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocumentFormatter.Document">
      <summary>Получает экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования.</summary>
      <returns>
Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, связанный с модулем форматирования.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.CategoriesDocument,System.Int32)">
      <summary>Загружает расширения элемента.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="categories">Документ <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, используемый для чтения расширений элемента.</param>
      <param name="maxExtensionSize">Максимальный допустимый размер загружаемого расширения элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.ResourceCollectionInfo,System.Int32)">
      <summary>Загружает расширения элемента.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="collection">Объект <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для загрузки расширений элемента.</param>
      <param name="maxExtensionSize">Максимальный размер загружаемого расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.ServiceDocument,System.Int32)">
      <summary>Загружает расширения элемента.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="document">Документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для чтения расширений элемента.</param>
      <param name="maxExtensionSize">Максимальный размер загружаемого расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.Workspace,System.Int32)">
      <summary>Загружает расширения элемента.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="workspace">Экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для загрузки расширений элемента.</param>
      <param name="maxExtensionSize">Максимальный размер загружаемого расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Выполняет чтение документа службы из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.SetDocument(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Задает документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, в который требуется выполнить запись.</summary>
      <param name="document">Документ <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> для записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение атрибута.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="categories">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, используемый для анализа расширения атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение атрибута.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="collection">Экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для анализа атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Пытается проанализировать расширения атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение атрибута.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Расширение атрибута для анализа.</param>
      <param name="document">Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для анализа расширения атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение атрибута.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="workspace">Экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для анализа атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение элемента.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="categories">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, используемый для анализа расширения элемента.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение элемента.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="collection">Экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для анализа расширения элемента.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение элемента.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="document">Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для анализа расширения элемента.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />, которое указывает, успешно ли было проанализировано расширение элемента.
</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="workspace">Экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для анализа расширения элемента.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocumentFormatter.Version">
      <summary>Получает версию модуля форматирования.</summary>
      <returns>
Возвращает значение <see cref="T:System.String" />, содержащее версию модуля форматирования.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Выполняет запись расширений атрибута.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="categories">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, используемый для записи расширений элемента.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Выполняет запись расширений атрибута.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="collection">Объект <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для записи расширения атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений атрибута.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Выполняет запись расширений атрибута.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="document">Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для записи расширения атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений атрибута.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Выполняет запись расширений атрибута.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="workspace">Экземпляр <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для записи расширения атрибута.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений атрибута.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Выполняет запись расширений элементов.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="categories">Экземпляр <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />, используемый для записи расширения элемента.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Выполняет запись расширений элементов.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="collection">Экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />, используемый для записи расширений элемента.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Выполняет запись расширений элементов.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="document">Экземпляр <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />, используемый для записи расширений элемента.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Выполняет запись расширений элементов.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="workspace">Объект <see cref="T:System.ServiceModel.Syndication.Workspace" />, используемый для записи расширения элементов.</param>
      <param name="version">Версия механизма синдикации для использования при записи расширений элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись документа службы в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationCategory">
      <summary>Класс, представляющий категорию веб-канала синдикации. </summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.ServiceModel.Syndication.SyndicationCategory)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> в соответствии с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, используемый для инициализации нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> с заданным именем.</summary>
      <param name="name">Имя категории.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> с заданным именем, схемой и меткой.</summary>
      <param name="name">Имя категории.</param>
      <param name="scheme">Универсальный код ресурса (URI), представляющий схему категоризации, которой принадлежит категория.</param>
      <param name="label">Читаемый атрибут, описывающий категорию.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
      <summary>Получает расширения атрибута для данной категории.</summary>
      <returns>Расширения атрибута для данной категории.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
      <summary>Получает расширения элемента для данной категории.</summary>
      <returns>Коллекция расширений элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
      <summary>Возвращает и задает метку категории.</summary>
      <returns>Метка категории.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
      <summary>Возвращает или задает имя категории.</summary>
      <returns>Имя категории.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
      <summary>Возвращает и задает схему категории.</summary>
      <returns>Схема категории.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Выполняет запись расширений атрибута в указанное средство записи.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Выполняет запись расширений элемента в указанное средство записи.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationContent">
      <summary>Базовый класс, представляющий содержимое синдикации.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor(System.ServiceModel.Syndication.SyndicationContent)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</summary>
      <param name="source">Экземпляр<see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> для использования с целью инициализации нового экземпляра.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.AttributeExtensions">
      <summary>Возвращает расширения атрибута для данного содержимого.</summary>
      <returns>Словарь, который содержит коллекцию расширений атрибутов для этого объекта.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</summary>
      <returns>Копия экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateHtmlContent(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с указанным HTML-содержимым.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
      <param name="content">Текст содержимого.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreatePlaintextContent(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с указанным содержимым в виде обычного текста.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
      <param name="content">Содержимое в виде обычного текста.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateUrlContent(System.Uri,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> с заданным <see cref="T:System.Uri" /> и типом носителя.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
      <param name="url">
        <see cref="T:System.Uri" /> содержимого.</param>
      <param name="mediaType">Тип носителя содержимого.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXhtmlContent(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с указанным ХHTML-содержимым.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
      <param name="content">Содержимое XHTML.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным объектом контракта данных.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
      <param name="dataContractObject">Объект контракта данных.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным объектом контракта данных и сериализатором контракта данных.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
      <param name="dataContractObject">Объект контракта данных.</param>
      <param name="dataContractSerializer">Сериализатор контракта данных.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным объектом и сериализатором XML.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
      <param name="xmlSerializerObject">Объект.</param>
      <param name="serializer">Сериализатор XML.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Xml.XmlReader)">
      <summary>Создает содержимое синдикации XML.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />, который содержит новое содержимое.</returns>
      <param name="xmlReader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.Type">
      <summary>Возвращает тип контента синдикации.</summary>
      <returns>Имя типа контента синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Выполнят запись содержимого данного объекта <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> в указанный экземпляр класса <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteTo(System.Xml.XmlWriter,System.String,System.String)">
      <summary>Записывает содержимое данного объекта в заданный экземпляр <see cref="T:System.Xml.XmlWriter" /> в указанном элементе и пространстве имен элемента.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="outerElementName">Имя элемента.</param>
      <param name="outerElementNamespace">Пространство имен элемента.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtension">
      <summary>Класс, представляющий расширение элемента синдикации.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> с заданным объектом.</summary>
      <param name="dataContractExtension">Объект контракта данных, используемый для инициализации расширения. </param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> с указанным объектом и сериализатором контракта данных.</summary>
      <param name="dataContractExtension">Объект контракта данных, используемый для инициализации расширения.</param>
      <param name="dataContractSerializer">Используемый сериализатор контракта данных.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> с указанным объектом и сериализатором XML.</summary>
      <param name="xmlSerializerExtension">Объект, используемый для инициализации расширения.</param>
      <param name="serializer">Используемый сериализатор XML.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> с указанным внешним именем, внешним пространством имен и объектом.</summary>
      <param name="outerName">Имя внешнего элемента XML.</param>
      <param name="outerNamespace">Пространство имен внешнего элемента XML.</param>
      <param name="dataContractExtension">Объект, используемый для инициализации расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> с указанным внешним именем, внешним пространством имен, объектом и сериализатором контракта данных.</summary>
      <param name="outerName">Имя внешнего элемента XML.</param>
      <param name="outerNamespace">Пространство имен внешнего элемента XML.</param>
      <param name="dataContractExtension">Объект, используемый для инициализации расширения.</param>
      <param name="dataContractSerializer">Используемый сериализатор контракта данных.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <param name="xmlReader">Экземпляр <see cref="T:System.Xml.XmlReader" /> с содержимым нового расширения <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1">
      <summary>Возвращает объект, представляющий расширение элемента.</summary>
      <returns>Объект заданного типа, содержащий расширение элемента.</returns>
      <typeparam name="TExtension">Тип извлекаемого расширения.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Этот тип не является допустимым контрактом данных.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Возвращает объект, представляющий расширение элемента.</summary>
      <returns>Объект заданного типа, содержащий расширение элемента.</returns>
      <param name="serializer">Используемая версия <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="TExtension">Тип извлекаемого расширения.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Этот тип не является допустимым контрактом данных.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Возвращает объект, представляющий расширение элемента.</summary>
      <returns>Объект заданного типа, содержащий расширение элемента.</returns>
      <param name="serializer">Используемая версия <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <typeparam name="TExtension">Тип извлекаемого расширения.</typeparam>
      <exception cref="T:System.InvalidOperationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetReader">
      <summary>Возвращает экземпляр <see cref="T:System.Xml.XmlReader" />, связанный с <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>Тип <see cref="T:System.Xml.XmlReader" />, связанный с <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterName">
      <summary>Возвращает внешнее имя расширения элемента.</summary>
      <returns>Внешнее имя расширения элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterNamespace">
      <summary>Возвращает внешнее пространство имен расширения элемента.</summary>
      <returns>Внешнее пространство имен расширения элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись текущего расширения в указанный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> в коллекцию.</summary>
      <param name="extension">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> для добавления.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Runtime.Serialization.DataContractSerializer)">
      <summary>Добавляет указанный объект к коллекции, используя указанный сериализатор контракта данных.</summary>
      <param name="dataContractExtension">Объект для добавления в коллекцию.</param>
      <param name="serializer">Используемый сериализатор.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Добавляет указанный объект к коллекции, используя указанный сериализатор XML.</summary>
      <param name="xmlSerializerExtension">Объект для добавления в коллекцию.</param>
      <param name="serializer">Используемый сериализатор XML.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object)">
      <summary>Добавляет указанный объект в коллекцию с заданным внешним именем и внешним пространством имен.</summary>
      <param name="outerName">Внешнее имя.</param>
      <param name="outerNamespace">Внешнее пространство имен.</param>
      <param name="dataContractExtension">Объект для добавления в коллекцию.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Добавляет указанный объект в коллекцию с заданным внешним именем и внешним пространством имен, используя указанный сериализатор контракта данных.</summary>
      <param name="outerName">Внешнее имя.</param>
      <param name="outerNamespace">Внешнее пространство имен.</param>
      <param name="dataContractExtension">Объект для добавления в коллекцию.</param>
      <param name="dataContractSerializer">Используемый сериализатор.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Xml.XmlReader)">
      <summary>Добавляет в коллекцию новое расширение элемента синдикации.</summary>
      <param name="xmlReader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение расширения элемента синдикации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.GetReaderAtElementExtensions">
      <summary>Получает <see cref="T:System.Xml.XmlReader" /> с расширениями элемента.</summary>
      <returns>Экземпляр <see cref="T:System.Xml.XmlReader" />, содержащий расширения элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String)">
      <summary>Выполняет чтение расширений элемента с указанным именем и пространством имен.</summary>
      <returns>Коллекция объектов расширения элемента.</returns>
      <param name="extensionName">Имя расширения элемента.</param>
      <param name="extensionNamespace">Пространство имен расширения элемента.</param>
      <typeparam name="TExtension">Тип расширения для чтения.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Этот тип не является допустимым контрактом данных.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Выполняет чтение расширений элемента с указанным именем и пространством имен.</summary>
      <returns>Коллекция объектов расширения элемента.</returns>
      <param name="extensionName">Имя расширения элемента.</param>
      <param name="extensionNamespace">Пространство имен расширения элемента.</param>
      <param name="serializer">Используемая версия <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="TExtension">Тип расширения для чтения.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Этот тип не является допустимым контрактом данных.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Xml.Serialization.XmlSerializer)">
      <summary>Выполняет чтение расширений элемента с указанным именем и пространством имен.</summary>
      <returns>Коллекция объектов расширения элемента.</returns>
      <param name="extensionName">Имя расширения элемента.</param>
      <param name="extensionNamespace">Пространство имен расширения элемента.</param>
      <param name="serializer">Используемая версия <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <typeparam name="TExtension">Тип расширения для чтения.</typeparam>
      <exception cref="T:System.InvalidOperationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeed">
      <summary>Представляет объект веб-канала верхнего уровня, &lt;feed&gt; в Atom 1.0 и &lt;rss&gt; в RSS 2.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с указанной коллекцией объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с указанным веб-каналом.</summary>
      <param name="source">Для инициализации нового экземпляра используется объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</param>
      <param name="cloneItems">Значение, указывающее на необходимость клонирования элементов в исходном экземпляре.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с заданным заголовком, описанием и универсальным кодом ресурса (URI).</summary>
      <param name="title">Заголовок веб-канала.</param>
      <param name="description">Описание веб-канала.</param>
      <param name="feedAlternateLink">Универсальный код ресурса (URI) для веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с заданным заголовком, описанием, универсальным кодом ресурса (URI) и коллекцией объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="title">Заголовок веб-канала.</param>
      <param name="description">Описание веб-канала.</param>
      <param name="feedAlternateLink">Универсальный код ресурса (URI) для веб-канала.</param>
      <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="title">Заголовок веб-канала.</param>
      <param name="description">Описание веб-канала синдикации.</param>
      <param name="feedAlternateLink">Альтернативный универсальный код ресурса (URI) для веб-канала.</param>
      <param name="id">Идентификатор веб-канала синдикации.</param>
      <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала синдикации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="title">Заголовок веб-канала.</param>
      <param name="description">Описание веб-канала синдикации.</param>
      <param name="feedAlternateLink">Альтернативный универсальный код ресурса (URI) для веб-канала.</param>
      <param name="id">Идентификатор веб-канала синдикации.</param>
      <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала синдикации.</param>
      <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
      <summary>Возвращает коллекцию расширений атрибутов.</summary>
      <returns>Словарь, который содержит коллекцию расширений атрибутов.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
      <summary>Возвращает коллекцию авторов веб-канала.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, представляющая авторов веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
      <summary>Получает и задает базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
      <summary>Возвращает коллекцию категорий веб-канала.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, которые представляют категории веб-канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
      <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Повторяющийся объекта <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
      <param name="cloneItems">Значение, которое указывает, являются ли объекты <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> клонированными.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
      <summary>Возвращает коллекцию участников веб-канала.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, представляющая участников веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
      <summary>Возвращает и задает сведения об авторских правах для веб-канала.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />, представляющий сведения об авторском праве для веб-канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
      <summary>Возвращает и задает описание веб-канала.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, представляющий описание веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
      <summary>Возвращает расширения элемента для веб-канала.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, содержащий расширения элемента в веб-канале.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
      <summary>Возвращает и задает генератор веб-канала.</summary>
      <returns>Имя средства, создавшего веб-канал.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
      <summary>Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
      <param name="serializeExtensionsAsAtom">Значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
      <summary>Возвращает и задает идентификатор веб-канала.</summary>
      <returns>Идентификатор веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
      <summary>Возвращает и задает URL-адрес изображения для веб-канала.</summary>
      <returns>URL-адрес изображения для веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
      <summary>Возвращает коллекцию элементов веб-канала, содержащихся в веб-канале.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
      <summary>Возвращает и задает язык веб-канала.</summary>
      <returns>Имя языка, на котором написан веб-канал. </returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
      <summary>Возвращает и задает время последнего обновления веб-канала.</summary>
      <returns>Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
      <summary>Возвращает ссылки, связанные с веб-каналом.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
      <summary>Загружает веб-канал синдикации из указанного средства чтения XML.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, который содержит загруженное содержимое.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, из которого выполняется загрузка веб-канала.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
      <summary>Загружает производный экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Производный экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, в котором содержится веб-канал.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <typeparam name="TSyndicationFeed">Тип веб-канала синдикации.</typeparam>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Запишите веб-канал синдикации в заданный экземпляр <see cref="T:System.Xml.XmlWriter" /> в формате Atom 1.0.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Запишите веб-канал синдикации в заданный экземпляр <see cref="T:System.Xml.XmlWriter" /> в формате RSS 2.0.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
      <summary>Возвращает и задает заголовок веб-канала.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, в котором содержится заголовок веб-канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeedFormatter">
      <summary>Абстрактный класс, используемый как базовый класс для остальных средств форматирования (например, <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feedToWrite">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для записи. </param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный экземпляр класса <see cref="T:System.Xml.XmlReader" /> допустимый веб-канал синдикации.</summary>
      <returns>Значение true, если средство чтения XML содержит допустимый веб-канал синдикации; в противном случае — значение false.</returns>
      <param name="reader">Средство чтения XML для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
      <param name="feed">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> используется для создания нового объекта <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateFeedInstance">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateItem(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="feed">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания нового объекта <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания нового объекта <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
      <param name="feed">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используемый для создания нового экземпляра объекта <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Feed">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с данным модулем форматирования.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, связанный с данным модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="category">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="link">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="person">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Считывает <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> из заданного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Связывает экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</summary>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, который требуется связать с <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ToString">
      <summary>Возвращает строковое представление экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="category">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="feed">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="link">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="person">Используемый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Пытается проанализировать содержимое элемента синдикации с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано содержимое.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="contentType">Тип содержимого.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <param name="content">Анализируемое содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="category">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="feed">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="link">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="person">Используемый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемая модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="category">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="link">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="person">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="category">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="feed">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="link">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, содержащий расширения элемента, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="person">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который требуется записать <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItem">
      <summary>Представляет элемент веб-канала, например, RSS &lt;item&gt;, или Atom &lt;entry&gt;.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в соответствии с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для инициализации нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.ServiceModel.Syndication.SyndicationContent,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="title">Заголовок элемента синдикации.</param>
      <param name="content">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />, который содержит содержимое элемента синдикации.</param>
      <param name="itemAlternateLink">Альтернативный универсальный код ресурса (URI) для элемента синдикации.</param>
      <param name="id">Идентификатор элемента синдикации.</param>
      <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления элемента синдикации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> с заданным заголовком, содержимым и ссылкой.</summary>
      <param name="title">Заголовок элемента.</param>
      <param name="content">Содержимое элемента.</param>
      <param name="itemAlternateLink">URL-адрес элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="title">Заголовок элемента синдикации.</param>
      <param name="content">Содержимое элемента синдикации.</param>
      <param name="itemAlternateLink">Альтернативный универсальный код ресурса (URI) для элемента синдикации.</param>
      <param name="id">Идентификатор элемента синдикации.</param>
      <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления элемента синдикации.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.AddPermalink(System.Uri)">
      <summary>Добавляет permalink в экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="permalink">Экземпляр <see cref="T:System.Uri" />, указывающий на содержимое.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.AttributeExtensions">
      <summary>Получает расширения атрибута для элемента синдикации.</summary>
      <returns>Словарь, который содержит коллекцию расширений атрибутов.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Authors">
      <summary>Получает авторов элемента синдикации.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, которые представляют авторов элемента синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.BaseUri">
      <summary>Получает и задает базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Базовый универсальный идентификатор ресурса (URI) экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Categories">
      <summary>Получает категории синдикации для элемента синдикации.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, которые представляют категории элемента синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Content">
      <summary>Получает и задает содержимое элемента синдикации.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> с содержимым элемента синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Contributors">
      <summary>Получает участников данного элемента синдикации.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, которые представляют участников элемента синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Copyright">
      <summary>Получает и задает сведения об авторском праве синдикации.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, который представляет сведения об авторском праве.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateCategory">
      <summary>Создает новую категорию.</summary>
      <returns>Новый объект <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateLink">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreatePerson">
      <summary>Создает новый пользователь.</summary>
      <returns>Новый объект <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.ElementExtensions">
      <summary>Получает расширения элемента, содержащиеся в элементе синдикации.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, содержащая расширения элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetAtom10Formatter">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter(System.Boolean)">
      <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
      <param name="serializeExtensionsAsAtom">Значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Id">
      <summary>Получает и задает идентификатор элемента синдикации.</summary>
      <returns>Идентификатор элемента синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.LastUpdatedTime">
      <summary>Получает и задает время последнего обновления элемента синдикации.</summary>
      <returns>Экземпляр класса <see cref="T:System.DateTimeOffset" />, представляющий время последнего обновления элемента синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Links">
      <summary>Получает ссылки, которые содержатся в элементе синдикации.</summary>
      <returns>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load``1(System.Xml.XmlReader)">
      <summary>Загружает производный объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Производный объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, который содержит элемент синдикации.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <typeparam name="TSyndicationItem">Класс, производный от класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, для загрузки.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load(System.Xml.XmlReader)">
      <summary>Загружает экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из указанного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение. </param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.PublishDate">
      <summary>Получает и задает дату публикации для элемента синдикации.</summary>
      <returns>Объект <see cref="T:System.DateTimeOffset" />, представляющий дату публикации для элемента синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Запишите элемент синдикации в заданное средство чтения <see cref="T:System.Xml.XmlWriter" /> в формате Atom 1.0.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Запишите элемент синдикации в заданное средство чтения <see cref="T:System.Xml.XmlWriter" /> в формате RSS 2.0.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.SourceFeed">
      <summary>Получает и задает исходный веб-канал синдикации.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, где размещен элемент синдикации.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Summary">
      <summary>Получает и задает сводку элемента синдикации.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, содержащий сводку элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Title">
      <summary>Получает и задает заголовок элемента синдикации.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, который содержит заголовок элемента синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseContent(System.Xml.XmlReader,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Пытается проанализировать содержимое.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано содержимое.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="contentType">Тип контента содержимого.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <param name="content">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />, в который требуется загрузить расширения элементов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента из указанного экземпляра <see cref="T:System.Xml.XmlWriter" /> с помощью конкретной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItemFormatter">
      <summary>Абстрактный класс, используемый как базовый класс для остальных средств форматирования (например, <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">Документ <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Проверяет, содержит ли указанный экземпляр класса <see cref="T:System.Xml.XmlReader" /> допустимый элемент синдикации.</summary>
      <returns>Значение true, если средство чтения XML содержит допустимый элемент синдикации; в противном случае — значение false.</returns>
      <param name="reader">Средство чтения XML для проверки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateItemInstance">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания нового объекта <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используемый для создания нового экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Item">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, связанный с данным модулем форматирования.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, связанный с данным модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="category">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="link">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Загружает расширения элементов в указанную категорию <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, используя заданные экземпляр <see cref="T:System.Xml.XmlReader" /> и максимальный размер расширения.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="person">Объект <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, в который требуется загрузить расширения элемента.</param>
      <param name="maxExtensionSize">Максимально допустимый размер расширения элемента (в байтах).</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Считывает объект <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> из заданного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.SetItem(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Связывает экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> с <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</summary>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, который требуется связать с <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ToString">
      <summary>Возвращает строковое представление экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="category">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="link">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Пытается проанализировать расширение атрибута с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован атрибут.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="person">Используемый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Пытается проанализировать содержимое элемента синдикации с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано содержимое.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="contentType">Тип содержимого.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <param name="content">Анализируемое содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="category">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="item">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="link">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> для использования.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Пытается проанализировать расширение элемента с помощью указанного экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Значение, указывающее, успешно ли был проанализирован элемент.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="person">Используемый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Version">
      <summary>Возвращает версию механизма синдикации, используемую модулем форматирования.</summary>
      <returns>Версия механизма синдикации, используемая модулем форматирования.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="category">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="link">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Выполняет запись расширений атрибута в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="person">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, содержащий расширения атрибута, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения атрибутов.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="category">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="item">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="link">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, содержащий расширения элемента, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Выполняет запись расширений элемента в экземпляре <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> в заданный объект <see cref="T:System.Xml.XmlWriter" /> в указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись расширений.</param>
      <param name="person">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, содержащий расширения элементов, которые требуется записать.</param>
      <param name="version">Версия механизма синдикации, в который будут записываться расширения.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> в заданный экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который требуется записать <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationLink">
      <summary>Представляет ссылку в веб-канале или элементе синдикации.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным экземпляром.</summary>
      <param name="source">Экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, используемый для инициализации нового экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным объектом <see cref="T:System.Uri" />.</summary>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с заданными <see cref="T:System.Uri" />, типом отношения, заголовком, типом носителя и длиной.</summary>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
      <param name="relationshipType">Тип отношения.</param>
      <param name="title">Заголовок ссылки.</param>
      <param name="mediaType">Тип носителя ссылки.</param>
      <param name="length">Длина содержимого, на которое есть ссылки.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
      <summary>Возвращает расширения атрибута ссылки.</summary>
      <returns>Словарь, который содержит коллекцию расширений атрибутов.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
      <summary>Получает и задает базовый универсальный код ресурса (URI) для ссылки синдикации.</summary>
      <returns>Экземпляр <see cref="T:System.Uri" />, который содержит базовый универсальный код ресурса ссылки синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
      <summary>Создает копию текущего экземпляра класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с заданным экземпляром класса <see cref="T:System.Uri" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с заданным экземпляром класса <see cref="T:System.Uri" /> и типом носителя.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
      <param name="mediaType">Тип носителя ссылки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
      <summary>Создает ссылку на оболочку носителя с заданным универсальным кодом ресурса, типом носителя и длиной.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
      <param name="mediaType">Тип носителя ссылки.</param>
      <param name="length">Длина содержимого, на которое есть ссылки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным универсальным кодом ресурса и типом отношения self.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> с указанным универсальным кодом ресурса, типом носителя и типом отношения self.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
      <param name="uri">Универсальный код ресурса (URI) для ресурса, на который есть ссылки.</param>
      <param name="mediaType">Тип носителя ссылки.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
      <summary>Возвращает расширения элемента для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, который содержит расширения элементов для <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
      <summary>Возвращает абсолютный универсальный код ресурса для <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>Экземпляр <see cref="T:System.Uri" />, который содержит абсолютный универсальный код ресурса для <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Length">
      <summary>Возвращает и задает в байтах длину ресурса, на который есть ссылки.</summary>
      <returns>Длина ресурса, на который есть ссылки.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
      <summary>Возвращает и задает тип носителя ресурса, на который есть ссылки.</summary>
      <returns>Тип носителя ресурса, на который есть ссылки.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
      <summary>Возвращает и задает тип отношения для ресурса, на который есть ссылки.</summary>
      <returns>Тип отношения для ресурса, на который есть ссылки.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Title">
      <summary>Возвращает и задает заголовок ресурса, на который есть ссылки.</summary>
      <returns>Заголовок ресурса, на который есть ссылки.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
      <summary>Возвращает и задает универсальный код ресурса (URI) для ресурса, на который есть ссылки.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" />, который содержит универсальный код ресурса (URI) для ресурса, на который есть ссылки.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationPerson">
      <summary>Представляет автора или участника содержимого синдикации.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с указанным экземпляром.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, используемый для инициализации нового экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с указанным адресом электронной почты.</summary>
      <param name="email">Адрес электронной почты пользователя.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> с заданным адресом электронной почты, именем и универсальным кодом ресурса (URI).</summary>
      <param name="email">Адрес электронной почты пользователя.</param>
      <param name="name">Имя пользователя.</param>
      <param name="uri">Универсальный код ресурса веб-страницы пользователя.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions">
      <summary>Возвращает расширения атрибута для <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Словарь, который содержит коллекцию расширений атрибутов.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.Clone">
      <summary>Создает копию существующего экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions">
      <summary>Возвращает расширения элемента для <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, содержащая расширения элемента.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Email">
      <summary>Получает и задает адрес электронной почты <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Адрес электронной почты пользователя.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Имя пользователя.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
      <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Uri">
      <summary>Возвращает или задает универсальный код ресурса для <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>Универсальный код ресурса веб-сайта пользователя.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationVersions">
      <summary>Класс, представляющий версии синдикации, поддерживаемые в .</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Atom10">
      <summary>Представляет поддержку спецификации Atom 1.0.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Rss20">
      <summary>Представляет поддержку спецификации RSS 2.0.</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContent">
      <summary>Представляет любое содержимое <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />, которое требуется отобразить для конечного пользователя.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.ServiceModel.Syndication.TextSyndicationContent)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с заданным экземпляром <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с заданным текстом.</summary>
      <param name="text">Текст содержимого.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.TextSyndicationContentKind)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> с заданным текстом и <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" />.</summary>
      <param name="text">Текст содержимого.</param>
      <param name="textKind">
        <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" />, описывающий содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.Clone">
      <summary>Создает копию существующего экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Text">
      <summary>Возвращает текст объекта <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>Текст объекта <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Type">
      <summary>Возвращает тип контента объекта <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>
        <see cref="T:System.String" />, предоставляющий тип текстового содержимого синдикации.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись содержимого объекта <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> в заданный <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContentKind">
      <summary>Перечисление, представляющее поддерживаемые типы текстового содержимого синдикации.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Plaintext">
      <summary>Обычный текст</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Html">
      <summary>HTML (переключенная разметка)</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.XHtml">
      <summary>XML (без переключения)</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.UrlSyndicationContent">
      <summary>Представляет содержимое синдикации, которое содержит URL-адрес другого ресурса.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.ServiceModel.Syndication.UrlSyndicationContent)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> с указанным экземпляром <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.Uri,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> с заданным <see cref="T:System.Uri" /> и типом носителя.</summary>
      <param name="url">Объект <see cref="T:System.Uri" />.</param>
      <param name="mediaType">Тип носителя ресурса, на который ссылается <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.Clone">
      <summary>Создает копию существующего экземпляра <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />, содержащий новую копию <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Type">
      <summary>Возвращает тип контента объекта <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>Тип контента объекта <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Url">
      <summary>Получает <see cref="T:System.Uri" /> для <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Uri" />, который содержит универсальный код ресурса для содержимого <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись содержимого экземпляра класса <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> в указанный модуль <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Workspace">
      <summary>Представляет рабочую область в документе службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Workspace" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.ResourceCollectionInfo})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Workspace" /> и инициализирует его с указанным заголовком и коллекцией.</summary>
      <param name="title">Заголовок рабочей области.</param>
      <param name="collections">Коллекция, которая содержится в рабочей области.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor(System.String,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.ResourceCollectionInfo})">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.Workspace" /> и инициализирует его с указанным заголовком и коллекцией.</summary>
      <param name="title">Заголовок рабочей области.</param>
      <param name="collections">Коллекция, которая содержится в рабочей области.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.AttributeExtensions">
      <summary>Возвращает коллекцию расширений атрибутов.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.Generic.Dictionary`2" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.BaseUri">
      <summary>Возвращает и задает базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.Uri" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.Collections">
      <summary>Получает коллекцию, связанную с рабочей областью.</summary>
      <returns>
Возвращает значение <see cref="T:System.Collections.ObjectModel.Collection`1" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.CreateResourceCollection">
      <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.ElementExtensions">
      <summary>Получает расширения элемента, содержащиеся в экземпляре <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.Title">
      <summary>Заголовок экземпляра <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <returns>
Возвращает значение <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.
</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Пытается проанализировать расширение атрибута.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="value">Анализируемый атрибут.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Пытается проанализировать расширение элемента.</summary>
      <returns>
Возвращает значение <see cref="T:System.Boolean" />.
</returns>
      <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="version">Версия механизма синдикации для использования при анализе.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="version">Версия механизма синдикации для использования при записи.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.XmlSyndicationContent">
      <summary>Представляет содержимое синдикации XML, которое не подлежит отображению в браузере.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.ServiceModel.Syndication.XmlSyndicationContent)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным экземпляром <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <param name="source">Экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным типом, объектом и <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <param name="type">Тип содержимого.</param>
      <param name="dataContractExtension">Расширение контракта данных.</param>
      <param name="dataContractSerializer">Используемая версия <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным типом, объектом и <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="type">Тип содержимого.</param>
      <param name="xmlSerializerExtension">Расширение сериализатора XML.</param>
      <param name="serializer">Используемая версия <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.SyndicationElementExtension)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с заданным типом и <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <param name="type">Тип содержимого, обычно выраженный как тип содержимого MIMЕ, например, «application/xml» или «application/xml+customer».</param>
      <param name="extension">Расширение <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />, которое требуется поместить в <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <param name="reader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.Clone">
      <summary>Создает копию существующего экземпляра <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Extension">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.GetReaderAtContent">
      <summary>Возвращает средство чтения из содержимого <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> из содержимого <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1">
      <summary>Выполняет чтение заданного типа в <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>Объект указанного типа.</returns>
      <typeparam name="TContent">Тип содержимого для считывания.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Выполняет чтение заданного типа в <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с использованием указанного сериализатора.</summary>
      <returns>Объект указанного типа.</returns>
      <param name="dataContractSerializer">Используемая версия <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="TContent">Тип содержимого для считывания.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Выполняет чтение заданного типа в <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> с использованием указанного сериализатора.</summary>
      <returns>Объект указанного типа.</returns>
      <param name="serializer">Используемая версия <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <typeparam name="TContent">Тип содержимого для считывания.</typeparam>
      <exception cref="T:System.InvalidOperationException">Невозможно десериализовать входной XML-код в запрашиваемый тип.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Type">
      <summary>Получает тип содержимого синдикации XML.</summary>
      <returns>Тип содержимого синдикации XML.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Выполняет запись содержимого <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> в заданное экземпляр <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension">
      <summary>Предоставляет расширение объекта <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> для содержания пространств имен, если сериализация сообщения XPath запрашивает в XAML.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension.#ctor(System.ServiceModel.Dispatcher.XPathMessageContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension" />, используя <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> для преобразования.</summary>
      <param name="context">Контекст сообщения XAML для преобразования.</param>
    </member>
    <member name="P:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension.Namespaces">
      <summary>Возвращает пространства имен, содержащиеся в этом экземпляре.</summary>
      <returns>Коллекция пространств имен и префиксов.</returns>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>Предоставляет пространства имен, используемые в запросе сообщения XPath.</summary>
      <returns>Пространства имен.</returns>
      <param name="serviceProvider">Поставщик услуг, не используемый в операции.</param>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter">
      <summary>Предоставляет способ преобразования объекта <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> к формату, обеспечивающему сериализацию как XAML.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Проверяет, может ли контекст быть преобразован из одного типа в тип этого преобразователя.</summary>
      <returns>Значение true, если тип может быть преобразован; в противном случае — false.</returns>
      <param name="context">Тип, представляющий контекст формата.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Проверяет, может ли быть преобразован тип в целевой тип.</summary>
      <returns>Значение true, если преобразование может быть выполнено; в противном случае — false.</returns>
      <param name="context">Тип, представляющий контекст формата.</param>
      <param name="destinationType">Тип, представляющий контекст формата.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанный контекст в тип данного преобразователя, сериализуемый по XAML, используя заданные контекстные сведения и сведения о языке и региональных параметрах.</summary>
      <returns>Результат процесса преобразования.</returns>
      <param name="context">Тип, представляющий контекст формата.</param>
      <param name="culture">Определенные региональные сведения, например, календарях или форматах чисел.</param>
      <param name="value">Преобразуемый объект.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует указанный контекст в тип данного преобразователя, сериализуемый по XAML, используя заданные контекстные сведения и сведения о языке и региональных параметрах.</summary>
      <returns>Преобразуемый контекст.</returns>
      <param name="context">Тип, представляющий контекст формата.</param>
      <param name="culture">Определенные региональные сведения, например, календарях или форматах чисел.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Тип, в который преобразуется аргумент <paramref name="value" />.</param>
    </member>
  </members>
</doc>