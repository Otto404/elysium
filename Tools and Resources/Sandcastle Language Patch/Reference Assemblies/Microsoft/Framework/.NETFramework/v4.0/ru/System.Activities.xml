<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasic">
      <summary>Служит хранилищем присоединенных свойств для <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.GetSettings(System.Object)">
      <summary>Получает экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, присоединенный к указанному объекту.</summary>
      <returns>Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, присоединенный к указанному объекту.</returns>
      <param name="target">Объект для проверки.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.SetSettings(System.Object,Microsoft.VisualBasic.Activities.VisualBasicSettings)">
      <summary>Присоединяет экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> к указанному объекту.</summary>
      <param name="target">Объект, к которому прикрепляется экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</param>
      <param name="value">Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> для присоединения.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper">
      <summary>Создает и компилирует выражения <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicReference(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Создает и возвращает предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <returns>Предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
      <param name="targetType">Ожидаемый тип выражения.</param>
      <param name="expressionText">Выражение в синтаксисе Visual Basic.</param>
      <param name="namespaces">Импортированные пространства имен.</param>
      <param name="referencedAssemblies">Сборки, на которые имеются ссылки.</param>
      <param name="environment">Механизм разрешения имен в соответствующие им объекты <see cref="T:System.Activities.Argument" /> и <see cref="T:System.Activities.Variable" />.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения.Этот параметр передается неинициализированным.</param>
      <param name="compileError">Этот метод возвращает возникшие при компиляции ошибки либо значение null, если компиляция прошла успешно.Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicValue(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Создает и возвращает предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <returns>Предварительно компилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
      <param name="targetType">Ожидаемый тип выражения.</param>
      <param name="expressionText">Выражение в синтаксисе Visual Basic.</param>
      <param name="namespaces">Импортированные пространства имен.</param>
      <param name="referencedAssemblies">Сборки, на которые имеются ссылки.</param>
      <param name="environment">Механизм разрешения имен в соответствующие им объекты <see cref="T:System.Activities.Argument" /> и <see cref="T:System.Activities.Variable" />.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения.Этот параметр передается неинициализированным.</param>
      <param name="compileError">Этот метод возвращает возникшие при компиляции ошибки либо значение null, если компиляция прошла успешно.Этот параметр передается неинициализированным.Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicReference(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Повторно компилирует ранее скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <returns>Повторно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
      <param name="visualBasicReference">Выражение, подлежащее повторной компиляции.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения.Этот параметр передается неинициализированным.</param>
      <param name="compileError">Этот метод возвращает возникшие при компиляции ошибки либо значение null, если компиляция прошла успешно.Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicValue(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Повторно компилирует ранее скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <returns>Повторно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
      <param name="visualBasicValue">Выражение, подлежащее повторной компиляции.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения.Этот параметр передается неинициализированным.</param>
      <param name="compileError">Этот метод возвращает возникшие при компиляции ошибки либо значение null, если компиляция прошла успешно.Этот параметр передается неинициализированным.Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference">
      <summary>Представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Assembly">
      <summary>Возвращает или задает полное имя сборки, упоминаемой в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Полное имя сборки, упоминаемой в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Equals(Microsoft.VisualBasic.Activities.VisualBasicImportReference)">
      <summary>Определяет, равен ли заданный объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> текущему объекту <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>true, если заданный объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> равен текущему <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, false — в противном случае.</returns>
      <param name="other">Объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> для сравнения с текущим объектом <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.GetHashCode">
      <summary>Возвращает хэш-код экземпляра класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Хэш-код для экземпляра <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Import">
      <summary>Возвращает или задает импортируемое пространство имен, упоминаемое в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Импортируемое пространство имен, упоминаемое в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1">
      <summary>Содержит выражение с синтаксисом Visual Basic, результатом которого является левостороннее выражение, поддерживающее привязку аргументов <see cref="F:System.Activities.ArgumentDirection.Out" />.</summary>
      <typeparam name="TResult">Тип выражения.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> с использованием заданного выражения.</summary>
      <param name="expressionText">Строка выражения в синтаксисе Visual Basic.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> может быть преобразован в строку, в противном случае значение false.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ExpressionText">
      <summary>Возвращает или задает выражение Visual Basic, представленное объектом <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <returns>Выражение Visual Basic.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicSettings">
      <summary>Содержит параметры, используемые экземплярами <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> для компиляции исходного текста содержащихся в них выражений.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.Default">
      <summary>Возвращает объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, содержащий используемый по умолчанию набор ссылок на сборки и импортируемых пространств имен.Этот набор доступен для всех экземпляров <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> в заданном <see cref="T:System.AppDomain" />.</summary>
      <returns>Объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, содержащий используемый по умолчанию набор ссылок на сборки и импортируемых пространств имен.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.ImportReferences">
      <summary>Возвращает коллекцию объектов <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, каждый из которых представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</summary>
      <returns>Коллекция объектов <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, каждый из которых представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1">
      <summary>Содержит выражение с синтаксисом Visual Basic, результатом которого является правостороннее выражение, поддерживающее привязку аргументов <see cref="F:System.Activities.ArgumentDirection.In" />.</summary>
      <typeparam name="TResult">Тип выражения.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> с помощью указанного выражения.</summary>
      <param name="expressionText">Строка выражения в синтаксисе Visual Basic.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> может быть преобразован в строку, в противном случае значение false.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ExpressionText">
      <summary>Возвращает или задает выражение Visual Basic, представленное объектом <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <returns>Выражение Visual Basic.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter">
      <summary>Преобразует экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в заданный тип.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли преобразовать объект указанного типа в экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
      <returns>Значение true, если заданный можно преобразовать преобразования, в противном случае — значение false.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли преобразовать экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в экземпляр указанного типа.</summary>
      <returns>Значение true, если экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> можно преобразовать в экземпляр указанного типа, и значение false в противном случае.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанный объект в экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
      <returns>Объект, представляющий преобразованное значение.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />.Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в заданный тип.</summary>
      <returns>Преобразованное значение.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />.Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> для преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer">
      <summary>Выполняет сериализацию экземпляров <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в XAML-код.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в объект <see cref="T:System.String" />.</summary>
      <returns>Значение true, если указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> можно преобразовать в объект <see cref="T:System.String" />, и значение false в противном случае. </returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в объект <see cref="T:System.String" />.</summary>
      <returns>Строковое представление текущего экземпляра <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Activities.Activity">
      <summary>Абстрактный базовый класс, используемый для создания составных действий из существующих объектов <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Activity.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="P:System.Activities.Activity.CacheId">
      <summary>Возвращает идентификатор кэша, уникальный в пределах области определения рабочего процесса.</summary>
      <returns>Идентификатор кэша, уникальный в пределах области определения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="P:System.Activities.Activity.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, которые можно настроить для выполнения проверки the <see cref="T:System.Activities.Activity" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.Activity.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Activity.Id">
      <summary>Возвращает идентификатор, уникальный в пределах области определения рабочего процесса.</summary>
      <returns>Идентификатор, уникальный в пределах области определения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Activity.Implementation">
      <summary>Возвращает или задает делегат, который возвращает объект <see cref="T:System.Activities.Activity" />, содержащий логику выполнения.</summary>
      <returns>Делегат, который содержит логику выполнения.</returns>
    </member>
    <member name="M:System.Activities.Activity.ShouldSerializeDisplayName">
      <summary>Указывает, должно ли быть сериализовано свойство <see cref="P:System.Activities.Activity.DisplayName" />.</summary>
      <returns>true, если значение свойства <see cref="P:System.Activities.Activity.DisplayName" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.Activities.Activity.ToString">
      <summary>Возвращает значение типа <see cref="T:System.String" />, которое содержит <see cref="P:System.Activities.Activity.Id" /> и <see cref="P:System.Activities.Activity.DisplayName" /> для <see cref="T:System.Activities.Activity" />.</summary>
      <returns>Идентификатор и отображаемое имя для действия.</returns>
    </member>
    <member name="T:System.Activities.Activity`1">
      <summary>Абстрактный базовый класс, который используется для создания составных действий из существующих объектов <see cref="T:System.Activities.Activity" /> и задает результирующий тип с помощью описателя типа действия.</summary>
      <typeparam name="TResult">Тип возвращаемого значения действия.</typeparam>
    </member>
    <member name="M:System.Activities.Activity`1.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Activity`1.FromValue(`0)">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данное значение.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данное значение.</returns>
      <param name="constValue">Значение, используемое для создания выражения <see cref="T:System.Activities.Activity`1" />.</param>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данное значение.</summary>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данное значение.</returns>
      <param name="constValue">Значение, используемое для создания выражения.</param>
    </member>
    <member name="P:System.Activities.Activity`1.Result">
      <summary>Возвращает или задает результирующий аргумент для <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Результирующий аргумент для <see cref="T:System.Activities.Activity`1" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction">
      <summary>Определяет делегат действия, который не принимает аргументов и не возвращает значение.</summary>
    </member>
    <member name="M:System.Activities.ActivityAction.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction" />.</summary>
    </member>
    <member name="T:System.Activities.ActivityAction`1">
      <summary>Определяет делегат действия, который принимает один аргумент и не возвращает значение.</summary>
      <typeparam name="T">Тип входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`1.Argument">
      <summary>Возвращает или задает входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`10">
      <summary>Определяет делегат действия, который принимает десять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`10.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`10" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`11">
      <summary>Определяет делегат действия, который принимает одиннадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`11.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`11" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`12">
      <summary>Определяет делегат действия, который принимает двенадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`12.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`12" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`13">
      <summary>Определяет делегат действия, который принимает тринадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`13.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`13" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`14">
      <summary>Определяет делегат действия, который принимает четырнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`14.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`14" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`15">
      <summary>Определяет делегат действия, который принимает пятнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента, принимаемого делегатом действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`15.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`15" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`16">
      <summary>Определяет делегат действия, который принимает шестнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого аргумента делегата.</typeparam>
      <typeparam name="T2">Тип второго аргумента делегата.</typeparam>
      <typeparam name="T3">Тип третьего аргумента делегата.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента делегата.</typeparam>
      <typeparam name="T5">Тип пятого аргумента делегата.</typeparam>
      <typeparam name="T6">Тип шестого аргумента делегата.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента делегата.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента делегата.</typeparam>
      <typeparam name="T9">Тип девятого аргумента делегата.</typeparam>
      <typeparam name="T10">Тип десятого аргумента делегата.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента делегата.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента делегата.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента делегата.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента делегата.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента делегата.</typeparam>
      <typeparam name="T16">Тип шестнадцатого аргумента делегата.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`16.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`16" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument16">
      <summary>Возвращает или задает шестнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`2">
      <summary>Определяет делегат действия, который принимает два аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`2.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`2" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`3">
      <summary>Определяет делегат действия, который принимает три аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`3.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`3" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`4">
      <summary>Определяет делегат действия, который принимает четыре аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`4.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`4" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`5">
      <summary>Определяет делегат действия, который принимает пять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`5.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`5" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`6">
      <summary>Определяет делегат действия, который принимает шесть аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`6.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`6" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`7">
      <summary>Определяет делегат действия, который принимает семь аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`7.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`7" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`8">
      <summary>Определяет делегат действия, который принимает восемь аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`8.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`8" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`9">
      <summary>Определяет делегат действия, который принимает девять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`9.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`9" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder">
      <summary>Предоставляет данные свойств для действия рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.ActivityBuilder.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityBuilder" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Attributes">
      <summary>Возвращает коллекцию атрибутов, используемых в построении дерева действий.</summary>
      <returns>Коллекция указанного типа.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Constraints">
      <summary>Возвращает коллекцию ограничений, управляющих построением дерева действий.</summary>
      <returns>Коллекция указанного типа.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)">
      <summary>Возвращает <see cref="T:System.Activities.ActivityPropertyReference" /> для свойства, полученного из указанного объекта.</summary>
      <returns>Ссылка на свойство.</returns>
      <param name="target">Объект, содержащий свойство.</param>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Implementation">
      <summary>Возвращает или задает дерево действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Name">
      <summary>Возвращает или задает имя дерева действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Имя дерева действий.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Properties">
      <summary>Возвращает коллекцию значений свойств для текущего экземпляра <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Коллекция значений свойств.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)">
      <summary>Задает значение для указанного присоединяемого свойства в указанном хранилище.</summary>
      <param name="target">Хранилище свойств.</param>
      <param name="value">Устанавливаемое значение.</param>
    </member>
    <member name="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>В случае реализации в базовом классе возвращает корневой элемент дерева действий рабочего процесса.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder`1">
      <summary>Предоставляет данные свойств для универсального действия рабочего процесса.</summary>
      <typeparam name="TResult">Тип реализуемого действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Attributes">
      <summary>Возвращает универсальную коллекцию атрибутов, используемых в построении дерева действий.</summary>
      <returns>Универсальная коллекция.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Constraints">
      <summary>Возвращает универсальную коллекцию ограничений, управляющих построением дерева действий.</summary>
      <returns>Универсальная коллекция.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Implementation">
      <summary>Возвращает или задает универсальное дерево действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Объект действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Name">
      <summary>Возвращает или задает имя универсального дерева действий, которое представлено текущим экземпляром класса <see cref="T:System.Activities.ActivityBuilder`1." /></summary>
      <returns>Имя дерева действий.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Properties">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ObjectModel.KeyedCollection" /> свойств текущего экземпляра <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Коллекция пар «ключ-значение» для свойств элементов рабочего процесса действия.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>Возвращает корневой элемент текущего дерева рабочих процессов.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="T:System.Activities.ActivityContext">
      <summary>Базовый класс для классов контекста, представляющих среду выполнения действия.</summary>
    </member>
    <member name="P:System.Activities.ActivityContext.ActivityInstanceId">
      <summary>Возвращает уникальный идентификатор выполняющегося в данный момент экземпляра действия.</summary>
      <returns>Уникальный идентификатор выполняющегося в данный момент экземпляра действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityContext.DataContext">
      <summary>Возвращает контекст данных для действия, выполняющегося в данный момент.</summary>
      <returns>Контекст данных рабочего процесса для действия, выполняющегося в данный момент.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetExtension``1">
      <summary>Возвращает расширение указанного типа.</summary>
      <returns>Расширение указанного типа, если оно присутствует, и значение null в противном случае.</returns>
      <typeparam name="T">Тип получаемого расширения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)">
      <summary>Возвращает типизированное расположение по указанному расположению для контекста текущего действия.</summary>
      <returns>Типизированное расположение.</returns>
      <param name="locationReference">Упоминаемое расположение.</param>
      <typeparam name="T">Тип возвращаемого расположения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="argument">Аргумент для проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.InArgument`1" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)">
      <summary>Возвращает значение из указанного расположения <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Значение указанного по ссылке расположения.</returns>
      <param name="locationReference">Указанное по ссылке расположение для проверки.</param>
      <typeparam name="T">Тип значения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="runtimeArgument">Аргумент для проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.Argument" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.InArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.LocationReference" />.</summary>
      <param name="locationReference">Указанное по ссылке расположение для получения нового значения.</param>
      <param name="value">Новое значение указанного по ссылке расположения.</param>
      <typeparam name="T">Тип расположения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="P:System.Activities.ActivityContext.WorkflowInstanceId">
      <summary>Возвращает уникальный идентификатор экземпляра рабочего процесса, выполняющегося в данный момент.</summary>
      <returns>Уникальный идентификатор экземпляра рабочего процесса, выполняющегося в данный момент.</returns>
    </member>
    <member name="T:System.Activities.ActivityDelegate">
      <summary>Представляет обратный вызов на основе действия.</summary>
    </member>
    <member name="M:System.Activities.ActivityDelegate.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект.</summary>
    </member>
    <member name="P:System.Activities.ActivityDelegate.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.GetResultArgument">
      <summary>В случае реализации в производном классе возвращает аргумент <see cref="T:System.Activities.DelegateOutArgument" /> делегата <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Выходной аргумент для делегата <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityDelegate.Handler">
      <summary>Возвращает или задает действие, представляемое этим делегатом <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Действие, которое представляется этим делегатом <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})">
      <summary>Передает список аргументов времени выполнения для делегата <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <param name="runtimeDelegateArguments">Список, который заполняется аргументами времени выполнения.</param>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ShouldSerializeDisplayName">
      <summary>Показывает, должно ли значение свойства <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> проходить сериализацию в XAML-код.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> должно проходить сериализацию, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> для делегата <see cref="T:System.Activities.ActivityDelegate" />, который содержит свойство <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</summary>
      <returns>Представление делегата <see cref="T:System.Activities.ActivityDelegate" />, который содержит свойство <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`1">
      <summary>Определяет делегат действия, не имеющий входных аргументов и имеющий один выходной аргумент типа Tresult.</summary>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`1.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`10">
      <summary>Определяет делегат действия с девятью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`10.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`11">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`11.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`12">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`12.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`13">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`13.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`14">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`14.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`15">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`15.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`16">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`16.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`17">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T16">Тип шестнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`17.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument16">
      <summary>Возвращает или задает шестнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`2">
      <summary>Определяет делегат действия с одним входным аргументом типа <paramref name="T" /> и одним выходным аргументом типа <paramref name="TResult" />.</summary>
      <typeparam name="T">Тип входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`2.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Argument">
      <summary>Возвращает или задает входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`3">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`3.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Результирующий аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`4">
      <summary>Определяет делегат действия с тремя входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`4.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`5">
      <summary>Определяет делегат действия с четырьмя входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`5.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`6">
      <summary>Определяет делегат действия с пятью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`6.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`7">
      <summary>Определяет делегат действия с шестью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`7.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`8">
      <summary>Определяет делегат действия с семью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`8.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`9">
      <summary>Определяет делегат действия с восемью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`9.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstance">
      <summary>Представляет состояние экземпляра действия во время выполнения.</summary>
    </member>
    <member name="P:System.Activities.ActivityInstance.Activity">
      <summary>Возвращает действие, представляемое текущим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Действие, представляемое этим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.Id">
      <summary>Возвращает идентификатор, однозначно определяющий экземпляр <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Идентификатор, однозначно определяющий экземпляр <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.IsCompleted">
      <summary>Возвращает значение, которое показывает, завершено ли действие, представляемое текущим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Значение true, если действие завершено, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.State">
      <summary>Возвращает объект <see cref="T:System.Activities.ActivityInstanceState" /> для текущего экземпляра <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Состояние экземпляра действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstanceState">
      <summary>Описывает состояние экземпляра действия.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Executing">
      <summary>Указывает, что действие находится в состоянии выполнения.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Closed">
      <summary>Указывает, что действие находится в закрытом состоянии.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Canceled">
      <summary>Указывает, что действие находится в отмененном состоянии.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Faulted">
      <summary>Указывает, что действие находится в ошибочном состоянии.</summary>
    </member>
    <member name="T:System.Activities.ActivityMetadata">
      <summary>Представляет набор аргументов, дочерних действий, переменных и делегатов, которые настроенный <see cref="T:System.Activities.Activity" /> вносит в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый объект <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый объект <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.ActivityMetadata.Environment">
      <summary>Возвращает среду <see cref="T:System.Activities.LocationReferenceEnvironment" /> аргументов, переменных, аргументов делегатов или символов действия, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Расположение действия ссылается на среду аргументов, переменных, аргументов делегатов или символов, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <returns>Значение true, если этот экземпляр метаданных равен указанному объекту, в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection">
      <summary>Возвращает коллекцию импортированных дочерних действий с использованием отражения.</summary>
      <returns>Коллекция импортированных дочерних действий.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection">
      <summary>Возвращает коллекцию делегатов с использованием отражения.</summary>
      <returns>Коллекция делегатов.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetVariablesWithReflection">
      <summary>С помощью отражения возвращает коллекцию переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="P:System.Activities.ActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение true, если ошибки проверки есть, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <returns>Значение true, если два элемента равны, в противном случае — значение false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <returns>true, если два элемента не равны, в противном случае — false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве импортированных дочерних действий данного действия.</summary>
      <param name="importedChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве импортированных делегатов данного действия.</summary>
      <param name="importedDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию переменных к переменным действия.</summary>
      <param name="variables">Добавляемые переменные.</param>
    </member>
    <member name="T:System.Activities.ActivityPropertyReference">
      <summary>Представляет ссылку на свойство, которая используется в объекте <see cref="T:System.Activities.ActivityBuilder" /> и сопоставляется с объектом <see cref="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1" /> в действии x:Class, когда действие x:Class десериализуется в объект <see cref="T:System.Activities.ActivityBuilder" />.</summary>
    </member>
    <member name="M:System.Activities.ActivityPropertyReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ActivityPropertyReference" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.SourceProperty">
      <summary>Возвращает или задает исходное имя свойства, которое соответствует имени свойства в определении действия x:Class.</summary>
      <returns>Исходное имя свойства, которое соответствует имени свойства в определении действия x:Class.</returns>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.TargetProperty">
      <summary>Возвращает или задает имя свойства, задаваемого в целевом объекте.</summary>
      <returns>Имя свойства, задаваемого в целевом объекте.</returns>
    </member>
    <member name="T:System.Activities.ActivityWithResult">
      <summary>Получает значение или тип выходного аргумента действия.Этот класс является абстрактным и производным от класса <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityWithResult.Result">
      <summary>В случае реализации в производном классе возвращает или задает значение объекта типа <see cref="T:System.Activities.OutArgument" />.</summary>
      <returns>Выходной аргумент.</returns>
    </member>
    <member name="P:System.Activities.ActivityWithResult.ResultType">
      <summary>При реализации в производном классе возвращает тип аргумента <see cref="T:System.Activities.OutArgument" /> действия.</summary>
      <returns>Тип объекта.</returns>
    </member>
    <member name="T:System.Activities.Argument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие и из действия.</summary>
    </member>
    <member name="P:System.Activities.Argument.ArgumentType">
      <summary>Возвращает тип для данных, привязанных к этому <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Тип для данных, привязанных к этому <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Созданный новый аргумент.</returns>
      <param name="type">Тип данных объекта <see cref="T:System.Activities.Argument" />.</param>
      <param name="direction">Одно из значений перечисления, указывающее направление потока данных через объект <see cref="T:System.Activities.Argument" />.</param>
    </member>
    <member name="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)">
      <summary>Создает новый аргумент, ссылающийся на заданный целевой аргумент, используя указанное имя аргумента.</summary>
      <returns>Новый аргумент, ссылающийся на заданный целевой аргумент.</returns>
      <param name="argumentToReference">Целевой аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="P:System.Activities.Argument.Direction">
      <summary>Возвращает объект <see cref="T:System.Activities.ArgumentDirection" />, который указывает направление потока данных, представляемого <see cref="T:System.Activities.Argument" />: в действие, из действия или в обоих направлениях. </summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через объект <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Argument.EvaluationOrder">
      <summary>Возвращает или задает отсчитываемое от нуля значение, которое указывает порядок для вычисления аргумента.</summary>
      <returns>Отсчитываемое от нуля значение, которое указывает порядок для вычисления аргумента.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля и не равно <see cref="F:System.Activities.Argument.UnspecifiedEvaluationOrder" />.</exception>
    </member>
    <member name="P:System.Activities.Argument.Expression">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.ActivityWithResult" />, представляющий значение данных, привязанное к этому <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Значение данных, привязанное к этому <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный контекст действия.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный тип и контекст действия.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст текущего действия.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location" /> для этого объекта <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Расположение данного объекта <see cref="T:System.Activities.Argument" />.</returns>
      <param name="context">Контекст выполняющегося действия.</param>
    </member>
    <member name="F:System.Activities.Argument.ResultValue">
      <summary>Представляет значение константы «Result», которая соответствует имени свойства <see cref="P:System.Activities.ActivityWithResult.Result" /> типа <see cref="T:System.Activities.OutArgument" /> в базовом классе выражения <see cref="T:System.Activities.ActivityWithResult" />.</summary>
    </member>
    <member name="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение аргумента, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Значение для аргумента.</param>
    </member>
    <member name="F:System.Activities.Argument.UnspecifiedEvaluationOrder">
      <summary>Представляет значение свойства <see cref="P:System.Activities.Argument.EvaluationOrder" /> для аргумента с неуказанным порядком вычисления.Это значение доступно только для чтения.</summary>
    </member>
    <member name="T:System.Activities.ArgumentDirection">
      <summary>Указывает направление потока данных для <see cref="T:System.Activities.Argument" />.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.In">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных в рабочий процесс или действие.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.Out">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных из рабочего процесса или действия.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.InOut">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных в рабочий процесс или действие и из рабочего процесса или действия.</summary>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity">
      <summary>Управляет выполнением асинхронного кода для действия с начала до завершения.Этот класс является абстрактным.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.AsyncCodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе с помощью указанного контекста выполнения, метода обратного вызова и состояния пользователя помещает асинхронное действие в очередь в рабочем процессе времени выполнения. </summary>
      <returns>Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</returns>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">Метод, вызываемый после асинхронного действия и получения уведомления о выполнении.</param>
      <param name="state">Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Выдает исключение «недопустимая операция» при включении в сборку неправильных метаданных кэша.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Служит виртуальным методом и преобразует сведения, получаемые путем отражения кэша в аргументы для асинхронного действия.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>При реализации в производном классе и использовании указанных сведений о среде выполнения уведомляет среду выполнения рабочего процесса о том, что операция асинхронного действия завершилась преждевременно.Служит виртуальным методом.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>При реализации в производном классе и с помощью указанных сведений среды выполнения уведомляет среду выполнения рабочего процесса о том, что операция связанного асинхронного действия выполнена.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">Реализованный интерфейс <see cref="T:System.IAsyncResult" />, возвращающий состояние асинхронного действия при завершении выполнения.</param>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity.Implementation">
      <summary>Возвращает значение null или вызывает ошибку при попытке задать значение этого свойства.</summary>
      <returns>Функция действия.</returns>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity`1">
      <summary>Управляет выполнением асинхронного кода для действия указанного типа с начала до завершения.Это абстрактный универсальный класс.</summary>
      <typeparam name="TResult">Тип асинхронного действия, обрабатываемого этим классом.</typeparam>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.AsyncCodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе с помощью указанного контекста выполнения, метода обратного вызова и состояния пользователя помещает асинхронное действие в очередь в рабочем процессе времени выполнения. </summary>
      <returns>Объект.</returns>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">Метод, вызываемый после асинхронного действия и получения уведомления о выполнении.</param>
      <param name="state">Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Выдает исключение «недопустимая операция» при включении в сборку неправильных метаданных кэша.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия. </param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Служит виртуальным методом и преобразует сведения, получаемые путем отражения кэша, в аргументы для асинхронного действия.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>При реализации в производном классе и использовании указанных сведений о среде выполнения уведомляет среду выполнения рабочего процесса о том, что операция асинхронного действия отменена.Этот метод служит виртуальным методом.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>При реализации в производном классе и с помощью указанных сведений среды выполнения уведомляет среду выполнения рабочего процесса о том, что операция связанного асинхронного действия выполнена.</summary>
      <returns>Универсальный тип.</returns>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">Реализованный интерфейс <see cref="T:System.IAsyncResult" />, возвращающий состояние асинхронного действия при завершении выполнения.</param>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity`1.Implementation">
      <summary>Возвращает значение null или вызывает ошибку при попытке задать значение этого свойства.</summary>
      <returns>Функция действия.</returns>
    </member>
    <member name="T:System.Activities.AsyncCodeActivityContext">
      <summary>Контекст выполнения для асинхронного действия.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested">
      <summary>Возвращает значение, которое показывает, запрошена ли отмена действия <see cref="T:System.Activities.AsyncCodeActivity" />, выполняющегося в данный момент.</summary>
      <returns>Значение true, если запрошена отмена действия <see cref="T:System.Activities.AsyncCodeActivity" />, выполняющегося в данный момент, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivityContext.MarkCanceled">
      <summary>Помечает текущий экземпляр действия как отмененный.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.UserState">
      <summary>Возвращает или задает определяемый пользователем объект, связанный с текущим асинхронным действием.</summary>
      <returns>Определяемый пользователем объект.</returns>
    </member>
    <member name="T:System.Activities.Bookmark">
      <summary>Представляет точку, в которой рабочий процесс или действие может пассивно ожидать возобновления.</summary>
    </member>
    <member name="M:System.Activities.Bookmark.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Bookmark" />, используя заданное имя.</summary>
      <param name="name">Имя, определяющее закладку.</param>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)">
      <summary>Определяет, ссылаются ли текущий объект <see cref="T:System.Activities.Bookmark" /> и указанный объект <see cref="T:System.Activities.Bookmark" /> на одну точку продолжения в рабочем процессе.</summary>
      <returns>Значение true, если объекты <see cref="T:System.Activities.Bookmark" /> равны, в противном случае — значение false.</returns>
      <param name="other">Закладка для сравнения.</param>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Object)">
      <summary>Определяет, ссылаются ли текущий объект <see cref="T:System.Activities.Bookmark" /> и указанный объект на одну точку продолжения в рабочем процессе.</summary>
      <returns>Значение true, если объекты <see cref="T:System.Activities.Bookmark" /> равны, в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Activities.Bookmark.GetHashCode">
      <summary>Возвращает уникальный идентификатор для этого экземпляра <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Уникальный идентификатор данного экземпляра <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="P:System.Activities.Bookmark.Name">
      <summary>Возвращает имя закладки.</summary>
      <returns>Имя закладки.</returns>
    </member>
    <member name="M:System.Activities.Bookmark.ToString">
      <summary>Возвращает имя для именованной закладки или идентификатор для безымянной закладки.</summary>
      <returns>Имя или идентификатор закладки.</returns>
    </member>
    <member name="T:System.Activities.BookmarkCallback">
      <summary>Представляет метод, который вызывается во время возобновления <see cref="T:System.Activities.Bookmark" />.</summary>
      <param name="context">Среда выполнения действия, обрабатывающего возобновление <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="bookmark">Возобновляемый объект <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="value">Данные, связанные с возобновлением <see cref="T:System.Activities.Bookmark" />.</param>
    </member>
    <member name="T:System.Activities.BookmarkOptions">
      <summary>Задает параметры для <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.None">
      <summary>Параметры <see cref="T:System.Activities.Bookmark" /> по умолчанию,</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.MultipleResume">
      <summary>Объект <see cref="T:System.Activities.Bookmark" />, который может возобновляться несколько раз.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.NonBlocking">
      <summary>Объект <see cref="T:System.Activities.Bookmark" />, который не блокирует рабочий процесс.</summary>
    </member>
    <member name="T:System.Activities.BookmarkResumptionResult">
      <summary>Определяет перечисление, элементы которого представляют результат запросов на планирование закладок.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.Success">
      <summary>Возобновление закладки успешно запланировано.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotFound">
      <summary>Возобновление закладки не было запланировано, поскольку не удалось найти закладку.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotReady">
      <summary>Возобновление закладки не было запланировано, поскольку среда выполнения еще не создала закладку.Ведущее приложение должно дождаться следующей точки бездействия и повторить возобновление.</summary>
    </member>
    <member name="T:System.Activities.BookmarkScope">
      <summary>Определяет область для набора объектов <see cref="T:System.Activities.Bookmark" />, которые работают по одному протоколу.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScope.#ctor(System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.BookmarkScope" /> с указанным идентификационным номером области (GUID).</summary>
      <param name="id">Идентификационный номер области (GUID).</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.Default">
      <summary>Возвращает значение по умолчанию для объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение <see cref="T:System.Activities.BookmarkScope" /> по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)">
      <summary>Возвращает значение, показывающее, совпадает ли текущий объект <see cref="T:System.Activities.BookmarkScope" /> с указанным объектом <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение true, если области закладки совпадают, и значение false в противном случае.</returns>
      <param name="other">Объект области закладки.</param>
    </member>
    <member name="M:System.Activities.BookmarkScope.GetHashCode">
      <summary>Создает идентификационный номер для текущего объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Хэш-код.</returns>
    </member>
    <member name="P:System.Activities.BookmarkScope.Id">
      <summary>Возвращает идентификатор GUID для текущего объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Идентификатор GUID.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Инициализирует текущий объект <see cref="T:System.Activities.BookmarkScope" /> с использованием указанного идентификатора GUID.</summary>
      <param name="context">Среда выполнения текущего действия.</param>
      <param name="id">Идентификатор GUID, назначаемый объекту <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.IsInitialized">
      <summary>Возвращает значение, которое показывает, был ли инициализирован текущий объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Activities.BookmarkScope" /> был инициализирован, и значение false в противном случае.</returns>
    </member>
    <member name="T:System.Activities.BookmarkScopeHandle">
      <summary>Объект T:System.Handle используется для управления временем существования объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.BookmarkScopeHandle" />.</summary>
    </member>
    <member name="P:System.Activities.BookmarkScopeHandle.BookmarkScope">
      <summary>Диспетчер <see cref="T:System.Activities.BookmarkScope" />, связанный с этим соединением <see cref="T:System.Activities.BookmarkScopeHandle" />.</summary>
      <returns>Объект <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)">
      <summary>Создает новое свойство <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" /></summary>
      <param name="context">Контекст действия.</param>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Создает новый объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="context">Контекст действия.</param>
      <param name="scopeId">Уникальный глобальный идентификатор, связанный с объектом <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScopeHandle.Default">
      <summary>Объект <see cref="T:System.Activities.BookmarkScopeHandle" /> по умолчанию.</summary>
      <returns>Объект <see cref="T:System.Activities.BookmarkScopeHandle" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeHandle.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Инициализирует объект <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />, используя указанный контекст действия и идентификатор GUID.</summary>
      <param name="context">Контекст действия.</param>
      <param name="scope">Идентификатор GUID, связанный со свойством <see cref="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />.</param>
    </member>
    <member name="T:System.Activities.CodeActivity">
      <summary>Абстрактный класс для создания пользовательского действия императивного типа, определенного с помощью метода <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />. Класс предоставляет доступ к разрешению переменных и аргументов и доступ к расширениям.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.#ctor">
      <summary>При реализации в производном классе создает экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано.Используйте вместо этого функцию <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)">
      <summary>При реализации в производном классе выполняет действие.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.CodeActivity.Implementation">
      <summary>Не поддерживается.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="T:System.Activities.CodeActivity`1">
      <summary>Абстрактный класс для создания пользовательского действия императивного типа, определенного в методе <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />. Класс предоставляет доступ к разрешению переменных и аргументов и доступ к расширениям.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivity`1.#ctor">
      <summary>При реализации в производном классе создает экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано.Используйте вместо этого функцию <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
      <summary>При реализации в производном классе выполняет действие.</summary>
      <returns>Результат выполнения действия.</returns>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.CodeActivity`1.Implementation">
      <summary>Не поддерживается.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="T:System.Activities.CodeActivityContext">
      <summary>Расширяет возможности <see cref="T:System.Activities.ActivityContext" /> и предоставляет дополнительные функции для <see cref="T:System.Activities.CodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityContext.GetProperty``1">
      <summary>Возвращает свойство выполнения указанного типа.</summary>
      <returns>Свойство выполнения.</returns>
      <typeparam name="THandle">Тип свойства выполнения.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Отправляет указанную пользовательскую запись отслеживания в любые зарегистрированные поставщики отслеживания.</summary>
      <param name="record">Данные для отслеживания.</param>
    </member>
    <member name="T:System.Activities.CodeActivityMetadata">
      <summary>Представляет набор аргументов, которые настроенное действие <see cref="T:System.Activities.CodeActivity" /> передает в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый объект <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый объект <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.Environment">
      <summary>Возвращает объект <see cref="T:System.Activities.LocationReferenceEnvironment" /> для аргументов или символов действия, передаваемых объектом <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Среда аргументов или символов, передаваемых объектом <see cref="T:System.Activities.Hosting.SymbolResolver" />, на которую ссылается расположение действия.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <returns>Значение true, если этот экземпляр метаданных равен указанному объекту, в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение true, если ошибки проверки есть, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <returns>Значение true, если два элемента равны, в противном случае — значение false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <returns>true, если два элемента не равны, в противном случае — false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Первый элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="T:System.Activities.CompletionCallback">
      <summary>Метод, вызываемый по завершении действия.</summary>
      <param name="context">Среда выполнения действия.</param>
      <param name="completedInstance">Завершенное действие.</param>
    </member>
    <member name="T:System.Activities.CompletionCallback`1">
      <summary>Метод, вызываемый по завершении действия.</summary>
      <param name="context">Среда выполнения действия.</param>
      <param name="completedInstance">Завершенное действие.</param>
      <param name="result">Значение <see cref="P:System.Activities.WorkflowElement`1.Result" /> для завершенного действия.</param>
      <typeparam name="TResult">Тип результирующего значения.</typeparam>
    </member>
    <member name="T:System.Activities.DelegateArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в <see cref="T:System.Activities.ActivityDelegate" /> и из него.</summary>
    </member>
    <member name="P:System.Activities.DelegateArgument.Direction">
      <summary>Возвращает объект <see cref="T:System.Activities.ArgumentDirection" />, который указывает направление потока данных, представляемого <see cref="T:System.Activities.DelegateArgument" />: в делегат <see cref="T:System.Activities.ActivityDelegate" />, из делегата <see cref="T:System.Activities.ActivityDelegate" /> или в обоих направлениях.</summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через аргумент <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный контекст действия.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location" /> для значения, на которое ссылается аргумент <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Расположение значения, на которое ссылается аргумент <see cref="T:System.Activities.DelegateArgument" />.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="P:System.Activities.DelegateArgument.Name">
      <summary>Возвращает или задает имя <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.DelegateArgument.NameCore">
      <summary>Возвращает строковое значение, используемое <see cref="P:System.Activities.DelegateArgument.Name" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.DelegateCompletionCallback">
      <summary>Представляет метод, который вызывается после завершения <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <param name="context">Среда выполнения действия, обрабатывающего обратный вызов.</param>
      <param name="completedInstance">Завершенный экземпляр действия для обработчика <see cref="T:System.Activities.ActivityDelegate" />.</param>
      <param name="outArguments">Выходные аргументы завершенного <see cref="T:System.Activities.ActivityDelegate" />.</param>
    </member>
    <member name="T:System.Activities.DelegateInArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateInArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateInArgument`1" />, используя заданное имя.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <returns>Значение объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.DelegateOutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных из <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateOutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных из <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateOutArgument`1" /> с указанным именем.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <returns>Значение объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location`1" /> для этого аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <returns>Расположение данного аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
      <param name="context">Контекст действия, который содержит расположение для этого <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.DynamicActivity">
      <summary>Предоставляет объектную модель, которая позволяет динамически создавать действия, взаимодействующие с конструктором Workflow Foundation и средой выполнения с помощью <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivity.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivity" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity.Attributes">
      <summary>Возвращает коллекцию атрибутов динамически формируемого действия.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, настроенных для проверки объекта <see cref="T:System.Activities.DynamicActivity" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Implementation">
      <summary>Возвращает или задает логику выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Name">
      <summary>Имя, отображаемое для действия в конструкторе рабочих процессов.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Properties">
      <summary>Возвращает коллекцию свойств, сопоставленных с аргументами динамически формируемого действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию атрибутов динамического действия.</summary>
      <returns>Атрибуты динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса динамического действия.</summary>
      <returns>Имя класса.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя компонента динамического действия.</summary>
      <returns>Имя компонента.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для динамического действия.</summary>
      <returns>Преобразователь типов для данного экземпляра динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для динамического действия.</summary>
      <returns>Событие по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для динамического действия.</summary>
      <returns>Свойство по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор с заданным базовым типом.</summary>
      <returns>Экземпляр редактора, который можно привести к указанному типу редактора, или значение null, если не удается найти редактор запрошенного типа.</returns>
      <param name="editorBaseType">Базовый тип искомого редактора.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает коллекцию событий динамического действия.</summary>
      <returns>Коллекция событий.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает коллекцию событий для динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <returns>Коллекция событий, соответствующая указанным атрибутам.</returns>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает коллекцию свойств динамического действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает коллекцию свойств динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <returns>Коллекция свойств, соответствующая указанным атрибутам.</returns>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает данный экземпляр класса <see cref="T:System.Activities.DynamicActivity" />.</summary>
      <returns>Этот экземпляр <see cref="T:System.Activities.DynamicActivity" />.</returns>
      <param name="pd">Свойство, для которого требуется найти владельца.</param>
    </member>
    <member name="T:System.Activities.DynamicActivity`1">
      <summary>Предоставляет методику, согласующуюся с моделью DOM и предназначенную для динамического построения действий, которые взаимодействуют с конструктором Workflow Foundation и средой выполнения рабочих процессов с помощью <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Attributes">
      <summary>Возвращает коллекцию атрибутов динамически формируемого действия.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, настроенных для проверки объекта <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Implementation">
      <summary>Возвращает или задает логику выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Name">
      <summary>Возвращает имя, отображаемое для действия в конструкторе рабочих процессов.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Properties">
      <summary>Возвращает коллекцию свойств, сопоставленных с аргументами динамически формируемого действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию атрибутов динамического действия.</summary>
      <returns>Атрибуты динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса динамического действия.</summary>
      <returns>Имя класса.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя компонента динамического действия.</summary>
      <returns>Имя компонента.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для динамического действия.</summary>
      <returns>Преобразователь типов для данного экземпляра динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для динамического действия.</summary>
      <returns>Событие по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для динамического действия.</summary>
      <returns>Свойство по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор с заданным базовым типом.</summary>
      <returns>Экземпляр редактора, который можно привести к указанному типу редактора, или значение null, если не удается найти редактор запрошенного типа.</returns>
      <param name="editorBaseType">Базовый тип искомого редактора.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает коллекцию событий динамического действия.</summary>
      <returns>Коллекция событий.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает коллекцию событий для динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <returns>Коллекция событий, соответствующая указанным атрибутам.</returns>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает коллекцию свойств динамического действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает коллекцию свойств динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <returns>Коллекция свойств, соответствующая указанным атрибутам.</returns>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает данный экземпляр класса <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>Этот экземпляр <see cref="T:System.Activities.DynamicActivity`1" />.</returns>
      <param name="pd">Свойство, для которого требуется найти владельца.</param>
    </member>
    <member name="T:System.Activities.DynamicActivityProperty">
      <summary>Представляет свойство действия <see cref="T:System.Activities.DynamicActivity" />, которое создается во время выполнения и выполняется в контексте <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Attributes">
      <summary>Возвращает атрибуты объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.ToString">
      <summary>Возвращает строковое сообщение, которое содержит тип и имя экземпляра <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Строковое сообщение.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Type">
      <summary>Возвращает или задает тип объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Объект типа <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Value">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Объект типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.ExclusiveHandle">
      <summary>Добавляет к закладке сопроводительные сведения, которые позволяют закладке получать доступ к подмножеству дескрипторов областей, исключая ненужные дескрипторы.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ExclusiveHandle" />.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)">
      <summary>Создает список объектов <see cref="T:System.Activities.BookmarkScopeHandle" /> по умолчанию из переменных дескрипторов в указанном контексте инициализации дескрипторов.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)">
      <summary>Добавляет указанный дескриптор области закладки в коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Activities.BookmarkScopeHandle" /> с использованием указанного контекста.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
      <param name="bookmarkScopeHandle">Маркер, используемый для определения группы закладок, работающих по одному протоколу в операции действия рабочего процесса, и для доступа к этой группе.</param>
    </member>
    <member name="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes">
      <summary>Возвращает новую или существующую коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Activities.BookmarkScopeHandle" />.</summary>
      <returns>Доступная только для чтения коллекция дескрипторов области закладки.</returns>
    </member>
    <member name="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)">
      <summary>Возвращает значения по умолчанию для зарегистрированных дескрипторов области закладки.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="T:System.Activities.ExecutionProperties">
      <summary>Представляет коллекцию свойств в определенной области.</summary>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)">
      <summary>Регистрирует новое свойство с использованием указанного имени.</summary>
      <param name="name">Имя свойства.</param>
      <param name="property">Объект, представляющий свойство.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)">
      <summary>Регистрирует свойство, используя указанное имя и видимость для дочерних элементов.</summary>
      <param name="name">Имя свойства.</param>
      <param name="property">Объект, представляющий свойство.</param>
      <param name="onlyVisibleToPublicChildren">Значение, которое определяет, является ли это свойство видимым для дочерних элементов действия, которому принадлежит свойство.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Find(System.String)">
      <summary>Возвращает ближайшее свойство с заданным именем.</summary>
      <returns>Ближайшее свойство с заданным именем.</returns>
      <param name="name">Имя свойства.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию коллекции свойств.</summary>
      <returns>Перечислитель, выполняющий итерацию коллекции свойств.</returns>
    </member>
    <member name="P:System.Activities.ExecutionProperties.IsEmpty">
      <summary>Возвращает значение, которое показывает, существуют ли свойства, зарегистрированные в текущей области.</summary>
      <returns>Значение true, если присутствуют зарегистрированные свойства, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Remove(System.String)">
      <summary>Отменяет регистрацию свойства с указанным именем.</summary>
      <returns>Значение true, если регистрация свойства отменена, и значение false в противном случае.</returns>
      <param name="name">Имя свойства, регистрация которого отменяется.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию коллекции свойств.</summary>
      <returns>Перечислитель, выполняющий итерацию коллекции свойств.</returns>
    </member>
    <member name="T:System.Activities.FaultCallback">
      <summary>Представляет метод, который вызывается, когда запланированное действие или одно из его дочерних действий переходит в состояние <see cref="F:System.Activities.ActivityInstanceState.Faulted" />.</summary>
      <param name="faultContext">Контекст <see cref="T:System.Activities.ActivityFaultContext" /> предоставляется для изучения причин сбоя рабочего процесса.</param>
      <param name="propagatedException">Исключение, вызвавшее сбой.</param>
      <param name="propagatedFrom">Действие, которое вызвало исключение и стало причиной сбоя.</param>
    </member>
    <member name="T:System.Activities.Handle">
      <summary>Представляет тип, время существования которого управляется средой выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Handle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Handle" />.</summary>
    </member>
    <member name="P:System.Activities.Handle.ExecutionPropertyName">
      <summary>Возвращает имя, используемое этим дескриптором <see cref="T:System.Activities.Handle" /> при добавлении к свойствам выполнения действия.</summary>
      <returns>Имя производного типа, указанное в свойстве <see cref="P:System.Type.FullName" />.</returns>
    </member>
    <member name="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)">
      <summary>Вызывается средой выполнения рабочего процесса, когда инициализируется среда, содержащая <see cref="T:System.Activities.Handle" />.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)">
      <summary>Вызывается средой выполнения рабочего процесса, когда переменная <see cref="T:System.Activities.Variable" /> для <see cref="T:System.Activities.Handle" /> выходит за пределы области.</summary>
      <param name="context">Среда, в которой создан дескриптор.</param>
    </member>
    <member name="P:System.Activities.Handle.Owner">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.ActivityInstance" />, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.Handle" />.</summary>
      <returns>Экземпляр действия, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.Handle" />.</returns>
    </member>
    <member name="M:System.Activities.Handle.ThrowIfUninitialized">
      <summary>Вызывает исключение <see cref="T:System.InvalidOperationException" />, если дескриптор <see cref="T:System.Activities.Handle" /> не инициализирован.</summary>
    </member>
    <member name="T:System.Activities.HandleInitializationContext">
      <summary>Представляет среду инициализации <see cref="T:System.Activities.Handle" />.</summary>
    </member>
    <member name="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1">
      <summary>Создает и инициализирует новый экземпляр типа обработчика, указанного в параметре типа.</summary>
      <returns>Инициализированный новый экземпляр типа обработчика, указанного в параметре типа.</returns>
      <typeparam name="THandle">Тип создаваемого и инициализируемого обработчика <see cref="T:System.Activities.Handle" />.</typeparam>
    </member>
    <member name="M:System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)">
      <summary>Отменяет инициализацию указанного объекта <see cref="T:System.Activities.Handle" />.</summary>
      <param name="handle">Объект <see cref="T:System.Activities.Handle" /> для отмены инициализации.</param>
    </member>
    <member name="T:System.Activities.IExecutionProperty">
      <summary>Предоставляет свойствам выполнения механизм для настройки локального хранения потоков до и после рабочих элементов связанного действия.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <summary>Дает свойству выполнения возможность разделять локальное хранилище потоков.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.SetupWorkflowThread">
      <summary>Дает свойству выполнения возможность настраивать локальное хранилище потоков.</summary>
    </member>
    <member name="T:System.Activities.InArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие.</summary>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InArgument" />, с использованием имени аргумента, на который производится ссылка.</summary>
      <returns>Новый входной аргумент, ссылающийся на заданный целевой аргумент <see cref="T:System.Activities.InArgument" />.</returns>
      <param name="argumentToReference">Целевой входной аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, с использованием имени аргумента, на который производится ссылка.</summary>
      <returns>Новый входной аргумент, ссылающийся на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">Целевой входной/выходной аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="T:System.Activities.InArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в действие.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.InArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Данные, передаваемые через этот аргумент.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с помощью указанного выражения.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" />, используя указанное значение.</summary>
      <param name="constValue">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.InArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого объекта <see cref="T:System.Activities.InArgument`1" />.</summary>
      <returns>Элемент рабочего процесса, представляющий значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromValue(`0)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <returns>Новый аргумент.</returns>
      <param name="constValue">Значение аргумента,</param>
    </member>
    <member name="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.InArgument`1" />, используя указанный контекст действия.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента,</param>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <returns>Новый аргумент.</returns>
      <param name="constValue">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.InOutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие и из действия.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InOutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, использующий указанное имя аргумента.</summary>
      <returns>Новый входной/выходной аргумент, ссылающийся на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">Целевой входной/выходной аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="T:System.Activities.InOutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в действие и из действия.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.InOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с помощью указанного выражения.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.InOutArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого аргумента <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, построенный с помощью указанного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InOutArgument`1" />, созданный с использованием указанной переменной <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.InOutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст действия, содержащий значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение значения для объекта <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>Ссылка на расположение, в котором хранится значение аргумента.</returns>
      <param name="context">Контекст действия, содержащий расположение значения аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, построенный с помощью указанного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, построенный с помощью указанного объекта <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента с использованием указанного значения.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.InvalidWorkflowException">
      <summary>Обрабатывает исключения, которые создаются, если рабочий процесс является недопустимым. </summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о вызываемом исключении.</param>
      <param name="context">Источник и назначение сериализуемого потока.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанным описанием исключения «недопустимый рабочий процесс».</summary>
      <param name="message">Строковое описание исключения.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанным описанием исключения «недопустимый рабочий процесс» и внутренним исключением.</summary>
      <param name="message">Описание исключения.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="T:System.Activities.InvokeCompletedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Activities.WorkflowInvoker.InvokeCompleted" />.</summary>
    </member>
    <member name="P:System.Activities.InvokeCompletedEventArgs.Outputs">
      <summary>Возвращает словарь <see cref="T:System.Collections.Generic.IDictionary`2" /> значений выходных аргументов корневого действия из завершенного рабочего процесса.</summary>
      <returns>Словарь значений выходных аргументов корневого действия из завершенного рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.IPropertyRegistrationCallback">
      <summary>Разрешает свойству выполнения рабочего процесса передавать пользовательскую логику регистрации и отмены регистрации.</summary>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)">
      <summary>Вызывается, когда свойство выполнения рабочего процесса добавляется посредством <see cref="Overload:System.Activities.ExecutionProperties.Add" />.Таким образом создается обработчик проверки для свойства.</summary>
      <param name="context">Объект <see cref="T:System.Activities.RegistrationContext" />, ссылающийся на коллекцию свойств выполнения, в которой регистрируется свойство.</param>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)">
      <summary>Вызывается, когда свойство выполнения рабочего процесса выходит за пределы области.</summary>
      <param name="context">Объект <see cref="T:System.Activities.RegistrationContext" />, ссылающийся на коллекцию свойств выполнения, которой принадлежит свойство.</param>
    </member>
    <member name="T:System.Activities.Location">
      <summary>Предоставляет ссылку на значение, используемое объектом <see cref="T:System.Activities.Argument" /> или <see cref="T:System.Activities.Variable" />.</summary>
    </member>
    <member name="M:System.Activities.Location.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект.</summary>
    </member>
    <member name="P:System.Activities.Location.LocationType">
      <summary>При переопределении в производном классе возвращает тип упоминаемого объекта.</summary>
      <returns>Тип упоминаемого объекта.</returns>
    </member>
    <member name="P:System.Activities.Location.Value">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение объекта.</returns>
    </member>
    <member name="P:System.Activities.Location.ValueCore">
      <summary>При переопределении в производном классе возвращает или задает значение объекта, упоминаемого по расположению.</summary>
      <returns>Значение объекта.</returns>
    </member>
    <member name="T:System.Activities.Location`1">
      <summary>Предоставляет типизированную ссылку на значение, используемое объектом <see cref="T:System.Activities.Argument" /> или <see cref="T:System.Activities.Variable" />.</summary>
      <typeparam name="T">Тип значения.</typeparam>
    </member>
    <member name="M:System.Activities.Location`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Location`1" />.</summary>
    </member>
    <member name="P:System.Activities.Location`1.LocationType">
      <summary>Возвращает тип значения, упоминаемого по расположению.</summary>
      <returns>Тип значения.</returns>
    </member>
    <member name="M:System.Activities.Location`1.ToString">
      <summary>Возвращает строковое представление значения упоминаемого объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="P:System.Activities.Location`1.Value">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="P:System.Activities.Location`1.ValueCore">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="T:System.Activities.LocationReference">
      <summary>Предоставляет механизм для разрешения <see cref="T:System.Activities.Location" /> во время выполнения. </summary>
    </member>
    <member name="M:System.Activities.LocationReference.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.LocationReference" />.</summary>
    </member>
    <member name="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
      <summary>В случае реализации в производном классе извлекает расположение для <see cref="T:System.Activities.LocationReference" /> из объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>Расположение для значения переменной, аргумента или аргумента делегата.</returns>
      <param name="context">Сведения о среде выполнения действия, включая значения для переменных, аргументов и аргументов делегата, связанных с этой средой.</param>
    </member>
    <member name="P:System.Activities.LocationReference.Name">
      <summary>Возвращает или задает имя <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.NameCore">
      <summary>При реализации в производном классе возвращает или задает версию имени объекта <see cref="T:System.Activities.LocationReference" />, локализованную с учетом национальных стандартов.</summary>
      <returns>Локализованная версия имени <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.Type">
      <summary>Возвращает или задает тип для <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Тип класса <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.TypeCore">
      <summary>При реализации в производном классе возвращает или задает версию типа объекта <see cref="T:System.Activities.LocationReference" />, локализованную с учетом национальных стандартов.</summary>
      <returns>Локализованная версия типа <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="T:System.Activities.LocationReferenceEnvironment">
      <summary>Дает представление среды переменных и аргументов, которая доступна для действия во время выполнения.</summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект. </summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences">
      <summary>В случае переопределения в производном классе возвращает коллекцию объектов <see cref="T:System.Activities.LocationReference" /> в текущей области.</summary>
      <returns>Коллекция объектов-ссылок на расположение в текущей области.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)">
      <summary>В случае переопределения в производном классе определяет, является ли указанный объект <see cref="T:System.Activities.LocationReference" /> видимым в текущей области.</summary>
      <returns>Значение true, если объект <see cref="T:System.Activities.LocationReference" /> является видимым в текущей области, и значение false в противном случае.</returns>
      <param name="locationReference">Расположение для проверки.</param>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Parent">
      <summary>Возвращает или задает включающий объект <see cref="T:System.Activities.LocationReferenceEnvironment" />.</summary>
      <returns>Объект <see cref="T:System.Activities.LocationReferenceEnvironment" />, содержащий элемент управления.</returns>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Root">
      <summary>Возвращает действие, которое определяет правила выбора области для этой среды.</summary>
      <returns>Действие, которое определяет правила выбора области для этой среды.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)">
      <summary>В случае переопределения в производном классе пытается получить указанный объект <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Значение true, если присутствует объект <see cref="T:System.Activities.LocationReference" /> с указанным именем, и значение false в противном случае.</returns>
      <param name="name">Имя извлекаемого объекта <see cref="T:System.Activities.LocationReference" />.</param>
      <param name="result">Если этот метод возвращает значение true, то параметр <paramref name="result" /> содержит объект <see cref="T:System.Activities.LocationReference" /> с указанным именем. В противном случае он содержит значение null.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Activities.NativeActivity">
      <summary>Абстрактный базовый класс для пользовательских действий, в которых логика выполнения реализуется с помощью метода <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" />, который имеет полный доступ к функциям среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>При реализации в производном классе выполняет действия в ответ на прерывание действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано.Вместо него рекомендуется использовать метод <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе выполняет логику, обеспечивающую изящное раннее завершение действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.CanInduceIdle">
      <summary>Возвращает или задает значение, указывающее, может ли действие вызывать простой рабочего процесса.</summary>
      <returns>Значение true, если в результате действия рабочий процесс может стать бездействующим.По умолчанию это значение — false.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе запускает логику выполнения действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.Implementation">
      <summary>Логика выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="T:System.Activities.NativeActivity`1">
      <summary>Абстрактный базовый класс для пользовательских действий, в которых логика выполнения реализуется с помощью метода <see cref="M:System.Activities.NativeActivity`1.Execute(System.Activities.ActivityExecutionContext)" />, который имеет полный доступ к функциям среды выполнения.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivity`1.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>При реализации в производном классе выполняет действия в ответ на прерывание действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано.Используйте вместо этого функцию <see cref="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе выполняет логику, обеспечивающую изящное раннее завершение действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.CanInduceIdle">
      <summary>Возвращает или задает значение, указывающее, может ли действие вызывать простой рабочего процесса.</summary>
      <returns>Значение true, если в результате действия рабочий процесс может стать бездействующим, и значение false в противном случае.По умолчанию это значение — false.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе запускает логику выполнения действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.Implementation">
      <summary>Логика выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="T:System.Activities.NativeActivityAbortContext">
      <summary>Представляет среду выполнения для прерываемого действия.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityAbortContext.Reason">
      <summary>Возвращает объект <see cref="T:System.Exception" />, содержащий причину прерывания действия.</summary>
      <returns>Исключение, содержащее причину прерывания действия.</returns>
    </member>
    <member name="T:System.Activities.NativeActivityContext">
      <summary>Предоставляет контекст среды выполнения для пользовательского действия рабочего процесса. </summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort">
      <summary>Прерывает текущий экземпляр рабочего процесса во время выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort(System.Exception)">
      <summary>Прерывает выполнение текущего экземпляра рабочего процесса по указанной причине.</summary>
      <param name="reason">Ошибка, вызвавшее прерывание рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)">
      <summary>Прерывает указанный экземпляр дочернего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="activity">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)">
      <summary>Прерывает указанный экземпляр дочернего действия <see cref="T:System.Activities.NativeActivity" /> по указанной причине.</summary>
      <param name="activity">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="reason">Ошибка, вызвавшее прерывание дочернего действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)">
      <summary>Вызывает преждевременное завершение указанного экземпляра дочернего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="activityInstance">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChildren">
      <summary>Вызывает преждевременное завершение всех дочерних действий выполняющегося <see cref="T:System.Activities.NativeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</summary>
      <returns>Закладка.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, и планирует указанный метод для выполнения после уведомления о завершении операции возобновления.</summary>
      <returns>Метод обратного вызова.</returns>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным методом, выполняемым после уведомления о завершении операции возобновлениям, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Закладка, которая включает метод обратного вызова и параметр выполнения закладки.</returns>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">Перечисляемый параметр, который управляет работой закладки в отношении к другим потокам в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)">
      <summary>Создает точку с указанным именем, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</summary>
      <returns>Закладка, включающая имя закладки.</returns>
      <param name="name">Имя закладки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем и с указанным методом для выполнения после уведомления о завершении операции возобновления.</summary>
      <returns>Закладка, которая включает имя закладки и метод обратного вызова.</returns>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и параметр выполнения закладки.</returns>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, с указанным методом для выполнения после уведомления о завершении операции возобновления и с указанной областью закладки.</summary>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и область закладки.</returns>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, с указанной областью закладки и указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова, область закладки и параметр выполнения закладки.</returns>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="P:System.Activities.NativeActivityContext.DefaultBookmarkScope">
      <summary>Возвращает область закладки, связанную с корневым элементом рабочего процесса.</summary>
      <returns>Уникальный идентификатор GUID.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetChildren">
      <summary>Возвращает коллекцию дочерних действий для текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Универсальная коллекция дочерних объектов <see cref="T:System.Activities.NativeActivity" />, доступная только для чтения.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)">
      <summary>Возвращает значение указанной переменной в текущем экземпляре <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Значение указанной переменной.</returns>
      <param name="variable">Переменная, значение которой получается во время выполнения текущего экземпляра <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})">
      <summary>Возвращает значение указанной универсальной переменной в текущем экземпляре <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Значение указанной переменной.</returns>
      <param name="variable">Универсальная переменная, значение которой получается во время выполнения текущего экземпляра <see cref="T:System.Activities.NativeActivity" />.</param>
      <typeparam name="T">Тип переменной, значение которой получается.</typeparam>
    </member>
    <member name="P:System.Activities.NativeActivityContext.IsCancellationRequested">
      <summary>Возвращает или задает значение, которое показывает, запрошена ли отмена экземпляра <see cref="T:System.Activities.NativeActivity" />, выполняющегося в данный момент.</summary>
      <returns>Значение true, если запрошена отмена экземпляра <see cref="T:System.Activities.NativeActivity" />, выполняющегося в данный момент, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.MarkCanceled">
      <summary>Помечает экземпляр <see cref="T:System.Activities.NativeActivity" />, выполняющийся в данный момент, как отмененный.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityContext.Properties">
      <summary>Возвращает объект, который обрабатывает свойства для выполнения текущего <see cref="T:System.Activities.NativeActivityContext" />.</summary>
      <returns>Объект, который обрабатывает свойства выполнения.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveAllBookmarks">
      <summary>Удаляет все закладки, связанные с экземпляром <see cref="T:System.Activities.NativeActivity" />, выполняющимся в данный момент.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)">
      <summary>Удаляет указанную закладку из выполняемого в настоящий момент экземпляра <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Значение true, если закладка была удалена, в противном случае — значение false.</returns>
      <param name="bookmark">Точка, в которой экземпляр <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)">
      <summary>Удаляет закладку с указанным именем.</summary>
      <returns>Значение true, если закладка была удалена, в противном случае — значение false.</returns>
      <param name="name">Имя закладки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)">
      <summary>Удаляет закладку с указанным именем и указанной областью закладки.</summary>
      <returns>Значение true, если закладка была удалена, в противном случае — значение false.</returns>
      <param name="name">Имя закладки.</param>
      <param name="scope">Уникальный идентификатор GUID для группы объектов <see cref="T:System.Activities.Bookmark" />, которые работают по одному протоколу.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Возобновляет выполнение <see cref="T:System.Activities.NativeActivity" /> на указанной закладке.</summary>
      <returns>Результат попытки возобновления работы <see cref="T:System.Activities.NativeActivity" /> в точке закладки.</returns>
      <param name="bookmark">Точка, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</param>
      <param name="value">Сведения, относящиеся к возобновлению закладки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction" />, не имеющего параметров, и создает закладки в указанных расположениях обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction" />.</summary>
      <returns>Новый экземпляр операции действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`1" /> с одним параметром для входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument">Данные, отправленные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`1" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`1" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Аргумент, передающий данные в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`10" /> с десятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`10" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`10" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`11" /> с одиннадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`11" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`11" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`12" /> с двенадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`12" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`12" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`13" /> с тринадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`13" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`13" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`14" /> с четырнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`14" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`14" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`15" /> с пятнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`15" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`15" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Универсальный параметр, который представляет данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`16" /> с шестнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`16" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`16" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`2" /> с двумя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`2" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`2" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`3" /> с тремя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`3" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`3" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`4" /> с четырьмя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`4" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`4" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`5" /> с пятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`5" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`5" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`6" /> с шестью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`6" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`6" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`7" /> с семью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`7" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`7" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`8" /> с восемью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`8" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`8" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction`9" /> с девятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`9" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`9" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с использованием указанного расположения обратного вызова, где родительский процесс возобновляется после завершения действия.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения дочернего действия.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> из-за ошибки будет возобновлено выполнение действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с использованием указанного расположения обратного вызова после сбоя, где родительский процесс возобновляется, когда действие переходит в сбойное состояние.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с одним параметром для входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`1" /> будет возобновлено выполнение действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> из-за ошибки будет возобновлено выполнение действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)">
      <summary>Отправляет метод обратного вызова для действия в пул рабочих элементов. </summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityDelegate">Метод обратного вызова, в который действие возвращает результат, когда завершается указанная операция действия.</param>
      <param name="inputParameters">Словарный список имен и значений аргументов действия.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`1" /> с одним параметром, содержащим возвращаемое значение, и создает закладки для указанных расположений обратного вызова, где рабочий процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`1" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`1" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`10" /> с десятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`10" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`10" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`11" /> с одиннадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`11" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`11" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`12" /> с двенадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`12" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`12" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`13" /> с тринадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`13" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`13" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`14" /> с четырнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`14" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`14" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`15" /> с пятнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`15" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`15" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`16" /> с шестнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`16" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`16" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`17" /> с семнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется, когда в родительском действии происходит определенное событие, и возвращает значение.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`17" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`17" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`2" /> с двумя параметрами для возвращаемого значения и входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`2" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`2" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`3" /> с тремя параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`3" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`3" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`4" /> с четырьмя параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`4" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`4" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`5" /> с пятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`5" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`5" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`6" /> с шестью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`6" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`6" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`7" /> с семью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`7" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`7" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`8" /> с восемью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`8" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`8" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`9" /> с девятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Экземпляр действия.</returns>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`9" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`9" /> из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)">
      <summary>Назначает указанный объект значения указанному объекту переменной.</summary>
      <param name="variable">Объект-переменная без указанного типа, которому можно присвоить объект-значение.</param>
      <param name="value">Объект без указанного типа, который можно присвоить объекту-переменной.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)">
      <summary>Присваивает указанный универсальный объект-значение указанному универсальному объекту-переменной.</summary>
      <param name="variable">Объект-переменная с указанным типом, которому можно присвоить объект-значение.</param>
      <param name="value">Объект с указанным типом, который можно присвоить объекту-переменной.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Добавляет запись отслеживания действия в текущий экземпляр рабочего процесса.</summary>
      <param name="record">Данные, отправляемые участникам отслеживания, когда происходят отслеживаемые события.</param>
    </member>
    <member name="T:System.Activities.NativeActivityFaultContext">
      <summary>Представляет среду выполнения <see cref="T:System.Activities.NativeActivity" /> во время обработки исключения, вызванного дочерним действием.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityFaultContext.HandleFault">
      <summary>Записывает, что исключение проходит обработку.</summary>
    </member>
    <member name="T:System.Activities.NativeActivityMetadata">
      <summary>Представляет набор аргументов, дочерних действий, переменных и делегатов, которые настроенный <see cref="T:System.Activities.NativeActivity" /> вносит в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
      <param name="child">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
      <param name="activityDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список действий реализации в метаданных.</summary>
      <param name="implementationChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список делегатов реализации в метаданных.</summary>
      <param name="implementationDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных реализации в метаданных.</summary>
      <param name="implementationVariable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый объект <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый объект <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.Environment">
      <summary>Возвращает среду <see cref="T:System.Activities.LocationReferenceEnvironment" /> аргументов, переменных, аргументов делегатов или символов действия, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Расположение действия ссылается на среду аргументов, переменных, аргументов делегатов или символов, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <returns>Значение true, если этот экземпляр метаданных равен указанному объекту, в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection">
      <summary>Возвращает коллекцию дочерних действий с использованием отражения.</summary>
      <returns>Коллекция дочерних действий.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection">
      <summary>Возвращает коллекцию делегатов с использованием отражения.</summary>
      <returns>Коллекция делегатов.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection">
      <summary>С помощью отражения возвращает коллекцию переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение true, если ошибки проверки есть, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <returns>Значение true, если два элемента равны, в противном случае ― значение false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <returns>true, если два элемента не равны, в противном случае — значение false.</returns>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве дочерних действий для действия.</summary>
      <param name="children">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве делегатов для действия.</summary>
      <param name="delegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве дочерних действий реализации для действия.</summary>
      <param name="implementationChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве делегатов реализации для действия.</summary>
      <param name="implementationDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию в качестве переменных реализации для действия.</summary>
      <param name="implementationVariables">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве импортированных дочерних действий данного действия.</summary>
      <param name="importedChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве импортированных делегатов данного действия.</summary>
      <param name="importedDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию переменных к переменным действия.</summary>
      <param name="variables">Добавляемые переменные.</param>
    </member>
    <member name="T:System.Activities.NativeActivityTransactionContext">
      <summary>Контекст выполнения для действия <see cref="T:System.Activities.NativeActivity" />, которое передает транзакцию в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)">
      <summary>Передает указанную транзакцию в среду выполнения.</summary>
      <param name="transaction">Транзакция.</param>
    </member>
    <member name="T:System.Activities.NoPersistHandle">
      <summary>Управляет временем существования несохраняемого блока.</summary>
    </member>
    <member name="M:System.Activities.NoPersistHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.NoPersistHandle" />.</summary>
    </member>
    <member name="M:System.Activities.NoPersistHandle.Enter(System.Activities.NativeActivityContext)">
      <summary>Отмечает начало несохраняемого блока.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.NoPersistHandle.Exit(System.Activities.NativeActivityContext)">
      <summary>Отмечает конец несохраняемого блока.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="T:System.Activities.OutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных из действия.</summary>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.OutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <returns>Новый выходной аргумент, ссылающийся на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />.</returns>
      <param name="argumentToReference">Целевой входной/выходной аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.OutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.OutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <returns>Новый выходной аргумент, ссылающийся на заданный целевой аргумент <see cref="T:System.Activities.OutArgument" />.</returns>
      <param name="argumentToReference">Целевой выходной аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
    </member>
    <member name="T:System.Activities.OutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных из действия.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.OutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием заданного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с помощью указанного выражения.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.OutArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого объекта <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>Элемент рабочего процесса, представляющий значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента,</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.OutArgument`1" />, используя указанный контекст действия.</summary>
      <returns>Значение аргумента.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение значения для аргумента <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>Ссылка на расположение, в котором хранится значение аргумента.</returns>
      <param name="context">Контекст действия, содержащий значение переменной.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="expression">Значение аргумента,</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.OutArgument`1" />, построенный с помощью указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Новый аргумент.</returns>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.OutArgument`1" />, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.OverloadGroupAttribute">
      <summary>Предоставляет метод, указывающий, какие сочетания аргументов являются допустимыми для действия.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
      <param name="groupName">Имя группы аргументов.</param>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.GroupName">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
      <returns>Имя группы связанных аргументов.</returns>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.TypeId">
      <summary>Возвращает уникальный идентификатор для этого атрибута.</summary>
      <returns>Уникальный идентификатор для этого атрибута.</returns>
    </member>
    <member name="T:System.Activities.PersistableIdleAction">
      <summary>Указывает действие, которое выполняется, когда рабочий процесс переходит в состояние бездействия, если разрешена сохраняемость.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.None">
      <summary>Указывает, что действия не выполняются.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Unload">
      <summary>Указывает, что приложение <see cref="T:System.Activities.WorkflowApplication" /> должно сохранить и выгрузить рабочий процесс.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Persist">
      <summary>Указывает, что приложение <see cref="T:System.Activities.WorkflowApplication" /> должно сохранить рабочий процесс.</summary>
    </member>
    <member name="T:System.Activities.RegistrationContext">
      <summary>Предоставляет доступ к текущей коллекции свойств выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.RegistrationContext.FindProperty(System.String)">
      <summary>Возвращает свойство выполнения рабочего процесса с указанным именем.</summary>
      <returns>Свойство выполнения рабочего процесса.</returns>
      <param name="name">Имя свойства выполнения рабочего процесса.</param>
    </member>
    <member name="T:System.Activities.RequiredArgumentAttribute">
      <summary>Элемент приложения, к которому допустимо применять аргумент.</summary>
    </member>
    <member name="M:System.Activities.RequiredArgumentAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.RequiredArgumentAttribute" />.</summary>
    </member>
    <member name="P:System.Activities.RequiredArgumentAttribute.TypeId">
      <summary>В случае реализации в производном классе возвращает уникальный идентификатор для этого атрибута <see cref="T:System.Attribute" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeArgument">
      <summary>Описывает характеристики аргумента действия для среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием указанного имени, типа данных и направления аргумента.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием имени, типа данных, направления аргумента и значения, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="isRequired">Значение true показывает, что аргумент <see cref="T:System.Activities.RuntimeArgument" /> должен быть привязан к значению, в противном случае — значение false.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с именем, типом данных, направлением аргумента, значением, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению, и списком имен групп перегруженных вариантов.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="isRequired">Значение true показывает, что аргумент <see cref="T:System.Activities.RuntimeArgument" /> должен быть привязан к значению, в противном случае — значение false.</param>
      <param name="overloadGroupNames">Имена групп перегруженных вариантов, применимых к этому <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием имени, типа данных, направления аргумента и списка имен групп перегруженных вариантов.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="overloadGroupNames">Группы перегруженных вариантов, применимые к этому <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeArgument.Direction">
      <summary>Возвращает направление потока данных через этот <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Направление потока данных через аргумент.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.RuntimeArgument" />, используя указанный контекст действия.</summary>
      <returns>Значение объекта <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">Контекст текущего действия.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)">
      <summary>Возвращает строго типизированное значение аргумента <see cref="T:System.Activities.RuntimeArgument" /> с использованием указанного контекста действия.</summary>
      <returns>Значение объекта <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">Контекст текущего действия.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
    </member>
    <member name="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location" /> для этого аргумента <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Расположение объекта <see cref="T:System.Activities.RuntimeArgument" />.</returns>
      <param name="context">Расположение аргумента.</param>
    </member>
    <member name="P:System.Activities.RuntimeArgument.IsRequired">
      <summary>Возвращает значение, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению.</summary>
      <returns>Значение true, если аргумент <see cref="T:System.Activities.RuntimeArgument" /> должен привязываться к значению, и значение false в противном случае.</returns>
    </member>
    <member name="P:System.Activities.RuntimeArgument.OverloadGroupNames">
      <summary>Возвращает список групп перегруженных вариантов, которым принадлежит этот аргумент <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Список имен групп перегруженных вариантов.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение объекта <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение для <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="T:System.Activities.RuntimeDelegateArgument">
      <summary>Описывает характеристики <see cref="T:System.Activities.DelegateArgument" /> для среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.RuntimeDelegateArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeDelegateArgument" /> с использованием указанного имени, типа данных, направления аргумента и объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="type">Тип данных объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="direction">Одно из значений перечисления, указывающее направление потока данных через аргумент.</param>
      <param name="boundArgument">Аргумент делегата, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.BoundArgument">
      <summary>Возвращает объект <see cref="T:System.Activities.DelegateArgument" />, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Привязанный аргумент, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Direction">
      <summary>Возвращает направление потока данных через <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через аргумент.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Name">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Type">
      <summary>Возвращает тип данных <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Тип данных объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeTransactionHandle">
      <summary>Предоставляет доступ к транзакции времени выполнения в экземпляре рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionHandle" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionHandle" />, используя указанную корневую транзакцию.</summary>
      <param name="rootTransaction">Корневая транзакция.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure">
      <summary>Возвращает или задает значение, которое показывает, должен ли прерываться экземпляр рабочего процесса, если происходит сбой транзакции.</summary>
      <returns>Значение true, если экземпляр рабочего процесса должен прерываться, если происходит сбой транзакции, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)">
      <summary>Выполняет текущую транзакцию времени выполнения.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)">
      <summary>Завершает текущую транзакцию времени выполнения и планирует обратный вызов закладки после завершения закладки.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Обратный вызов закладки, который должен выполняться после завершения транзакции.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <returns>Текущая транзакция.</returns>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <returns>Текущая транзакция.</returns>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <returns>Текущая транзакция времени выполнения.</returns>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с новой транзакцией.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
      <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с существующей транзакцией.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
      <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction">
      <summary>Возвращает или задает значение, которое показывает, подавляется ли эта транзакция времени выполнения.</summary>
      <returns>Значение true, если транзакция времени выполнения подавляется, и значение false в противном случае.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread">
      <summary>Описание этого элемента см. в разделе <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread">
      <summary>Описание этого элемента см. в разделе <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)">
      <summary>Описание этого элемента см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)">
      <summary>Описание этого элемента см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="T:System.Activities.UnhandledExceptionAction">
      <summary>Указывает действие, которое выполняется, когда исключение покидает корневой элемент рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Abort">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowInstance" /> должен прервать рабочий процесс.</summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Cancel">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowInstance" /> должен запланировать отмену корневого действия и возобновить выполнение. </summary>
    </member>
    <member name="F:System.Activities.UnhandledExceptionAction.Terminate">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowInstance" /> должен запланировать завершение корневого действия и возобновить выполнение.</summary>
    </member>
    <member name="T:System.Activities.ValidationException">
      <summary>Исключение, которое вызывается, когда рабочий процесс или действие находится в недопустимом состоянии.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о сформированном исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или ссылка со значением null (Nothing в Visual Basic), если внутреннее исключение не указано.</param>
    </member>
    <member name="T:System.Activities.Variable">
      <summary>Абстрактный базовый класс, от которого наследует вспомогательный класс элементов данных рабочего процесса <see cref="T:System.Activities.Variable`1" />.</summary>
    </member>
    <member name="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)">
      <summary>Инициализирует и возвращает новый экземпляр класса <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Новая переменная.</returns>
      <param name="name">Имя для <see cref="T:System.Activities.Variable" />.</param>
      <param name="type">Тип для <see cref="T:System.Activities.Variable" />.</param>
      <param name="modifiers">Параметры конфигурации для <see cref="T:System.Activities.Variable" />.</param>
    </member>
    <member name="P:System.Activities.Variable.Default">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.ActivityWithResult" />, представляющий значение по умолчанию для данного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Значение по умолчанию для свойства <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.Variable" /> с использованием указанного объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>Значение объекта <see cref="T:System.Activities.Variable" />.</returns>
      <param name="context">Указывает текущий контекст выполнения.</param>
    </member>
    <member name="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location" /> для этого объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Расположение данного объекта <see cref="T:System.Activities.Variable" />.</returns>
      <param name="context">Контекст выполняющегося действия.</param>
    </member>
    <member name="P:System.Activities.Variable.Modifiers">
      <summary>Возвращает или задает значение <see cref="T:System.Activities.VariableModifiers" /> для этой переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Значение модификатора для этой переменной <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.NameCore">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Имя объекта <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение переменной <see cref="T:System.Activities.Variable" /> с использованием указанного контекста <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Указывает текущий контекст выполнения.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.Variable`1">
      <summary>Представляет переменную в рабочем процессе.</summary>
      <typeparam name="T">Тип <see cref="T:System.Type" /> объекта <see cref="T:System.Activities.Variable`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" />.</summary>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с выражением по умолчанию.</summary>
      <param name="defaultExpression">Выражение по умолчанию.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной.</summary>
      <param name="name">Имя переменной.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной и выражением по умолчанию.</summary>
      <param name="name">Имя переменной.</param>
      <param name="defaultExpression">Выражение по умолчанию.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной и значением по умолчанию.</summary>
      <param name="name">Имя переменной.</param>
      <param name="defaultValue">Значение по умолчанию.</param>
    </member>
    <member name="P:System.Activities.Variable`1.Default">
      <summary>Возвращает или задает выражение <see cref="T:System.Activities.Activity`1" />, представляющее значение по умолчанию для данного объекта <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Значение по умолчанию для свойства <see cref="T:System.Activities.Variable`1" />.</returns>
    </member>
    <member name="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение переменной с использованием указанного <see cref="T:System.Activities.ActivityContext" />.</summary>
      <returns>Значение переменной.</returns>
      <param name="context">Контекст выполняющегося действия.</param>
    </member>
    <member name="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location`1" /> для переменной.</summary>
      <returns>Расположение переменной.</returns>
      <param name="context">Контекст действия, содержащий расположение переменной.</param>
    </member>
    <member name="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение переменной.</summary>
      <param name="context">Контекст выполняющегося действия.</param>
      <param name="value">Значение переменной.</param>
    </member>
    <member name="T:System.Activities.VariableModifiers">
      <summary>Задает порядок обработки объектов <see cref="T:System.Activities.Variable" /> в среде выполнения рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.None">
      <summary>Для <see cref="T:System.Activities.Variable" /> не указываются модификаторы.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.ReadOnly">
      <summary>Значение для <see cref="T:System.Activities.Variable" /> нельзя изменять.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.Mapped">
      <summary>Объект <see cref="T:System.Activities.Variable" /> сопоставляется для сохраняемости.</summary>
    </member>
    <member name="T:System.Activities.WorkflowApplication">
      <summary>Предоставляет ведущее приложение для одиночного экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" /> с указанным определением рабочего процесса.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />, использующий указанное определение рабочего процесса и указанные значения аргументов.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
      <param name="inputs">Значения для аргументов, определенных в корневом действии определения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort">
      <summary>Уведомляет среду выполнения рабочего процесса о том, что работа этого экземпляра рабочего процесса будет прервана.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort(System.String)">
      <summary>Уведомляет среду выполнения рабочего процесса о необходимом прерывании этого экземпляра рабочего процесса по указанной причине.</summary>
      <param name="reason">Причина запроса на прерывание.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Aborted">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда прерывается экземпляр рабочего процесса.</summary>
      <returns>Действие, которое вызывается, когда прерывается экземпляр рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Задает значения метаданных экземпляра, которые включаются в первое сохранение нового экземпляра.</summary>
      <param name="writeOnlyValues">Значения метаданных, которые включаются в первое сохранение.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
      <summary>Отменяет экземпляр рабочего процесса в асинхронном режиме с указанным <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <returns>Ссылка на асинхронную операцию отмены.</returns>
      <param name="callback">Метод, вызываемый при завершении операции отмены.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Отменяет экземпляр рабочего процесса в асинхронном режиме с использованием указанного интервала времени ожидания, объекта <see cref="T:System.AsyncCallback" /> и предоставляемого пользователем состояния.</summary>
      <returns>Ссылка на асинхронную операцию отмены.</returns>
      <param name="timeout">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции отмены.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
      <returns>Ссылка на асинхронную операцию.</returns>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> с использованием указанного интервала времени ожидания.</summary>
      <returns>Ссылка на асинхронную операцию.</returns>
      <param name="timeout">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию сохранения.</returns>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию сохранения.</returns>
      <param name="timeout">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для возобновления закладки, используя указанное значение, метод обратного вызова и состояние.</summary>
      <returns>Ссылка на асинхронную операцию возобновления чтения с закладки.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для возобновления закладки, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние.</summary>
      <returns>Ссылка на асинхронную операцию возобновления чтения с закладки.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, метод обратного вызова и состояние.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="callback">Метод, который вызывается после завершения асинхронной операции.</param>
      <param name="state">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
      <param name="callback">Метод, который вызывается после завершения асинхронной операции.</param>
      <param name="state">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
      <summary>Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию запуска.</returns>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию запуска.</returns>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
      <param name="reason">Причина завершения экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
      <summary>Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel">
      <summary>Отменяет экземпляр рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
      <summary>Отменяет экземпляр рабочего процесса, используя указанный интервал времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Completed">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда завершается экземпляр рабочего процесса.</summary>
      <returns>Действие, которое вызывается, когда завершается экземпляр рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции отмены.</summary>
      <param name="result">Асинхронная операция отмены.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции загрузки.</summary>
      <param name="result">Асинхронная операция загрузки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
      <summary>Ожидает завершения асинхронной операции загрузки выполняемого экземпляра.</summary>
      <param name="result">Ссылка на асинхронную операцию загрузки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции сохранения.</summary>
      <param name="result">Асинхронная операция сохранения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
      <summary>Ожидает завершения операции возобновления закладки.</summary>
      <returns>Одно из значений перечисления, которое указывает результаты операции возобновления закладки.</returns>
      <param name="result">Ссылка на асинхронную операцию возобновления чтения с закладки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции выполнения.</summary>
      <param name="result">Асинхронная операция запуска.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
      <summary>Ожидает выполнения отложенной асинхронной операции завершения.</summary>
      <param name="result">Асинхронная операция завершения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции выгрузки.</summary>
      <param name="result">Асинхронная операция выгрузки.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Extensions">
      <summary>Возвращает коллекцию расширений для текущего экземпляра рабочего процесса.</summary>
      <returns>Коллекция объектов.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks">
      <summary>Возвращает коллекцию закладок для экземпляра рабочего процесса.</summary>
      <returns>Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
      <summary>Возвращает коллекцию закладок для экземпляра рабочего процесса, используя указанный интервал времени ожидания.</summary>
      <returns>Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</returns>
      <param name="timeout">Интервал, в течение которого этот метод должен завершить работу до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Id">
      <summary>Возвращает 128-разрядный идентификатор GUID для текущего экземпляра приложения рабочего процесса.</summary>
      <returns>128-разрядный идентификатор GUID.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Idle">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда текущий экземпляр рабочего процесса становится бездействующим.</summary>
      <returns>Действие, которое выполняется, когда экземпляр рабочего процесса становится бездействующим.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.InstanceStore">
      <summary>Возвращает или задает объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</summary>
      <returns>Хранилище экземпляров.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid)">
      <summary>Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
      <summary>Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров, используя указанный интервал времени ожидания.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
      <summary>Загружает экземпляр запускаемого рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
      <summary>Загружает выполняемый экземпляр рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />, используя указанный интервал времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.OnUnhandledException">
      <summary>Возвращает или задает функцию <see cref="T:System.Func`2" />, которая вызывается, когда в текущем экземпляре рабочего процесса обнаруживается необработанное исключение. </summary>
      <returns>Делегат, который вызывается, когда в экземпляре рабочего процесса обнаруживается необработанное исключение.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.PersistableIdle">
      <summary>Возвращает или задает функцию <see cref="T:System.Activities.ActivityFunc" />, которая вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</summary>
      <returns>Функция <see cref="T:System.Activities.ActivityFunc" />, которая вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Запускает операцию для возобновления указанной закладки, используя указанное значение.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
      <summary>Запускает операцию для возобновления указанной закладки, используя указанное значение и интервал времени ожидания.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
      <summary>Запускает операцию для возобновления закладки с указанным именем, используя указанное значение.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
      <summary>Запускает операцию для возобновления закладки с указанным именем, используя указанное значение и интервал времени ожидания.Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <returns>Результат операции возобновления чтения с закладки.</returns>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run">
      <summary>Начинает или возобновляет выполнение экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
      <summary>Начинает или возобновляет выполнение экземпляра рабочего процесса с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Этот метод вызывается для инициализации выполнения вновь созданного экземпляра рабочего процесса.Интервал, в течение которого операция выполнения должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное исключение.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное исключение и интервал времени ожидания.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке и интервал времени ожидания.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload">
      <summary>Сохраняет и выгружает экземпляр рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
      <summary>Сохраняет и выгружает экземпляр рабочего процесса с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Интервал, в течение которого операция выгрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Unloaded">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда выгружается текущий рабочий процесс.</summary>
      <returns>Действие, которое вызывается, когда выгружается экземпляр рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <summary>Предоставляет данные о прерванном экземпляре рабочего процесса.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason">
      <summary>Возвращает исключение, которое содержит сведения о причине прерывания экземпляра рабочего процесса</summary>
      <returns>Исключение, которое содержит сведения о причине прерывания экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedException">
      <summary>Представляет исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за прерывания экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта «исключение прерывания».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «прерывание».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения прерывания.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение прервано».Исключение «приложение прервано» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения прерывания и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения прерывания, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения прерывания.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение прервано».Исключение «приложение прервано» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <summary>Предоставляет сведения об экземпляре рабочего процесса, завершившего выполнение.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState">
      <summary>Возвращает состояние завершения экземпляра рабочего процесса, которое может показывать, что экземпляр завершен успешно, отменен или завершен с ошибкой.</summary>
      <returns>Состояние завершения экземпляра рабочего процесса, которое может показывать, что экземпляр завершен успешно, отменен или завершен с ошибкой.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs">
      <summary>Возвращает словарь, который содержит значения аргументов <see cref="T:System.Activities.OutArgument" /> корневого действия экземпляра рабочего процесса, различаемые по имени аргумента.</summary>
      <returns>Словарь, который содержит значения аргументов <see cref="T:System.Activities.OutArgument" /> корневого действия экземпляра рабочего процесса, различаемые по имени аргумента.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException">
      <summary>Возвращает исключение, связанное с завершением экземпляра рабочего процесса.</summary>
      <returns>Исключение, связанное с завершением экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedException">
      <summary>Представляет исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за выполнения экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение выполнено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения «приложение выполнено».</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выполнено».Исключение «приложение выполнено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения «приложение выполнено».</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выполнено».Исключение «приложение выполнено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationEventArgs">
      <summary>Базовый класс для событий, связанных с объектом <see cref="T:System.Activities.WorkflowApplication" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1">
      <summary>Возвращает коллекцию расширений указанного типа.</summary>
      <returns>Коллекция расширений.</returns>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="P:System.Activities.WorkflowApplicationEventArgs.InstanceId">
      <summary>Уникальный идентификатор экземпляра рабочего процесса.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationException">
      <summary>Служит базовым классом для обработки ошибок, происходящих во время выполнения приложения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Сведения, необходимые для сериализации или десериализации объекта исключения в приложении.</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовым строковым описанием исключения.</summary>
      <param name="message">Описание исключения приложения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения в приложении.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением приложения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения и уникальным идентификатором для него.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения в приложении.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением приложения. </param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в указанном объекте <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведения об исключении.</summary>
      <param name="info">Сведения, необходимые для сериализации или десериализации объекта «исключение прерывания».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplicationException.InstanceId">
      <summary>Возвращает уникальный идентификатор для текущего исключения.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationIdleEventArgs">
      <summary>Хранит сведения об экземпляре рабочего процесса, перешедшего в состояние бездействия.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks">
      <summary>Возвращает доступную только для чтения коллекцию закладок для экземпляра рабочего процесса.</summary>
      <returns>Доступная только для чтения коллекция закладок.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationTerminatedException">
      <summary>Исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за завершения экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение завершено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения и с исключением, которое стало причиной исключения «приложение завершено».</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение завершено».Исключение «приложение завершено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения и уникальным идентификатором для него.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с исключением, которое стало причиной текущего исключения.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение завершено».Исключение «приложение завершено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
      <summary>Предоставляет сведения о необработанном исключении, вызванном в экземпляре рабочего процесса.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource">
      <summary>Возвращает действие, оказавшееся источником необработанного исключения.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId">
      <summary>Возвращает уникальный идентификатор экземпляра действия, ставшего источником необработанного исключения.</summary>
      <returns>Идентификатор экземпляра действия, ставшего источником необработанного исключения.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException">
      <summary>Возвращает объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</summary>
      <returns>Объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationUnloadedException">
      <summary>Исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за выгрузки экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение выгружено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанным описанием исключения в виде текстовой строки.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанным описанием исключения в виде текстовой строки и с указанным исключением, которое находится в причинной связи с исключением <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выгружено».Исключение «приложение выгружено» вызывается в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более точной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанной текстовой строкой описания исключения и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанной текстовой строкой описания исключения, уникальным идентификатором исключения и исключением, ставшим причиной <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выгружено».Исключение «приложение выгружено» вызывается в ответ на внутреннее исключение и может использовать сведения из этого исключения для более точной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowDataContext">
      <summary>Представляет контекст данных среды текущего рабочего процесса и предоставляет мост для передачи аргументов и переменных рабочего процесса в область привязки данных .</summary>
    </member>
    <member name="M:System.Activities.WorkflowDataContext.Dispose">
      <summary>Освобождает ресурсы, используемые экземпляром класса <see cref="T:System.Activities.WorkflowDataContext" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowDataContext.GetProperties">
      <summary>Возвращает коллекцию свойств, управляемых этим объектом <see cref="T:System.Activities.WorkflowDataContext" />.</summary>
      <returns>Коллекция свойств, управляемых этим объектом <see cref="T:System.Activities.WorkflowDataContext" />.</returns>
    </member>
    <member name="E:System.Activities.WorkflowDataContext.PropertyChanged">
      <summary>Происходит при изменении значения свойства.</summary>
    </member>
    <member name="T:System.Activities.WorkflowInspectionServices">
      <summary>Предоставляет методы для работы с метаданными времени выполнения для дерева действий.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)">
      <summary>Кэширует метаданные времени выполнения для указанного дерева действий.</summary>
      <param name="rootActivity">Корневое действие дерева действий.</param>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)">
      <summary>Кэширует метаданные времени выполнения для указанного дерева действий с использованием указанной среды.</summary>
      <param name="rootActivity">Корневое действие дерева действий.</param>
      <param name="hostEnvironment">Среда, связанная с деревом действий.</param>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющий все действия, связанные с входным действием.</summary>
      <returns>Перечисление, которое представляет все действия, связанные с входным действием.</returns>
      <param name="activity">Корневое действие.</param>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)">
      <summary>Возвращает действие с указанным <paramref name="id" /> из указанного дерева действий.</summary>
      <returns>Найденное указанное действие. Если действие не найдено, вызывается исключение <see cref="T:System.ArgumentException" />.</returns>
      <param name="root">Дерево действий, в котором выполняется поиск.</param>
      <param name="id">Идентификатор искомого действия.</param>
    </member>
    <member name="T:System.Activities.WorkflowInvoker">
      <summary>Предоставляет средства для вызова рабочего процесса аналогично вызову метода.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.WorkflowInvoker" />.</summary>
      <param name="workflow">Определение рабочего процесса, который должен вызываться этим экземпляром класса <see cref="T:System.Activities.WorkflowInvoker" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, объектом <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, интервалом времени ожидания, объектом <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного интервала времени ожидания, объекта <see cref="T:System.AsyncCallback" /> и предоставляемого пользователем состояния.</summary>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.CancelAsync(System.Object)">
      <summary>Выполняет отмену рабочего процесса, вызванного с указанным состоянием <paramref name="userState" />.</summary>
      <param name="userState">Маркер для отменяемого рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.EndInvoke(System.IAsyncResult)">
      <summary>Возвращает результаты рабочего процесса, вызванного с помощью одного из перегруженных вариантов <see cref="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="result">Интерфейс <see cref="T:System.IAsyncResult" />, ссылающийся на операцию <see cref="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />, которая запустила рабочий процесс.</param>
    </member>
    <member name="P:System.Activities.WorkflowInvoker.Extensions">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ObjectModel.Collection`1" /> расширений, доступных для рабочих процессов, вызываемых экземпляром <see cref="T:System.Activities.WorkflowInvoker" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> расширений, доступных для рабочих процессов, вызываемых экземпляром <see cref="T:System.Activities.WorkflowInvoker" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke">
      <summary>Вызывает действие, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />, в синхронном режиме.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)">
      <summary>Вызывает рабочий процесс в синхронном режиме с помощью указанного определения рабочего процесса.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса и словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса, словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" /> и интервала ожидания.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием указанного определения рабочего процесса и интервала времени ожидания.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})">
      <summary>Вызывает рабочий процесс в синхронном режиме с помощью указанного определения рабочего процесса.</summary>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.Определение рабочего процесса должно быть производным от <see cref="T:System.Activities.ActivityWithResult" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса и словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием указанного определения рабочего процесса, словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> дополнительных выходных параметров и интервала времени ожидания.</summary>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="additionalOutputs">Словарь дополнительных выходных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса, словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" /> и интервала ожидания.</summary>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает действие, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />, в синхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает действие, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />, в синхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и указанным интервалом времени ожидания.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с указанным интервалом времени ожидания.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync">
      <summary>Вызывает рабочий процесс в асинхронном режиме.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и уникального идентификатора.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и указанным интервалом времени ожидания.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, указанным интервалом времени ожидания и уникальным идентификатором.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного уникального идентификатора.</summary>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным интервалом времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным интервалом времени ожидания и уникальным идентификатором.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="E:System.Activities.WorkflowInvoker.InvokeCompleted">
      <summary>Вызывается, когда рабочий процесс, вызванный одним из перегруженных вариантов <see cref="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />, завершается или отменяется.</summary>
    </member>
    <member name="T:System.Activities.Debugger.IDebuggableWorkflowTree">
      <summary>Предоставляет интерфейс, реализация которого позволяет отладчику рабочего процесса выполнить отладку сериализованного объекта рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot">
      <summary>Возвращает корневой элемент дерева рабочих процессов.</summary>
      <returns>Элемент рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Debugger.LocalsItemDescription">
      <summary>Представляет имя и тип элемента с ранней привязкой, отображающегося в окне локальных переменных отладчика рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Debugger.LocalsItemDescription.#ctor(System.String,System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.LocalsItemDescription" />, используя имя и тип определенного локального элемента.</summary>
      <param name="name">Имя указанного локального элемента с ранней привязкой.</param>
      <param name="type">Тип указанного локального элемента с ранней привязкой.</param>
    </member>
    <member name="P:System.Activities.Debugger.LocalsItemDescription.Name">
      <summary>Возвращает имя локального элемента, к которому было выполнено обращение во время отладки рабочего процесса.</summary>
      <returns>Строка, представляющая имя локального элемента.</returns>
    </member>
    <member name="M:System.Activities.Debugger.LocalsItemDescription.ToString">
      <summary>Возвращает строку, представляющую имя и тип локального элемента с ранней привязкой, отображающегося в окне локальных переменных отладчика рабочего процесса.</summary>
      <returns>Строка, представляющая имя и тип локального элемента.</returns>
    </member>
    <member name="P:System.Activities.Debugger.LocalsItemDescription.Type">
      <summary>Возвращает тип локального элемента, к которому было выполнено обращение во время отладки рабочего процесса.</summary>
      <returns>Строка, представляющая тип локального элемента.</returns>
    </member>
    <member name="T:System.Activities.Debugger.SourceLocation">
      <summary>Определяет указанное местоположение в целевом файле исходного кода.</summary>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.#ctor(System.String,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.SourceLocation" />, указывающий имя файла исходного кода и номер строки в этом файле.</summary>
      <param name="fileName">Файл исходного кода.</param>
      <param name="line">Номер строки в файле исходного кода.</param>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.SourceLocation" />, указывающий имя файла исходного кода и параметры диапазона данных в файле.</summary>
      <param name="fileName">Имя файла исходного кода.</param>
      <param name="startLine">Номер, указывающий строку в файле исходного кода, с которой начинается чтение.</param>
      <param name="startColumn">Номер, указывающий столбец в файле исходного кода, с которого начинается чтение.</param>
      <param name="endLine">Номер, указывающий строку в файле исходного кода, на которой завершается чтение.</param>
      <param name="endColumn">Номер, указывающий столбец в файле исходного кода, на котором завершается чтение.</param>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.EndColumn">
      <summary>Возвращает завершающий столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Целое число, представляющее завершающий столбец в диапазоне столбцов.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.EndLine">
      <summary>Возвращает завершающую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Целое число, представляющее завершающую строку в диапазоне строк.</returns>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, точно ли совпадают настройки столбца и строки файла исходного кода, на которые ссылается объект <see cref="T:System.Activities.Debugger.SourceLocation" />, с параметрами строки и столбца в другом указанном объекте <see cref="T:System.Activities.Debugger.SourceLocation" />.</summary>
      <returns>Логическое значение, указывающее на наличие или отсутствие совпадения.</returns>
      <param name="obj">Указанный объект <see cref="T:System.Activities.Debugger.SourceLocation" />.</param>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.FileName">
      <summary>Возвращает имя целевого файла исходного кода.</summary>
      <returns>Строковый экземпляр с именем целевого файла исходного кода.</returns>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.GetHashCode">
      <summary>Возвращает уникальное значение для представления объекта <see cref="T:System.Activities.Debugger.SourceLocation" />.</summary>
      <returns>Целое число, представляющее хэш-код.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.IsSingleWholeLine">
      <summary>Возвращает значение, указывающее, определяют ли настройки строки и столбца в файле исходного кода одну завершенную строку, а не несколько строк.</summary>
      <returns>Логическое значение, указывающее, что определяют параметры столбца.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.StartColumn">
      <summary>Возвращает первый столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Целое число, представляющее столбец в диапазоне столбцов.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.StartLine">
      <summary>Возвращает первую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Целое число, представляющее строку в диапазоне строк.</returns>
    </member>
    <member name="T:System.Activities.Debugger.SourceLocationProvider">
      <summary>Предоставляет данные <see cref="T:System.Activities.Debugger.SourceLocation" /> для сопоставления корневого действия и его потомков с соответствующими исходными положениями.</summary>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocationProvider.CollectMapping(System.Activities.Activity,System.Activities.Activity,System.Collections.Generic.Dictionary{System.Object,System.Activities.Debugger.SourceLocation},System.String)">
      <summary>Создает коллекцию словарного типа на основе сопоставлений корневого действия и его потомков с соответствующими исходными расположениями.</summary>
      <param name="rootActivity1">Элемент рабочего процесса, представляющий действие, не сопоставленное с исходным местоположением.</param>
      <param name="rootActivity2">Элемент рабочего процесса, подменяющий <paramref name="rootActivity1" />, и имеющий определенные исходные местоположения, с которыми сопоставлены его элементы.</param>
      <param name="mapping">Объект словаря, содержащий корневое действие и его потомков, каждый из которых сопоставлен с исходным местоположением.</param>
      <param name="path">Путь используемого исходного файла.</param>
    </member>
    <member name="T:System.Activities.Debugger.State">
      <summary>Управляет сведениями о свойствах, выделяющих в исходном коде особые точки, которые могут использоваться интерпретатором при пошаговом выполнении или служить точками останова.</summary>
    </member>
    <member name="T:System.Activities.Debugger.StateManager">
      <summary>Управляет отладкой всех действий, сопоставленных инфраструктурой отладки с состоянием.</summary>
    </member>
    <member name="M:System.Activities.Debugger.StateManager.Dispose">
      <summary>Выходит из всех потоков в списке логических потоков, а затем очищает список.</summary>
    </member>
    <member name="M:System.Activities.Debugger.StateManager.Exit(System.Int32)">
      <summary>Выходит из указанного потока и задает для его местоположения в списке логических потоков значение null.</summary>
      <param name="threadIndex">Число, представляющее индекс в списке логических потоков.</param>
    </member>
    <member name="T:System.Activities.Debugger.ThreadWorkerController">
      <summary>Поддерживает создание и выполнение дополнительного потока отладки или острова в выделенном рабочем потоке.Этот тип является служебным классом, используемым платформой, и не предназначен для свободного использования.</summary>
    </member>
    <member name="M:System.Activities.Debugger.ThreadWorkerController.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.ThreadWorkerController" />.</summary>
    </member>
    <member name="M:System.Activities.Debugger.ThreadWorkerController.IslandWorker(System.Activities.Debugger.ThreadWorkerController)">
      <summary>Направляет выполнение в определенный дополнительный поток отладки.</summary>
      <param name="controller">Выполняемый дополнительный поток отладки.</param>
    </member>
    <member name="T:System.Activities.Debugger.VirtualStackFrame">
      <summary>Предоставляет виртуальный кадр стека вызова для интерпретатора.</summary>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.#ctor(System.Activities.Debugger.State)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.VirtualStackFrame" /> с указанным состоянием.</summary>
      <param name="state">В данной реализации это объект, содержащий набор свойств, которые определяют виртуальную среду для кадра в стеке вызова. </param>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.#ctor(System.Activities.Debugger.State,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.VirtualStackFrame" /> с заданными состоянием и локальными переменными.</summary>
      <param name="state">В данной реализации это объект, содержащий набор свойств, которые определяют виртуальную среду для кадра в стеке вызова.</param>
      <param name="locals">Переменные с ранней и поздней привязкой, связанные с состоянием.</param>
    </member>
    <member name="P:System.Activities.Debugger.VirtualStackFrame.Locals">
      <summary>Возвращает локальные переменные для кадра в стеке вызова.</summary>
      <returns>Коллекция пар «ключ-значение», определяющих переменные ранней и поздней привязки, связанные с определенным состоянием.</returns>
    </member>
    <member name="P:System.Activities.Debugger.VirtualStackFrame.State">
      <summary>Возвращает свойства, определяющие виртуальную среду для кадра в стеке вызова.</summary>
      <returns>Объект State, содержащий свойства, определяющие указанную виртуальную среду.</returns>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.ToString">
      <summary>Экземпляр строки сведений о состоянии.</summary>
      <returns>Сведения о состоянии виртуальной среды.</returns>
    </member>
    <member name="T:System.Activities.Debugger.XamlDebuggerXmlReader">
      <summary>Предоставляет функции синтаксического анализа, преобразующие XAML-код разметки в объект или дерево объектов.</summary>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.Xaml.XamlReader,System.IO.TextReader)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> с указанным средством чтения XAML и средством чтения текста.</summary>
      <param name="underlyingReader">Указанный объект средства чтения XAML.</param>
      <param name="textReader">Указанный объект средства чтения текста.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.Xaml.XamlReader,System.Xaml.IXamlLineInfo,System.IO.TextReader)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> с указанным средством чтения XAML, положением средства чтения в документе и средством чтения текста.</summary>
      <param name="underlyingReader">Указанный объект средства чтения XAML.</param>
      <param name="xamlLineInfo">Сведения о строке текста, расположенной на позиции средства чтения.</param>
      <param name="textReader">Указанный объект средства чтения текста.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.CopyAttachedSourceLocation(System.Object,System.Object)">
      <summary>Извлекает значения строки и столбца из указанного объекта действия и назначает их текущему экземпляру средства чтения XAML.</summary>
      <param name="source">Экземпляр действия XAML, из которого выполняется чтение значений исходного местоположения.</param>
      <param name="destination">Экземпляр действия.</param>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndColumnName">
      <summary>Имя вложенного свойства, представляющее завершающий столбец элемента действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndLineName">
      <summary>Имя вложенного свойства, представляющее завершающую строку элемента действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.FileNameName">
      <summary>Имя вложенного свойства, представляющее имя файла для синтаксического анализа.</summary>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetEndColumn(System.Object)">
      <summary>Возвращает значение вложенного свойства, которое указано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndColumnName" /> указанного экземпляра средства чтения XAML.</summary>
      <returns>Объект вложенного свойства.</returns>
      <param name="instance">Экземпляр действия.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetEndLine(System.Object)">
      <summary>Возвращает значение вложенного свойства, которое указано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndLineName" /> указанного экземпляра средства чтения XAML.</summary>
      <returns>Объект вложенного свойства.</returns>
      <param name="instance">Экземпляр действия.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetFileName(System.Object)">
      <summary>Возвращает значение вложенного свойства, которое указано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.FileNameName" /> указанного экземпляра средства чтения XAML.</summary>
      <returns>Объект вложенного свойства.</returns>
      <param name="instance">Экземпляр действия.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetStartColumn(System.Object)">
      <summary>Возвращает значение вложенного свойства, которое указано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartColumnName" /> указанного экземпляра средства чтения XAML.</summary>
      <returns>Объект вложенного свойства.</returns>
      <param name="instance">Экземпляр действия.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetStartLine(System.Object)">
      <summary>Возвращает значение вложенного свойства, которое указано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartLineName" /> указанного экземпляра средства чтения XAML.</summary>
      <returns>Объект вложенного свойства.</returns>
      <param name="instance">Экземпляр действия.</param>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.HasLineInfo">
      <summary>Возвращает значение, указывающее на доступность сведений о строке.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.IsEof">
      <summary>Возвращает значение, указывающее, был ли достигнут базовым средством чтения конец XAML-файл, синтаксический анализ которого выполняется.</summary>
      <returns>Значение true, если конец файла, синтаксический анализ которого выполняется, был достигнут средством чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.LineNumber">
      <summary>Возвращает строку в XAML-файле, который в настоящее время анализируется средством чтения.</summary>
      <returns>Номер строки файла.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.LinePosition">
      <summary>Возвращает местоположение строки в XAML-файле, который в настоящее время анализируется средством чтения XAML.</summary>
      <returns>Позиция строки в файле.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Member">
      <summary>Добавляет начальный элемент документа, который преобразуется в базу элементов XAML.</summary>
      <returns>Начальный элемент XAML-документа.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Namespace">
      <summary>Возвращает путь, который используется в корневом элементе XAML-документа для установления связи между кодом XAML и его схемой.</summary>
      <returns>Объявление пространства имен для использования в корневом элементе XAML-документа.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.NodeType">
      <summary>Возвращает тип узла, чтение которого в настоящее время выполняется в XAML-файле.</summary>
      <returns>Тип узла XAML.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.Read">
      <summary>Возвращает значение, указывающее, был ли достигнут конец XAML-файла во время операции чтения.</summary>
      <returns>Значение true, если конец XAML-файла был достигнут; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.SchemaContext">
      <summary>Возвращает контекст схемы для базового средства чтения XAML.</summary>
      <returns>Сведения о контексте схемы.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetEndColumn(System.Object,System.Object)">
      <summary>Задает значение вложенного свойства, которое задано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndColumnName" /> указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndColumnName" />.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetEndLine(System.Object,System.Object)">
      <summary>Задает значение вложенного свойства, которое задано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndLineName" /> указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndLineName" />.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetFileName(System.Object,System.Object)">
      <summary>Задает значение вложенного свойства, которое задано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.FileNameName" /> указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.FileNameName" />.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetStartColumn(System.Object,System.Object)">
      <summary>Задает значение вложенного свойства, которое задано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartColumnName" /> указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartColumnName" />.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetStartLine(System.Object,System.Object)">
      <summary>Задает значение вложенного свойства, которое задано в поле свойств зависимости <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartLineName" /> указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства <see cref="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartLineName" />.</param>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartColumnName">
      <summary>Имя вложенного свойства, представляющее начальный столбец действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartLineName">
      <summary>Имя вложенного свойства, представляющее начальную строку действия в его XAML-форме.</summary>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Type">
      <summary>Возвращает тип записи в начальном узле XAML.</summary>
      <returns>Тип записи XAML.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Value">
      <summary>Возвращает элемент в узле, чтение которого выполняется в настоящий момент.</summary>
      <returns>Элемент XAML-файла.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult">
      <summary>Содержит результаты выполнения команды <see cref="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand" /> в хранилище экземпляров.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" />.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" /> и инициализирует свойство <see cref="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters" /> с помощью данных в объекте словаря, переданном в качестве параметра.</summary>
      <param name="parameters">Объект словаря, содержащий параметры активации.</param>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" /> и инициализирует свойство <see cref="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters" /> с помощью данных в перечислимом объекте словаря, переданном в качестве параметра.</summary>
      <param name="parameters">Перечислимый объект словаря, содержащий параметры активации.</param>
    </member>
    <member name="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters">
      <summary>Список параметров активации, используемый универсальным узлом при создании узла рабочего процесса.</summary>
      <returns>Объект списка, содержащий параметры активации.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand">
      <summary>Используйте эту команду сохраняемости для регистрации узла службы рабочего процесса в качестве владельца блокировки в базе данных сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand.InstanceOwnerMetadata">
      <summary>Возвращает метаданные о владельце экземпляра (в настоящее время имеется взаимно-однозначное сопоставление с узлом службы) в словаре с объектом XName в качестве ключа и объект <see cref="T:System.Runtime.Persistence.InstanceValue" /> в качестве значения.</summary>
      <returns>Метаданные о владельце экземпляра.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.DeleteWorkflowOwnerCommand">
      <summary>Удаляет данные владельца блокировки из база данных сохраняемости. </summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.DeleteWorkflowOwnerCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.DeleteWorkflowOwnerCommand" />. </summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent">
      <summary>Представляет событие, вызываемое хранилищем экземпляров для уведомления универсальных узлов о существовании доступных для активации экземпляров в базе данных сохраняемости. </summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
      <summary>Представляет событие, вызываемое хранилищем экземпляров рабочих процессов SQL для уведомления узлов рабочих процессов о существовании запускаемых экземпляров в базе данных сохраняемости. </summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand">
      <summary>Команда сохраняемости, загружающая экземпляр рабочего процесса с помощью ключа экземпляра, связанного с экземпляром.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand.AcceptUninitializedInstance">
      <summary>Возвращает значение, указывающее, разрешена ли загрузка экземпляра рабочего процесса в неинициализированном состоянии.</summary>
      <returns>Значение true, если загрузка экземпляра рабочего процесса в неинициализированном состоянии разрешена, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand.AssociateInstanceKeyToInstanceId">
      <summary>Возвращает или задает идентификатор экземпляра, связанного с ключом экземпляра.</summary>
      <returns>Идентификатор экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand.InstanceKeysToAssociate">
      <summary>Возвращает ключи экземпляра, которые должны быть связаны с экземпляром в хранилище сохраняемости.</summary>
      <returns>Ключи экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand.LookupInstanceKey">
      <summary>Возвращает ключ экземпляра, используемый для идентификации загружаемого экземпляра.</summary>
      <returns>Ключ экземпляра.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.LoadWorkflowCommand">
      <summary>Команда сохраняемости, загружающая экземпляр рабочего процесса на основе данных о состоянии экземпляра в хранилище сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.LoadWorkflowCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowCommand.AcceptUninitializedInstance">
      <summary>Возвращает значение, указывающее, разрешена ли загрузка инициализированного экземпляра.</summary>
      <returns>Значение true, если загрузка инициализированного экземпляра разрешена, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand">
      <summary>Представляет команду, выполняемую универсальным узлом в хранилище экземпляров для извлечения параметров активации.Универсальный узел использует эти параметры активации для создания узла рабочего процесса, который в свою очередь загружает запускаемый экземпляр службы.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.SaveWorkflowCommand">
      <summary>Команда сохраняемости, которая позволяет сохранять данные о состоянии экземпляра в хранилище сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.SaveWorkflowCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />. </summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.CompleteInstance">
      <summary>Задает для состояния экземпляра в базе данных сохраняемости значение «Completed» и удаляет данные о состоянии из базы данных, если для свойства <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceCompletionAction" /> не задано значение «Delete Nothing».</summary>
      <returns>Значение true, если состояние экземпляра имеет значение «Completed» и данные состояния удалены; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData">
      <summary>Возвращает данные экземпляра, которые необходимо сохранить в хранилище сохраняемости.Словарь, который содержит имена свойств и их значения.</summary>
      <returns>Словарь, который содержит имена свойств и их значения.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceKeyMetadataChanges">
      <summary>Возвращает словарь, в котором в качестве ключа используется ключ экземпляра, а в качестве значения — словарь с парами «XName и <see cref="T:System.Runtime.Persistence.InstanceValue" />».</summary>
      <returns>Словари с парами «ключ-значение».</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceKeysToAssociate">
      <summary>Содержит ключи экземпляров, которые должны быть связаны с экземпляром.Словарь, который содержит идентификатор GUID, связанный с ключом экземпляра, и метаданные, связанные с этим ключом экземпляра.</summary>
      <returns>Ключи экземпляра, которые должны быть связаны с экземпляром.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceKeysToComplete">
      <summary>Возвращает коллекцию ключей экземпляра, для которых связь с экземпляром должна быть разорвана.</summary>
      <returns>Коллекция ключей экземпляра, для которых связь с экземпляром должна быть разорвана.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceKeysToFree">
      <summary>Возвращает коллекцию ключей экземпляра, которые необходимо удалить из хранилища сохраняемости.</summary>
      <returns>Коллекция ключей экземпляра, которые необходимо удалить из хранилища сохраняемости.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceMetadataChanges">
      <summary>Возвращает словарь, содержащий изменения метаданных экземпляра.</summary>
      <returns>Изменения метаданных экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowCommand.UnlockInstance">
      <summary>Удаляет блокировку экземпляра.Задает для экземпляра значение null для владельца блокировки.</summary>
      <returns>Значение true, если блокировка экземпляра удалена; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand">
      <summary>Представляет команду, выполняемую узлом рабочего процесса в хранилище экземпляров для загрузки запускаемых экземпляров в хранилище сохраняемости в память.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" />.</summary>
    </member>
    <member name="T:System.Activities.ExpressionParser.SourceExpressionException">
      <summary>Представляет исключение, формируемое в случаях, когда невозможно выполнить преобразование текстового выражения в форму исполняемого объекта.</summary>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" />.</summary>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта о возникающем исключении.</param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String,System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с указанным сообщением об ошибке и коллекцией ошибок компилятора.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="errors">Коллекция данных ошибок компилятора.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.</param>
    </member>
    <member name="P:System.Activities.ExpressionParser.SourceExpressionException.Errors">
      <summary>Возвращает перечислимую коллекцию типов ошибок компилятора.</summary>
      <returns>Перечислимая коллекция ошибок компилятора.</returns>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>При переопределении в производном классе задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сведения об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта о возникающем исключении.</param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="T:System.Activities.Expressions.Add`3">
      <summary>Вычисляет сумму двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Add`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Add`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция сложения в проверяемом контексте.</summary>
      <returns>Значение true, если операция сложения выполняется в проверяемом контексте; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.And`3">
      <summary>Выполняет побитовую операцию логического «И» для двух значений. </summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.And`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.And`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.And`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.And`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.AndAlso">
      <summary>Выполняет операцию логического «И» для двух значений.Оба значения преобразуются в тип Boolean и, если оба имеют значение true, выражение возвращает значение true.Если одно или оба значения имеют значение false, выражение возвращает значение false.<see cref="T:System.Activities.Expressions.AndAlso" /> является «сокращенной» версией логического оператора AND, которая возвращает значение false, как только в результате оценки одного из операндов будет получено значение false.</summary>
    </member>
    <member name="M:System.Activities.Expressions.AndAlso.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.AndAlso" />. </summary>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArgumentReference`1">
      <summary> Представляет аргумент <see cref="T:System.Activities.Argument" />, используемый в выражении в качестве левостороннего значения.</summary>
      <typeparam name="T">Тип аргумента, возвращаемого <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentReference`1" /> с заданным именем аргумента.</summary>
      <param name="argumentName">Имя аргумента.</param>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName">
      <summary>Возвращает или задает имя аргумента, ссылка на который должна быть возвращена.</summary>
      <returns>Имя аргумента.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> объекта <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</summary>
      <returns>Имя аргумента, если было задано значение <see cref="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName" />; в противном случае — идентификатор и имя действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArgumentValue`1">
      <summary>Представляет аргумент <see cref="T:System.Activities.Argument" />, используемый в выражении в качестве правостороннего значения.</summary>
      <typeparam name="T">Тип значения, возвращаемого <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentValue`1" /> с заданным именем аргумента.</summary>
      <param name="argumentName">Имя аргумента.</param>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName">
      <summary>Возвращает или задает имя аргумента, значение которого должно быть возвращено.</summary>
      <returns>Имя аргумента.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет объект <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</summary>
      <returns>Имя аргумента, если было задано значение <see cref="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName" />; в противном случае — идентификатор и имя действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArrayItemReference`1">
      <summary>Ссылка на элемент в массиве.</summary>
      <typeparam name="TItem">Тип элементов в массиве.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArrayItemReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArrayItemReference`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemReference`1.Array">
      <summary>Возвращает или задает массив, на элемент которого приведена ссылка.</summary>
      <returns>Массив, на элемент которого приведена ссылка.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemReference`1.Index">
      <summary>Возвращает или задает номер индекса массива, на элемент которого приведена ссылка.</summary>
      <returns>Номер индекса массива, на элемент которого приведена ссылка. </returns>
    </member>
    <member name="T:System.Activities.Expressions.ArrayItemValue`1">
      <summary>Элемент в массиве.</summary>
      <typeparam name="TItem">Тип элементов в массиве. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArrayItemValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArrayItemValue`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Array">
      <summary>Возвращает или задает массив, к которому принадлежит элемент.</summary>
      <returns>Массив, которому принадлежит элемент.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Index">
      <summary>Возвращает или задает номер индекса элемента в массиве.</summary>
      <returns>Индекс элемента в массиве.</returns>
    </member>
    <member name="T:System.Activities.Expressions.As`2">
      <summary>Пытается преобразовать операнд в заданный тип.Если преобразование нельзя выполнить, для результата задается значение null.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.As`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.As`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.As`2.Operand">
      <summary>Возвращает или задает операнд.</summary>
      <returns>Операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Cast`2">
      <summary>Пытается преобразовать операнд в заданный тип.Если преобразование невозможно выполнить, во время выполнения возникает ошибка.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Cast`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Cast`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Cast`2.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция приведения в проверяемом контексте.</summary>
      <returns>Значение true, если операция приведения выполняется в проверяемом контексте; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Cast`2.Operand">
      <summary>Возвращает или задает операнд.</summary>
      <returns>Операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.DelegateArgumentReference`1">
      <summary>Представляет объект <see cref="T:System.Activities.DelegateArgument" />, используемый в выражении в качестве левостороннего значения.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateArgument" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" /> с использованием заданного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.DelegateArgumentValue`1">
      <summary>Представляет объект <see cref="T:System.Activities.DelegateArgument" />, используемый в выражении в качестве правостороннего значения.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateArgument" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" /> с использованием заданного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Divide`3">
      <summary>Вычисляет частное операции деления.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Divide`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Divide`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Divide`3.Left">
      <summary>Возвращает или задает левый операнд.Левый операнд — делитель.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Divide`3.Right">
      <summary>Возвращает или задает правый операнд.Правый операнд — делимое.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Equal`3">
      <summary>Выполняет проверку двух значений на равенство.Если два значения равны, выражение возвращает значение true; в противном случае — значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда. </typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Equal`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Equal`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ExpressionServices">
      <summary>API, используемый для преобразования выражений, учитывающих среду, в дерево действий.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <summary>Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <returns>Преобразованное выражение.</returns>
      <param name="expression">Выражение для преобразования.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <summary>Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <returns>Преобразованное выражение.</returns>
      <param name="expression">Выражение для преобразования.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
      <summary>Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <returns>Значение true, если выражение можно преобразовать; в противном случае — значение false.</returns>
      <param name="expression">Выражение для преобразования.</param>
      <param name="result">Преобразованное выражение.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
      <summary>Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <returns>Значение true, если выражение можно преобразовать; в противном случае — значение false.</returns>
      <param name="expression">Выражение для преобразования.</param>
      <param name="result">Преобразованное выражение.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
    </member>
    <member name="T:System.Activities.Expressions.FieldReference`2">
      <summary>Ссылка на поле.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.FieldReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.FieldReference`2" />. </summary>
    </member>
    <member name="P:System.Activities.Expressions.FieldReference`2.FieldName">
      <summary>Возвращает или задает имя поля, на которое приведена ссылка.</summary>
      <returns>Имя поля, на которое приведена ссылка.</returns>
    </member>
    <member name="P:System.Activities.Expressions.FieldReference`2.Operand">
      <summary>Возвращает или задает ссылку на поле. </summary>
      <returns>Ссылка на поле.</returns>
    </member>
    <member name="T:System.Activities.Expressions.FieldValue`2">
      <summary>Значение поля.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.FieldValue`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.FieldValue`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.FieldValue`2.FieldName">
      <summary>Возвращает или задает имя поля.</summary>
      <returns>Имя поля.</returns>
    </member>
    <member name="P:System.Activities.Expressions.FieldValue`2.Operand">
      <summary>Возвращает или задает значение поля.</summary>
      <returns>Значение поля.</returns>
    </member>
    <member name="T:System.Activities.Expressions.GreaterThan`3">
      <summary>Выполняет проверку отношения между двумя значениями.Если левый операнд больше правого, выражение возвращает значение true.В противном случае возвращается значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда. </typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.GreaterThan`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.GreaterThan`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThan`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThan`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <summary>Выполняет проверку отношения между двумя значениями.Если левый операнд больше или равен правому, выражение возвращает значение true; в противном случае — значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда. </typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.GreaterThanOrEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.IndexerReference`2">
      <summary>Представляет элемент, на который ссылается индексатор объекта, который можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOperand">Тип в индексаторе.</typeparam>
      <typeparam name="TItem">Тип массива индексатора. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.IndexerReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.IndexerReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.IndexerReference`2.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве индексатора.</summary>
      <returns>Индексы элемента в массиве индексатора.</returns>
    </member>
    <member name="P:System.Activities.Expressions.IndexerReference`2.Operand">
      <summary>Возвращает или задает объект, содержащий индексатор.</summary>
      <returns>Объект, содержащий индексатор.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`1">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`1.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`10">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`10.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`10" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`11">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`11.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`11" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`12">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`12.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`12" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`13">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`13.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`13" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`14">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`14.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`14" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`15">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`15.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`15" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`16">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`16.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`16" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument15">
      <summary>Возвращает или задает пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`17">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T16">Тип шестнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`17.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`17" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument15">
      <summary>Возвращает или задает пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument16">
      <summary>Возвращает или задает шестнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Шестнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Вызываемые функции действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`2">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <typeparam name="T">Тип аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`2" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`2" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`2.Argument">
      <summary>Возвращает или задает аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>Аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`2" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`2.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>Вызываемая функция <see cref="T:System.Activities.ActivityFunc`2" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`3">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого выходного аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`4">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`4.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`4" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`5">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`5.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`5" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`6">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`6.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`6" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`7">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`7.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`7" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`8">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`8.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`8" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`9">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается из функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`9.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`9" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeMethod`1">
      <summary>Вызывает открытый метод заданного объекта или типа.</summary>
      <typeparam name="TResult">Тип значения, возвращаемого действием.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeMethod`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeMethod`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments">
      <summary>Аргументы универсального типа содержащегося метода.</summary>
      <returns>Аргументы.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.MethodName">
      <summary>Имя метода, вызываемого при выполнении действия.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.Parameters">
      <summary>Коллекция параметров вызываемого метода.</summary>
      <returns>Коллекция параметров.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously">
      <summary>Возвращает или задает значение, которое показывает, вызван ли метод действия асинхронно.</summary>
      <returns>Значение true при асинхронном выполнении метода; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.TargetObject">
      <summary>Возвращает или задает объект, содержащий вызываемый метод.</summary>
      <returns>Вызываемый метод.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.TargetType">
      <summary>Возвращает или задает тип свойства <see cref="P:System.Activities.Expressions.InvokeMethod`1.TargetObject" />.</summary>
      <returns>Тип целевого объекта.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LambdaReference`1">
      <summary>Представляет лямбда-выражение, используемое в качестве левостороннего значения, поддерживающего привязку аргументов <see cref="F:System.Activities.ArgumentDirection.Out" />.</summary>
      <typeparam name="T">Тип значения, возвращаемого выражением.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaReference`1" />.</summary>
      <param name="locationExpression">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Этот метод всегда возвращает значение true и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания содержательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <returns>Данный метод всегда возвращает значение true.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания описательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <returns>При вызове этого метода возникает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" />.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="T:System.Activities.Expressions.LambdaSerializationException">
      <summary>Исключение, вызываемое при попытке сериализации в формат XAML для <see cref="T:System.Activities.Expressions.LambdaValue`1" /> или <see cref="T:System.Activities.Expressions.LambdaReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" />, используя сериализованные данные.</summary>
      <param name="info">Данные сериализованного объекта о вызываемом исключении.</param>
      <param name="context">Контекстная информация об источнике или назначении. </param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или ссылка со значением null (Nothing в Visual Basic), если внутреннее исключение не указано.</param>
    </member>
    <member name="T:System.Activities.Expressions.LambdaValue`1">
      <summary>Представляет лямбда-выражение, используемое в качестве правостороннего значения, поддерживающего привязку аргументов <see cref="F:System.Activities.ArgumentDirection.In" />.</summary>
      <typeparam name="TResult">Тип значения, возвращаемого выражением.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaValue`1" /> с помощью указанного выражения.</summary>
      <param name="lambdaValue">Лямбда-выражение, представляющее значение <see cref="T:System.Activities.Expressions.LambdaValue`1" />.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Этот метод всегда возвращает значение true и используется совместно методом <see cref="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания содержательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <returns>Данный метод всегда возвращает значение true.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания описательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <returns>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> при вызове.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Activities.Expressions.LessThan`3">
      <summary>Выполняет проверку отношения между двумя значениями.Если левый операнд меньше правого, выражение возвращает значение true.В противном случае возвращается значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда. </typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LessThan`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LessThan`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.LessThan`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.LessThan`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LessThanOrEqual`3">
      <summary>Выполняет проверку отношения между двумя значениями.Если левый операнд меньше или равен правому, выражение возвращает значение true.В противном случае возвращается значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда. </typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата. </typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LessThanOrEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.LessThanOrEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.LessThanOrEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Design.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Literal`1">
      <summary>Представляет действие выражения, возвращающее литеральное значение указанного типа.</summary>
      <typeparam name="T">Тип значения.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Literal`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Literal`1" />, используя указанное значение.</summary>
      <param name="value">Литеральное значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Возвращает значение, указывающее, можно ли преобразовать значение <see cref="T:System.Activities.Expressions.Literal`1" /> в объект типа <see cref="T:System.String" />.</summary>
      <returns>Значение true, если значение может быть преобразовано в объект типа <see cref="T:System.String" />, в противном случае — значение false.</returns>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует объект <see cref="T:System.Activities.Expressions.Literal`1" /> в значение типа <see cref="T:System.String" />.</summary>
      <returns>Литеральное выражение.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ShouldSerializeValue">
      <summary>Возвращает значение, указывающее изменено ли значение свойства <see cref="P:System.Activities.Expressions.Literal`1.Value" /> и должно ли оно быть сериализовано.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.Activities.Expressions.Literal`1.Value" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, представляющую значение литерала.</summary>
      <returns>Строковое представление значения литерала.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Literal`1.Value">
      <summary>Возвращает или задает значение литерального выражения.</summary>
      <returns>Значение литерального выражения.</returns>
    </member>
    <member name="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1">
      <summary>Представляет элемент в многомерном массиве, который можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TItem">Тип элементов в массиве.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array">
      <summary>Возвращает или задает массив, на который ссылается <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</summary>
      <returns>Массив, на который ссылается <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве.</summary>
      <returns>Индекс элемента в массиве.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Multiply`3">
      <summary>Вычисляет произведение двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Multiply`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Multiply`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция умножения в проверяемом контексте.</summary>
      <returns>Значение true, если операция умножения выполняется в проверяемом контексте; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.New`1">
      <summary>Создает новый экземпляр типа, указанного с помощью типа <paramref name="TResult" />.</summary>
      <typeparam name="TResult">Тип создаваемого экземпляра.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.New`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.New`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.New`1.Arguments">
      <summary>Возвращает аргументы, необходимые конструктору.</summary>
      <returns>Аргументы, необходимые конструктору.</returns>
    </member>
    <member name="T:System.Activities.Expressions.NewArray`1">
      <summary>Создает новый экземпляр типа массива, указанного с помощью типа <paramref name="Tresult" />.</summary>
      <typeparam name="TResult">Тип создаваемого экземпляра.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.NewArray`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.NewArray`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.NewArray`1.Bounds">
      <summary>Возвращает границы для всех измерений массива.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Not`2">
      <summary>Вычисляет логическое отрицание выражения значения.</summary>
      <typeparam name="TOperand">Тип выражения значения.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Not`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Not`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Not`2.Operand">
      <summary>Возвращает инвертированное выражение значения.</summary>
      <returns>Инвертированное выражение значения.</returns>
    </member>
    <member name="T:System.Activities.Expressions.NotEqual`3">
      <summary>Выполняет проверку двух значений на неравенство.Если два значения не равны, выражение возвращает значение true; в противном случае — значение false.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда. </typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.NotEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.NotEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.NotEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.NotEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Or`3">
      <summary>Выполняет побитовую операцию логического «ИЛИ» для двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Or`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Or`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.OrElse">
      <summary>Выполняет операцию логического «ИЛИ» для двух значений.Для этого оба операнда приводятся к логическим значениям.Если оба операнда имеют значение false, то выражение возвращает значение false.Если один или оба операнда имеют значение true, выражение возвращает значение true.</summary>
    </member>
    <member name="M:System.Activities.Expressions.OrElse.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.OrElse" />. </summary>
    </member>
    <member name="P:System.Activities.Expressions.OrElse.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="T:System.Activities.Activity" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.OrElse.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="T:System.Activities.Activity" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyReference`2">
      <summary>Ссылка на свойство.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.PropertyReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.Operand">
      <summary>Возвращает или задает ссылку на свойство.</summary>
      <returns>Ссылка на свойство.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.PropertyName">
      <summary>Возвращает или задает имя свойства, на которое приведена ссылка.</summary>
      <returns>Имя свойства, на которое приведена ссылка.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyValue`2">
      <summary>Значение свойства.</summary>
      <typeparam name="TOperand">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyValue`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.PropertyValue`2" />. </summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.Operand">
      <summary>Возвращает или задает значение свойства.</summary>
      <returns>Значение свойства.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.PropertyName">
      <summary>Возвращает или задает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Subtract`3">
      <summary>Вычисляет разницу между двумя значениями.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Subtract`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Subtract`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция вычитания в проверяемом контексте.</summary>
      <returns>Значение true, если операция вычитания выполняется в проверяемом контексте; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypeFieldReference`2">
      <summary>Представляет тип значения поля, которое может быть использовано в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOperand">Тип значения.</typeparam>
      <typeparam name="TResult">Тип поля.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypeFieldReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeFieldReference`2.FieldName">
      <summary>Возвращает или задает имя поля.</summary>
      <returns>Имя поля.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation">
      <summary>Возвращает или задает экземпляр типа значения, содержащегося в поле.</summary>
      <returns>Экземпляр типа значения, содержащегося в поле.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypeIndexerReference`2">
      <summary>Представляет элемент, на который ссылается индексатор, для типа значения, которое можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOperand">Тип значения в индексаторе.</typeparam>
      <typeparam name="TItem">Тип массива индексатора.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве индексатора.</summary>
      <returns>Индексы элемента в массиве индексатора.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeIndexerReference`2.OperandLocation">
      <summary>Возвращает или задает экземпляр типа значения, содержащего индексатор.</summary>
      <returns>Экземпляр типа значения, содержащего индексатор.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypePropertyReference`2">
      <summary>Представляет свойство типа значения, которое может быть использовано в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOperand">Тип значения.</typeparam>
      <typeparam name="TResult">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypePropertyReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypePropertyReference`2.OperandLocation">
      <summary>Возвращает или задает экземпляр типа значения, содержащегося в свойстве.</summary>
      <returns>Экземпляр типа значения, содержащегося в свойстве.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName">
      <summary>Возвращает или задает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Activities.Expressions.VariableReference`1">
      <summary>Представляет объект <see cref="T:System.Activities.Variable" />, используемый в выражении в качестве левостороннего значения.</summary>
      <typeparam name="T">Тип объекта <see cref="T:System.Activities.Expressions.VariableReference`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableReference`1" />, используя указанную переменную.</summary>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> объекта <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
      <returns>Ссылка на переменную.</returns>
    </member>
    <member name="P:System.Activities.Expressions.VariableReference`1.Variable">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.Variable" />, представленный значением <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
      <returns>Переменная.</returns>
    </member>
    <member name="T:System.Activities.Expressions.VariableValue`1">
      <summary>Представляет объект <see cref="T:System.Activities.Variable" />, используемый в выражении в качестве правостороннего значения.</summary>
      <typeparam name="T">Тип объекта <see cref="T:System.Activities.Expressions.VariableValue`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableValue`1" />, используя указанную переменную.</summary>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> объекта <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
      <returns>Значение переменной.</returns>
    </member>
    <member name="P:System.Activities.Expressions.VariableValue`1.Variable">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.Variable" />, представленный значением <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
      <returns>Переменная.</returns>
    </member>
    <member name="T:System.Activities.Hosting.BookmarkInfo">
      <summary>Представляет сведения об именованной закладке <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.BookmarkName">
      <summary>Возвращает имя, связанное с <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Имя, связанное с <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.OwnerDisplayName">
      <summary>Возвращает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.ScopeInfo">
      <summary>Возвращает свойство <see cref="T:System.Activities.Hosting.BookmarkScopeInfo" /> объекта <see cref="T:System.Activities.BookmarkScope" />, связанного с закладкой <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Данные области закладки <see cref="T:System.Activities.BookmarkScope" />, связанной с закладкой <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.BookmarkScopeInfo">
      <summary>Содержит данные идентификации и инициализации объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.Id">
      <summary>Возвращает уникальный идентификатор объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Уникальный идентификатор объекта <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.IsInitialized">
      <summary>Возвращает значение, указывающее, был ли инициализирован объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Activities.BookmarkScope" /> был инициализирован; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.TemporaryId">
      <summary>Возвращает значение, уникально идентифицирующее <see cref="T:System.Activities.BookmarkScope" />, если <see cref="T:System.Activities.BookmarkScope" /> находится в инициализированном состоянии.</summary>
      <returns>Значение, уникально идентифицирующее <see cref="T:System.Activities.BookmarkScope" />, если <see cref="T:System.Activities.BookmarkScope" /> находится в инициализированном состоянии.</returns>
    </member>
    <member name="T:System.Activities.Hosting.IWorkflowInstanceExtension">
      <summary>Этот интерфейс реализуется составными расширениями или расширениями, которым требуется доступ к экземплярам рабочего процесса.Реализации этого интерфейса будут вызываться экземпляром <see cref="T:System.Activities.Hosting.WorkflowInstance" /> до выполнения для предоставления дополнительных расширений или для получения доступа к <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с помощью <see cref="T:System.Activities.Hosting.WorkflowInstanceProxy" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions">
      <summary>При реализации возвращает все дополнительные расширения, необходимые для реализующего класса.</summary>
      <returns>Коллекция дополнительных расширений рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)">
      <summary>Задает указанный целевой <see cref="T:System.Activities.Hosting.WorkflowInstanceProxy" />.</summary>
      <param name="instance">Задаваемый целевой экземпляр рабочего процесса.</param>
    </member>
    <member name="T:System.Activities.Hosting.LocationInfo">
      <summary>Содержит сведения о связанном <see cref="T:System.Activities.Location" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.Name">
      <summary>Возвращает значение <see cref="T:System.String" />, определяющее связанный объект <see cref="T:System.Activities.Location" />.</summary>
      <returns>Связанное местоположение.</returns>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.OwnerDisplayName">
      <summary>Возвращает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Необязательное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.Value">
      <summary>Возвращает значение, хранящееся в связанном объекте <see cref="T:System.Activities.Location" />.</summary>
      <returns>Значение, хранящееся в связанном <see cref="T:System.Activities.Location" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.SymbolResolver">
      <summary>Объект <see cref="T:System.Activities.Hosting.SymbolResolver" /> является расширением, предоставляющим узел <see cref="T:System.Activities.LocationReferenceEnvironment" />, содержащий объекты, которые можно идентифицировать с помощью строкового имени.Значения, предоставленные с помощью <see cref="T:System.Activities.Hosting.SymbolResolver" />, не являются сохраняемыми.Сохраняемость значений <see cref="T:System.Activities.Hosting.SymbolResolver" /> выполняется узлом.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет символ с помощью указания пары «ключ-значение».</summary>
      <param name="item">Добавляемый символ.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)">
      <summary>Добавляет символ с помощью указания имени и значения символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="value">Значение символа, на который дана ссылка.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)">
      <summary>Добавляет символ с помощью указания имени, значения и типа символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="value">Значение символа, на который дана ссылка.</param>
      <param name="type">Тип значения символа.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)">
      <summary>Добавляет символ с помощью указания имени и типа символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="type">Тип значения символа.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.LocationReferenceEnvironment" />, обеспечивающий доступ <see cref="T:System.Activities.Hosting.SymbolResolver" /> к ссылкам на значения символов, представленным объектами <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Ссылка на расположение, обеспечивающая доступ <see cref="T:System.Activities.Hosting.SymbolResolver" /> к ссылкам на значения символов, представленным объектами <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Clear">
      <summary>Удаляет все символы из <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Activities.Hosting.SymbolResolver" /> указанный символ.</summary>
      <returns>Значение true, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит указанный символ; в противном случае — значение false.</returns>
      <param name="item">Символ, представленный парой «ключ-значение», который необходимо найти в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Activities.Hosting.SymbolResolver" /> символ с указанным ключом.</summary>
      <returns>Значение true, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит символ с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Ключ символа, который требуется найти.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует символы, содержащиеся в <see cref="T:System.Activities.Hosting.SymbolResolver" />, в существующий одномерный массив пар «ключ-значение», начиная с указанного индекса массива.</summary>
      <param name="array">Одномерный массив пар «ключ-значение», в который необходимо скопировать символы.Индекс в массиве должен начинаться с нуля.</param>
      <param name="arrayIndex">Начинающийся с ноля индекс в целевом массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Count">
      <summary>Возвращает число символов, содержащихся в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Число символов, содержащихся в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции пар «ключ-значение», где ключами являются имена символов, а значениями — значения символов.</summary>
      <returns>Перечислитель, который последовательно просматривает коллекцию пар «ключ-значение».</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступен ли словарь символов в <see cref="T:System.Activities.Hosting.SymbolResolver" /> только для чтения.</summary>
      <returns>false.</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Item(System.String)">
      <summary>Возвращает или задает значение элемента, связанного с указанным ключом.</summary>
      <returns>Значение элемента, связанного с указанным ключом.</returns>
      <param name="key">Ключ элемента.</param>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Keys">
      <summary>Возвращает коллекцию всех ключей в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Коллекция всех ключей в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет указанный символ из <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Возвращает значение true, если символ был успешно найден и удален, и значение false — в противном случае.Данный метод возвращает значение false, если символ отсутствует.</returns>
      <param name="item">Символ, который необходимо удалить.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Remove(System.String)">
      <summary>Удаляет символ из <see cref="T:System.Activities.Hosting.SymbolResolver" /> с помощью указанного ключа.</summary>
      <returns>Возвращает значение true, если символ был успешно найден и удален, и значение false — в противном случае.Данный метод возвращает значение false, если символ отсутствует.</returns>
      <param name="key">Ключ символа, который требуется удалить.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции пар «ключ-значение», где ключами являются имена символов, а значениями — значения символов.</summary>
      <returns>Перечислитель, который последовательно просматривает коллекцию пар «ключ-значение».</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, связанное с заданным ключом.</summary>
      <returns>Значение true, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит элемент с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Возвращаемое значение, связанное с указанном ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра значения.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Values">
      <summary>Возвращает коллекцию всех значений в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Коллекция всех значений в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstance">
      <summary>Объект <see cref="T:System.Activities.Hosting.WorkflowInstance" /> представляет упрощенную среду выполнения для каждого экземпляра, создаваемую для выполнения программы рабочего процесса.Он может быть создан для создания нового экземпляра рабочего процесса или из существующего состояния экземпляра.API, предоставляющие класс <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />, являются минимальным набором элементов управления времени выполнения, с помощью которых могут быть реализованы операции более высокого уровня.Этот набор API предоставляет доступ ко всем функциям среды выполнения.<see cref="T:System.Activities.Hosting.WorkflowInstance" /> является абстрактным классом и зависит от реализации узлом своих абстрактных методов для обеспечения таких функций узла, как синхронизация, сохраняемость, отслеживание и расширения.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с использованием указанного определения рабочего процесса.</summary>
      <param name="workflowDefinition">Действие, определяющее рабочий процесс.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.Controller">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для этого <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Экземпляр контроллера для данного экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
      <summary>Вызывает метод <see cref="M:System.Disposable.Dispose" /> для всех расширений, реализующих интерфейс <see cref="T:System.IDisposable" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
      <summary>Возвращает расширение указанного типа.</summary>
      <returns>Расширение указанного типа.</returns>
      <typeparam name="T">Тип расширения для поиска.</typeparam>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
      <summary>Возвращает все расширения, найденные для указанного типа.</summary>
      <returns>Все расширения, найденные для указанного типа.</returns>
      <typeparam name="T">Тип расширения для поиска.</typeparam>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
      <summary>Возвращает или задает корневую среду для аргументов и переменных экземпляра рабочего процесса.</summary>
      <returns>Корневая среда для аргументов и переменных экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.Id">
      <summary>Возвращает уникальный идентификатор экземпляра рабочего процесса.</summary>
      <returns>Уникальный идентификатор экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
      <summary>Вызывается узлом для инициализации экземпляра рабочего процесса со значениями аргументов и свойствами выполнения.</summary>
      <param name="workflowArgumentValues">Входные параметры рабочего процесса, различаемые по имени аргумента.</param>
      <param name="workflowExecutionProperties">Список выполняемых свойств рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
      <summary>Вызывается узлом для инициализации состояния среды выполнения экземпляра рабочего процесса.</summary>
      <param name="deserializedRuntimeState">Состояние среды выполнения, используемой для выполнения рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
      <summary>Возвращает значение, показывающее, был ли инициализирован экземпляр рабочего процесса.</summary>
      <returns>Значение true, если экземпляр рабочего процесса был инициализирован; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
      <summary>Вызывает среду выполнения рабочего процесса для уведомления узла о том, что новые ключи экземпляра должны быть связаны с этим экземпляром.</summary>
      <returns>Ссылка на асинхронную операцию связанных ключей.</returns>
      <param name="keys">Ключи экземпляра, которые необходимо связать с этим экземпляром рабочего процесса.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов, запрашивающий сохранение узлом отложенных записей отслеживания на диск для участников отслеживания.</summary>
      <returns>Состояние текущей операции отслеживания.</returns>
      <param name="callback">Метод, вызываемый при завершении операции отслеживания.</param>
      <param name="state">Сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов узла для сохранения рабочего процесса.</summary>
      <returns>Ссылка на текущую операцию сохранения.</returns>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о начале операции возобновления закладки.</summary>
      <returns>Ссылка на асинхронную операцию возобновления.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
      <summary>Вызывает среду выполнения рабочего процесса для уведомления узла о том, что определенный набор ключей экземпляра больше не должен быть связан с этим экземпляром.</summary>
      <param name="keys">Список ключей, связь с которыми необходимо разорвать.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции связанных ключей.</summary>
      <param name="result">Ссылка на асинхронную операцию связанных ключей.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции сохранения записей отслеживания на диск. </summary>
      <param name="result">Состояние асинхронной операции сохранения на диск записей отслеживания.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции сохранения.</summary>
      <param name="result">Ссылка на асинхронную операцию сохранения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции возобновления закладки.</summary>
      <returns>Одно из значений перечисления, указывающее результат выполнения операции возобновления <see cref="T:System.Activities.Bookmark" />.</returns>
      <param name="result">Ссылка на асинхронную операцию возобновления закладки.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла об изменении состояния экземпляра рабочего процесса с «выполняется» на «приостановлено».</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о возникновении необработанного исключения в экземпляре рабочего процесса.</summary>
      <param name="exception">Необработанное исключение.</param>
      <param name="source">Действие, вызвавшее исключение.</param>
      <param name="sourceInstanceId">Уникальный идентификатор <see cref="T:System.Activities.ActivityInstance" />, представляющий действие, вызвавшее исключение.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о запросе операции прерывания для экземпляра рабочего процесса.</summary>
      <param name="reason">Причина прерывания экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
      <summary>Вызывается узлом для регистрации указанного диспетчера расширений, проверки наличия всех необходимых расширений и инициализации коллекции используемых расширений.</summary>
      <param name="extensionManager">Регистрируемый диспетчер расширений.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
      <summary>Возвращает значение, указывающее, поддерживает ли узел сопоставление <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> с исполняемым экземпляром.</summary>
      <returns>Значение true, если узел поддерживает сопоставление <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> с экземпляром рабочего процесса; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
      <summary>Возвращает или задает тип <see cref="T:System.Threading.SynchronizationContext" />, используемый для планирования экземпляра рабочего процесса.</summary>
      <returns>Контекст синхронизации, используемый для планирования экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
      <summary>Вызывает исключение <see cref="T:System.InvalidOperationException" />, если экземпляр рабочего процесса был инициализирован со свойством <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
      <summary>Возвращает определение рабочего процесса для экземпляра рабочего процесса.</summary>
      <returns>Определение рабочего процесса для экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl">
      <summary>Обеспечивает для классов, производных от <see cref="T:System.Activities.Hosting.WorkflowInstance" />, методы для доступа к функциям среды выполнения рабочих процессов.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort">
      <summary>Прерывает экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)">
      <summary>Прерывает экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с использованием указанного исключения.</summary>
      <param name="reason">Причина прерывания экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается средой выполнения рабочего процесса для начала асинхронной отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <returns>Состояние текущей операции отслеживания.</returns>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
      <param name="callback">Метод, вызываемый при завершении операции отслеживания.</param>
      <param name="state">Сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для завершения операции отслеживания.</summary>
      <param name="result">Состояние асинхронной операции отслеживания.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли текущий объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> указанному объекту.</summary>
      <returns>Значение true, если заданный объект равен текущему объекту <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />, в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)">
      <summary>Вызывается средой выполнения рабочего процесса для отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason">
      <summary>Возвращает исключение, вызвавшее прерывание экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Возвращает исключение, вызвавшее прерывание экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" /> или значение null, если экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был прерван.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks">
      <summary>Возвращает коллекцию доступных закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Коллекция закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)">
      <summary>Возвращает коллекцию доступных закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, созданного в указанной области <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Коллекция закладок, созданная в указанной области <see cref="T:System.Activities.BookmarkScope" />.</returns>
      <param name="scope">Проверяемая область закладки.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, включая выходные данные рабочего процесса и исключение завершения процесса.</summary>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
      <param name="outputs">По завершении выполнения метода <paramref name="outputs" /> содержит словарь аргументов <see cref="F:System.Activities.ArgumentDirection.Out" /> рабочего процесса, ключом которых является имя аргумента.Этот параметр передается неинициализированным.</param>
      <param name="terminationException">После возврата из этого метода <paramref name="terminationException" /> содержит исключение, которое вызвало завершение экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, или значение null, если экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был завершен.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, включая исключение завершения процесса.</summary>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
      <param name="terminationException">После возврата из этого метода <paramref name="terminationException" /> содержит исключение, которое вызвало завершение экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, или значение null, если экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был завершен.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <returns>Хэш-код для этого объекта <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables">
      <summary>Возвращает словарь переменных в текущей области, указанной с помощью <see cref="F:System.Activities.VariableModifiers.Mapped" />.</summary>
      <returns>Словарь сопоставленных переменных, находящихся в настоящее время в области.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords">
      <summary>Вызывается средой выполнения рабочего процесса для определения наличия у этого экземпляра рабочего процесса отложенных записей отслеживания и участника отслеживания.</summary>
      <returns>Значение true при наличии у экземпляра рабочего процесса отложенных записей отслеживания и участника отслеживания, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable">
      <summary>Возвращает значение, указывающее, находится ли экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> в состоянии, в котором он может быть сохранен.</summary>
      <returns>Значение true, если экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> можно сохранить; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <returns>Возвращает значение true, если два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> равны; в противном случае — значение false. </returns>
      <param name="left">Первый объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <param name="right">Второй объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <returns>Возвращает значение true, если два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> не равны; в противном случае — значение false.</returns>
      <param name="left">Первый объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <param name="right">Второй объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable">
      <summary>Запрашивает приостановку средой выполнения рабочего процесса <see cref="T:System.Activities.Hosting.WorkflowInstance" /> на следующем этапе выполнения, в котором возможно сохранение.Обратите внимание, что очередь планировщика на этом этапе может быть не пуста.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization">
      <summary>Подготавливает состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" /> к сериализации.</summary>
      <returns>Состояние экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause">
      <summary>Запрашивает прекращение работы планировщика.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run">
      <summary>Дает указание экземпляру <see cref="T:System.Activities.Hosting.WorkflowInstance" /> начать выполнение.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)">
      <summary>Планирует возобновление закладки с указанным значением.</summary>
      <returns>Одно из значений перечисления, которое указывает результат выполнения операции планирования <see cref="T:System.Activities.Bookmark" />.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)">
      <summary>Планирует возобновление закладки <see cref="T:System.Activities.Bookmark" /> из указанной области <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Одно из значений перечисления, которое указывает результат выполнения операции планирования <see cref="T:System.Activities.Bookmark" />.</returns>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="scope">Экземпляр <see cref="T:System.Activities.Bookmark" />, с помощью которого был создан экземпляр <see cref="T:System.Activities.Bookmark" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel">
      <summary>Планирует отмену экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State">
      <summary>Возвращает состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Одно из значений из перечисления, указывающее состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)">
      <summary>Переводит экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> в завершающее состояние <see cref="F:System.Activities.ActivityInstanceState.Faulted" /> с помощью указанного исключения.</summary>
      <param name="reason">Исключение, являющееся причиной завершения экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)">
      <summary>Вызывается средой выполнения рабочего процесса для добавления указанной отложенной записи к списку отложенной записи.</summary>
      <param name="instanceRecord">Добавляемая запись отслеживания.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled">
      <summary>Вызывается средой выполнения рабочего процесса для определения включения отслеживания в этом экземпляре рабочего процесса.</summary>
      <returns>Значение true, если отслеживание в этом экземпляре рабочего процесса включено, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceExtensionManager">
      <summary>Управляет коллекцией расширений экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add``1(System.Func{``0})">
      <summary>Добавляет расширение в коллекцию расширений с помощью указанного <see cref="T:System.Func`1" />.</summary>
      <param name="extensionCreationFunction">Метод, создающий расширение.</param>
      <typeparam name="T">Тип добавляемого расширения.</typeparam>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(System.Object)">
      <summary>Добавляет указанное расширение в коллекцию расширений.</summary>
      <param name="singletonExtension">Добавляемое расширение.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly">
      <summary>Помечает коллекцию расширений как доступную только для чтения.</summary>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceProxy">
      <summary>Класс, разрешающий расширениям <see cref="T:System.Activities.Hosting.IWorkflowInstanceExtensions" /> доступ к узлу службы рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <summary>Асинхронно возобновляет выполнение рабочего процесса с помощью указанной закладки, значения, метода обратного вызова и данных состояния, предоставленных пользователем.</summary>
      <returns>Ссылка на асинхронную операцию.</returns>
      <param name="bookmark">Закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку.</param>
      <param name="callback">Метод, вызываемый при завершении асинхронной операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно возобновляет выполнение рабочего процесса с помощью указанной закладки, значения, интервала времени ожидания, метода обратного вызова и данных состояния, предоставленных пользователем. </summary>
      <returns>Ссылка на асинхронную операцию.</returns>
      <param name="bookmark">Закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.EndResumeBookmark(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции <see cref="Overload:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Activities.BookmarkResumptionResult" />.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, который ссылается на операцию восстановления.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstanceProxy.Id">
      <summary>Возвращает идентификатор экземпляра рабочего процесса.</summary>
      <returns>Идентификатор экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstanceProxy.WorkflowDefinition">
      <summary>Получает определение рабочего процесса.</summary>
      <returns>Определение рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceState">
      <summary>Задает состояние объекта <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Idle">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> находится в состоянии бездействия.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Runnable">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> может быть запущен.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Complete">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> завершен.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Aborted">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> прерван.</summary>
    </member>
    <member name="T:System.Activities.Persistence.PersistenceIOParticipant">
      <summary>Класс, производный от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />, с методами, выполняющими операции ввода и вывода помимо сохранения и загрузки экземпляров рабочего процесса с помощью процесса сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" />.</summary>
      <param name="isSaveTransactionRequired">Значение true, если для операции сохранения необходима транзакция.Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было задано значение true, то при вызове метода BeginOnSave обязательно будет задан объект Transaction.Current.Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</param>
      <param name="isLoadTransactionRequired">Значение true, если для операции загрузки необходима транзакция.Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было установлено значение true, то при вызове метода BeginOnLoad обязательно будет задан объект Transaction.Current.Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.Abort">
      <summary>Прерывает выполнение отложенной операции ввода-вывода (загрузки или сохранения).</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для загрузки дополнительного состояния совместно с загрузкой экземпляра из хранилища экземпляров.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="readWriteValues">Словарь значений, доступных для чтения и записи, загружаемых поставщиком сохраняемости.Соответствует набору значений для чтения и записи, передаваемых методу BeginOnSave в последнем сеансе сохранения для этого экземпляра.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания. </param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции загрузки.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для сохранения дополнительного состояния совместно с сохранением экземпляра в хранилище экземпляров.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="readWriteValues">Словарь значений, доступных для чтения и записи, сбор которых выполняется на этапах CollectValues и MapValues.</param>
      <param name="writeOnlyValues">Словарь значений, доступных только на запись, сбор которых выполняется на этапах CollectValues и MapValues.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания. </param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию загрузки.</summary>
      <param name="result">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию сохранения.</summary>
      <param name="result">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.Activities.Persistence.PersistenceParticipant">
      <summary>Этот класс позволяет использовать объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в процессе сохранения.Участник сохраняемости, являющийся производным от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> или класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> (производный класс от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />), реализует абстрактные методы, а затем добавляет экземпляр класса как расширение экземпляра рабочего процесса.Объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> выполняют поиск таких расширений при сохранении экземпляра и в соответствующее время вызывают соответствующие методы.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
      <summary>Узел вызывает этот метод для нестандартного участника сохраняемости, собирающего значения, доступные для чтения и записи, и значения, доступные только на запись, которые необходимо сохранить. </summary>
      <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
      <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Узел вызывает этот метод после завершения сбора значений на первом этапе.Узел перенаправляет два словаря значений, доступных только для чтения, собранных от всех участников сохраняемости на первом этапе (этапе CollectValues), этому методу для сопоставления.Узел добавляет значения из словаря, возвращаемого этим методом, в коллекцию значений, доступных только на запись.</summary>
      <returns>Словарь, содержащий дополнительные значения, доступные только на запись, которые необходимо сохранить.</returns>
      <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
      <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Узел вызывает этот метод и передает все загруженные значения из коллекции <see cref="P:System.Activities.Persistence.SaveWorkflowCommand.InstanceData" /> (заполненной <see cref="T:System.Activities.Persistence.LoadWorkflowCommand" /> или <see cref="T:System.Activities.Persistence.LoadWorkflowByInstanceKeyCommand" />) в качестве параметра словаря. </summary>
      <param name="readWriteValues">Значения, доступные для чтения и записи, загруженные из хранилища сохраняемости.Этот словарь соответствует словарю значений, доступных для чтения и записи, сохраняемых в последнем сеансе сохраняемости.</param>
    </member>
    <member name="T:System.Activities.Statements.AddToCollection`1">
      <summary>Добавляет элемент в указанную коллекцию.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.AddToCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.AddToCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.AddToCollection`1.Collection">
      <summary>Коллекция, которая получает новый элемент.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.AddToCollection`1.Item">
      <summary>Элемент для добавления в указанную коллекцию.</summary>
      <returns>Элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Assign">
      <summary>Задает значения объекта <see cref="T:System.Activities.Argument" /> из рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Statements.Assign.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Assign" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Assign.To">
      <summary>Указывает аргумент <see cref="T:System.Activities.Argument" />, которому действие назначает значение <see cref="P:System.Activities.Statements.Assign.Value" />.</summary>
      <returns>Заданный объект <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Assign.Value">
      <summary>Указывает присваиваемое значение.</summary>
      <returns>Присваиваемое значение.</returns>
    </member>
    <member name="T:System.Activities.Statements.Assign`1">
      <summary>Действие <see cref="T:System.Activities.Statements.Assign" />, которое используется для установки значений <see cref="T:System.Activities.Argument" /> из рабочего процесса.</summary>
      <typeparam name="T">Тип присвоенного значения.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Assign`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Assign`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Assign`1.To">
      <summary>Указывает аргумент <see cref="T:System.Activities.Argument" />, которому действие назначает значение <see cref="P:System.Activities.Statements.Assign.Value" />.</summary>
      <returns>Заданный объект <see cref="T:System.WorkflowModel.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Assign`1.Value">
      <summary>Указывает присваиваемое значение.</summary>
      <returns>Присваиваемое значение.</returns>
    </member>
    <member name="T:System.Activities.Statements.CancellationScope">
      <summary>Связывает логику отмены в виде объекта <see cref="T:System.Activities.Activity" /> с главным путем выполнения, который также выражен в виде объекта <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.CancellationScope.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.CancellationScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.Body">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity" />, содержащийся в объекте <see cref="T:System.Activities.Statements.CancellationScope" />, который представляет главный путь выполнения.</summary>
      <returns>Главный путь выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.CancellationHandler">
      <summary>Объект <see cref="T:System.Activities.Activity" />, который выполняется в случае отмены события.</summary>
      <returns>Обработчик отмены.</returns>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.Variables">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Activities.Activity" />, связанных с объектом <see cref="T:System.Activities.Statements.CancellationScope" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Activities.Activity" />, связанных с объектом <see cref="T:System.Activities.Statements.CancellationScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Catch">
      <summary>Содержит действия, которые выполняются после вызова исключения в соответствующем блоке Try действия <see cref="T:System.Activities.Statements.TryCatchFinally" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Catch.ExceptionType">
      <summary>Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch" />.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="T:System.Activities.Statements.Catch`1">
      <summary>Содержит действия, которые выполняются после вызова исключения в соответствующем блоке Try действия <see cref="T:System.Activities.Statements.TryCatchFinally" />.</summary>
      <typeparam name="TException">Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Catch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Catch`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Catch`1.Action">
      <summary>Обработчик для перехваченного исключения. </summary>
      <returns>Операция действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.Catch`1.ExceptionType">
      <summary>Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch" />.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="T:System.Activities.Statements.ClearCollection`1">
      <summary>Очищает указанную коллекцию всех элементов.</summary>
      <typeparam name="T">Тип элементов в параметре <see cref="P:System.Activities.Statements.ClearCollection`1.Collection" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ClearCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="M:System.Activities.Statements.ClearCollection`1.#ctor" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ClearCollection`1.Collection">
      <summary>Коллекция, содержимое которой очищается.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="T:System.Activities.Statements.CompensableActivity">
      <summary>Действие, которое поддерживает компенсацию своих дочерних действий.</summary>
    </member>
    <member name="M:System.Activities.Statements.CompensableActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.Body">
      <summary>Возвращает или задает действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.CancellationHandler">
      <summary>Возвращает или задает действие, запланированное в случае отмены действия.</summary>
      <returns>Действие, запланированное при отмене действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.CompensationHandler">
      <summary>Возвращает или задает действие, запланированное при выполнении компенсации для объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное при выполнении компенсации для объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.ConfirmationHandler">
      <summary>Возвращает или задает действие, запланированное при выполнении подтверждения для этого объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное при выполнении подтверждения для этого объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.Variables">
      <summary>Возвращает коллекцию объектов <see cref="T:System.WorkflowModel.Variable" /> для данного экземпляра <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.WorkflowModel.Variable" /> для данного экземпляра <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Compensate">
      <summary>Действие используется для явного вызова обработчика компенсации объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Compensate.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Compensate" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Compensate.Target">
      <summary>Возвращает или задает <see cref="T:System.WorkflowModel.InArgument`1" />, где содержится <see cref="T:System.Activities.Statements.CompensationHandle" /> для данного действия <see cref="T:System.Activities.Statements.Compensate" />.</summary>
      <returns>
Объект <see cref="T:System.WorkflowModel.InArgument`1" />, который содержит объект <see cref="T:System.Activities.Statements.CompensationHandle" /> для этого объекта <see cref="T:System.Activities.Statements.Compensate" />.
</returns>
    </member>
    <member name="T:System.Activities.Statements.CompensationToken">
      <summary>Предоставляет средства для явного подтверждения или компенсации объекта <see cref="T:System.Activities.Statements.CompensableActivity" /> сразу после того, как свойство <see cref="P:System.Activities.Statements.CompensableActivity.Body" /> объекта <see cref="T:System.Activities.Statements.CompensableActivity" /> завершается успешно.</summary>
    </member>
    <member name="T:System.Activities.Statements.Confirm">
      <summary>Действие используется для явного вызова обработчика подтверждения объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Confirm.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Confirm" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Confirm.Target">
      <summary>Возвращает или задает <see cref="T:System.WorkflowModel.InArgument`1" />, где содержится <see cref="T:System.Activities.Statements.CompensationHandle" /> для данного действия <see cref="T:System.Activities.Statements.Confirm" />.</summary>
      <returns>Объект <see cref="T:System.WorkflowModel.InArgument`1" />, в котором содержится объект <see cref="T:System.Activities.Statements.CompensationHandle" /> для данного действия <see cref="T:System.Activities.Statements.Confirm" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.CreateBookmarkScope">
      <summary>Создает <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.CreateBookmarkScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.CreateBookmarkScope" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Delay">
      <summary>Создает таймер с заданной длительностью с помощью объекта <see cref="T:System.Activities.Statements.TimerExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Delay.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Delay" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Delay.Duration">
      <summary>Длительность таймера, который создает действие <see cref="T:System.Activities.Statements.Delay" />.</summary>
      <returns>Длительность таймера.</returns>
    </member>
    <member name="T:System.Activities.Statements.DeleteBookmarkScope">
      <summary>Удаляет объект <see cref="T:System.Activities.BookmarkScope" />, на который ссылается свойство <see cref="P:System.Activities.Statements.DeleteBookmarkScope.Scope" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DeleteBookmarkScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.DeleteBookmarkScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.DeleteBookmarkScope.Scope">
      <summary>Возвращает или задает связанный объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Связанный объект <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.DoWhile">
      <summary>Циклическое действие, которое выполняет содержащиеся действия хотя бы один раз, пока условие не примет значение false.</summary>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <param name="condition">Условие, в соответствии с которым действие продолжает повторяться.</param>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <param name="condition">Условие, в соответствии с которым действие продолжает повторяться.</param>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Body">
      <summary>Дочернее действие, которое выполняется при каждой итерации.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Condition">
      <summary>Объект <see cref="T:System.Activities.Activity’1" /> проверяется в конце цикла для определения необходимости повторного выполнения цикла.</summary>
      <returns>Условие для повторного выполнения цикла.</returns>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Variables">
      <summary>Коллекция объектов <see cref="T:System.Activity.Variable" />, связанных с действием <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.DurableTimerExtension">
      <summary>Представляет расширение таймера действия, которое может быть сохранено. </summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DurableTimerExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.Dispose">
      <summary>Завершает все зарегистрированные таймеры.</summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions">
      <summary>Возвращает перечислитель, выполняющий итерацию по коллекции расширений таймеров.</summary>
      <returns>Перечислитель.</returns>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)">
      <summary>Удаляет объект таймера из таблицы зарегистрированных таймеров для текущей операции рабочего процесса.</summary>
      <param name="bookmark">Точка, в которой рабочий процесс или действие может пассивно ожидать возобновления, отслеживая истечение срока действия объекта таймера.</param>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Добавляет объект таймера, который содержит указанный промежуток времени и сведения о закладке в таблице зарегистрированных таймеров для текущей операции рабочего процесса.</summary>
      <param name="timeout">Объект промежутка времени, который добавляется к записи таблицы регистрации таймеров в операции рабочего процесса вместе со сведениями об обратном вызове.</param>
      <param name="bookmark">Точка, в которой рабочий процесс или действие может пассивно ожидать возобновления, отслеживая истечение срока действия объекта таймера.</param>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)">
      <summary>Устанавливает указанный экземпляр рабочего процесса в качестве текущего экземпляра.</summary>
      <param name="instance">Экземпляр рабочего процесса, который необходимо сделать текущим.</param>
    </member>
    <member name="T:System.Activities.Statements.ExistsInCollection`1">
      <summary>Указывает, должен ли данный элемент находиться в данной коллекции.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ExistsInCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ExistsInCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ExistsInCollection`1.Collection">
      <summary>Коллекция, в которой выполняется поиск для заданного элемента.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.ExistsInCollection`1.Item">
      <summary>Искомый элемент в указанной коллекции.</summary>
      <returns>Элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Flowchart">
      <summary>Моделирует рабочие процессы с помощью известных принципов блок-схем.</summary>
    </member>
    <member name="M:System.Activities.Statements.Flowchart.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Flowchart" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.Nodes">
      <summary>Коллекция объектов <see cref="T:System.Activities.Statements.FlowNode" />, которые содержатся в блок-схеме.</summary>
      <returns>Объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.StartNode">
      <summary>Объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется при запуске блок-схемы.</summary>
      <returns>Начальный узел.</returns>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.Variables">
      <summary>Коллекция объектов <see cref="T:System.WorkflowModel.Variable" />, связанных с объектом <see cref="T:System.Activities.Statements.Flowchart" />, которые доступны для совместного использования состояния между дочерними действиями, содержащимися в этой блок-схеме.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowDecision">
      <summary>Специализированный узел <see cref="T:System.Activities.Statements.FlowNode" />, который позволяет моделировать условный узел с двумя исходами. </summary>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" /> с указанным условием.</summary>
      <param name="condition">Условие, проверяемое действием <see cref="T:System.Activities.Statements.FlowDecision" />.</param>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" /> с указанным условием.</summary>
      <param name="condition">Условие, проверяемое действием <see cref="T:System.Activities.Statements.FlowDecision" />.</param>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.Condition">
      <summary>Задает условие, которое проверяет объект <see cref="T:System.Activities.Statements.FlowDecision" />.</summary>
      <returns>Выражение значения, которое представляет условие. </returns>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.False">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, когда условие принимает значение false.</summary>
      <returns>Элемент рабочего процесса, который выполняется, когда условие принимает значение false.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.True">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, когда условие принимает значение true.</summary>
      <returns>Элемент рабочего процесса, который выполняется, когда условие принимает значение true.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowNode">
      <summary>Абстрактный базовый класс для всех различных типов узлов, которые могут содержаться в действии <see cref="T:System.Activities.Statements.Flowchart" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.FlowStep">
      <summary>Элемент <see cref="T:System.Activities.Statements.FlowNode" />, который выполняет указанное свойство <see cref="P:System.Activities.Statements.FlowStep.Action" /> и содержит указатель свойства <see cref="P:System.Activities.Statements.FlowStep.Next" />. </summary>
    </member>
    <member name="M:System.Activities.Statements.FlowStep.#ctor">
      <summary>Возвращает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.FlowStep.Action">
      <summary>Объект <see cref="T:System.Activities.Activity" />, который выполняет объект <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
      <returns>Действие, которое выполняется как часть этого шага блок-схемы.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowStep.Next">
      <summary>Следующий объект <see cref="T:System.Activities.Statements.FlowNode" /> в блок-схеме, который выполняется после выполнения текущего объекта <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
      <returns>Заданный элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowSwitch`1">
      <summary>Специальный объект <see cref="T:System.Activities.Statements.FlowNode" />, который позволяет моделировать переключатель с одним выражением и одним выходом для каждого совпадения.</summary>
      <typeparam name="T">Тип выражения для оценки по вариантам. </typeparam>
    </member>
    <member name="M:System.Activities.Statements.FlowSwitch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowSwitch`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Cases">
      <summary>Возвращает словарь вариантов для обработки элементом <see cref="T:System.Activities.Statements.FlowSwitch`1" />.</summary>
      <returns>Коллекция вариантов.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Default">
      <summary>Объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, если в коллекции <see cref="P:System.Activities.Statements.FlowSwitch`1.Cases" /> отсутствуют элементы, которые совпадают с результатом оценки свойства <see cref="P:System.Activities.Statements.FlowSwitch`1.Expression" />.</summary>
      <returns>Выполняемый объект <see cref="T:System.Activities.Statements.FlowNode" /> по умолчанию.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Expression">
      <summary>Выражение для оценки по коллекции свойства <see cref="P:System.Activities.Statements.FlowSwitch`1.Cases" />.</summary>
      <returns>Выражение для вычисления.</returns>
    </member>
    <member name="T:System.Activities.Statements.ForEach`1">
      <summary>Однократно выполняет операцию действия для каждого значения, которое представлено в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ForEach`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ForEach`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ForEach`1.Body">
      <summary>Действие <see cref="T:System.Activities.ActivityAction" />, которое выполняется для каждого элемента в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</summary>
      <returns>Выполняемое действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.ForEach`1.Values">
      <summary>Коллекция входных данных действия для выполнения операции действия <see cref="P:System.Activities.Statements.ForEach`1.Body" />.</summary>
      <returns>Коллекция значений.</returns>
    </member>
    <member name="T:System.Activities.Statements.HandleScope`1">
      <summary>Предоставляет поведение в области по умолчанию для объектов <see cref="T:System.Activities.Handle" />.</summary>
      <typeparam name="THandle">Тип объекта <see cref="P:System.Activities.Statements.HandleScope`1.Handle" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.HandleScope`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.HandleScope`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.HandleScope`1.Body">
      <summary>Действие, область которого должна быть ограничена этим действием.</summary>
      <returns>Действие, ограничиваемое областью.</returns>
    </member>
    <member name="P:System.Activities.Statements.HandleScope`1.Handle">
      <summary>Объект <see cref="T:System.Activities.Handle" />, поступивший из области родительского объекта.</summary>
      <returns>Дескриптор.</returns>
    </member>
    <member name="T:System.Activities.Statements.If">
      <summary>Моделирует условие If-Then-Else.</summary>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Activities.InArgument{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="P:System.Activities.Statements.If.Condition">
      <summary>Условие, определяющее, какое дочернее действие должно быть выполнено.Действие <see cref="P:System.Activities.Statements.If.Then" /> выполняется, если результат вычисления условия равен true.Действие <see cref="P:System.Activities.Statements.If.Else" /> выполняется, если результат вычисления условия равен false.</summary>
      <returns>Условие выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.If.Else">
      <summary>Действие, подлежащее выполнению, если результат вычисления условия <see cref="P:System.Activities.Statements.If.Condition" /> действия равен false.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.If.Then">
      <summary>Действие, подлежащее выполнению, если результат вычисления условия <see cref="P:System.Activities.Statements.If.Condition" /> действия равен true.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`1">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <typeparam name="T">Тип данных аргумента <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`1.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`1" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`1" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`1" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`1" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`1.Argument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`10">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`10.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`10" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`10" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`10" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`11">
      <summary>Вызывает <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`11.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`11" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`11" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`11" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`12">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`12.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`12" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Action">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`12" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Двенадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`13">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`13.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`13" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`13" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`13" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Двенадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Тринадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`14">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`14.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`14" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`14" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`14" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Двенадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Тринадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Четырнадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`15">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T15">Тип данных пятнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`15.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`15" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`15" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`15" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Двенадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Тринадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Четырнадцатый аргумент In, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument15">
      <summary>Возвращает или задает пятнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Пятнадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`16">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T15">Тип данных пятнадцатого <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T16">Тип данных шестнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`16.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`16" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`16" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`16" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Первый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Десятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Одиннадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Двенадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Тринадцатый аргумент In, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Четырнадцатый аргумент In, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument15">
      <summary>Возвращает или задает пятнадцатый <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Пятнадцатый аргумент In, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument16">
      <summary>Возвращает или задает шестнадцатый аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Шестнадцатый аргумент In, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Второй аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Третий аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Четвертый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Пятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Шестой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Седьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Восьмой аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Девятый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`2">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`2" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`2" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`2" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`2" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`2" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`3">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`3" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`3" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`3" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`3" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Третий аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`4">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`4.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`4" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`4" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`4" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`4" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Третий аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Четвертый аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`5">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`5.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`5" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`5" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`5" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`6">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`6.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`6" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`6" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`6" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`7">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`7.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`7" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`7" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`7" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`8">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`8.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`8" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`8" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`8" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Восьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`9">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`9.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`9" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`9" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`9" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Восьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Девятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeDelegate">
      <summary>Вызывает заданный объект <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeDelegate.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeDelegate" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeDelegate.Delegate">
      <summary>Возвращает объект <see cref="T:System.Activities.ActivityDelegate" /> для вызова.</summary>
      <returns>Делегат.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeDelegate.DelegateArguments">
      <summary>Аргументы, передаваемые функции <see cref="P:System.Activities.Statements.InvokeDelegate.ActivityDelegate" />.</summary>
      <returns>Аргументы, передаваемые делегату.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeMethod">
      <summary>Вызывает открытый метод заданного объекта или типа.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeMethod.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeMethod" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.GenericTypeArguments">
      <summary>Аргументы универсального типа содержащегося метода.</summary>
      <returns>Аргументы.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.MethodName">
      <summary>Имя метода, вызываемого при выполнении действия.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.Parameters">
      <summary>Коллекция параметров вызываемого метода.</summary>
      <returns>Коллекция параметров.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.Result">
      <summary>Возвращаемое значение операции метода.</summary>
      <returns>Возвращаемое значение операции.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.RunAsynchronously">
      <summary> Возвращает или задает значение, которое показывает, вызван ли метод действия асинхронно.</summary>
      <returns>Возвращает значение true при асинхронном выполнении метода.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.TargetObject">
      <summary>Объект, в котором содержится метод для выполнения.</summary>
      <returns>Объект.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.TargetType">
      <summary>Тип объекта <see cref="P:System.Activities.Statements.InvokeMethod.TargetObject" />.</summary>
      <returns>Тип целевого объекта.</returns>
    </member>
    <member name="T:System.Activities.Statements.Parallel">
      <summary>Действие, которое выполняет все дочерние действия одновременно и асинхронно.</summary>
    </member>
    <member name="M:System.Activities.Statements.Parallel.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Parallel" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Parallel.Branches">
      <summary>Дочерние элементы, которые выполняются параллельно.</summary>
      <returns>Элементы.</returns>
    </member>
    <member name="P:System.Activities.Statements.Parallel.CompletionCondition">
      <summary>Оценивает после завершения какой-либо ветви. </summary>
      <returns>Выражение завершения.</returns>
    </member>
    <member name="P:System.Activities.Statements.Parallel.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Содержащиеся переменные.</returns>
    </member>
    <member name="T:System.Activities.Statements.ParallelForEach`1">
      <summary>Перечисляет элементы коллекции и выполняет внедренную инструкцию для каждого элемента коллекции параллельно.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ParallelForEach`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ParallelForEach`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.Body">
      <summary>Объект <see cref="T:System.Activities.ActivityAction" />, который однократно выполняется для каждого значения, содержащегося в коллекции свойств <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</summary>
      <returns>Содержащаяся операция действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.CompletionCondition">
      <summary>Оценивается после каждого выполнения итерации. </summary>
      <returns>Выражение завершения.</returns>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.Values">
      <summary>Коллекция значений, используемых в качестве параметров для каждой итерации действия, которое содержится в свойстве <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" />.</summary>
      <returns>Коллекция значений.</returns>
    </member>
    <member name="T:System.Activities.Statements.Persist">
      <summary>Запрашивает сохранение экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Statements.Persist.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Persist" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Pick">
      <summary>Обеспечивает моделирование потока управления на основе событий. </summary>
    </member>
    <member name="M:System.Activities.Statements.Pick.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Pick" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Pick.Branches">
      <summary>Коллекция объектов <see cref="T:System.Activities.Statements.PickBranch" />, один из которых потенциально выполняет действие <see cref="T:System.Activities.Statements.Pick" /> в зависимости от входящих событий.</summary>
      <returns>Коллекция ветвей.</returns>
    </member>
    <member name="T:System.Activities.Statements.PickBranch">
      <summary>Потенциальный путь выполнения в действии <see cref="T:System.Activities.Statements.Pick" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.PickBranch.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.PickBranch" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Action">
      <summary>Действие <see cref="T:System.Activities.Activity" />, которое выполняется, если эта ветвь запускается на выполнение.</summary>
      <returns>Объект <see cref="T:System.Activities.Activity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.DisplayName">
      <summary>Имя этой ветви, которое отображается в конструкторе действий.</summary>
      <returns>Имя ветви.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Trigger">
      <summary>Действие, завершение которого активирует эту ветвь выбора.</summary>
      <returns>Запускающее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Variables">
      <summary>Коллекция пользовательских переменных, которые связаны с этим действием.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.RemoveFromCollection`1">
      <summary>Удаляет элемент из заданной коллекции.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.RemoveFromCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.RemoveFromCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.RemoveFromCollection`1.Collection">
      <summary>Коллекция, из которой удаляется свойство <see cref="P:System.Activities.Statements.RemoveFromCollection`1.Item" />.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.RemoveFromCollection`1.Item">
      <summary>Элемент, который должен быть удален из указанного свойства <see cref="P:System.Activities.Statements.RemoveFromCollection`1.Collection" />.</summary>
      <returns>Удаляемый элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Rethrow">
      <summary>Вызывает ранее вызванное исключение из действия <see cref="T:System.Activities.Statements.Catch" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Rethrow.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Rethrow" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Sequence">
      <summary>Выполняет набор дочерних действий в соответствии с единым определенным порядком.</summary>
    </member>
    <member name="M:System.Activities.Statements.Sequence.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Sequence" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Sequence.Activities">
      <summary>Коллекция содержащихся действий, которые выполняются последовательно.</summary>
      <returns>Действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.Sequence.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.Switch`1">
      <summary>Выбирает для выполнения одно действие из нескольких, в зависимости от значения указанного выражения типа, заданного в этом описателе типа объекта.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Cases">
      <summary>Представляет словарь потенциальных путей выполнения.Каждая запись содержит ключ и действие, которое выполняется, когда результат выражения совпадает с ключом.</summary>
      <returns>Пути выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Default">
      <summary>Представляет действие, выполняемое, если ни один из ключей в записях коллекции <see cref="P:System.Activities.Statements.Switch.Cases" /> не согласуется со свойством <see cref="P:System.Activities.Statements.Switch.Expression" />.</summary>
      <returns>Действие, выполняемое по умолчанию.</returns>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Expression">
      <summary>Возвращает объект для сравнения с ключами в коллекции <see cref="P:System.Activities.Statements.Switch.Cases" />.</summary>
      <returns>Объект для сравнения с ключами в коллекции <see cref="P:System.Activities.Statements.Switch.Cases" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.TerminateWorkflow">
      <summary>Завершает выполняющийся экземпляр рабочего процесса, вызывает в узле событие свойства <see cref="P:System.Activities.WorkflowApplication.Completed" /> и сообщает сведения об ошибках.Рабочий процесс после завершения нельзя продолжить.</summary>
    </member>
    <member name="M:System.Activities.Statements.TerminateWorkflow.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.TerminateWorkflow" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TerminateWorkflow.Exception">
      <summary>Возвращает или задает исключение, которое вызывает завершение экземпляра.</summary>
      <returns>Исключение.</returns>
    </member>
    <member name="P:System.Activities.Statements.TerminateWorkflow.Reason">
      <summary>Строковый входной аргумент с причиной завершения выполнения экземпляра рабочего процесса. </summary>
      <returns>Причина завершения работы экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Statements.Throw">
      <summary>Создает исключение.</summary>
    </member>
    <member name="M:System.Activities.Statements.Throw.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Throw" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Throw.Exception">
      <summary>Исключение, вызванное действием.</summary>
      <returns>Исключение.</returns>
    </member>
    <member name="T:System.Activities.Statements.TimerExtension">
      <summary>Абстрактный базовый класс для расширений таймера.</summary>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)">
      <summary>Удаляет таймер.</summary>
      <param name="bookmark">Закладка, связанная с таймером.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.OnCancelTimer(System.Activities.Bookmark)">
      <summary>Вызывается методом <see cref="M:System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)" />.</summary>
      <param name="bookmark">Закладка, связанная с таймером.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Вызывается методом <see cref="M:System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)" />.</summary>
      <param name="timeout">Длительность таймера.</param>
      <param name="bookmark">Закладка, связанная с таймером, возобновляемая после истечения времени ожидания.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Создает таймер с заданной длительностью и связью.</summary>
      <param name="timeout">Длительность таймера.</param>
      <param name="bookmark">Закладка, связанная с таймером, возобновляемая после истечения времени ожидания.</param>
    </member>
    <member name="T:System.Activities.Statements.TransactionScope">
      <summary>Действие, которое указывает границу транзакции. </summary>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure">
      <summary>Возвращает или задает значение, которое указывает, следует ли прерывать рабочий процесс, если прервана транзакция.</summary>
      <returns>Значение true, если рабочий процесс следует прервать.</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.Body">
      <summary>Возвращает или задает действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.IsolationLevel">
      <summary>Возвращает или задает свойство <see cref="T:System.Transactions.IsolationLevel" /> для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Объект <see cref="T:System.Transactions.IsolationLevel" /> для этого экземпляра <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel">
      <summary>Указывает, должно ли быть сериализовано свойство <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> для данного <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> следует сериализовать, в противном случае — false.</returns>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.ShouldSerializeTimeout">
      <summary>Указывает, должно ли быть сериализовано свойство <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> для данного <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Значение true, если значение свойства <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> следует сериализовать, в противном случае — false.
</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.Timeout">
      <summary>Возвращает или задает объект <see cref="T:System.TimeSpan" />, указывающий время ожидания транзакции, которая используется для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который указывает время ожидания транзакции, использующейся для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.TryCatch">
      <summary>Содержит элементы рабочего процесса для выполнения с применением среды выполнения рабочих процессов в блоке обработки исключений.</summary>
    </member>
    <member name="M:System.Activities.Statements.TryCatch.#ctor">
      <summary>Создает новый экземпляр класса <see cref="M:System.Activities.Statements.TryCatch.#ctor" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Catches">
      <summary>Коллекция элементов Catch, которые проверяются, когда действие <see cref="P:System.Activities.Statements.TryCatch.Try" /> вызывает исключение.</summary>
      <returns>Коллекция элементов перехвата.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Finally">
      <summary>Элемент рабочего процесса, который необходимо выполнить, когда завершится выполнение <see cref="P:System.Activities.Statements.TryCatch.Try" /> и любых необходимых действий в коллекции <see cref="P:System.Activities.Statements.TryCatch.Catches" />.</summary>
      <returns>Элемент рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Try">
      <summary>Элемент рабочего процесса, выполняемый первый раз, когда выполняется <see cref="T:System.Activities.Statements.TryCatch" />.</summary>
      <returns>Элемент рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.While">
      <summary>Выполняет содержащийся элемент рабочего процесса, пока условие принимает значение true.</summary>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
      <param name="condition">Условие, по которому действие многократно повторяется.</param>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
      <param name="condition">Условие, по которому действие многократно повторяется.</param>
    </member>
    <member name="P:System.Activities.Statements.While.Body">
      <summary>Объект <see cref="T:System.Activities.Activity" /> для выполнения в цикле While.</summary>
      <returns>Элемент.</returns>
    </member>
    <member name="P:System.Activities.Statements.While.Condition">
      <summary>Объект <see cref="T:System.Activities.Activity`1" />, вычисляемый перед каждой итерацией цикла While.</summary>
      <returns>Условие.</returns>
    </member>
    <member name="P:System.Activities.Statements.While.Variables">
      <summary>Коллекция объектов <see cref="T:System.Activities.Variable" />, связанных с действием <see cref="T:System.Activities.Statements.While" />.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.WorkflowTerminatedException">
      <summary>Исключение, которое создается, когда операция вызывается применительно к завершившемуся объекту <see cref="T:System.Activities.WorkflowApplication" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о сформированном исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или ссылка со значением null (Nothing в Visual Basic), если внутреннее исключение не указано.</param>
    </member>
    <member name="T:System.Activities.Statements.WriteLine">
      <summary>Записывает указанную строку в указанный объект <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.WriteLine.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.WriteLine" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.WriteLine.Text">
      <summary>Текст для записи.</summary>
      <returns>Текст.</returns>
    </member>
    <member name="P:System.Activities.Statements.WriteLine.TextWriter">
      <summary>Экземпляр <see cref="T:System.IO.TextWriter" />, в который требуется записать <see cref="P:System.Activities.Statements.WriteLine.Text" />.</summary>
      <returns>Модуль записи текста.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityInfo">
      <summary>Содержит сведения об отслеживаемом событии <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityInfo.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityInfo" /> с использованием указанного имени, идентификатора, идентификатора экземпляра и имени типа.</summary>
      <param name="name">Имя действия.</param>
      <param name="id">Идентификатор действия.</param>
      <param name="instanceId">Идентификатор экземпляра действия.</param>
      <param name="typeName">Имя типа действия.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.Id">
      <summary>Возвращает идентификатор для действия.</summary>
      <returns>Идентификатор действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.InstanceId">
      <summary>Возвращает идентификатор времени выполнения для экземпляра действия.</summary>
      <returns>Идентификатор экземпляра действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.Name">
      <summary>Возвращает имя, связанное с действием.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityInfo.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Activities.Tracking.ActivityInfo" />.</summary>
      <returns>Имя действия, идентификатор, идентификатор экземпляра и имя типа.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.TypeName">
      <summary>Возвращает имя типа действия.</summary>
      <returns>Имя типа действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityScheduledQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> коллекции, подписывает на записи запланированного действия в момент создании профиля отслеживания для подписки на записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityScheduledQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledQuery.ActivityName">
      <summary>Возвращает имя действия, от которого подписывает запрос отслеживания.</summary>
      <returns>Имя действия, которое планирует это действие.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledQuery.ChildActivityName">
      <summary>Возвращает имя запланированного действия, на которое подписывает запрос отслеживания.</summary>
      <returns>Имя запланированного действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityScheduledRecord">
      <summary>Представляет запись отслеживания действия, которое запланировано для выполнения. </summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityScheduledRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и дочернее действие.</summary>
      <param name="instanceId">Идентификатор экземпляра запланированного действия.</param>
      <param name="recordNumber">Последовательность, которая указывает порядок создания записей отслеживания.</param>
      <param name="activity">Действие, которое выдает запрос на запланированное выполнение.</param>
      <param name="child">Запланированное действие.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledRecord.Child">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для дочернего действия.</summary>
      <returns>Сведения о дочернем действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledRecord.ToString">
      <summary>Возвращает строку, которая содержит все подробные сведения объекта <see cref="T:System.Activities.Tracking.ActivityScheduledRecord" />.</summary>
      <returns>Подробные сведения о записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStateQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> выполняет подписку на записи состояний действия.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityStateQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.ActivityName">
      <summary>Возвращает имя действия, для которого получается по подписке запись отслеживания.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.Arguments">
      <summary>Возвращает коллекцию аргументов, связанных с этим запросом действия.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.States">
      <summary>Возвращает состояния подписанного действия, для которого необходимо создать запись отслеживания.</summary>
      <returns>Коллекция состояний.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.Variables">
      <summary>Возвращает коллекцию переменных, связанных с этим запросом действия.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStateRecord">
      <summary>Представляет запись отслеживания, которая создается, когда действие изменяет состояние.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityStateRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и состояние действие.</summary>
      <param name="instanceId">Идентификатор экземпляра действия.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activity">Действие.</param>
      <param name="state">Состояние действия.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" />, который содержит сведения о действии в момент создания записи.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Arguments">
      <summary>Возвращает текущие значения отслеживаемых аргументов, которые связаны с действием, в момент создания записи.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, в котором содержатся аргументы.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.State">
      <summary>Возвращает текущее состояние действия в момент создания записи.</summary>
      <returns>Состояние действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateRecord.ToString">
      <summary>Возвращает строку, которая содержит все подробные сведения о записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Variables">
      <summary>Возвращает текущие значения отслеживаемых переменных, которые связаны с действием в момент создания записи.</summary>
      <returns>Текущие значения.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStates">
      <summary>Задает состояние действия.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Canceled">
      <summary>Состояние действия: «Отменено».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Closed">
      <summary>Состояние действия: «Закрыто».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Executing">
      <summary>Состояние действия: «Выполняется».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Faulted">
      <summary>Состояние действия: «Ошибка».</summary>
    </member>
    <member name="T:System.Activities.Tracking.BookmarkResumptionQuery">
      <summary>При добавлении в коллекцию свойств <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи возобновления закладок, когда у профиля отслеживания запрашиваются объекты <see cref="T:System.Activities.Tracking.TrackingRecord" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.BookmarkResumptionQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionQuery.Name">
      <summary>Возвращает или задает имя записи закладки для подписки на нее.</summary>
      <returns>Имя закладки.</returns>
    </member>
    <member name="T:System.Activities.Tracking.BookmarkResumptionRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionRecord.#ctor(System.Guid,System.Int64,System.Guid,System.String,System.Activities.Tracking.ActivityInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />, используя указанный идентификатор экземпляра, номер записи, область закладки, имя закладки и владельца.</summary>
      <param name="instanceId">Идентификатор экземпляра связанного действия.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="bookmarkScope">Идентификатор объекта <see cref="T:System.Activities.BookmarkScope" /> связанного действия.</param>
      <param name="bookmarkName">Имя закладки.</param>
      <param name="owner">Действие, которое ожидало возобновления закладки.</param>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.BookmarkName">
      <summary>Возвращает имя закладки <see cref="T:System.Activities.Bookmark" />, которая возобновляется модулем выполнения рабочего процесса.</summary>
      <returns>Имя закладки <see cref="T:System.Activities.Bookmark" />, на которую ссылается этот объект <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.BookmarkScope">
      <summary>Возвращает область идентификатора объекта <see cref="T:System.Activities.BookmarkScope" />, который связан с этой закладкой.</summary>
      <returns>Идентификатор области.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.Owner">
      <summary>Возвращает сведения об объекте <see cref="T:System.Activities.Tracking.ActivityInfo" />, который ожидал возобновления закладки.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.Payload">
      <summary>Возвращает значение, которое было предоставлено при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Значение, которое было предоставлено при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionRecord.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, представляющую текущий объект <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />.</summary>
      <returns>Текущий объект.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CancelRequestedQuery">
      <summary>При добавлении в коллекцию свойства <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи запросов отмены, когда у профиля отслеживания запрашиваются записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedQuery.#ctor">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Activities.Tracking.CancelRequestedQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedQuery.ActivityName">
      <summary>Имя действия, которое запрашивает отмену.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedQuery.ChildActivityName">
      <summary>Имя дочернего действия, для которого была запрошена отмена.</summary>
      <returns>Имя дочернего действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CancelRequestedRecord">
      <summary>Представляет данные, отправленные средой выполнения рабочего процесса участникам отслеживания, при вызове метода <see cref="M:System.Activities.ActivityExecutionContext.CancelChild" /> или метода <see cref="M:System.Activities.ActivityExecutionContext.CancelChildren" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CancelRequestedRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и дочернее действие.</summary>
      <param name="instanceId">Идентификатор экземпляра действия, сформировавшего событие.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок созданных событий отслеживания.</param>
      <param name="activity">Действие, которое выдает запрос на отмену.</param>
      <param name="child">Действие, которое подлежит отмене.</param>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия, которое запросило отмену.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedRecord.Child">
      <summary>Получает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия, которое подлежит отмене.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedRecord.ToString">
      <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Activities.Tracking.CancelRequestedRecord" />.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CustomTrackingQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на пользовательские записи отслеживания, когда у профиля отслеживания запрашиваются пользовательские записи.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingQuery.ActivityName">
      <summary>Возвращает или задает имя действия, которое создало запись отслеживания.</summary>
      <returns>Имя действия, которое создало пользовательскую запись отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingQuery.Name">
      <summary>Возвращает или задает имя создаваемой пользовательской записи отслеживания. </summary>
      <returns>Имя пользовательской записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CustomTrackingRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения при возникновении пользовательской записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> на основе сведений из указанного экземпляра класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</summary>
      <param name="record">Экземпляр пользовательской записи отслеживания для использования.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.Guid,System.String,System.Diagnostics.TraceLevel)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с заданным идентификатором экземпляра, именем пользовательской записи отслеживания, уровнем трассировки.</summary>
      <param name="instanceId">Идентификатор действия.</param>
      <param name="name">Имя пользовательской записи отслеживания.</param>
      <param name="level">Уровень трассировки, используемый записью отслеживания.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с указанным именем пользовательской записи отслеживания.</summary>
      <param name="name">Имя пользовательской записи отслеживания.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.String,System.Diagnostics.TraceLevel)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с заданным именем пользовательской записи отслеживания, уровнем трассировки.</summary>
      <param name="name">Имя пользовательской записи отслеживания.</param>
      <param name="level">Уровень трассировки, используемый записью отслеживания.</param>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> действия, который связан с этой записью.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.Clone">
      <summary>Создает копию объекта <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</summary>
      <returns>Копия экземпляра <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Data">
      <summary>Возвращает пользовательские данные, связанные с этой записью отслеживания.</summary>
      <returns>Определенные пользователем данные.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Name">
      <summary>Возвращает имя, отличающее эту запись отслеживания.</summary>
      <returns>Имя, отличающее эту запись отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.EtwTrackingParticipant">
      <summary>Пользователь данных отслеживания рабочего процесса, который создал ETW-событие в сеансе отслеживания событий Windows, содержащем данные для записи отслеживания. </summary>
    </member>
    <member name="M:System.Activities.Tracking.EtwTrackingParticipant.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.EtwTrackingParticipant" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.EtwTrackingParticipant.ApplicationReference">
      <summary>Возвращает значение ссылки, используемое поставщиком отслеживания событий Windows, который создан этим участником отслеживания.</summary>
      <returns>Значение ссылки.</returns>
    </member>
    <member name="P:System.Activities.Tracking.EtwTrackingParticipant.EtwProviderId">
      <summary>Возвращает идентификатор поставщика, который используется поставщиком отслеживания событий Windows, который создан этим участником отслеживания.</summary>
      <returns>Идентификатор поставщика.</returns>
    </member>
    <member name="T:System.Activities.Tracking.FaultPropagationQuery">
      <summary>При добавлении в коллекцию свойства <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи распространения ошибок, когда у профиля отслеживания запрашиваются записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.FaultPropagationQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationQuery.FaultHandlerActivityName">
      <summary>Возвращает имя действия обработчика ошибок, которое распространяет ошибку.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationQuery.FaultSourceActivityName">
      <summary>Возвращает имя действия, которое было источником ошибки.</summary>
      <returns>Имя действия</returns>
    </member>
    <member name="T:System.Activities.Tracking.FaultPropagationRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда от действия рабочего процесса передается ошибка.</summary>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo,System.Boolean,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.FaultPropagationRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра действия, сформировавшего событие.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="faultSource">Действие, которое является источником ошибки.</param>
      <param name="faultHandler">Действие, которое является обработчиком ошибки.</param>
      <param name="isFaultSource">Значение true, если это первый обработчик для ошибки. Значение false, если это последующий обработчик для ошибки.</param>
      <param name="fault">Сведения об исключении.</param>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.Fault">
      <summary>Получает данные исключения, которые содержатся в ошибке.</summary>
      <returns>Данные об исключении.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.FaultHandler">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> обработчика ошибок.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.FaultSource">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> действия, которое вызвало ошибку.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.IsFaultSource">
      <summary>Значение, указывающее, является ли этот обработчик первым обработчиком для ошибки. </summary>
      <returns>true, если это первый обработчик исключения.false, если это последующий обработчик для этой ошибки.</returns>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationRecord.ToString">
      <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Activities.Tracking.FaultPropagationRecord" />.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ImplementationVisibility">
      <summary>Описывает режим видимости в профиле отслеживания.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ImplementationVisibility.RootScope">
      <summary>Создаются только корневое действие и его реализация для рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ImplementationVisibility.All">
      <summary>Создаются все записи отслеживания.</summary>
    </member>
    <member name="T:System.Activities.Tracking.TrackingParticipant">
      <summary>Базовый класс для модулей рабочего процесса, которые взаимодействуют с инфраструктурой отслеживания рабочего процесса и обеспечивают доступ к записям отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Если реализуется в производном классе, начинает асинхронную обработку записи отслеживания.</summary>
      <returns>Результат операции.</returns>
      <param name="record">Созданная запись отслеживания.</param>
      <param name="timeout">Период времени, после которого поставщик прерывает попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Определяемый пользователем объект, который однозначно определяет асинхронную операцию.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)">
      <summary>При реализации в производном классе представляет конец операции асинхронного отслеживания. </summary>
      <param name="result">Состояние операции.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)">
      <summary>Если реализуется в производном классе, используется для синхронной обработки записи отслеживания.</summary>
      <param name="record">Созданная запись отслеживания.</param>
      <param name="timeout">Период времени, после которого поставщик прерывает попытку.</param>
    </member>
    <member name="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile">
      <summary>Объект профиля отслеживания, используемый участником отслеживания.Перед добавлением участника отслеживания в расширения рабочего процесса, профиль отслеживания задается у участника.</summary>
      <returns>Профиль отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingProfile">
      <summary>Создает подписку для записей отслеживания рабочего процесса в объекте <see cref="T:System.Activities.Tracking.TrackingParticipant" />. </summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingProfile.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.TrackingProfile" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.ActivityDefinitionId">
      <summary>Возвращает или задает идентификатор определения действия профиля отслеживания.</summary>
      <returns>Идентификатор определения действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.ImplementationVisibility">
      <summary>Возвращает или задает значение, которое выполняет фильтрацию записей отслеживания, создаваемых из вложенных действий в действия верхнего уровня (действия, которые составляют реализацию другого действия).</summary>
      <returns>Объект <see cref="T:System.Activities.Tracking.ImplementationVisibility" />, который указывает область записей для фильтрации.Значение по умолчанию — <see cref="F:System.Activities.Tracking.ImplementationVisibility.RootScope" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.Name">
      <summary>Возвращает отображаемое имя профиля отслеживания.</summary>
      <returns>Имя профиля.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.Queries">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Activities.Tracking.TrackingQuery" />, определяющих записи, на которые осуществляет подписку этот профиль отслеживания.</summary>
      <returns>Коллекция запросов.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingQuery">
      <summary>Базовый класс для всех запросов отслеживания.Запросы отслеживания используются для создания определения подписки для объекта <see cref="T:System.Activities.Tracking.TrackingProfile" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingQuery.#ctor">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса.</summary>
    </member>
    <member name="P:System.Activities.Tracking.TrackingQuery.QueryAnnotations">
      <summary>Коллекция данных в виде пар «имя-значение», которые включаются с данными, возвращаемыми этим запросом.</summary>
      <returns>Коллекция заметок.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingRecord">
      <summary>Абстрактный класс, от которого наследуются все записи отслеживания рабочего процесса.Записи отслеживания представляют данные, отправляемые участникам отслеживания, когда происходят отслеживаемые события.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Activities.Tracking.TrackingRecord)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным экземпляром записи отслеживания.</summary>
      <param name="record">Записи отслеживания созданного элемента рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Guid)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным идентификатором экземпляра.</summary>
      <param name="instanceId">Идентификатор создающего экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Guid,System.Int64)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным идентификатором экземпляра и номером записи.</summary>
      <param name="instanceId">Идентификатор создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.Annotations">
      <summary>При реализации в производном классе представляет коллекцию пар «имя-значение», которые добавляются в эту запись отслеживания.</summary>
      <returns>Словарь элементов для добавления в эту запись отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.Clone">
      <summary>Создает копию объекта <see cref="T:System.Activities.Tracking.TrackingRecord" />.</summary>
      <returns>Копия объекта <see cref="T:System.Activities.Tracking.TrackingRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.EventTime">
      <summary>При реализации в производном классе представляет время возникновения записи отслеживания.</summary>
      <returns>Время события.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.InstanceId">
      <summary>Если реализуется в производном классе, представляет идентификатор созданного экземпляра рабочего процесса.</summary>
      <returns>Идентификатор элемента.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.Level">
      <summary>Возвращает объект <see cref="T:System.Diagnostics.TraceLevel" /> события.</summary>
      <returns>Уровень трассировки.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.RecordNumber">
      <summary>Последовательность, которая определяет порядок создания записей отслеживания. </summary>
      <returns>Последовательный порядок.</returns>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.ToString">
      <summary>При реализации в производном классе возвращает строку, которая содержит все данные отслеживания из записи.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда выполнение экземпляра рабочего процесса прервано.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceAbortedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина прерывания выполнения рабочего процесса.</summary>
      <returns>Причина, по которой был прерван рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceQuery">
      <summary>При добавлении в коллекцию свойств <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывается на записи экземпляра рабочего процесса в момент создании профиля отслеживания для подписки на записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceQuery.States">
      <summary>Подписанные состояния от отслеживаемого экземпляра рабочего потока в момент создания записей трассировки.</summary>
      <returns>Состояния рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceRecord">
      <summary>Содержит данные, отправляемые в службу отслеживания инфраструктурой отслеживания среды выполнения в момент изменения состояния экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Activities.Tracking.WorkflowInstanceRecord)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" /> из существующего экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="record">Используемая запись экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceRecord.ActivityDefinitionId">
      <summary>Возвращает отображаемое имя корневого действия рабочего процесса, которое создало эту запись.</summary>
      <returns>Идентификатор определения действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.Clone">
      <summary>Создает глубокую копию объекта <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <returns>Глубокая копия объекта <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceRecord.State">
      <summary>Текущее состояние рабочего процесса, когда сформирована запись.</summary>
      <returns>Состояние рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceStates">
      <summary>Задает состояние экземпляра рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Aborted">
      <summary>Экземпляр рабочего процесса прерван.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Canceled">
      <summary>Выполнение экземпляра рабочего процесса отменено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Completed">
      <summary>Выполнение экземпляра рабочего процесса завершено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Deleted">
      <summary>Экземпляр рабочего процесса удален.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Idle">
      <summary>Экземпляр рабочего процесса простаивает.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Persisted">
      <summary>Экземпляр рабочего процесса сохранен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Resumed">
      <summary>Экземпляр рабочего процесса возобновлен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Started">
      <summary>Экземпляр рабочего процесса запущен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Suspended">
      <summary>Выполнение экземпляра рабочего процесса приостановлено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Terminated">
      <summary>Выполнение экземпляра рабочего процесса завершено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.UnhandledException">
      <summary>Экземпляр рабочего процесса встретил необработанное исключение.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Unloaded">
      <summary>Экземпляр рабочего процесса выгружен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Unsuspended">
      <summary>Выполнение экземпляра рабочего процесса возобновлено.</summary>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда экземпляр рабочего процесса приостановлен.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина приостановки выполнения экземпляра рабочего процесса.</summary>
      <returns>Причина приостановки рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда выполнение рабочего процесса завершено.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="activityDefinitionId">Идентификатор определения действия.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина завершения выполнения экземпляра рабочего процесса.</summary>
      <returns>Причина завершения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда экземпляр рабочего процесса обнаруживает необработанное исключение.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord.#ctor(System.Guid,System.Int64,System.String,System.Activities.Tracking.ActivityInfo,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord.#ctor(System.Guid,System.String,System.Activities.Tracking.ActivityInfo,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Идентификатор определения действия для создающего действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord.FaultSource">
      <summary>Возвращает действие, вызвавшее ошибку.</summary>
      <returns>Действие, вызвавшее ошибку.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord.ToString">
      <summary>Возвращает данные записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord.UnhandledException">
      <summary>Возвращает данные о необработанном исключении.</summary>
      <returns>Данные об исключении.</returns>
    </member>
    <member name="T:System.Activities.Validation.ActivityValidationServices">
      <summary>Предоставляет функции проверки рабочего потока. </summary>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Resolve(System.Activities.Activity,System.String)">
      <summary>Возвращает действие рабочего потока с указанным идентификатором в указанном рабочем процессе.</summary>
      <returns>Действие рабочего процесса.</returns>
      <param name="root">Корневое действие рабочего процесса, содержащее элемент действия, к которому нужно обратиться.</param>
      <param name="id">Идентификатор, связанный с действием.</param>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)">
      <summary>Проверяет, что действие рабочего процесса правильно настроено в соответствии с логикой проверки.Эта логика может быть методом cacheMetadata проверяемых действий или ограничениями сборки и политики.</summary>
      <returns>Коллекция ошибок проверки, каждая из которых может содержать имя проверяемого действия, описательное сообщение, код ошибки и прочие данные.</returns>
      <param name="toValidate">Элемент с дерева действий рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity,System.Activities.Validation.ValidationSettings)">
      <summary>Проверяет, что действие рабочего процесса правильно настроено в соответствии с логикой проверки.Эта логика может быть методом cacheMetadata проверяемых действий или ограничениями сборки и политики.</summary>
      <returns>Коллекция ошибок проверки, каждая из которых может содержать имя неправильно настроенной операции, описательное сообщение, код ошибки или предупреждения и прочие данные.</returns>
      <param name="toValidate">Действие с дерева операций рабочего процесса.</param>
      <param name="settings">Объект, определяющий поведение метода проверки рабочего процесса, может подавить внутреннюю логику проверки, а также может содержать ограничения проверки.</param>
    </member>
    <member name="T:System.Activities.Validation.AddValidationError">
      <summary>Добавить указанную ошибку проверки действия к действию перед выполнением.</summary>
    </member>
    <member name="M:System.Activities.Validation.AddValidationError.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.AddValidationError" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.IsWarning">
      <summary>Возвращает или задает значение, которое указывает, является ли возникшая ошибка проверки предупреждением, а не ошибкой.</summary>
      <returns>Значение, true, если случившаяся ошибка является предупреждением, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.Message">
      <summary>Возвращает или задает буквенно-цифровую строку, в которой хранится описание ошибки.</summary>
      <returns>Описание ошибки.</returns>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.PropertyName">
      <summary>Возвращает или задает имя свойства, вызвавшего ошибку.</summary>
      <returns>Имя свойства, вызвавшего ошибку.</returns>
    </member>
    <member name="T:System.Activities.Validation.AssertValidation">
      <summary>Добавляет нарушение ограничения в список нарушений ограничений, если в результате проверки условия утверждения получено значение «false».</summary>
    </member>
    <member name="M:System.Activities.Validation.AssertValidation.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.AssertValidation" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.Assertion">
      <summary>Возвращает или задает значение, которое указывает, стало ли результатом проверки утверждения значение true или false.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.IsWarning">
      <summary>Возвращает или задает значение, которое указывает, стала ли результатом проверки утверждения ошибка или предупреждение.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.Message">
      <summary>Возвращает или задает текстовую строку, указывающую результаты проверки утверждения.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.PropertyName">
      <summary>Получает или задает имя свойства, связанного с нарушением утверждения.</summary>
      <returns>Параметр InArgument, содержащий имя свойства, связанного с проверкой утверждения.</returns>
    </member>
    <member name="T:System.Activities.Validation.Constraint">
      <summary>Обрабатывает ограничение проверки, используемое для проверки элемента рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Validation.Constraint.AddValidationError(System.Activities.NativeActivityContext,System.Activities.Validation.ValidationError)">
      <summary>Добавляет ошибку проверки к списку ошибок проверки выполнения, прикрепленных к контексту выполнения.</summary>
      <param name="context">Среда выполнения действия рабочего процесса.</param>
      <param name="error">Ошибка проверки, возникающая во время выполнении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает объект <see cref="T:System.Activities.NativeActivityMetadata" />, содержащий аргументы выполнения для проверки рабочего процесса.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.NativeActivityMetadata" />, который становится контейнером для списка аргументов выполнения проверки. </param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.Execute(System.Activities.NativeActivityContext)">
      <summary>Вызывает процесс, проверяющий элемент рабочего процесса.</summary>
      <param name="context">Среда выполнения действия рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.OnExecute(System.Activities.NativeActivityContext,System.Object,System.Activities.Validation.ValidationContext)">
      <summary>При реализации производным классом проверяет указанный объект при помощи указанного собственного действия и контекстов проверки.</summary>
      <param name="context">Выполнение действия рабочего процесса.</param>
      <param name="objectToValidate">Элемент рабочего процесса.</param>
      <param name="objectToValidateContext">Контекст проверяемого элемента рабочего процесса.</param>
    </member>
    <member name="F:System.Activities.Validation.Constraint.ValidationErrorListPropertyName">
      <summary>Имя свойства ограничения действия, являющегося списком ошибок выполнения рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Validation.Constraint`1">
      <summary>Обрабатывает ограничение, используемое для проверки элемента типа Т.</summary>
      <typeparam name="T">Тип проверяемого элемента.</typeparam>
    </member>
    <member name="M:System.Activities.Validation.Constraint`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.Constraint`1" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.Constraint`1.Body">
      <summary>Возвращает или задает логику проверки.</summary>
      <returns>Делегат действия <see cref="T:System.Activities.ActivityAction" />.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetChildSubtree">
      <summary>Возвращает дочерние элементы рабочего процесса из экземпляра действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetChildSubtree.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetChildSubtree" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetChildSubtree.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Аргумент для действия, предоставляющий сведения, необходимые для его процесса проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetParentChain">
      <summary>Возвращает коллекцию из всех элементов рабочего процесса, принадлежащих родительской оси действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetParentChain.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetParentChain" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetParentChain.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Коллекция <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetWorkflowTree">
      <summary>Возвращает дерево рабочего процесса из экземпляра действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetWorkflowTree.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetWorkflowTree" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetWorkflowTree.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Аргумент для действия, предоставляющий сведения, необходимые для его процесса проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationContext">
      <summary>Создает результаты на основании правильного контекста текущего узла дерева рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Validation.ValidationError">
      <summary>Представляет экземпляр ошибки проверки, произошедшей до выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сведения об ошибке.</param>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String,System.Boolean)">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке и предупреждающий знак.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="isWarning">Возвращает значение true, если ошибка является предупреждением; в противном случае — false.</param>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String,System.Boolean,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке, предупреждающий знак и имя свойства, вызвавшего ошибку.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="isWarning">Указывает, является ли ошибка предупреждением.</param>
      <param name="propertyName">Буквенно-цифровое имя свойства, выдавшего ошибку.</param>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Id">
      <summary>Уникальный буквенно-цифровой идентификатор действия <see cref="T:System.Activities.Activity" />, являющегося источником ошибки.Этот идентификатор уникален для каждого действия указанного рабочего процесса.</summary>
      <returns>Идентификатор.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.IsWarning">
      <summary>Возвращает значение, которое указывает, является ли ошибка проверки предупреждением, а не ошибкой.</summary>
      <returns>Возвращает значение true, если ошибка проверки является предупреждением; в противном случае — false.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Message">
      <summary>Возвращает буквенно-цифровое сообщение, предоставляющее информацию об ошибке проверки.</summary>
      <returns>Строка.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.PropertyName">
      <summary>Получает буквенно-цифровое имя свойства, выдавшего ошибку.</summary>
      <returns>Строка.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Source">
      <summary>Возвращает действие, ставшее источником ошибки.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.ToString">
      <summary>Преобразует имена и значения свойств ошибки проверки в перечисляющую их строку сообщения.</summary>
      <returns>Строка.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationResults">
      <summary>Содержит все ошибки проверки, выявленные методом <see cref="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)" /> при проверке рабочего процесса.Эти ошибки содержатся в коллекциях <see cref="P:System.Activities.Validation.ValidationResults.Errors" /> и <see cref="P:System.Activities.Validation.ValidationResults.Warnings" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.ValidationResults.Errors">
      <summary>Получает коллекцию со свойством «только чтение», содержащую ошибки проверки рабочего процесса.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая ошибки проверки рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationResults.Warnings">
      <summary>Получает коллекцию со свойством «только чтение», содержащую предупреждения проверки рабочего процесса.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая предупреждения проверки рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationSettings">
      <summary>Представляет коллекцию параметров для настройки поведения, которое будет проявлять метод <see cref="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)" />.Он также позволяет пользователю действия применять ограничения политики к рабочему процессу.</summary>
    </member>
    <member name="M:System.Activities.Validation.ValidationSettings.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationSettings" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.AdditionalConstraints">
      <summary>Получает словарь пар «тип-ограничение».Каждое дополнительное ограничение, добавленное в словарь, будет применено к каждому действию указанного типа в проверяемом рабочем процессе.</summary>
      <returns>Список типа словаря, содержащий ограничения и типы. </returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.OnlyUseAdditionalConstraints">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать дополнительные ограничения проверки исключительно для проверки рабочего процесса.Если задано значение true, все проверки, содержащиеся внутри самого действия, будут пропускаться.</summary>
      <returns>Принимает значение true, если дополнительные ограничения должны использоваться эксклюзивно, и значение false — в противном случае.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.SingleLevel">
      <summary>Возвращает или задает значение, указывающее, проверяется ли предоставленное действие и его дочерние и субдочерние действия или только предоставленное действие.</summary>
      <returns>Значение true, если проверяется только сам элемент без проверок его дочерних элементов; в противном случае — значение false, если проверяется элемент, его дочерние и суб-дочерние элементы.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityWithResultConverter">
      <summary>Предоставляет преобразование для конечного типа операции действия рабочего процесса. </summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultConverter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultConverter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultConverter" /> с указанным типом, в который преобразуется результат действия.</summary>
      <param name="type">Тип данных, в который будет преобразован результат действия.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityWithResultValueSerializer">
      <summary>Убедитесь, что результат действия правильно преобразован в строку, пригодную для последовательной передачи.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultValueSerializer" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Возвращает указание на то, является ли исходный объект выражением <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />, которое можно сериализовать в строку.</summary>
      <returns>Возвращает значение true, если выражение можно сериализовать; в противном случае — false.</returns>
      <param name="value">Объект <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />, проверяемый на возможность преобразования в строку для последовательной передачи.</param>
      <param name="context">Определяет контекст операции сериализации <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Выполняет сериализацию заданного объекта в строку.</summary>
      <returns>Строковая версия сериализуемого выражения.</returns>
      <param name="value">Объект, преобразуемый в строку для последовательной передачи.</param>
      <param name="context">Определяет контекст для сериализации объекта, преобразовываемого в строку.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityXamlServices">
      <summary>Создание экземпляра дерева действий, описанного в XAML.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderReader(System.Xaml.XamlReader)">
      <summary>Сопоставляет дерево действий x:Class из указанного модуля чтения с объектом <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Средство чтения <see cref="T:System.Xaml.XamlReader" />, которое выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием x:Class XAML.</returns>
      <param name="innerReader">Содержимое x:Class.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderReader(System.Xaml.XamlReader,System.Xaml.XamlSchemaContext)">
      <summary>Сопоставляет дерево действий x:Class из указанного модуля чтения с объектом <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" /> с использованием указанного контекста схемы.</summary>
      <returns>Средство чтения <see cref="T:System.Xaml.XamlReader" />, которое выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием x:Class XAML.</returns>
      <param name="innerReader">Содержимое x:Class.</param>
      <param name="schemaContext">Контекст схемы.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderWriter(System.Xaml.XamlWriter)">
      <summary>Сопоставляет дерево действий <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" /> из указанного модуля записи с деревом действий x:Class.</summary>
      <returns>Средство чтения <see cref="T:System.Xaml.XamlWriter" />, которое выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием x:Class XAML.</returns>
      <param name="innerWriter">Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.IO.Stream)">
      <summary>Сопоставляет дерево действий x:Class из указанного модуля потока с <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
      <param name="stream">Содержимое x:Class.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.Xaml.XamlReader)">
      <summary>Сопоставляет дерево действий x:Class из указанного модуля чтения с объектом <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
      <param name="innerReader">Содержимое x:Class.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.Xaml.XamlReader,System.Xaml.XamlSchemaContext)">
      <summary>Сопоставляет дерево действий x:Class из указанного модуля чтения с объектом <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" /> с использованием указанного контекста схемы.</summary>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
      <param name="innerReader">Содержимое x:Class.</param>
      <param name="schemaContext">Контекст схемы.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.Stream)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном потоке.</summary>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
      <param name="stream">Определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.TextReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения текста.</summary>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
      <param name="textReader">Определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.String)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном файле.</summary>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
      <param name="fileName">Файл, содержащий определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xaml.XamlReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XAML.</summary>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
      <param name="xamlReader">Определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xml.XmlReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XML.</summary>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
      <param name="xmlReader">Определение рабочего процесса.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.ArgumentValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.Activities.Argument" /> в экземпляры <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ArgumentValueSerializer" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать указанный объект в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае используется значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует указанный объект в <see cref="T:System.String" />.</summary>
      <returns>Представление <see cref="T:System.String" /> указанного объекта.</returns>
      <param name="value">Объект, преобразуемый в <see cref="T:System.String" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.FuncDeferringLoader">
      <summary>Представляет объект, загружающий экземпляр сохраненной функции.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.FuncDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Загружает экземпляр функции, пригодной к использованию в любой точке для десериализации списка узлов.</summary>
      <returns>Экземпляр функции.</returns>
      <param name="xamlReader">Список сериализованных узлов.</param>
      <param name="context">Контекст, предоставляющий информацию, необходимую для синтаксического анализа.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Сериализует указанный объект <see cref="T:System.Object" /> в список узлов Xaml.</summary>
      <returns>Модуль чтения Xaml.</returns>
      <param name="value">Объект, предназначенный для преобразования в список узлов Xaml.</param>
      <param name="serviceProvider">Объект, предоставляющий контекстную информацию для сериализации. </param>
    </member>
    <member name="T:System.Activities.XamlIntegration.InArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.InArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.InArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.InOutArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.InOutArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InOutArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InOutArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InOutArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InOutArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.InOutArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.IValueSerializableExpression">
      <summary>Предоставляет методы преобразования выражений в строки.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать выражение в строку.</summary>
      <returns>Значение true, если выражение может быть преобразовано в строку; в противном случае ― значение false.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует выражение в строку.</summary>
      <returns>Строковое представление выражения.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.OutArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.OutArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.OutArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.OutArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.OutArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.OutArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.OutArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1">
      <summary>Предоставляет доступ к свойствам, содержащимся в документе x:Class.</summary>
      <typeparam name="T">Тип значения связанного свойства.</typeparam>
    </member>
    <member name="M:System.Activities.XamlIntegration.PropertyReferenceExtension`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1" />.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.PropertyReferenceExtension`1.PropertyName">
      <summary>Возвращает или задает имя связанного свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.PropertyReferenceExtension`1.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает значение связанного свойства.</summary>
      <returns>Значение свойства.</returns>
      <param name="serviceProvider">Объект, предоставляющий службы для расширения разметки.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.TypeConverterBase">
      <summary>Предоставляет методы, которые производные классы преобразователя типов могут использовать для преобразования объектов в различные представления и из них.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>При переопределении в производном классе определяет, может ли указанный тип быть преобразован из.</summary>
      <returns>Значение true, если заданный можно преобразовать преобразования, в противном случае — значение false.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>При переопределении в производном классе определяет, может ли указанный тип быть преобразован в.</summary>
      <returns>Значение true, если возможно преобразование в указанный тип; в противном случае используется значение false.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразование указанного значения в новое представление, указанное производным классом (при переопределении в производном классе).</summary>
      <returns>Преобразованное значение.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />.Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразование указанного значения в указанное представление (при переопределении в производном классе).</summary>
      <returns>Преобразованное значение.</returns>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />.Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
    </member>
  </members>
</doc>