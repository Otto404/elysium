<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary>Указывает типы для устаревших отчетов по характеристикам расширения разметки XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />. </summary>
      <param name="type">Возвращаемый тип, сообщаемый этим атрибутом. </param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary>Получает или задает возвращаемый тип, сообщаемый этим атрибутом. </summary>
      <returns>Возвращаемый тип, сообщаемый этим атрибутом. </returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary>Указывает, что свойство или тип должны обрабатываться как свойство окружения.Концепция окружения относится к тому, как XAML-процессоры определяют владельцев типа членов.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary>Реализует поддержку x:Array для общей реализации процессора Язык XAML в среде CLR.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" />.В результате создается пустой массив.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" /> на основе предоставленного необработанного массива.</summary>
      <param name="elements">Массив для заполнения расширения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" /> и инициализирует тип массива. </summary>
      <param name="arrayType">Тип объекта нового массива.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayType" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary>Добавляет предоставленный объект в конец массива. </summary>
      <param name="value">Объект, который добавляется в конец массива.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary>Добавляет текстовый узел как новый элемент массива.</summary>
      <param name="text">Текст, добавляемый в конец массива.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary>Получает содержимое массива.Настраивается в XAML с использованием синтаксиса задания коллекции XAML.</summary>
      <returns>Содержимое массива.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает массив, размер которого соответствует количеству объектов, предоставленных в значениях <see cref="P:System.Windows.Markup.ArrayExtension.Items" />. </summary>
      <returns>Созданный массив.</returns>
      <param name="serviceProvider">Объект, способный предоставлять службы для расширения разметки.</param>
      <exception cref="T:System.InvalidOperationException">Предоставлено значение для массива, не предоставившего тип.— или —Имеется несоответствие типов между объявленным типом массива и одним из его элементов.В данном случае произойдет внутреннее исключение <see cref="T:System.InvalidCastException" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary>Получает или задает тип массива, создаваемого при вызове метода <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns>Тип данного массива.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary>Указывает, что свойство может быть инициализировано в параметре конструктора, не являющегося используемым по умолчанию, с заданным именем.Эти сведения предназначены, главным образом, для сериализации XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName">Имя конструктора, который будет инициализировать связанное свойство.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary>Получает имя параметра конструктора, который будет инициализировать связанное свойство.</summary>
      <returns>Имя конструктора.При резервировании среды CLR соответствует классу <see cref="P:System.Reflection.ParameterInfo.Name" /> подходящего параметра конструктора.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>Показывает, какое свойство типа является свойством содержимого XAML.Обработчик XAML использует эту информацию, обрабатывая дочерние элементы XAML представлений XAML типа атрибута.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, используя указанное имя.</summary>
      <param name="name">Имя свойства, которое является свойством содержимого.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>Получает или задает имя свойства, которое является свойством содержимого.</summary>
      <returns>Имя свойства, которое является свойством содержимого.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary>Задает один или несколько типов в связанном типе коллекции, которые будут использоваться как оболочка для внешнего содержимого.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />. </summary>
      <param name="contentWrapper">Объект <see cref="T:System.Type" />, объявленный как оболочка содержимого для типа коллекции.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary>Получает тип, объявленный как оболочка содержимого для типа коллекции, связанного с данным атрибутом.</summary>
      <returns>Тип, объявленный как оболочка содержимого для типа коллекции.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary>Определяет, эквивалентно ли заданное значение <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> данному <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> путем сравнения свойств <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <returns>true, если свойства <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> равны; в противном случае — false.</returns>
      <param name="obj">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary>Получает хэш-код для данного экземпляра.</summary>
      <returns>Целочисленный хэш-код</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary>Возвращает уникальный идентификатор этого атрибута. </summary>
      <returns>Уникальный идентификатор данного атрибута.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.DateTime" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный класс <see cref="T:System.String" /> быть преобразован в экземпляр структуры <see cref="T:System.DateTime" />.</summary>
      <returns>true, если значение может быть преобразовано; в противном случае — false.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект быть преобразован в класс <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует класс <see cref="T:System.String" /> в структуру <see cref="T:System.DateTime" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.DateTime" /> на основе предоставленного значения <paramref name="value" />.</returns>
      <param name="value">Строка для преобразования в структуру <see cref="T:System.DateTime" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.DateTime" /> в <see cref="T:System.String" />.</summary>
      <returns>Представление строк заданной структуры <see cref="T:System.DateTime" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.NotSupportedException">Значением параметра <paramref name="value" /> не является <see cref="T:System.DateTime" /> или является null.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary>Указывает, что связанное свойство зависит от значения другого свойства.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name">Свойство, от которого зависит свойство, связанное с данным <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary>Получает имя связанного свойства, объявленного в его классе <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>Имя связанного свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary>Получает уникальный идентификатор для класса <see cref="T:System.Windows.Markup.DependsOnAttribute" />. </summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary>Задает свойство связанного класса, который предоставляет значение неявного ключа.Неявные ключи используются в качестве ключей, а не в качестве явных атрибутов x:Key, определенных в XAML для элементов коллекций <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name">Имя свойства, которое предоставляет значение неявного ключа.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary>Возвращает имя свойства, которое предоставляет значение неявного ключа.</summary>
      <returns>Имя свойства, которое предоставляет значение неявного ключа.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary>Предоставляет поддержку компиляции разметки и соответствующих средств для именованных элементов XAML и для присоединения к ним обработчиков событий.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary>Присоединяет события и имена к откомпилированному содержимому. </summary>
      <param name="connectionId">Токен идентификации, чтобы различать вызовы.</param>
      <param name="target">Конечный объект, к которому подключаются имена и события.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary>Загружает откомпилированную страницу компонента.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary>Определяет контракт для способа доступа к именам элементов в определенной области имен XAML, а также способа обеспечения уникальности имен в этой области имен XAML. </summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary>Возвращает объект, имеющий предоставленное идентифицирующее имя. </summary>
      <returns>Данный объект, если он найден.Возвращает null, если объект с таким именем не найден.</returns>
      <param name="name">Идентификатор имени для запрашиваемого объекта.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary>Регистрирует предоставленное имя в текущей области имен XAML. </summary>
      <param name="name">Регистрируемое имя.</param>
      <param name="scopedElement">Элемент, на который ссылается предоставленное имя <paramref name="name" />.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary>Отменяет регистрацию предоставленного имени в текущей области имен XAML. </summary>
      <param name="name">Имя, регистрация которого отменяется.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary>Унифицирует поддержку перечисляемых типов, коллекций и словарей, которые полезны для предоставления словаря имен в пространстве имен XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary>Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary>Получает сообщаемый целевой объект.</summary>
      <returns>Сообщаемый целевой объект.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary>Получает идентификатор для сообщаемого целевого свойства.</summary>
      <returns>Идентификатор для сообщаемого целевого свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary>Запрашивает, должно ли заданное свойство в текущей области обрабатываться как свойство окружения.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary>Запрашивает, можно ли считать заданное именованное свойство в текущей области свойством окружения.</summary>
      <returns>Значение true, если запрашиваемое свойство можно считать свойством окружения; в противном случае — значение false.</returns>
      <param name="propertyName">Имя свойства, состояние окружения которого необходимо проверить.</param>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary>Представляет службу, которая может использовать контекст приложения для разрешения предоставленного относительного URI в абсолютный URI.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary>Получает или задает базовый URI текущего контекста приложения. </summary>
      <returns>Базовый URI контекста приложения.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary>Определяет контекст, который предоставляется интерфейсу <see cref="T:System.Windows.Markup.ValueSerializer" />.Контекст может быть использован для разрешения особых случаев сериализации или других режимов сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Получает <see cref="T:System.Windows.Markup.ValueSerializer" /> для заданного дескриптора свойства.</summary>
      <returns>
        <see cref="T:System.Windows.Markup.ValueSerializer" />, способный сериализовать заданное свойство.</returns>
      <param name="descriptor">Дескриптор преобразуемого свойства.</param>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary>Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, связанный с заданным типом.</summary>
      <returns>
        <see cref="T:System.Windows.Markup.ValueSerializer" />, способный сериализовать заданный тип.</returns>
      <param name="type">Тип преобразуемого значения.</param>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary>Представляет службу, которая преобразует именованные элементы разметки XAML в соответствующий тип среды CLR.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary>Преобразует именованный тип XAML в соответствующий класс <see cref="T:System.Type" /> среды CLR.</summary>
      <returns>Класс <see cref="T:System.Type" />, в который разрешается параметр <paramref name="qualifiedTypeName" /></returns>
      <param name="qualifiedTypeName">Имя разрешаемого типа XAML.Имя типа также определяется префиксом пространства имен XML.Иначе предполагается текущее пространство имен XML по умолчанию.</param>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary>Предоставляет базовый класс для расширений разметки XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса, производного от класса <see cref="T:System.Windows.Markup.MarkupExtension" />. </summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>При реализации в производном классе возвращает объект, заданный как значение целевого свойства данного расширения разметки. </summary>
      <returns>Значение объекта, которое следует задать свойству, при применении расширения. </returns>
      <param name="serviceProvider">Объект, способный предоставлять службы для расширения разметки.</param>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary>Сообщает о типе, который может возвращать расширение разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> с использованием предоставленного <see cref="T:System.Type" />.</summary>
      <param name="returnType">Возвращаемый тип, сообщаемый этим Атрибут NET Framework.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary>Не используйте; см. "Примечания".</summary>
      <param name="returnType">Возвращаемый тип, сообщаемый этим Атрибут NET Framework.</param>
      <param name="expressionType">Не используйте; см. "Примечания".</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary>Не используйте; см. "Примечания".</summary>
      <returns>Не используйте; см. "Примечания".</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary>Получает возвращаемый тип <see cref="T:System.Windows.Markup.MarkupExtension" />, сообщаемый этим Атрибут NET Framework.</summary>
      <returns>Типобезопасный возвращаемый тип данной реализации <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> расширения разметки, где применяется <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />  Применяется Атрибут NET Framework.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary>Предоставляет базовый класс, используемый для методики разметки, предназначенной для определения членов класса в декларативной XAML-разметке.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MemberDefinition" />. </summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary>При реализации в производном классе получает или задает имя определяемого члена.</summary>
      <returns>Имя определяемого члена.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary>Предоставляет преобразование типов для преобразования строкового имени в ссылку на объект с этим именем или для возврата имени объекта из графа объекта.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Возвращает значение, указывающее, может ли данный преобразователь выполнять преобразование объекта одного типа в другой объект. </summary>
      <returns>Значение true, если данный преобразователь может выполнить преобразование; в противном случае — значение false. </returns>
      <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, представляющий контекст формата. </param>
      <param name="sourceType">
        <see cref="T:System.Type" />, представляющий тип, из которого требуется выполнить преобразование. </param>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Возвращает значение, указывающее, может ли данный преобразователь преобразовать объект в указанный тип назначения. </summary>
      <returns>Значение true, если преобразователь может выполнить преобразование; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, представляющий контекст формата. </param>
      <param name="destinationType">Тип, в который выполняется преобразование.</param>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует данный объект в другой объект, используя заданный контекст и сведения о языке и региональных параметрах. </summary>
      <returns>Возвращаемый объект, которым может быть любой объект с сопоставлением типов в соответствующих резервных сборках, который может быть объявлен в XAML со ссылкой на XAML-имя.</returns>
      <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, представляющий контекст формата. </param>
      <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, который следует использовать в качестве текущего языка и региональных параметров.</param>
      <param name="value">Строка имени ссылки для преобразования.</param>
      <exception cref="T:System.InvalidOperationException">Значение <paramref name="value" /> равно строке null или пустой строке.— или —Служба <see cref="T:System.Xaml.IXamlNameResolver" /> отсутствует или является недопустимой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразовывает объект в указанный тип.Предназначен для возврата имен ссылок XAML для объектов в графе объекта.</summary>
      <returns>Имя ссылки входного объекта <paramref name="value" />.</returns>
      <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, представляющий контекст формата. </param>
      <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, который следует использовать в качестве текущего языка и региональных параметров.</param>
      <param name="value">Объект, для которого следует извлечь имя ссылки.</param>
      <param name="destinationType">Возвращаемый тип.Следует всегда ссылаться на тип <see cref="T:System.String" />.</param>
      <exception cref="T:System.InvalidOperationException">Служба <see cref="T:System.Xaml.IXamlNameProvider" /> отсутствует или является недопустимой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null;</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary>Задает свойство связанного класса, который предоставляет значение пространства имен XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> с заданным именем.</summary>
      <param name="name">Имя свойства для типа атрибута, который предоставляет пространство имен XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> с заданными именем и типом.</summary>
      <param name="name">Имя присоединяемого элемента, который предоставляет область имен XAML.</param>
      <param name="type">Тип владельца присоединяемого элемента, который предоставляет область имен XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary>Возвращает имя свойства, которое предоставляет пространство имен XAML.</summary>
      <returns>Строковое значение, являющееся именем свойства, которое предоставляет пространство имен XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary>Получает тип владельца вложенного свойства зависимостей, предоставляющего поддержку области имен XAML.</summary>
      <returns>Значение <see cref="T:System.Type" />, представляющее собой тип владельца вложенного свойства зависимостей, которое предоставляет поддержку области имен XAML, или значение null.См. примечания.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary>Реализует расширение разметки XAML, чтобы вернуть объект со значением NULL, который можно использовать для явной установки значений null в XAML. </summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NullExtension" />. </summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary>Предоставляет значение null для использования в качестве значения как вывода из расширения разметки. </summary>
      <returns>Пустая ссылка.</returns>
      <param name="serviceProvider">Объект, способный предоставлять службы для реализации расширения разметки.</param>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary>Поддерживает методику разметки, используемую для определения свойств класса в декларативной XAML-разметке.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.PropertyDefinition" />. </summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary>Получает список связанных атрибутов среды CLR.</summary>
      <returns>Список связанных атрибутов.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary>Получает или задает уровень доступа определенного свойства.</summary>
      <returns>Уровень доступа определенного свойства в строковом формате.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary>Получает или задает имя определяемого свойства.</summary>
      <returns>Имя определяемого свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary>Получает или задает <see cref="T:System.Xaml.XamlType" /> определяемого свойства.</summary>
      <returns>Идентификатор XAML-типа определяемого свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary>Реализует расширение разметки {x:Reference}.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.Reference" /> с аргументом <paramref name="name" />.</summary>
      <param name="name">XAML-имя элемента для ссылки.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary>Получает или задает XAML-имя, для которого нужно получить ссылку.</summary>
      <returns>XAML-имя элемента, для которого нужно получить ссылку.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает объект, являющийся значением целевого свойства.Для типа <see cref="T:System.Windows.Markup.Reference" /> используется объект, на который ссылается предоставляемое имя <see cref="P:System.Windows.Markup.Reference.Name" />.</summary>
      <returns>Значение целевого свойства.Им может быть любой объект с сопоставлением типов в соответствующих резервных сборках.</returns>
      <param name="serviceProvider">Класс, реализующий службу <see cref="T:System.Xaml.IXamlNameResolver" />. </param>
      <exception cref="T:System.InvalidOperationException">Значение <paramref name="serviceProvider" /> не реализует службу <see cref="T:System.Xaml.IXamlNameResolver" />.— или —Значение <see cref="P:System.Windows.Markup.Reference.Name" /> не было задано посредством конструирования или позиционного использования.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> имеет значение null;</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary>Представляет атрибут уровня сборки, используемый для идентификации значения свойства RootNamespace в файле проекта Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace">Корневое значение пространства имен.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary>Получает строку, соответствующую значению свойства RootNamespace в файле проекта Visual Studio.</summary>
      <returns>Строка, соответствующая значению свойства RootNamespace в файле проекта Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary>Представляет атрибут на уровне типа, который сообщает, какое свойство типа сопоставлено атрибуту XAML x:Name attribute.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name">Имя свойства, используемого в качестве свойства x:Name, эквивалентного классу.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary>Получает или задает имя свойства времени выполнения, заданное данным <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary>Реализует расширение разметки, возвращающее ссылки на статическое поле и свойство. </summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.StaticExtension" /> с использованием предоставленной строки <paramref name="member" />.</summary>
      <param name="member">Строка, идентифицирующая член, на который делается ссылка.В этой строке используется формат префикс:имя_типа.имя_поля_или_свойства. Префикс представляет собой префикс сопоставления для пространства имен XAML и необходим только для того, чтобы сослаться на статические значения, не сопоставленные пространству имен XAML по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary>Получает или задает имя строки элемента, который используется для разрешения статического поля или свойства, основанного на распознавателе типов с предоставленными службами.</summary>
      <returns>Строка, идентифицирующая член, на который делается ссылка.См. примечания.</returns>
      <exception cref="T:System.ArgumentNullException">Попытка задать свойству <see cref="P:System.Windows.Markup.StaticExtension.Member" /> значение null.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary>Получает или задает класс <see cref="T:System.Type" />, который определяет возвращаемый статический элемент.</summary>
      <returns>Класс <see cref="T:System.Type" />, который определяет возвращаемый статический элемент.</returns>
      <exception cref="T:System.ArgumentNullException">Попытка задать свойству <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> значение null.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает значение объекта, которое следует задать свойству при применении данного расширения.Для класса <see cref="T:System.Windows.Markup.StaticExtension" /> возвращаемое значение является статическим и вычисляется для запрошенного статического члена.</summary>
      <returns>Статическое значение, которое следует задать свойству при применении расширения. </returns>
      <param name="serviceProvider">Объект, способный предоставлять службы для расширения разметки.Предполагается, что поставщик предоставит службу, которая реализует распознаватель типов (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <exception cref="T:System.InvalidOperationException">Во время оценки значением <paramref name="member" /> для расширения является null.</exception>
      <exception cref="T:System.ArgumentException">Некоторые части строки <paramref name="member" /> не были правильно проанализированы.— или —<paramref name="serviceProvider" /> не предоставляет службу для <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.— или —Значение <paramref name="member" /> не разрешается как статический член.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> имеет значение null;</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary>Указывает обработчикам XAML, что пробелы вокруг элементов типа в разметке должны быть сокращены при сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary>Реализует расширение разметки, которое возвращает класс <see cref="T:System.Type" />, основанный на вводе строки. </summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TypeExtension" />, инициализируя значение <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> на основе предоставленной строки <paramref name="typeName" />.</summary>
      <param name="typeName">Строка, идентифицирующая тип, на который делается ссылка.В этой строке используется формат префикс:имя_класса. Префикс представляет собой префикс сопоставления для пространства имен XAML и необходим только для того, чтобы сослаться на типы, не сопоставленные пространству имен XAML по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Попытка указать свойство <paramref name="typeName" /> как null.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TypeExtension" />, непосредственно объявляя данный тип.</summary>
      <param name="type">Тип, который должен быть представлен данным <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="type" /> ― null.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает объект, который следует задать в свойстве, в отношении которого применяется данное расширение.Для <see cref="T:System.Windows.Markup.TypeExtension" /> это значение <see cref="T:System.Type" />, как оно оценено для запрошенного имени типа.</summary>
      <returns>Класс <see cref="T:System.Type" />, который следует задать свойству при применении расширения. </returns>
      <param name="serviceProvider">Объект, способный предоставлять службы для расширения разметки.Предполагается, что поставщик предоставит службу для интерфейса <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <exception cref="T:System.InvalidOperationException">Значением <paramref name="member" /> для данного расширения является null.</exception>
      <exception cref="T:System.ArgumentException">Некоторые части строки <paramref name="typeName" /> не анализируются правильно.— или —<paramref name="serviceProvider" /> не предоставляет службу для <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.— или —Значение <paramref name="typeName" /> не удалось распознать на тип.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serviceProvider" /> ― null.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary>Получает или задает сведения о типе для данного расширения.</summary>
      <returns>Устанавливаемый тип.В среде выполнения это может быть значение null для метода доступа Get, однако значение null задать невозможно.</returns>
      <exception cref="T:System.ArgumentNullException">Попытка задать значение null.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary>Получает или задает имя типа, представленного данным расширением разметки.</summary>
      <returns>Строка, определяющая тип.Эта строка использует формат prefix:className. (prefix является сопоставлением префикса пространства имен XML и единственным требованием для ссылочных типов, которые не сопоставляются пространству имен XML в WPF по умолчанию (http://schemas.microsoft.com/WinFX/2006/XAML/Presentation).</returns>
      <exception cref="T:System.ArgumentNullException">Попытка задать значение null.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary>Отображает принадлежащее среде CLR свойство класса, которое предоставляет значение атрибута Атрибут x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name">Имя свойства, которое предоставляет значение Атрибут x:Uid.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary>Получает имя свойства среды CLR, которое представляет значение атрибута Атрибут x:Uid.</summary>
      <returns>Имя свойства среды CLR, которое представляет атрибут Атрибут x:Uid.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary>Показывает, строится ли данный тип сверху вниз в ходе создания графа объекта XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable">Определяет, можно ли использовать связанный класс во время инициализации или нет.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary>Возвращает значение, которое показывает, можно ли использовать связанный класс во время инициализации.</summary>
      <returns>Значение true, если связанный класс можно использовать во время инициализации; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary>Абстрактный класс, который определяет поведение преобразования сериализации из представления объекта.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>При переопределении в производном классе определяет, может ли указанный класс <see cref="T:System.String" /> быть преобразован в экземпляр типа, который поддерживается реализацией класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <returns>true, если значение может быть преобразовано; в противном случае — false.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования. </param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>При переопределении в производном классе определяет, может ли указанный объект быть преобразован в класс <see cref="T:System.String" />.</summary>
      <returns>true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>При переопределении в производном классе преобразует класс <see cref="T:System.String" /> в экземпляр типа, который поддерживается реализацией класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <returns>Новый экземпляр типа, поддерживаемого данной реализацией <see cref="T:System.Windows.Markup.ValueSerializer" /> на основе заданного <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>При переопределении в производном классе преобразует указанный объект в класс <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary>Возвращает исключение, возникающее, если преобразование не может быть выполнено.</summary>
      <returns>Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование ConvertFrom.</returns>
      <param name="value">Объект, который не удалось преобразовать.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary>Возвращает исключение, возникающее, если преобразование не может быть выполнено.</summary>
      <returns>Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование ConvertTo.</returns>
      <param name="value">Объект, который не удалось преобразовать.</param>
      <param name="destinationType">Тип, представляющий тип, в который осуществлялось преобразование.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Получает класс <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный свойству передачей дескриптора свойства CLR.</summary>
      <returns>Сериализатор, связанный с заданным свойством.Может возвращать значение null.</returns>
      <param name="descriptor">Дескриптор свойства CLR сериализуемого свойства.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary>Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного свойства с использованием заданного контекста.</summary>
      <returns>Сериализатор, связанный с заданным свойством.</returns>
      <param name="descriptor">Дескриптор сериализуемого свойства.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary>Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа.</summary>
      <returns>Сериализатор, связанный с заданным типом.Может возвращать значение null.</returns>
      <param name="type">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary>Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа с использованием заданного контекста.</summary>
      <returns>Сериализатор, связанный с заданным типом.</returns>
      <param name="type">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Получает перечисление типов, на которые ссылается <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <returns>Типы, преобразуемые данным сериализатором.</returns>
      <param name="value">Сериализуемое значение.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Определяет класс <see cref="T:System.Windows.Markup.ValueSerializer" />, который должен использоваться типом или свойством при его сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ValueSerializerAttribute" />, используя строку с именем искомого типа с указанием сборки.</summary>
      <param name="valueSerializerTypeName">Строка с именем искомого типа с указанием сборки для использования класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> с помощью указанного типа.</summary>
      <param name="valueSerializerType">Тип, представляющий тип класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Получает тип класса <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный этим атрибутом.</summary>
      <returns>Тип класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Получает полное имя сборки типа <see cref="T:System.Windows.Markup.ValueSerializer" /> для данного типа или свойства.</summary>
      <returns>Имя искомого типа с указанием сборки.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary>Обозначает, что тип коллекции должен быть обработан обработчиком XAML как значимый пробел.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary>Указывает, что классу или свойству соответствует использование отложенной загрузки для XAML (в частности, поведение шаблона), и сообщает о классе, включающем задержку, и о его типе назначения/содержимого.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, используя строковые имена типов. </summary>
      <param name="loaderType">Строковое имя типа для реализации, используемой для задержки загрузки.</param>
      <param name="contentType">Строковое имя типа назначения/содержимого для задержки загрузки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="loaderType" /> или <paramref name="contentType" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, используя значения <see cref="T:System.Type" /> среды CLR. </summary>
      <param name="loaderType">Значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</param>
      <param name="contentType">Значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="loaderType" /> или <paramref name="contentType" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary>Получает значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</summary>
      <returns>Значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary>Получает строковое имя типа для реализации, используемой для задержки загрузки.</summary>
      <returns>Строковое имя типа для преобразователя, используемого для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary>Получает значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</summary>
      <returns>Значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary>Получает строковое имя типа назначения/содержимого для задержки загрузки.</summary>
      <returns>Строковое имя типа назначения/содержимого для задержки загрузки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary>Указывает, что класс может использовать расширение разметки для предоставления значения, и ссылается на обработчик, используемый для операций установки расширения разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />. </summary>
      <param name="xamlSetMarkupExtensionHandler">Имя обработчика, используемого для операций установки расширения разметки.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary>Получает имя обработчика, используемого для операций установки расширения разметки.</summary>
      <returns>Имя обработчика, используемого для операций установки расширения разметки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary>Предоставляет данные для обратных вызовов, происходящих, когда модуль записи объектов XAML задает значение с использованием расширения разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />. </summary>
      <param name="member">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="value">Ссылка расширения разметки, предоставляемая для устанавливаемого члена.</param>
      <param name="serviceProvider">Сведения о поставщике услуг, передаваемые в расширение разметки.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary>Предоставляет способ инициирования обратного вызова в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary>Получает ссылку <see cref="T:System.Windows.Markup.MarkupExtension" />, относящуюся к данному объекту <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns>Ссылка расширения разметки, относящегося к данному объекту <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary>Получает сведения о поставщике услуг, которые были переданы в расширение разметки.</summary>
      <returns>Сведения о поставщике услуг, которые были переданы в расширение разметки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary>Указывает, что класс может использовать преобразователь типов для предоставления значения, и ссылается на обработчик, используемый для вариантов установки преобразователя типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler">Имя обработчика, используемого для операций настройки преобразователя типов.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary>Получает значение инициализации (имя обработчика) <paramref name="xamlSetTypeConverterHandler" />, заданное в <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns>Значение <paramref name="xamlSetTypeConverterHandler" />, заданное в <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary>Предоставляет данные для обратных вызовов, происходящих, когда модуль записи XAML задает значение с использованием вызова преобразователя типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />. </summary>
      <param name="member">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="typeConverter">Вызываемый экземпляр преобразователя определенного типа.</param>
      <param name="value">Значение, предоставляемое для задаваемого члена.</param>
      <param name="serviceProvider">Сведения о поставщике услуг, которые могут использоваться классом <paramref name="typeConverter" />.</param>
      <param name="cultureInfo">Сведения о языке и региональных параметрах, которые могут использоваться классом <paramref name="typeConverter" /> при вызове метода <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> и других методов.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary>Предоставляет способ инициирования обратного вызова в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary>Получает сведения <see cref="T:System.Globalization.CultureInfo" />, которые могут использоваться классом преобразователя типов при вызове метода <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> и других методов.</summary>
      <returns>Сведения о языке и региональных параметрах, которые могут использоваться классом преобразователя типов </returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary>Получает сведения <see cref="T:System.IServiceProvider" />, которые могут использоваться классом преобразователя типов.</summary>
      <returns>Сведения о поставщике услуг, которые могут использоваться классом <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary>Получает вызываемый экземпляр <see cref="T:System.ComponentModel.TypeConverter" />, предоставляющий поведение преобразования.</summary>
      <returns>Преобразователь типов, предоставляющий поведение преобразования.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary>Предоставляет данные для обратных вызовов, инициируемых, когда <see cref="T:System.Xaml.XamlObjectWriter" /> задает определенные значения.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />. </summary>
      <param name="member">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="value">Значение, предоставляемое для члена.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary>При переопределении в производном классе предоставляет способ инициирования обратного вызова SetValue в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary>Получает или задает значение, определяющее, может ли вызывающий объект, использующий <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />, использовать значения без вызова <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns>Значение true, если значения были полезны и вызов <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> необязателен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary>Получает информацию о системе/схеме типов XAML для задаваемого члена.</summary>
      <returns>Устанавливаемая для члена информация о системе/схеме типов XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary>Получает значение, предоставляемое для задаваемого члена.</summary>
      <returns>Значение, предоставляемое для задаваемого члена.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary>Представляет литеральные данные, которые могут отображаться в качестве значения узла Value.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XData" />. </summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary>Получает или задает строку литерального значения, для которого <see cref="T:System.Windows.Markup.XData" /> служит оболочкой.</summary>
      <returns>Строка литерального значения.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary>Получает или задает модуль чтения литеральных данных.</summary>
      <returns>Модуль чтения литеральных данных.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary>Определяет свойство для связи с атрибутом xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name">Имя свойства для связи с атрибутом xml:lang.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary>Получает имя свойства, которое указывается в этом атрибуте.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary>Указывает, что пространство имен (как правило, одно, отмеченное в определенном ранее классе<see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />) содержится в новом пространстве имен.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace">URI исходного пространства имен XML.</param>
      <param name="newNamespace">URI содержащегося пространства имен XML.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="oldNamespace" /> или <paramref name="newNamespace" /> — null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary>Получает URI содержащегося пространства имен, переданный этим атрибутом.</summary>
      <returns>URI содержащегося пространства имен, переданный этим атрибутом.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary>Получает URI исходного пространства имен, переданный этим атрибутом.</summary>
      <returns>URI исходного пространства имен.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>Указывает сопоставление в сборке базы между пространством имен XML и пространством имен CLR, которое затем используется модулем записи объекта XAML для разрешения типа.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace">URI пространства имен XML.</param>
      <param name="clrNamespace">Пространство имен CLR.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xmlNamespace" /> или <paramref name="clrNamespace" /> — null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Получает или задает имя сборки, связанной с атрибутом. </summary>
      <returns>Имя сборки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Получает указанное в этом атрибуте пространство имен CLR </summary>
      <returns>Пространство имен среды CLR, заданное в виде строки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Получает указанный в этом атрибуте URI пространства имен XML.</summary>
      <returns>URI пространства имен XML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>Определяет рекомендуемый префикс для связывания с пространством имен XML для использования XAML при записи элементов и атрибутов в файл XAML (сериализации).</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace">URI пространства имен XML.</param>
      <param name="prefix">Рекомендуемая строка префикса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlNamespace" /> или <paramref name="prefix" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>Получает рекомендуемый префикс, связанный с этим атрибутом.</summary>
      <returns>Рекомендуемая строка префикса.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Получает связанный с этим атрибутом URI пространства имен XAML.</summary>
      <returns>URI пространства имен XAML. </returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary>Сообщает сведения о внешнем свойстве как части реализации объекта <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property">Идентификатор, представляющий внешнее свойство.</param>
      <param name="value">Сообщаемое значение.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary>Получает системный идентификатор типа XAML (<see cref="T:System.Xaml.XamlMember" />), представляющий внешнее свойство.</summary>
      <returns>Идентификатор, представляющий внешнее свойство.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary>Получает значение внешнего свойства.</summary>
      <returns>Значение внешнего свойства.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary>Предоставляет представление системного идентификатора типа XAML для присоединяемых членов, соответствующее строке в форме <paramref name="declaringType" />.<paramref name="memberName" />, для использования присоединяемого члена.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType">Компонент <paramref name="declaringType" /> идентификатора, который должен соответствовать имени свойства <see cref="P:System.Xaml.XamlMember.Type" /> его сведений системы типов XAML.</param>
      <param name="memberName">Компонент <paramref name="memberName" /> идентификатора, который должен соответствовать свойству <see cref="P:System.Xaml.XamlMember.Name" /> его сведений системы типов XAML.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary>Получает или задает значение компонента <paramref name="declaringType" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Значение компонента <paramref name="declaringType" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary>Определяет, равны ли значения этого экземпляра <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и указанного объекта, который также должен быть объектом <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Значение true, если <paramref name="obj" /> имеет тип <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и его значение совпадает со значением данного экземпляра; в противном случае — значение false. </returns>
      <param name="obj">Объект (должен быть <see cref="T:System.Xaml.AttachableMemberIdentifier" />, чтобы был возможен результат true). </param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary>Определяет, равны ли значения этого экземпляра и указанного объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Значение true, если объекты имеют одинаковые значения; в противном случае — значение false.</returns>
      <param name="other">Объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />, сравниваемый с текущим объектом <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary>Возвращает хэш-код для этого <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </summary>
      <returns>Целочисленный хэш-код. </returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary>Получает или задает значение компонента <paramref name="memberName" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Значение компонента <paramref name="memberName" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </summary>
      <returns>Значение true, если значение <paramref name="left" /> совпадает со значением <paramref name="right" />; в противном случае — значение false. </returns>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или null.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или null.</param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </summary>
      <returns>Значение true, если значение <paramref name="left" /> отличается от значения <paramref name="right" />; в противном случае — значение false.</returns>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или null.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или null.</param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет текущий объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущий объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />. </returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary>Предоставляет статические вспомогательные методы, получающие значения и сведения о методах доступа из свойства, допускающего присоединение, и работающие с хранилищем присоединенных свойств.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Копирует все пары "присоединяемое свойство/значение" из заданного хранилища присоединяемых свойств в конечный массив.</summary>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="array">Массив назначения.Это универсальный массив, который следует передавать без указания размерности; в нем должны содержаться компоненты <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и object.</param>
      <param name="index">Исходный индекс, по которому следует выполнять копирование.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary>Возвращает количество записей присоединяемых свойств для указанного хранилища.</summary>
      <returns>Количество записей в хранилище в виде целого значения.</returns>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary>Удаляет запись для указанного присоединяемого свойства из указанного хранилища.</summary>
      <returns>Значение true, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и удалена; в противном случае — значение false.</returns>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name">Идентификатор удаляемой записи присоединяемого свойства.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Задает значение для указанного присоединяемого свойства в указанном хранилище.</summary>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name">Идентификатор задаваемой записи присоединяемого свойства.</param>
      <param name="value">Устанавливаемое значение.</param>
      <exception cref="T:System.InvalidOperationException">Не удалось задать значение в хранилище. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Пытается получить значение для указанного присоединяемого свойства в указанном хранилище.Не создает исключение, если указанное присоединяемое свойство не существует в хранилище.</summary>
      <returns>Значение true, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение false.</returns>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name">Идентификатор строкового имени для получаемой записи присоединяемого свойства.</param>
      <param name="value">Выходной параметр.Конечный объект для значения, если объект <paramref name="name" /> существует в хранилище и имеет значение.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary>Пытается получить значение для указанного присоединяемого свойства в указанном хранилище, используя универсальную выходную форму.Не создает исключение, если указанное присоединяемое свойство не существует в хранилище.</summary>
      <returns>Значение true, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение false.</returns>
      <param name="instance">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name">Идентификатор получаемой записи присоединяемого свойства.</param>
      <param name="value">Выходной параметр.Конечный объект для значения, если объект <paramref name="name" /> существует в хранилище и имеет значение.</param>
      <typeparam name="T">Ожидаемый тип вывода.</typeparam>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary>Представляет службу, которая может возвращать элементы сведений внешних свойств или внешних типов преобразователям типов и расширениям разметки.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Возвращает перечислимый набор информационных элементов внешнего свойства для запрошенного набора свойств.</summary>
      <returns>Перечислимый набор сведений внешнего свойства для запрошенного набора свойств.Сведения о свойстве каждого возвращенного объекта <see cref="T:System.Xaml.AmbientPropertyValue" /> будут соответствовать одному из входных свойств <paramref name="properties" />.</returns>
      <param name="ceilingTypes">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов.Эти типы содержат требуемое внешнее свойство.Может принимать значение null.</param>
      <param name="properties">Задает один или несколько объектов идентификатора свойств, которые определяют свойства как внешние.</param>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary>Возвращает перечислимый набор экземпляров объектов возможных внешних типов для запрошенных типов.</summary>
      <returns>Перечислимый набор объектов для запрошенного набора.</returns>
      <param name="types">Набор типов, из которого извлекаются сведения о внешних типах.</param>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Возвращает один информационный элемент внешнего типа или свойства из запрошенного набора свойств на основе того, какое из таких свойств встретилось первым.</summary>
      <returns>Один информационный элемент внешнего свойства для первого найденного значения внешнего свойства из списка <paramref name="properties" />. </returns>
      <param name="ceilingTypes">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов.Эти типы содержат требуемое внешнее свойство.</param>
      <param name="properties">Задает один или несколько объектов, идентифицирующих свойства, которые должны рассматриваться как внешние.</param>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary>Возвращает первый соответствующий объект, являющийся возможным внешним типом для запрошенных типов.</summary>
      <returns>Первый результирующий объект для запрошенного набора.</returns>
      <param name="types">Набор типов, из которого извлекаются сведения о внешних типах.</param>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary>Представляет присоединяемое хранилище членов для объекта, в котором заданы присоединяемые члены.На это хранилище присоединяемых членов можно ссылаться с помощью объекта <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Копирует все пары "присоединяемый член/значение" из заданного хранилища присоединяемых членов в конечный массив.</summary>
      <param name="array">Массив назначения.Этот массив представляет собой универсальный массив, должен передаваться без указания размера и должен иметь компоненты <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и object.</param>
      <param name="index">Исходный индекс, по которому следует выполнять копирование.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary>Получает количество записей присоединяемых членов в данном хранилище присоединяемых членов.</summary>
      <returns>Количество записей в хранилище в виде целого значения.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary>Удаляет запись для указанного присоединяемого члена из указанного хранилища присоединяемых членов.</summary>
      <returns>Значение true, если запись присоединяемого члена для имени <paramref name="name" /> была найдена в хранилище и удалена; в противном случае — значение false.</returns>
      <param name="attachableMemberIdentifier">Системный идентификатор типа XAML для удаляемой записи присоединяемого члена.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Задает значение для указанного присоединяемого члена в указанном хранилище.</summary>
      <param name="attachableMemberIdentifier">Системный идентификатор типа XAML для задаваемой записи присоединяемого члена.</param>
      <param name="value">Устанавливаемое значение.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Пытается получить значение для указанного присоединяемого члена в указанном хранилище. </summary>
      <returns>Значение true, если запись присоединяемого члена для имени <paramref name="name" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение false.</returns>
      <param name="attachableMemberIdentifier">Системный идентификатор типа XAML для получаемой записи присоединяемого члена.</param>
      <param name="value">Выходной параметр.Конечный объект для значения, если объект <paramref name="attachableMemberIdentifier" /> существует в хранилище и имеет значение.</param>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary>Представляет службу, которая возвращает идентификатор системы типов для типа назначения.Тип назначения используется, когда для операции Set создаются косвенные отчеты типа назначения на основе отражения или других механизмов.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary>Возвращает объект <see cref="T:System.Type" /> среды CLR, обозначающий конечный тип для соответствующего преобразователя типов или расширения разметки в текущей позиции потока узлов XAML и с использованием активного контекста схемы.</summary>
      <returns>Значение <see cref="T:System.Type" /> среды CLR для конечного типа.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary>Представляет службу, которая может возвращать рекомендуемый префикс для сопоставления пространства имен XAML с потребителями, такими как среда разработки или сериализатор.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary>Возвращает рекомендуемый префикс для использования в разметке XAML на основе заданного идентификатора пространства имен XAML.</summary>
      <returns>Рекомендуемый префикс.</returns>
      <param name="ns">Идентификатор пространства имен XAML, для которого требуется получить префикс, заданный в виде строки (не универсального кода ресурса).</param>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary>Описывает службу, которая может возвращать корневой объект анализируемой разметки.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary>Получает корневой объект из разметки или графа объектов.</summary>
      <returns>Корневой объект.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary>Предоставляет службу, которая представляет собой элемент управления индексированными узлами для простой реализации средства чтения XAML, основанной на узлах.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary>Получает число узлов в текущем наборе внешних узлов.</summary>
      <returns>Число узлов в текущем наборе внешних узлов.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary>Получает или задает индексный номер, показывающий текущее положение средства чтения в терминах индексированного списка узлов.</summary>
      <returns>Индексный номер текущего положения средства чтения.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary>Описывает службу для передачи сведений о текстовой строке в реализации средства чтения XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary>Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns>Значение true, если сведения о строке доступны; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary>Получает сообщаемый номер строки.</summary>
      <returns>Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary>Получает сообщаемое положение в строке.</summary>
      <returns>Сообщаемое положение в строке.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary>Описывает службу, в которой средство записи XAML может использовать сообщенные сведения о строке и потенциально включить их в выходные данные.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary>Собирает сведения о строке.</summary>
      <param name="lineNumber">Номер строки для потенциального использования в выходных данных.</param>
      <param name="linePosition">Положение в строке для потенциального использования в выходных данных.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary>Получает значение, которое определяет, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</summary>
      <returns>Значение true, если сведения о строке используются реализацией; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary>Предоставляет службу, которая используется во время операций сохранения и записи для ввода объекта и возвращения имени XAML (x:Name).</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary>Извлекает имя предоставленного объекта графа объектов.</summary>
      <returns>Имя x:Name запрошенного объекта.</returns>
      <param name="value">Объект, имя которого требуется получить.</param>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary>Описывает службу, которая может возвращать объекты, указанные по имени, или, в качестве альтернативы, возвращает токен.Служба может также возвращать перечисляемый набор всех именованных объектов из области имен XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary>Возвращает перечисляемый набор всех именованных объектов из области имен XAML.</summary>
      <returns>Перечисляемый набор объектов <see cref="T:System.Collections.Generic.KeyValuePair`2" />.Для каждого объекта <see cref="T:System.Collections.Generic.KeyValuePair`2" /> компонент <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> является строкой, а компонент <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> является объектом, использующим имя <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> в области имен XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед.</summary>
      <returns>Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
      <param name="names">Коллекция связанных имен.</param>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед.</summary>
      <returns>Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
      <param name="names">Коллекция связанных имен.</param>
      <param name="canAssignDirectly">Значение true, чтобы реализация немедленно присваивала разрешенную ссылку на имя целевому свойству.Значение false для вызова пользовательского кода с целью повторного синтаксического анализа.Поведение по умолчанию — значение false.</param>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary>Получает значение, определяющее, доступен ли вызов метода <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Object,System.Collections.Generic.IEnumerable{System.String})" /> для разрешения имени в токен для разрешения ссылок вперед.</summary>
      <returns>Значение true, если метод <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Object,System.Collections.Generic.IEnumerable{System.String})" /> доступен в виде реализации, возвращающей полезный токен для разрешения ссылок вперед; в противном случае — значение false.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary>Происходит, когда обработчик XAML зарегистрировал все соответствующие имена в резервной области имен XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary>Разрешает объект из ссылки на имя.</summary>
      <returns>Разрешенный объект.</returns>
      <param name="name">Ссылка на имя, которую требуется разрешить.</param>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary>Разрешает объект по ссылке на имя и предоставляет значение отслеживания, указывающее, полностью ли инициализирован объект для целей графа объекта.</summary>
      <returns>Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
      <param name="name">Ссылка на имя, которую требуется разрешить.</param>
      <param name="isFullyInitialized">Значение true, если возвращенный объект имеет какие-либо зависимости от неразрешенных ссылок; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary>Описывает службу, которая может возвращать пространство имен XAML на основе его префикса в соответствии с разметкой XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary>Извлекает пространство имен XAML для предоставленной строки префикса.</summary>
      <returns>Запрошенный идентификатор пространств имен XAML, представленный в виде строки (не универсального кода ресурса).</returns>
      <param name="prefix">Префикс, для которого требуется извлечь пространство имен XAML.</param>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary>Возвращает все возможные сопоставления префикса и пространства имен XAML (значения <see cref="T:System.Xaml.NamespaceDeclaration" />), доступные в активном контексте схемы.</summary>
      <returns>Перечисляемый набор значений <see cref="T:System.Xaml.NamespaceDeclaration" />.Чтобы получить конкретные строки префикса, получите значение <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> из каждого возвращенного значения.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary>Представляет службу, которая создает объект <see cref="T:System.Xaml.XamlObjectWriter" /> на основе текущего контекста внутреннего средства синтаксического анализа.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlObjectWriterSettings" /> из исходного контекста внутреннего средства синтаксического анализа.</summary>
      <returns>Параметры из исходного контекста внутреннего средства синтаксического анализа.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlObjectWriter" /> на основе активного контекста схемы.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlObjectWriter" /> с заданным параметрами.</returns>
      <param name="settings">Параметры, которые следует использовать для создания и инициализации объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary>Представляет службу, предоставляющую сведения о контексте схимы XAML преобразователям типов и расширениям разметки.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary>Получает объект <see cref="T:System.Xaml.XamlSchemaContext" />, сообщенный этой службой.</summary>
      <returns>Контекст схемы XAML, сообщенный этой службой.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary>Объявляет идентификатор и префикс для пространства имен XAML, сохраняя эти строковые значения в виде отдельных свойств.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.NamespaceDeclaration" /> с исходными значениями свойств.</summary>
      <param name="ns">Идентификатор пространства имен среды XAML, заданный в виде строки.Может быть пустым или равным null.</param>
      <param name="prefix">Строковый префикс, используемый для пространства имен в сопоставлениях префикса.Может быть пустым или равным null.Пустая строка может иметь отношение к пространству имен XAML по умолчанию.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary>Получает компонент идентификатора пространства имен XAML объекта <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>Идентификатор пространства имен XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary>Получает префикс, служащий для сопоставления и использования объекта <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" />.</summary>
      <returns>Строка префикса для этого класса <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary>Реализует класс <see cref="T:System.Xaml.XamlReader" /> с двойной буферизацией, который может разделять чтение и запись на различные потоки.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlBackgroundReader" />. </summary>
      <param name="wrappedReader">Класс <see cref="T:System.Xaml.XamlReader" />, на котором основан класс <see cref="T:System.Xaml.XamlBackgroundReader" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wrappedReader" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlBackgroundReader" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить управляемые ресурсы.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary>Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns>Значение true, если сведения о строке доступны; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary>Получает значение, определяющее, находится ли позиция средства чтения в конце файла.</summary>
      <returns>Значение true, если позиция находится в конце файла; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary>Получает сообщаемый номер строки.</summary>
      <returns>Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary>Получает сообщаемое положение в строке.</summary>
      <returns>Сообщаемое положение в строке.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary>Получает текущий член в позиции средства чтения, если позиция средства чтения находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Текущий член или null, если позиция не находится на члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary>Получает пространство имен XAML из текущего узла.</summary>
      <returns>Пространство имен XAML, если оно доступно; в противном случае — null.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary>Предоставляет следующий узел XAML из источника, если такой узел имеется. </summary>
      <returns>Значение true, если узел доступен, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary>Получает объект, предоставляющий сведения о контексте схемы для данного набора сведений.</summary>
      <returns>Объект, предоставляющий сведения о контексте схемы для данного набора сведений.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary>Создает и запускает новый <see cref="T:System.Threading.Thread" /> (созданный <see cref="T:System.Threading.ParameterizedThreadStart" />), который обрабатывает именованный поток для объекта <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Поток уже запущен.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary>Создает и запускает новый объект <see cref="T:System.Threading.Thread" /> (созданный <see cref="T:System.Threading.ParameterizedThreadStart" />), который обрабатывает именованный поток для объекта <see cref="T:System.Xaml.XamlReader" />, используя указанное имя потока.</summary>
      <param name="threadName">Имя потока.</param>
      <exception cref="T:System.InvalidOperationException">Поток уже запущен.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для текущего узла.</summary>
      <returns>Тип <see cref="T:System.Xaml.XamlType" /> текущего узла или null, если текущая позиция средства чтения не находится на объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary>Получает значение текущего узла.</summary>
      <returns>Значение текущего узла или null, если текущая позиция средства чтения не находится на узле типа <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary>Представляет поведение средства чтения XAML, загружающего и возвращающего отложенное содержимое.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDeferringLoader" />. </summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Загружает XAML-содержимое в отложенном режиме на основе объекта <see cref="T:System.Xaml.XamlReader" /> и некоторых обязательных служб от поставщика служб.</summary>
      <returns>Корневой объект для потока узла входного объекта <see cref="T:System.Xaml.XamlReader" />.</returns>
      <param name="xamlReader">Инициирующее средство чтения, возвращаемое при вызовах метода <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider">Поставщик необходимых служб.</param>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Фиксирует значение для отложенной загрузки.</summary>
      <returns>Средство чтения, которое может использоваться для получения отложенного значения в виде сведений узла XAML.</returns>
      <param name="value">Входное значение для фиксации при отложенной загрузке.</param>
      <param name="serviceProvider">Поставщик необходимых служб.</param>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary>Предоставляет системный идентификатор типа языка XAML для члена, который также является директивой языка XAML.Этот идентификатор используется средствами чтения XAML и средствами записи XAML во время обработки узлов членов (когда средство чтения XAML находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" /> и свойство <see cref="P:System.Xaml.XamlMember.IsDirective" /> имеет значение true).</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDirective" />, указывая значения для каждого из возможных значений по вариантам объекта <see cref="T:System.Xaml.XamlDirective" />. </summary>
      <param name="xamlNamespaces">Набор пространств имен XAML, в которых может существовать данный объект <see cref="T:System.Xaml.XamlDirective" />, переданный в виде перечисляемого набора строк идентификатора.</param>
      <param name="name">Идентификационное имя объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType">Тип XAML, лежащий в основе объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter">Преобразователь типов, используемый этим объектом <see cref="T:System.Xaml.XamlDirective" /> для преобразования синтаксиса текста.</param>
      <param name="allowedLocation">Значение перечисления <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDirective" />, указывая значения имени и единственного пространства имен XAML.Используйте эту сигнатуру, если вы хотите, чтобы для этой директивы свойство <see cref="P:System.Xaml.XamlMember.IsUnknown" /> имело значение true, или ожидаете этого.</summary>
      <param name="xamlNamespace">Первичное пространство имен XAML, в котором может существовать данный объект <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="name">Идентификационное имя объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary>Возвращает значение, указывающее типы узлов XAML, в которых может быть задана эта директива.</summary>
      <returns>Значение перечисления.Значение перечисления по умолчанию равно <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта.</summary>
      <returns>Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary>Возвращает список пространств имен XAML, в которых может существовать этот член XAML. </summary>
      <returns>Список идентификаторов пространства имен XAML в виде строк.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary>Возвращает реализацию объекта <see cref="T:System.Reflection.ICustomAttributeProvider" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary>Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />.Они сообщают об членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, сопоставленный с объектом <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Сведения <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для данного объекта <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary>Возвращает указание, рассматривается ли объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</summary>
      <returns>Всегда возвращает false.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary>Возвращает указание, является ли данный объект <see cref="T:System.Xaml.XamlDirective" /> событием.</summary>
      <returns>Всегда возвращает false.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> требуемое свойство только для чтения.</summary>
      <returns>Всегда возвращает false.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> свойство, имеющее открытый метод доступа get.</summary>
      <returns>Всегда возвращает true.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary>Возвращает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlDirective" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlDirective" /> представляет неразрешимый член; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> требуемое свойство, доступное только на запись.</summary>
      <returns>Всегда возвращает false.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> свойство, имеющее открытый метод доступа set.</summary>
      <returns>Всегда возвращает true.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом. </summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом. </returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary>Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary>Возвращает метод доступа get, связанный с данным объектом <see cref="T:System.Xaml.XamlDirective" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary>Возвращает отражение среды CLR <see cref="T:System.Reflection.MemberInfo" />, связанное с данным объектом <see cref="T:System.Xaml.XamlDirective" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary>Возвращает метод доступа set, связанный с данным объектом <see cref="T:System.Xaml.XamlDirective" />.Данная реализация всегда возвращает значение null.</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary>Исключение, создаваемое, когда средство записи XAML пытается записать значение для дублирующего члена в этом же узле объекта. </summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с заданным сообщением, содержащим описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с соответствующими сообщаемыми сведениями об члене и типе.</summary>
      <param name="member">Сообщаемый идентификатор члена XAML.</param>
      <param name="type">Идентификатор типа XAML, сообщаемый как родительский тип.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary>Получает или задает идентификатор члена XAML для свойства, о котором сообщается как о дубликате.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlMember" /> (идентификатор члена XAML), о котором необходимо сообщить.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary>Получает или задает идентификатор типа XAML, сообщаемый как родительский тип.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> (идентификатор типа XAML), о котором необходимо сообщить как о родительском типе.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary>Исключение, которое создается для случаев возникновения исключения в универсальном средстве чтения XAML или средстве записи XAML.См. примечания.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" /> с заданным сообщением, содержащим описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Xaml.XamlException" /> с указанными сообщением об ошибке, внутренним исключением и сведениями о строке.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения. </param>
      <param name="lineNumber">Номер строки для передачи в средства отладки или потребителям сведений о строке.</param>
      <param name="linePosition">Положение в строке для передачи в средства отладки или потребителям сведений о строке.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализует метод <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> и обеспечивает поддержку сериализации для данных о строке.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary>Получает или задает компонент номера строки сведений о текстовой строке XAML, переданных из исключения.</summary>
      <returns>Компонент номера строки сведений о текстовой строке XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary>Получает или задает компонент положения в строке сведений о текстовой строке XAML, переданных из исключения.</summary>
      <returns>Компонент положения в строке сведений о текстовой строке XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary>Получает или задает сообщение исключения с присоединенными сведениями о строке, если они доступны.</summary>
      <returns>Сообщение об исключении с присоединенными сведениями о строке.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary>Исключение, которое создается для случаев внутренних несоответствий во время чтения XAML и записи XAML. </summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary>Определяет константы, предоставляющие строки или объекты, которые полезны для разметки XAML или программирования с типами XAML.Эти строки или объекты относятся к концепциям языка XAML, к реализации концепций языка XAML в службах .NET XAML или и к тому, и к другому.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary>Получает доступную только для чтения универсальную коллекцию каждого индивидуального идентификатора <see cref="T:System.Xaml.XamlDirective" />, определенного в сборке System.Xaml.</summary>
      <returns>Доступная только для чтения универсальная коллекция каждого индивидуального идентификатора <see cref="T:System.Xaml.XamlDirective" />, определенного в сборке System.Xaml.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary>Получает доступную только для чтения универсальную коллекцию индивидуальных значений <see cref="T:System.Xaml.XamlType" />, соответствующих или связанных псевдонимами с внутренними элементами языка XAML и определенных в сборке System.Xaml.</summary>
      <returns>Доступная только для чтения универсальная коллекция каждого индивидуального типа <see cref="T:System.Xaml.XamlType" />, соответствующего внутренним элементам языка XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для аргументов Arguments заводского метода или универсального использования.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для аргументов Arguments заводского метода или универсального использования.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Array.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Array.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для псевдочлена AsyncRecords.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для псевдочлена AsyncRecords.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы base из XML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы base из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Boolean.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Boolean.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Byte.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Byte.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Char.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Char.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Class из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Class из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы ClassAttributes из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы ClassAttributes из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы ClassModifier из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы ClassModifier из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для Code в соответствии с документом [MS-XAML].</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для Code в соответствии с документом [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий точку подключения для привязки событий к обработчикам.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий точку подключения для привязки событий к обработчикам.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Decimal.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Decimal.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Double.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Double.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий заводской метод для XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий заводской метод для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы FieldModifier из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы FieldModifier из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Initialization из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Initialization из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int16.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int16.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int32.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int32.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int64.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Int64.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Items из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Items из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Key из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Key из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы lang из XML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы lang из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, являющегося типом элемента свойства <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа, являющегося типом элемента свойства <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для концепции Members в XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для концепции Members в XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Name из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Name из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Null/NullExtension.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Null/NullExtension.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML Object.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML Object.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы PositionalParameters из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы PositionalParameters из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции Property в XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для концепции Property в XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" />, представляющий Reference для XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" />, представляющий Reference для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Shared для XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Shared для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Single.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Single.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы space из XML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы space из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Static/StaticExtension.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Static/StaticExtension.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML String.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML String.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Subclass из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Subclass из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" />, обеспечивающий асинхронную загрузку XAML, если обработчик XAML поддерживает такой режим.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" />, обеспечивающий асинхронную загрузку XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции TimeSpan языка XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML TimeSpan.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Type/TypeExtension.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML Type/TypeExtension.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы TypeArguments из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы TypeArguments из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Uid из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы Uid из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary>Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы UnknownContent из XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы UnknownContent из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML Uri.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML Uri.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary>Получает строковое значение для строки, идентифицирующей пространство имен языка XAML (2006).Это пространство имен соответствует пространству имен языка XAML (2006) с префиксом "x", как определено в документе [MS-XAML], раздел 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary>Получает коллекцию идентификаторов пространства имен для XAML.</summary>
      <returns>Коллекция идентификаторов пространства имен для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для типа XAML, поддерживающего блок XData в XAML.См. документ [MS-XAML], раздел 5.2.23.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа XAML, поддерживающего блок XData.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary>Получает строковое значение для строки, идентифицирующей пространство имен языка XML (1998).Это пространство имен соответствует пространству имен языка XML с префиксом "xml", как указано в документе [MS-XAML], раздел 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary>Получает коллекцию идентификаторов пространства имен для XML.</summary>
      <returns>Коллекция идентификаторов пространства имен для XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary>Предоставляет системный идентификатор типа языка XAML для членов типов XAML.Этот идентификатор используется средствами чтения и средствами записи XAML во время обработки узлов членов (когда средство чтения находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />).</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> на основе отражения <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo">Отражение <see cref="T:System.Reflection.EventInfo" />, представляющее член-событие.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> на основе отражения <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />, вместе с информацией <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo">Отражение <see cref="T:System.Reflection.EventInfo" />, представляющее член-событие.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> на основе отражения <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo">Отражение <see cref="T:System.Reflection.PropertyInfo" />, представляющее член-свойство.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> на основе отражения <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />, вместе с информацией <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo">Отражение <see cref="T:System.Reflection.PropertyInfo" />, представляющее член-свойство.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> специально для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство.</summary>
      <param name="attachablePropertyName">Строковое имя присоединяемого свойства.</param>
      <param name="getter">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода доступа get базовой реализации присоединяемого члена.</param>
      <param name="setter">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода доступа set базовой реализации присоединяемого члена.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> специально для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство, вместе со сведениями <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName">Строковое имя присоединяемого свойства.</param>
      <param name="getter">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода доступа get базовой реализации присоединяемого члена.</param>
      <param name="setter">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода доступа set базовой реализации присоединяемого члена.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> специально для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие.</summary>
      <param name="attachableEventName">Строковое имя присоединяемого события.</param>
      <param name="adder">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода add обработчика базовой реализации присоединяемого члена.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> специально для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие, вместе со сведениями <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName">Строковое имя присоединяемого события.</param>
      <param name="adder">Отражение <see cref="T:System.Reflection.MethodInfo" /> для метода Add обработчика базовой реализации присоединяемого члена.</param>
      <param name="schemaContext">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />, используя строковое имя и сведения об объявляющем типе <see cref="T:System.Xaml.XamlType" />.Объект <see cref="T:System.Xaml.XamlMember" />, созданный с данной сигнатурой, имеет значительные ограничения; см. "Примечания".</summary>
      <param name="name">Строковое имя члена.</param>
      <param name="declaringType">Сведения <see cref="T:System.Xaml.XamlType" /> для объявляемого типа.</param>
      <param name="isAttachable">Значение true, если член является присоединяемым; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> или <paramref name="declaringType" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary>Получает список объектов <see cref="T:System.Xaml.XamlMember" />.Они сообщают об членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Список объектов <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary>Позволяет определить, равен ли текущий объект другому объекту.</summary>
      <returns>true, если текущий объект равен параметру <paramref name="obj" />, в противном случае — false.</returns>
      <param name="obj">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary>Указывает, равен ли текущий объект другому объекту того же типа.</summary>
      <returns>true, если текущий объект равен параметру <paramref name="other" />, в противном случае — false.</returns>
      <param name="other">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта.</summary>
      <returns>Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary>Возвращает список пространств имен XAML, в которых может существовать этот член XAML. </summary>
      <returns>Список идентификаторов пространства имен XAML в виде строк. </returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary>Получает реализацию класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанную с этим объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Реализация класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанная с этим объектом <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary>Получает значение, указывающее, рассматривается ли этот объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</summary>
      <returns>Значение true, если об объекте <see cref="T:System.Xaml.XamlMember" /> сообщается, что он является внешним свойством; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary>Получает значение, показывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> присоединяемым членом.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Xaml.XamlMember" /> директивой XAML.</summary>
      <returns>Значение true, если объект <see cref="T:System.Xaml.XamlMember" /> является директивой XAML; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary>Получает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlMember" /> член-событие.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary>Получает значение, указывающее, инициализирован ли этот объект <see cref="T:System.Xaml.XamlMember" /> с использованием допустимой строки xamlName в качестве значения его параметра <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> инициализирован с использованием допустимой строки xamlName; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary>Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член только для чтения.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary>Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа get.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова общий метод доступа get; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary>Получает значение, указывающее, является ли этот член неразрешимым в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns>Значение true, если разрешить элемент невозможно.Значение false, если разрешить элемент удается.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary>Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член, доступный только на запись.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только на запись; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary>Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа set.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова общий метод доступа set; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary>Если реализуется в производном классе, возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary>Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />.Они сообщают об членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Список объектов <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary>Возвращает коллекцию <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанную с этим классом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Сведения <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для этого класса <see cref="T:System.Xaml.XamlMember" /> или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary>Возвращает указание, рассматривается ли объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</summary>
      <returns>Значение true, если об объекте <see cref="T:System.Xaml.XamlMember" /> сообщается, что он является внешним свойством; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary>Возвращает указание, является ли данный объект <see cref="T:System.Xaml.XamlMember" /> событием.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> требуемое свойство только для чтения.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет требуемое свойство только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> свойство, имеющее открытый метод доступа get.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет свойство с общим методом доступа get; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary>Возвращает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlMember" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет неразрешимый член; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член, имеющий открытый метод доступа set, но не имеющий открытого метода доступа get.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только на запись; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary>Возвращает указание, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член, имеющее открытый метод доступа set.</summary>
      <returns>Значение true, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный для записи; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.См. примечания.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.См. примечания.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.См. примечания.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary>Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary>Возвращает метод доступа get, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа get или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary>Возвращает отражение среды CLR <see cref="T:System.Reflection.MemberInfo" />, связанное с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Отражение среды CLR <see cref="T:System.Reflection.MemberInfo" />, связанное с данным объектом <see cref="T:System.Xaml.XamlMember" />, или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary>Возвращает метод доступа set, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа set или null.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary>Возвращает реализацию сериализатора значений, связанную с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> или null.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary>Получает строковое представление имени xamlName, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Строковое представление имени xamlName, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Значение true, если значение <paramref name="xamlMember1" /> совпадает со значением <paramref name="xamlMember1" />; в противном случае — значение false.</returns>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> или null.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> или null.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>true, если значение <paramref name="xamlMember1" /> отличается от значения <paramref name="xamlMember2" />; в противном случае — false.</returns>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> или null.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> или null.</param>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary>Получает URI одного пространства имен XAML, идентифицирующее первичное пространство имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" />. </summary>
      <returns>Идентификатор первичного пространства имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" /> в виде строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary>Получает значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, указывающее, как визуальный конструктор должен обрабатывать этот член.</summary>
      <returns>Значение перечисления <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.Значение по умолчанию — <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.См. примечания.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> типа, используемого членом.См. примечания.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.См. примечания.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для создания преобразователя типа объектов, объявленных в языке XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> на универсальный класс.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary>Получает объект <see cref="T:System.Reflection.MemberInfo" />, доступный для члена, созданного объектом <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> или <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns>Сведения <see cref="T:System.Reflection.MemberInfo" />, преобразованные из исходных параметров конструктора.Объект <see cref="T:System.Xaml.XamlMember" />, созданный с сигнатурой <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />, возвращает null.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для сериализации значений объектов, объявленных в языке XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> на универсальный класс.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary>Предоставляет список узлов XAML для таких целей, как отложенная запись узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeList" />, используя предоставленный контекст схемы.</summary>
      <param name="schemaContext">Контекст схемы, который следует использовать для операций с узлами.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeList" />, используя предоставленные контекст схемы и размер списка.</summary>
      <param name="schemaContext">Контекст схемы, который следует использовать для операций с узлами.</param>
      <param name="size">Целевое количество элементов в списке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary>Очищает элементы в этом списке.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary>Получает число узлов в этом объекте <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns>Количество узлов в этом объекте <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary>Возвращает делегат реализации средства чтения XAML.</summary>
      <returns>Делегат реализации средства чтения XAML.</returns>
      <exception cref="T:System.Xaml.XamlException">
        <see cref="T:System.Xaml.XamlNodeList" /> по-прежнему находится в режиме записи.— или —Средство записи, используемое для списка узлов не имеет контекста схемы.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary>Получает связанное средство записи XAML.</summary>
      <returns>Связанное средство записи XAML. </returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary>Предоставляет буфер для записи узлов и их повторного чтения.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeQueue" />, используя предоставленный контекст схемы.</summary>
      <param name="schemaContext">Контекст схемы, который следует использовать для операций с узлами.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlSchemaContext" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary>Получает число узлов в объекте <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns>Число узлов в объекте <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary>Получает значение, определяющее, содержит ли данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> узлы.</summary>
      <returns>Значение true, если данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> не содержит узлов.Значение false, если данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> содержит узлы.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary>Получает делегат реализации средства чтения XAML.</summary>
      <returns>Делегат реализации средства чтения XAML.</returns>
      <exception cref="T:System.Xaml.XamlException">Средство записи, используемое для списка узлов не имеет контекста схемы.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary>Получает связанное средство записи XAML.</summary>
      <returns>Связанное средство записи XAML. </returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary>Описывает тип узла, обрабатываемого в данный момент средством чтения XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary>Не является настоящим узлом (например, это может быть конец файла).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary>Средство чтения находится в начале узла объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary>Средство чтения находится в пределах узла объекта и записывает значение по умолчанию или неявное значение, а не заданное значение объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary>Средство чтения находится в конце узла объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary>Средство чтения находится в начале узла члена.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary>Средство чтения находится в конце узла члена.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary>Средство чтения находится в пределах узла и обрабатывает значение.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary>Средство чтения находится в объявлении пространства имен XML.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary>Предоставляет данные для обратных вызовов, которые могут быть вставлены в последовательность для инициализации объекта и задания свойств, выполняемых объектом <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectEventArgs" />. </summary>
      <param name="instance">Экземпляр объекта, связанного с данными события.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary>Получает экземпляр объекта, связанного с данными события.</summary>
      <returns>Экземпляр объекта, связанного с данными события.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary>Предоставляет реализацию <see cref="T:System.Xaml.XamlReader" />, которая считывает графы объектов и создает поток узла XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance">Корень считываемого дерева/графа объектов.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с указанными параметрами средства чтения.</summary>
      <param name="instance">Корень считываемого дерева объектов.</param>
      <param name="settings">Объект параметров.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с заданным контекстом схемы.</summary>
      <param name="instance">Корень считываемого дерева объектов.</param>
      <param name="schemaContext">Контекст схемы для использования средством чтения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с заданным контекстом схемы и параметрами средства чтения.</summary>
      <param name="instance">Корень считываемого дерева объектов.</param>
      <param name="schemaContext">Контекст схемы для использования средством чтения.</param>
      <param name="settings">Объект параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary>Получает экземпляр объекта, доступный в текущей позиции средства чтения.</summary>
      <returns>Экземпляр объекта в текущей позиции средства чтения или null, если текущая позиция средства чтения не находится на объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary>Получает значение, определяющее, расположено ли средство чтения в конце файла.</summary>
      <returns>Значение true, если средство чтения расположено в конце файла; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary>Получает текущий объект <see cref="T:System.Xaml.XamlMember" /> в позиции средства чтения, если позиция средства чтения находится на объекте <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Текущий член или null, если позиция средства чтения не находится на члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary>Получает объявление пространства имен XAML из текущей позиции средства чтения.</summary>
      <returns>Объявление пространства имен XAML, если средство чтения расположено в объекте <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary>Получает тип текущего узла.</summary>
      <returns>Тип текущего узла.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary>Предоставляет следующий узел XAML из исходного графа объекта, если такой узел имеется. </summary>
      <returns>Значение true, если узел доступен, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary>Получает объект, предоставляющий сведения о схеме для данного набора сведений.</summary>
      <returns>Объект, предоставляющий сведения о схеме для данного набора сведений.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary>Получает тип <see cref="T:System.Xaml.XamlType" /> объекта в текущей позиции средства чтения.</summary>
      <returns>Тип <see cref="T:System.Xaml.XamlType" /> объекта в текущей позиции средства чтения или значение null, если позиция не находится в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary>Получает значение узла в текущей позиции средства чтения.</summary>
      <returns>Значение текущего узла или null, если позиция средства чтения не находится на узле типа <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary>Исключение, создаваемое несколькими внутренними вспомогательными программными интерфейсами приложений (API) <see cref="T:System.Xaml.XamlObjectReader" />. </summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с заданным сообщение, содержащим описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary>Задает правила обработки или значения параметров для класса <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary>Получает или задает значение, определяющее, должны ли средства записи, использующие для контекста связанный класс <see cref="T:System.Xaml.XamlObjectReader" />, использовать при выводе содержимого параметры конструктора.</summary>
      <returns>Значение true, если средства записи с этим контекстом должны использовать для вывода содержимого параметры конструктора в случаях, когда свойство <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> имеет значение false.Значение false, если параметры конструктора должны игнорироваться.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary>Создает граф объектов из исходного потока узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> на основе контекста, используемого объектом <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext">Контекст схемы, общий со средством чтения XAML, предоставляющим узлы для записи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> на основе контекста, используемого объектом <see cref="T:System.Xaml.XamlReader" /> и его параметров.</summary>
      <param name="schemaContext">Контекст схемы, общий со средством чтения XAML, предоставляющим узлы для записи.</param>
      <param name="settings">Объект параметров, задающий определенные параметры для поведения и вывода объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary>Сбрасывает все возможные кадры и очищает граф объектов.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Xaml.XamlObjectWriter" />, а также при необходимости освобождает управляемые ресурсы. </summary>
      <param name="disposing">Значение true, если необходимо освободить управляемые ресурсы; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Объект, о котором требуется отчет.При вызове обработчика объект упакован в <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Объект, о котором требуется отчет.При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Объект, о котором требуется отчет.При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Значение, передаваемое при вызове обработчика через объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для этого средства записи при условии, что параметр <paramref name="handled" /> в данных события <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> имеет значение, отличное от true.</summary>
      <returns>Логическое значение, заданное любым связанным обработчиком; в противном случае — значение false.См. примечания.</returns>
      <param name="eventSender">Объект, передаваемый в обработчик в качестве источника.</param>
      <param name="member">Имя задаваемого свойства, передаваемое обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value">Значение, которое необходимо предоставить свойству, названному <paramref name="property" />, которое передается обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary>Получает последний записанный объект.Может принимать значение null, если модуль записи находится в определенных областях.</summary>
      <returns>Последний записанный объект или null.См. примечания.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary>Получает службу <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для абсолютного корня узла средства записи объекта XAML.</summary>
      <returns>Служба <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для текущего корня средства записи объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary>Получает активный контекст схемы.</summary>
      <returns>Контекст схемы.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка использовать метод доступа set.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary>Реализует метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> и предоставляет сведения о строке для исключений.</summary>
      <param name="lineNumber">Номер строки от средства чтения.</param>
      <param name="linePosition">Положение в строке от средства чтения.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary>Получает значение, которое сообщает, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</summary>
      <returns>Значение true, если сведения о строке используются средством записи; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary>Закрывает область текущего члена и может при закрытии записать значение области члена.Новая область становится областью родительского объекта этого члена.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Не удалось создать значение члена из внутреннего текста/значения.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary>Закрывает текущую область объекта в средстве записи.Новая область объекта становится областью родительского члена (или корневой областью, если метод закрывает корневой объект).</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary>Выводит объект для случаев, когда заданный объект является значением по умолчанию или неявным значением родительского свойства, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Определяет объявление пространства имен, которое применяется к следующей области объекта или члена.</summary>
      <param name="namespaceDeclaration">Объявление пространства имен для записи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">Компонент <paramref name="namespaceDeclaration" /> имеет значение null.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException">Попытка записи узла пространства имен XAML в недопустимой области действия.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Записывает новый узел члена в текущую область объекта, и эта область становится новой областью члена.</summary>
      <param name="property">Записываемое свойство XAML.Обычно это значение получается из средства чтения XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Для свойства <paramref name="property" /> значение <see cref="P:System.Xaml.XamlMember.IsUnknown" /> установлено равным true.— или —Передано <see cref="P:System.Xaml.XamlLanguage.UnknownContent" />, но не свойство содержимого.— или —Попытка записи начального члена в недопустимой области действия.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException">
        <paramref name="property" /> задает свойство, которое уже явно задано в области родительского объекта.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Записывает узел объекта в текущую область, и задает эту область для области нового объекта.</summary>
      <param name="xamlType">Записываемый тип.Обычно это значение получается из средства чтения XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Обработка типа <see cref="P:System.Xaml.XamlType.IsUnknown" />, не удается создать объект.— или —Попытка записи начального объекта в недопустимой области действия.</exception>
      <exception cref="T:System.Xaml.XamlParseException">Попытка записи корневого объекта, когда корневой объект уже был предоставлен в настройках. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary>Выполняет запись значения в область текущего члена.Если текущая область находится в объекте коллекции, словаря или массива, это значение необходимо добавить в коллекцию, словарь или массив.</summary>
      <param name="value">Записываемое значение.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Попытка записи значения в недопустимой области действия.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary>Исключение, создаваемое, когда средство записи XAML (например, класс <see cref="T:System.Xaml.XamlObjectWriter" />) сталкивается с ошибкой при попытке создать графы объектов из потока узла XAML. </summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary>Предоставляет определенные параметры средства записи XAML для объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterSettings" /> на основе копии существующего экземпляра.</summary>
      <param name="settings">Копируемый экземпляр параметров.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary>Получает или задает разрешения <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, которые соблюдает средство чтения XAML.</summary>
      <returns>Разрешения <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary>Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> времени существования объекта для каждого созданного объекта.</summary>
      <returns>Обратный вызов, вызываемый средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary>Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> времени существования объекта для каждого созданного объекта.</summary>
      <returns>Обратный вызов, вызываемый средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary>Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе "запись после члена" времени существования объекта для каждого созданного объекта.</summary>
      <returns>Обратный вызов, вызываемый средством чтения XAML на этапе "запись после члена" времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary>Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе "запись перед членом" времени существования объекта для каждого созданного объекта.</summary>
      <returns>Обратный вызов, вызываемый средством записи XAML на этапе "запись перед членом" времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary>Получает или задает пространство имен XAML для регистрации имен из средства записи XAML, если свойство <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> имеет значение true.</summary>
      <returns>Область имен XAML, которую следует использовать для регистрации имен.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary>Получает или задает значение, указывающее, должно ли средство записи XAML игнорировать (не вызывать) реализации метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> для объекта <see cref="T:System.ComponentModel.TypeConverter" /> в ситуациях, связанных с преобразованием типов.</summary>
      <returns>Значение true, если средство записи XAML игнорирует реализации метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary>Получает или задает значение, которое определяет, следует ли отключить функцию <see cref="T:System.Xaml.XamlObjectWriter" /> по умолчанию, выполняющую преобразование типа компонента <paramref name="K" /> объекта <see cref="T:System.Collections.Generic.Dictionary`2" /> перед записью представления графа объекта.</summary>
      <returns>Значение true, если преобразование типа <paramref name="K" /> для объекта <see cref="T:System.Collections.Generic.Dictionary`2" /> необходимо отключить.Значение false, если применяется преобразование типа <paramref name="K" /> для объекта <see cref="T:System.Collections.Generic.Dictionary`2" />.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary>Получает или задает значение, определяющее, должна ли выполняться регистрация имен в соответствии с заданным свойством <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />.</summary>
      <returns>Значение true, если регистрация имен должна выполняться в соответствии с заданным свойством <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; значение false, если регистрация имен должна выполняться в родительской области имен XAML.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary>Получает или задает ранее созданный корневой объект для операций объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns>Ранее созданный корневой объект для операций объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary>Получает или задает значение, определяющее, пропускает ли средство записи XAML проверку пути кода, который проверяет наличие дублирующихся свойств. </summary>
      <returns>Значение true, если проверку дублирующихся свойство нужно пропустить; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary>Получает или задает значение, показывающее, должен ли объект <see cref="T:System.Xaml.XamlObjectWriter" /> пропускать вызов ProvideValue для расширения разметки, что имеет значение, если расширение разметки представляет корень графа объекта. </summary>
      <returns>Значение true, если объект <see cref="T:System.Xaml.XamlObjectWriter" /> должен пропускать вызов ProvideValue для расширения разметки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary>Получает или задает обработчик, используемый, когда средство записи объекта вызывает реализованный в среде CLR метод SetValue для свойств зависимостей.</summary>
      <returns>Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary>Исключение, которое вызывается, когда средство чтения XAML не может преобразовать элементы источника средства чтения в поток узла XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary>Предоставляет базовые определения для классов, получающих входные данные XAML и создающих потоки узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary>Инициализирует класс <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary>Закрывает поток узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlReader" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">true, если необходимо освободить управляемые ресурсы; в противном случае — false.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary>Получает сведения о том, вызывался ли метод <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />.</summary>
      <returns>Значение true, если метод <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> вызывался; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary>При реализации в производном классе получает значение, показывающее, расположено ли средство чтения в конце файла.</summary>
      <returns>Значение true, если средство расположено в концептуальном конце файла потока узлов XAML; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary>При реализации в производном классе получает текущий член в позиции средства чтения, если эта позиция находится в объекте <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Текущий член или значение null, если позиция не находится в члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary>При реализации в производном классе получает сведения о пространстве имен XAML из текущего узла.</summary>
      <returns>Сведения о пространстве имен XAML, если они доступны; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary>При реализации в производном классе получает тип текущего узла.</summary>
      <returns>Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary>При реализации в производном классе предоставляет следующий узел XAML из источника, если он имеется. </summary>
      <returns>Значение true, если узел доступен, в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlReader" /> на основе текущего объекта <see cref="T:System.Xaml.XamlReader" />, где возвращенный объект <see cref="T:System.Xaml.XamlReader" /> используется для перебора поддерева структуры узлов XAML.</summary>
      <returns>Новый экземпляр средства чтения XAML для данного поддерева.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary>При реализации в производном классе получает объект, предоставляющий сведения о контексте схемы XAML для данного набора сведений.</summary>
      <returns>Объект, предоставляющий сведения о контексте схемы XAML для данного набора сведений.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary>Пропускает текущий узел и перемещает позицию средства чтения на следующий узел.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary>При реализации в производном классе получает объект <see cref="T:System.Xaml.XamlType" /> текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> текущего узла или значение null, если текущая позиция средства чтения находится не в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary>При реализации в производном классе получает значение текущего узла.</summary>
      <returns>Значение текущего узла или значение null, если текущая позиция средства чтения находится не в типе узла <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary>Задает правила обработки или значения параметров для реализации класса <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlReaderSettings" /> на основе значений другого объекта <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings">Существующий объект <see cref="T:System.Xaml.XamlReaderSettings" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary>Получает или задает значение, показывающее, может ли корневой объект содержать члены с моделью доступа к защищенному коду при сообщении о представлении типа XAML.</summary>
      <returns>Значение true, если корневой объект может содержать члены с моделью доступа к защищенному коду; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary>Получает или задает базовый универсальный код ресурса (URI), используемый для разрешения относительных путей.</summary>
      <returns>Используемый базовый универсальный код ресурса (URI).</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary>Получает или задает значение, указывающее, должно ли средство чтения игнорировать значения атрибутов x:Uid, установленные для элементов свойств.</summary>
      <returns>Значение true, если читатель должен игнорировать значения атрибутов x:Uid элементов свойств.Значение false, если читатель должен обрабатывать атрибуты x:Uid элементов свойств.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary>Получает или задает объект, представляющий текущую локальную сборку для обработки.Эти сведения о сборке используются для вызовов вспомогательных программных интерфейсов приложений (API), таких как метод <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns>Объект отражения <see cref="T:System.Reflection.Assembly" /> среды CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary>Получает или задает значение, указывающее, может ли средство чтения предоставлять номер строки и положение в ней.</summary>
      <returns>Значение true, если средство чтения может предоставлять сведения о номере строки и положении в ней; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary>Получает или задает значение, определяющее, будет ли средство чтения принудительно задавать обработку узлов Value как имеющих тип String.</summary>
      <returns>Значение true, если средство чтения использует тип String исключительно для узлов Value; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary>Определяет контекст с возможностью многократного использования для интерпретации или сопоставления типов XAML и соответствующих базовых типов из сборок.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок.</summary>
      <param name="referenceAssemblies">Перечислимый набор сборок (каждая задается значениями <see cref="T:System.Reflection.Assembly" />).</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок и объекта параметров.</summary>
      <param name="referenceAssemblies">Перечислимый набор сборок (каждая задается значениями <see cref="T:System.Reflection.Assembly" />).</param>
      <param name="settings">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе объекта параметров.</summary>
      <param name="settings">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary>Предоставляет нестандартную реализацию метода Finalize, которая не вызывает метод Dispose.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Получает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых интерфейсом API поиска.</summary>
      <returns>Значение true, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых интерфейсами API поиска; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary>Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор пространств имен. </summary>
      <returns>Перечислимый набор идентификаторов пространств имен.Предоставляются в виде строк (не обязательно являются истинными универсальными кодами ресурса).</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary>Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор типов из указанного пространства имен XAML. </summary>
      <returns>Перечислимый набор типов XAML (объекты <see cref="T:System.Xaml.XamlType" />).</returns>
      <param name="xamlNamespace">Пространство имен XAML, для которого требуется вернуть типы.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary>Получает строку, которая предоставляется как предпочтительный префикс для использования потребителями при сопоставлении указанного пространства имен XAML.</summary>
      <returns>Строка, которую потребители должны использовать при сопоставлении указанного пространства имен XAML для целей разметки.</returns>
      <param name="xmlns">Пространство имен XAML, для которого требуется получить предпочтительный префикс.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlns" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary>Возвращает преобразователь значений, который может производить преобразование в запрошенный тип <paramref name="targetType." />.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением, соответствующим ограничению, наложенному при вызове метода.</returns>
      <param name="converterType">Реализация преобразователя.</param>
      <param name="targetType">Требуемый конечный тип преобразования.</param>
      <typeparam name="TConverterBase">Базовый класс конкретного преобразователя. </typeparam>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary>Возвращает значение <see cref="T:System.Xaml.XamlDirective" />, представляющее директиву (либо для языка XAML, либо для конкретной реализации).</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlDirective" />, представляющий запрашиваемую директиву.</returns>
      <param name="xamlNamespace">Пространство имен XAML, содержащее именованную директиву.</param>
      <param name="name">Имя получаемой директивы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xamlNamespace" /> или <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary>Возвращает тип <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML, строки имени типа и аргументов типа для возможного универсального типа.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" />, соответствующий входным критериям.</returns>
      <param name="xamlNamespace">Пространство имен XAML, содержащее необходимый тип.</param>
      <param name="name">Строковое представление имени требуемого типа.</param>
      <param name="typeArguments">Аргументы типа инициализации для универсального типа.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary>Возвращает тип <see cref="T:System.Xaml.XamlType" /> на основе идентификатора типа среды CLR.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="type" />.</returns>
      <param name="type">Тип, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> на основе имени системного типа XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="xamlTypeName" />.</returns>
      <param name="xamlTypeName">Имя типа XAML, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentException">Компонент <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> или <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlTypeName" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary>Вызывается, когда операции используют этот контекст схемы для разрешения сборки, необходимой для разрешения содержащихся в ней пространств имен XAML.</summary>
      <returns>Разрешаемая сборка.</returns>
      <param name="assemblyName">Имя загружаемой сборки.См. примечания.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary>Возвращает перечислимый набор базовых сборок для контекста схемы.</summary>
      <returns>Перечислимый набор базовых сборок для контекста схемы.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Получает значение, указывающее, поддерживают ли схема XAML и ее контекст расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</summary>
      <returns>Значение true, если контекст схемы допускает расширения разметки с дублирующей арностью; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary>Возвращает успешный результат или сбой запроса для совместимого пространства имен XAML, причем успешный результат передает пространство имен XAML как выходной параметр.</summary>
      <returns>Значение true, если объект <paramref name="compatibleNamespace" /> содержит пригодный к использованию результат result, в противном случае — значение false.</returns>
      <param name="xamlNamespace">Строка xmlns для пространства имен XAML, которое требуется проверить на совместимый результат.</param>
      <param name="compatibleNamespace">В случае успеха строка xmlns для совместимого пространства имен XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> имеет значение null;</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary>Предоставляет необязательные параметры для объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />, копируя значения существующего экземпляра класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
      <param name="settings">Существующая <see cref="T:System.Xaml.XamlSchemaContextSettings" />. </param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Получает или задает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых интерфейсом API поиска.</summary>
      <returns>Значение true, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых интерфейсами API поиска; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Получает или задает значение, указывающее, поддерживают ли схема XAML и ее контекст расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</summary>
      <returns>Значение true, если контекст схемы допускает расширения разметки с дублирующей арностью; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary>Исключение, возникающее, когда система привязки или другая система представления схемы для XAML сообщает об исключении контексту схемы.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary>Предоставляет службы высокого уровня (статические методы) для распространенных при работе с XAML задач чтения XAML и записи графа объектов или чтения графа объектов и записи выходного файла XAML для целей сериализации.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и выводит граф объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="stream">Поток, загружаемый как входные данные.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary>Создает средство чтения XAML на основе класса <see cref="T:System.IO.TextReader" /> и возвращает дерево объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="textReader">Класс <see cref="T:System.IO.TextReader" /> для использования в качестве основы для создания <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и выводит граф объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="fileName">Имя файла для загрузки и использования в качестве источника.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="fileName" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary>Загружает конкретную реализацию средства чтения XAML и возвращает граф объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="xamlReader">Реализация средства чтения XAML, которую следует использовать в качестве средства чтения для этой операции Load.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary>Загружает конкретную реализацию средства чтения XML и возвращает граф объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="xmlReader">Реализация объекта <see cref="T:System.Xml.XmlReader" />, которую следует использовать в качестве средства чтения для этой операции Load.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary>Считывает XAML в виде строковых выходных данных и возвращает граф объектов.</summary>
      <returns>Выходной граф объектов.</returns>
      <param name="xaml">Строка XAML, вводимая для синтаксического анализа.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xaml" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной поток для сериализации.</summary>
      <param name="stream">Конечный поток.</param>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходные данные, передаваемые предоставленному объекту <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary>Преобразует предоставленное дерево объектов в представление узлов XAML и возвращает строковое представление выходного кода XAML.</summary>
      <returns>Разметка XAML, выводимая в виде строки. </returns>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в выходной файл в указанном расположении.</summary>
      <param name="fileName">Имя и расположение файла, в который записываются выходные данные.</param>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="fileName" /> содержит пустую строку.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленное средство записи XAML.</summary>
      <param name="writer">Используемая реализация объекта <see cref="T:System.Xaml.XamlWriter" />.</param>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Используемая реализация объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="instance">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML.Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
      <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
      <param name="xamlWriter">Используемый объект <see cref="T:System.Xaml.XamlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение null.</exception>
      <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML.Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.Предоставляет параметр для указания, требуется ли после завершения вызова закрывать средство записи.</summary>
      <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
      <param name="xamlWriter">Используемый объект <see cref="T:System.Xaml.XamlWriter" />.</param>
      <param name="closeWriter">Значение true, чтобы закрыть средство записи после завершения вызова; значение false, чтобы после записи последней позиции оставить средство записи открытым.</param>
      <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение null.</exception>
      <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary>Сообщает сведения о типах языка XAML в составе общей системы языка XAML, реализованной в сборке System.Xaml.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе строкового имени типа.</summary>
      <param name="typeName">Имя создаваемого типа.</param>
      <param name="typeArguments">Аргументы типа для случаев, когда класс <see cref="T:System.Xaml.XamlType" /> является универсальным.Может принимать (и часто действительно принимает) значение null.</param>
      <param name="schemaContext">Контекст для средства чтения XAML.</param>
      <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="typeName" /> или <paramref name="schemaContext" /> равны null.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строкового имени типа.Этот конструктор предназначен исключительно для анализа и записи в узлы XAML типов, о которых известно, что они не зарезервированы во вспомогательной системе типов и контексте схемы XAML.</summary>
      <param name="unknownTypeNamespace">Пространство имен XAML для типа в виде строки.</param>
      <param name="unknownTypeName">Имя типа в предоставленном пространстве имен XAML <paramref name="unknownTypeNamespace" />.</param>
      <param name="typeArguments">Аргументы типа для случаев, когда класс <see cref="T:System.Xaml.XamlType" /> является универсальным.Может принимать (и часто действительно принимает) значение null.</param>
      <param name="schemaContext">Контекст для средства чтения XAML.</param>
      <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> или <paramref name="schemaContext" /> равны null.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе среды CLR.</summary>
      <param name="underlyingType">Базовый тип среды CLR <see cref="T:System.Type" /> для создаваемого типа XAML.</param>
      <param name="schemaContext">Контекст для средства чтения XAML.</param>
      <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны null.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе и реализации <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType">Базовый тип для создаваемого типа языка XAML.</param>
      <param name="schemaContext">Контекст для средства чтения XAML.</param>
      <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны null.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary>Получает коллекцию только для чтения, содержащую типы, которые могут использоваться в качестве значения свойства <see cref="P:System.Xaml.XamlType.ContentProperty" /> для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Доступная только для чтения коллекция возможных типов содержимого.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary>Получает тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
      <returns>Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary>Возвращает значение, указывающее, содержит ли экземпляр данного типа <see cref="T:System.Xaml.XamlType" /> заданный тип <see cref="T:System.Xaml.XamlType" /> в своем списке присваиваемых типов.</summary>
      <returns>Значение true, если класс <paramref name="xamlType" /> содержится в списке присваиваемых типов; в противном случае — значение false.</returns>
      <param name="xamlType">Тип, из которого требуется проверить присваивание.</param>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary>Получает значение, указывающее, должен ли данный тип <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с использованием x:TypeArguments, текста инициализации или других технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
      <returns>Значение true, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary>Получает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.Может принимать значение null, если свойство содержимого отсутствует.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary>Получает типы, используемые для создания оболочки свойства содержимого, если оно не удовлетворяет требованию строгого соответствия типов, например строки в строго типизированной коллекции Collection&lt;T&gt;.</summary>
      <returns>Доступная только для чтения коллекция возможных типов оболочки содержимого или значение null.См. примечания.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, представляющий поведение преобразования отложенной загрузки для этого типа.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" />, представляющим поведение отложенной загрузки для данного типа.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary>Позволяет определить, равен ли текущий объект другому объекту.</summary>
      <returns>true, если текущий объект равен параметру <paramref name="obj" />, в противном случае — false.</returns>
      <param name="obj">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary>Указывает, равен ли текущий объект другому объекту того же типа.</summary>
      <returns>true, если текущий объект равен параметру <paramref name="other" />, в противном случае — false.</returns>
      <param name="other">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Член с псевдонимом, если он найден; в противном случае — значение null.</returns>
      <param name="directive">Директива, для которой требуется найти член с псевдонимом.</param>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary>Возвращает коллекцию, содержащую все присоединяемые свойства, предоставляемые этим классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary>Возвращает коллекцию, содержащую все члены, предоставляемые данным объектом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary>Задает имя присоединяемого члена объекта <see cref="T:System.Xaml.XamlMember" /> из данного объекта <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого члена или значение null, если присоединяемого члена с таким именем не существует.</returns>
      <param name="name">Имя присоединяемого члена, который требуется получить, в форме имя_типа_владельца.имя_члена.</param>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта.</summary>
      <returns>Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary>Возвращает конкретный член из данного типа <see cref="T:System.Xaml.XamlType" /> по имени.</summary>
      <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение null.</returns>
      <param name="name">Имя (в виде строки) члена, который требуется получить.</param>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary>Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Список значений <see cref="T:System.Xaml.XamlType" />, где каждый объект <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе.При передаче входных данных разметки в расширение разметки необходимо задавать типы в том же порядке.</returns>
      <param name="parameterCount">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary>Возвращает список строковых идентификаторов для пространств имен языка XAML, в которые входит этот тип.</summary>
      <returns>Список строковых значений, в котором каждая строка является URI-идентификатором для пространства имен языка XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary>Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Реализация объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> массив.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет массив; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> словарь в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary>Получает значение, указывающее, представляет ли этот данный тип <see cref="T:System.Xaml.XamlType" /> универсальный тип.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
      <returns>Значение true, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary>Получает значение, указывающее, инициализирован ли данный тип <see cref="T:System.Xaml.XamlType" /> с использованием допустимой строки xamlName в качестве его свойства <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> инициализирован с использованием допустимой строки xamlName; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary>Получает значение, которое показывает, выполняется ли построение данного типа <see cref="T:System.Xaml.XamlType" /> сверху вниз во время инициализации XAML.</summary>
      <returns>Значение true, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию, в которой учитываются символы пробелов, в соответствии с определением XML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию, в которой учитываются символы пробелов; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-XDATA в соответствии с определением XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет XDATA; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary>Получает значение, предоставляющее сведения о типе для свойства Items данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа элементов в коллекции или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary>Получает значение, предоставляющее сведения о типе для свойства ключа данного типа <see cref="T:System.Xaml.XamlType" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Возвращает член XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Член с псевдонимом, если он найден; в противном случае — значение null.</returns>
      <param name="directive">Директива, для которой требуется найти член с псевдонимом.</param>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary>Возвращает перечисляемый набор, содержащий все присоединяемые свойства, которые предоставляются данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />, или значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary>Возвращает перечисляемый набор, содержащий все члены, предоставляемые данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary>Возвращает список типов, которые могут использоваться в качестве значения <see cref="P:System.Xaml.XamlType.ContentProperty" /> для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Список возможных типов содержимого.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary>Возвращает конкретный присоединяемый объект <see cref="T:System.Xaml.XamlMember" /> из данного типа <see cref="T:System.Xaml.XamlType" /> по имени.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого члена или значение null, если присоединяемого члена с таким именем не существует.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
      <returns>Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary>Возвращает значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />, объявляющее, какой конкретный тип коллекции используется этим объектом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" /></returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary>Возвращает значение, указывающее, должен ли этот класс <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с помощью x:TypeArguments, текст инициализации или другие технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
      <returns>Значение true, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение false. </returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary>Возвращает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.Может принимать значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary>Получает список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary>Если реализуется в производном классе, возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Сведения <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> для данного типа <see cref="T:System.Xaml.XamlType" />; в противном случае — значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary>Возвращает значение, указывающее, представляет ли этот класс <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
      <returns>Значение true, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию, в которой учитываются символы пробелов, в соответствии с определением языка XML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию, в которой учитываются символы пробелов; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-XDATA в соответствии с определением языка XAML.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет XDATA; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary>Возвращает значение, предоставляющее сведения о типе для свойства Items данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа членов в коллекции или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary>Возвращает значение, предоставляющее сведения о типе для свойства ключа этого класса <see cref="T:System.Xaml.XamlType" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary>Возвращает значение, предоставляющее сведения о типе для возвращенного ProvideValue данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary>Возвращает конкретный присоединяемый член из этого класса <see cref="T:System.Xaml.XamlType" /> по имени.</summary>
      <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение null.</returns>
      <param name="name">Имя (в виде строки) члена, который требуется получить.</param>
      <param name="skipReadOnlyCheck">Значение true, если необходимо возвратить член, даже если в этом члене задано значение true для свойства <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение false, чтобы не возвращать член <see cref="P:System.Xaml.XamlMember.IsReadOnly" />.Значение по умолчанию — false.</param>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary>Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Список значений <see cref="T:System.Xaml.XamlType" />, где каждый такой тип <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе.При передаче входных данных разметки в расширение разметки необходимо задавать эти типы в том же порядке.</returns>
      <param name="parameterCount">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary>Возвращает обработчик, который нужно использовать для операций установки расширения разметки.</summary>
      <returns>Обработчик, который нужно использовать для операций установки расширения разметки.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary>Возвращает обработчик, используемый для вариантов установки преобразователя типов.</summary>
      <returns>Обработчик, используемый для вариантов установки преобразователя типов.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary>Возвращает значение, которое указывает, должен ли данный тип <see cref="T:System.Xaml.XamlType" /> сериализоваться с удалением окружающих пробелов.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> должен сериализоваться с удалением окружающих пробелов; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary>Возвращает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Среда CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />, или значение null.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary>Возвращает значение, которое показывает, выполняется ли построение этого класса <see cref="T:System.Xaml.XamlType" /> сверху вниз при инициализации языка XAML.</summary>
      <returns>Значение true, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary>Возвращает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение null.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary>Получает значение, предоставляющее сведения о типе для возвращенного значения ProvideValue данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary>Получает строковое имя типа, представляемого данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Строковое представление имени этого типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Значение true, если значение <paramref name="xamlType1" /> совпадает со значением <paramref name="xamlType2" />; в противном случае — значение false.</returns>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> или null.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> или null.</param>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Значение true, если значение <paramref name="xamlType1" /> отличается от значения <paramref name="xamlType2" />; в противном случае — значение false.</returns>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> или null.</param>
      <param name="xamlType2">Объект <see cref="T:System.Xaml.XamlType" /> или значение null.</param>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary>Получает одно пространство имен XAML, являющееся первичным пространством имен XAML для данного типа <see cref="T:System.Xaml.XamlType" />. </summary>
      <returns>Идентификатор первичного пространства имен XAML для данного типа XAML в виде строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary>Получает активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary>Получает значение, указывающее, имеет ли данный тип <see cref="T:System.Xaml.XamlType" /> поведение обработки пробелов, выполняющее удаление окружающих пробелов из его содержимого.</summary>
      <returns>Значение true, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, в котором используется удаление пробелов; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary>Получает список типов аргументов для случаев, в которых данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип.</summary>
      <returns>Список типов аргументов или значение null, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет универсальный тип.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary>Получает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Среда CLR <see cref="T:System.Type" />, являющаяся базовой для данного типа <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение null.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary>Предоставляет базовую реализацию и определение базового класса для средства записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary>Закрывает объект средства записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlWriter" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">true, если необходимо освободить управляемые ресурсы; в противном случае — false.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary>Получает сведения о том, вызывался ли метод <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />.</summary>
      <returns>Значение true, если был вызван <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary>При реализации в производном классе получает активный контекст схемы XAML.</summary>
      <returns>Активный контекст схемы.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary>См. описание метода <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary>При реализации в производном классе записывает представление узла конечного члена.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary>При реализации в производном классе записывает представление узла конечного объекта.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary>При реализации в производном классе выводит объект для случаев, когда этот объект является значением по умолчанию или неявным значением устанавливаемого свойства, а не задается в виде определенного значения объекта во входном наборе узла XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>При реализации в производном классе записывает узел объявления пространства имен XAML.</summary>
      <param name="namespaceDeclaration">Объявление пространства имен для записи.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary>Производит переключение на основе типа узла от средства чтения XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) и вызывает соответствующий метод Write для реализации средства записи.</summary>
      <param name="reader">Средство чтения, используемое для определения узла.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение null;</exception>
      <exception cref="T:System.NotImplementedException">Реализация по умолчанию обнаружила <see cref="T:System.Xaml.XamlNodeType" />, который не входит в перечисление по умолчанию.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>При реализации в производном классе записывает представление узла начального члена.</summary>
      <param name="xamlMember">Узел члена для записи.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>При реализации в производном классе записывает представление узла начального объекта.</summary>
      <param name="type">Тип XAML записываемого объекта.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary>При реализации в производном классе записывает узел значения.</summary>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary>Предоставляет параметры инициализации для реализации класса <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriterSettings" /> на основе существующих параметров.</summary>
      <param name="settings">Существующий объект <see cref="T:System.Xaml.XamlWriterSettings" />.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary>Обрабатывает разметку XAML из XML-файлов, используя промежуточный объект <see cref="T:System.Xml.XmlReader" />, и создает поток узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока.</summary>
      <param name="stream">Начальный поток, загружаемый в средство чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока с предоставленным контекстом схемы XAML.</summary>
      <param name="stream">Начальный поток, загружаемый в средство чтения.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока с предоставленным контекстом схемы XAML и специфичными для XAML параметрами.</summary>
      <param name="stream">Начальный поток, загружаемый в средство чтения.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока, со специфичными для XAML параметрами.</summary>
      <param name="stream">Начальный поток, загружаемый в средство чтения.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, с предоставленным контекстом схемы и специфичными для XAML параметрами.</summary>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, с предоставленным контекстом схемы и специфичными для XAML параметрами.</summary>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, со специфичными для XAML параметрами.</summary>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, который необходимо загрузить в средство чтения XML по умолчанию.</summary>
      <param name="fileName">Имя загружаемого XML-файла.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, с предоставленным контекстом схемы XAML.</summary>
      <param name="fileName">Имя загружаемого файла.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, с предоставленным контекстом схемы XAML и специфичными для XAML параметрами средства чтения.</summary>
      <param name="fileName">Имя загружаемого XML-файла.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, со специфическими для XAML параметрами средства чтения.</summary>
      <param name="fileName">Имя загружаемого XML-файла.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> с использованием предоставленного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="xmlReader">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" />, используя предоставленный объект <see cref="T:System.Xml.XmlReader" /> и контекст схемы.</summary>
      <param name="xmlReader">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" />, используя предоставленный объект <see cref="T:System.Xml.XmlReader" />, контекст схемы и параметры средства чтения.</summary>
      <param name="xmlReader">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="schemaContext">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" />, используя предоставленный объект <see cref="T:System.Xml.XmlReader" /> и параметры средства чтения.</summary>
      <param name="xmlReader">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="settings">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary>Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns>Значение true, если сведения о строке доступны; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary>Получает значение, определяющее, находится ли позиция средства чтения в конце файла.</summary>
      <returns>Значение true, если позиция находится в конце файла; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary>Получает сообщаемый номер строки.</summary>
      <returns>Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary>Получает сообщаемое положение в строке.</summary>
      <returns>Сообщаемое положение в строке.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary>Получает текущий член в позиции средства чтения, если текущая позиция средства чтения находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Текущий член или значение null, если текущая позиция средства чтения не находится в члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary>Получает пространство имен XAML из текущего узла.</summary>
      <returns>Пространство имен XAML из текущего узла, если доступно; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary>Получает тип текущего узла.</summary>
      <returns>Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary>Предоставляет следующий узел XAML из загруженного источника, если узел XAML доступен. </summary>
      <returns>Значение true, если узел доступен; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary>Получает объект, предоставляющий сведения о схеме для данного набора сведений.</summary>
      <returns>Объект, предоставляющий сведения о схеме для данного набора сведений.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary>Получает объект <see cref="T:System.Xaml.XamlType" /> для текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xaml.XamlType" /> текущего узла или значение null, если позиция не находится в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary>Получает значение текущего узла.</summary>
      <returns>Значение текущего узла или значение null, если позиция не находится в типе узла <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary>Задает правила обработки или значения параметров для реализации средства чтения XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReaderSettings" />, копируя параметры из существующего объекта <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
      <param name="settings">Существующий объект <see cref="T:System.Xaml.XamlXmlReaderSettings" /> для копирования.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary>Получает или задает значение, показывающее, нужно ли закрыть основной поток или средство чтения текста при закрытии объекта <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns>Значение true, чтобы закрыть основной поток или средство чтения при закрытии объекта <see cref="T:System.Xaml.XamlXmlReader" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary>Получает или задает значение, определяющее, должно ли средство чтения отличаться от поведения <see cref="T:System.Xaml.XamlXmlReader" /> по умолчанию при обработке содержимого совместимости разметки.</summary>
      <returns>Значение true, если необходимо напрямую использовать инициирующее средство чтения (т. е. разметка совместимости XML обрабатывается отдельно, как часть основного потока).Значение false, чтобы использовать поведение по умолчанию, при котором совместимость XML обрабатывается отдельно.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary>Получает или задает значение параметра языка, которое средство чтения может передавать средствам записи, записывающим атрибуты xml:lang в узлах.</summary>
      <returns>Строка, которую необходимо использовать для возможного вывода атрибута xml:lang на основе средства чтения.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary>Получает или задает значение, определяющее, можно ли повысить уровень средства чтения до средств записи, записывающих атрибуты xml:space в узлах.</summary>
      <returns>Значение true, если средства записи, обрабатывающие поток узлов XAML, должны потенциально записывать xml:space="preserve" в выходные данные; значение false, если атрибуты xml:space записывать не нужно.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary>Использует класс поддержки <see cref="T:System.IO.TextWriter" /> или <see cref="T:System.Xml.XmlWriter" /> для записи узлов XAML в текст или разметку.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> из потока.</summary>
      <param name="stream">Поток для записи.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение null;— или —<paramref name="schemaContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> из потока, используя объект параметров средства записи.</summary>
      <param name="stream">Поток для записи.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> или параметра <paramref name="schemaContext" /> — null.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="textWriter" /> или <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.IO.TextWriter" />, используя объект параметров.</summary>
      <param name="textWriter">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="textWriter" /> или <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">Объект <see cref="T:System.Xml.XmlWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlWriter" /> или <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.Xml.XmlWriter" />, используя объект параметров.</summary>
      <param name="xmlWriter">Объект <see cref="T:System.Xml.XmlWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlWriter" /> или <paramref name="schemaContext" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlXmlWriter" />, а при необходимости освобождает и управляемые ресурсы. </summary>
      <param name="disposing">Значение true, если необходимо освободить неуправляемые ресурсы; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary>Вызывает метод Flush базового класса <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />, который записывает все данные, содержащиеся в данный момент в буфере, а затем закрывает средство записи.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary>Получает контекст схемы XAML, используемый данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки.</summary>
      <returns>Контекст схемы XAML, используемый данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary>Получает параметры средства записи, используемые данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</summary>
      <returns>Параметры средства записи, используемые данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary>Записывает узел конечного члена XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Создает исключение, если текущая позиция потока узлов XAML не находится внутри члена или если внутреннее состояние средства записи не поддерживает запись в конечный член.</summary>
      <exception cref="T:System.InvalidOperationException">Текущая позиция потока узла XAML не находится в пределах члена.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Текущее состояние средства записи не поддерживает запись конечного члена.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary>Записывает узел конечного объекта XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Создает исключение, если обрабатываемая текущая позиция потока узлов XAML не совместима с записью конечного объекта.</summary>
      <exception cref="T:System.InvalidOperationException">Текущая позиция потока узла XAML находится внутри члена; или она не находится в области, в которую может быть записан конечный член.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Текущее состояние средства записи не поддерживает запись конечного объекта.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary>Записывает объект для случаев, когда заданный объект является значением по умолчанию или неявным значением свойства, которое записывается в настоящее время, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Записывает сведения о пространстве имен в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Может создавать исключения для определенных состояний, но может также и откладывать запись сведений о пространстве имен до тех пор, пока средство записи и обрабатываемый поток узлов XAML не достигнет позиции, позволяющей вставлять объявление пространства имен XAML.</summary>
      <param name="namespaceDeclaration">Объявление пространства имен XAML для записи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceDeclaration" /> не является допустимым объявлением пространства имен XAML (имеет префикс со значением null или компонент идентификатора с таким же значением).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Текущее состояние средства записи не поддерживает запись объявления пространства имен XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Записывает узел начального члена XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Создает исключение, если текущая позиция потока узлов XAML находится внутри другого члена либо не находится в области или состоянии средства записи, в котором возможна запись начального члена.</summary>
      <param name="property">Идентификатор члена XAML для записываемого члена.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="property" /> не содержит допустимого значения <see cref="T:System.Xaml.XamlMember" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущая позиция потока узла XAML не поддерживает запись начального члена.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Состояние записи не является допустимым для написания начала элемента.— или —Модуль записи XAML попытался произвести запись в повторяющийся элемент.Это может иметь более точное внутреннее исключение.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Записывает узел начального объекта XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Создает исключение, если текущая позиция потока узлов XAML не находится в области, в которой возможна запись начального объекта, либо средство записи не находится в состоянии, позволяющем записывать начальный объект.</summary>
      <param name="type">Объект <see cref="T:System.Xaml.XamlType" /> (идентификатор типа XAML) для записываемого объекта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="type" /> не содержит допустимого значения <see cref="T:System.Xaml.XamlType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущая позиция потока узла XAML недопустима для записи нового начального объекта.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Недопустимое состояние записи XAML для записи нового объекта запуска.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary>Записывает узел значения XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />.Создает исключение, если текущая позиция потока узлов XAML не поддерживает запись значения или средство записи находится в состоянии, в котором невозможно записать значение.</summary>
      <param name="value">Сведения о значении для записи.</param>
      <exception cref="T:System.InvalidOperationException">Текущая позиция потока узла XAML недопустима для записи значения.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">Состояние модуля записи XAML не поддерживает запись значения узла.</exception>
      <exception cref="T:System.ArgumentException">Попытка записать значение, которое не было равно null или строке.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary>Исключение, вызываемое некоторыми программными интерфейсами приложений (API) <see cref="T:System.Xaml.XamlXmlWriter" />. </summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта. </param>
      <param name="context">Контекстные сведения об источнике или назначении. </param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary>Предоставляет параметры инициализации для реализации средства чтения XAML на основе класса <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary>Получает или задает значение, указывающее, должен ли объект <see cref="T:System.Xaml.XamlXmlWriter" /> всегда предполагать допустимые входные данные XAML для целей разрешения дубликатов или проверки на наличие других ошибок.</summary>
      <returns>Значение true, чтобы объект <see cref="T:System.Xaml.XamlXmlWriter" /> пропускал определенные проверки, например исключения, вызванные повторяющимися элементами.Значение false, чтобы объект <see cref="T:System.Xaml.XamlXmlWriter" /> обрабатывал исключения в случае появления недопустимого кода XAML.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary>Получает или задает значение, указывающее, должен ли объект <see cref="T:System.Xaml.XamlXmlWriter" /> закрываться сразу при вызове метода Dispose или других операций (потенциально оставляя неполностью записанный и, следовательно, недействительный текст XAML), или перед закрытием должно быть выведено содержимое буфера.</summary>
      <returns>Значение true, чтобы закрыть <see cref="T:System.Xaml.XamlXmlWriter" /> немедленно после Dispose или другой аналогичной операции.Значение false, чтобы записать оставшийся буфер до освобождения <see cref="T:System.Xaml.XamlXmlWriter" />.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary>Возвращает копию экземпляра данного класса <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns>Возвращаемая копия.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Определяет управление доступом к сборкам и типам для загрузки XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе сборки, запрашиваемой объектом <see cref="T:System.Reflection.Assembly" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assembly" />, используемый в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />. </returns>
      <param name="assembly">Сборка для запроса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе сборки, запрашиваемой объектом <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assemblyName" />, используемый в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />. </returns>
      <param name="assemblyName">Имя сборки для запроса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> не является допустимым полным именем сборки.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Получает имя <see cref="T:System.Reflection.AssemblyName" /> сборки, для которой данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</summary>
      <returns>Имя <see cref="T:System.Reflection.AssemblyName" /> сборки, для которой данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе определенного типа, указанного с помощью полного имени.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assemblyQualifiedTypeName" />, используемым в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />, и <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />, определяемым по отражению для типа. </returns>
      <param name="assemblyQualifiedTypeName">Строка, анализируемая как имя типа в сборке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> не является допустимым именем типа с указанием сборки.— или —Имя сборки в <paramref name="assemblyQualifiedTypeName" /> не является допустимым именем сборки.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе определенного типа, заданного объектом <see cref="T:System.Type" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="type" />, используемым в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />, и <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />, определяемым по отражению для типа. </returns>
      <param name="type">Объект <see cref="T:System.Type" />, к которому запрашивается доступ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Получает неполное строковое имя типа, для которого данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</summary>
      <returns>Неполное строковое имя типа, для которого данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Объявляет разрешения для типов загрузки из сборок, используемые модулем чтения или записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя перечисляемый набор значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Перечисляемый набор значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="allowedAccess" /> содержал недопустимые данные, такие как элемент null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя существующие разрешения.</summary>
      <param name="state">Значение перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя одиночное значение <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Определяющее значение <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Получает список всех значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, представляемых данным объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      <returns>Доступный только для чтения список значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> или null.См. примечания.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      <returns>Копия текущего <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Воссоздает объект безопасности с заданным состоянием из кода XML.</summary>
      <param name="elem">Кодировка XML, используемая для воссоздания объекта безопасности. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> не содержит кодировку XML для <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.— или — Атрибут версии в <paramref name="elem" /> не поддерживается. </exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Возвращает значение, указывающее, включает ли данное разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> заданный уровень доступа <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> в своем списке <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <returns>Значение true, если <paramref name="requestedAccess" /> существует в виде элемента списка <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.В противном случае — значение false.</returns>
      <param name="requestedAccess">Проверяемый уровень доступа <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="requestedAccess" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, представляющее собой пересечение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения.</summary>
      <returns>Новое разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.Если пересечение является пустым, новое разрешение имеет значение null.</returns>
      <param name="target">Объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используемый для пересечения с текущим объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.Может быть null.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="target" /> не равно null или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> подмножеством указанного разрешения.</summary>
      <returns>Значение true, если текущее разрешение является подмножеством заданного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />; в противном случае — значение false.</returns>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества.Может быть null.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="target" /> не равно null или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Возвращает значение, которое определяет, указывает ли данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> на неограниченные разрешения.</summary>
      <returns>Значение true, если данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> указывает на неограниченные разрешения.Значение false, если данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> имеет определенные ограничения уровня доступа в <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> или не содержит разрешений.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Создает кодировку XML данного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и его текущего состояния.</summary>
      <returns>Кодировка XML данного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, включающая все сведения о состоянии.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения.</summary>
      <returns>Новый объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, представляющий собой объединение текущего набора <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и указанного набора <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
      <param name="other">Разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используемое в сочетании с текущим <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.Может быть null.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="other" /> не равно null или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary>Задает ограничения синтаксиса, принудительно применяемые для свойства при его назначении в XAML, в соответствии с <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary>Свойство вообще не может быть установлено в XAML.Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary>Свойство может быть установлено в синтаксисе атрибутов XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary>Свойство может быть установлено в синтаксисе элемента XAML-свойства.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary>Свойство может быть задано в <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> или <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />.(Данный член перечисления определен как комбинация этих значений.)</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary>Определяет поведение сериализации, сообщаемое объектом <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary>Неизвестно, используется тип члена.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary>Результат с сериализацией.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary>Результат без сериализации.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary>Описывает метафору коллекции (если есть), используемые членом XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary>Член XAML не поддерживает коллекцию.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary>Член XAML поддерживает список или коллекцию.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary>Член XAML поддерживает словарь (пары ключ-значение).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary>Член XAML поддерживает массив-коллекцию.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary>Предоставляет точку расширения, которая может осуществлять доступ к характеристикам XAML-члена с использованием методик, отличных от отражения.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />. </summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> на основе заданного <see cref="T:System.Xaml.XamlMember" />.</summary>
      <param name="member">Значение <see cref="T:System.Xaml.XamlMember" /> для определенного XAML-члена, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary>Получает значение соответствующего свойства из элемента.</summary>
      <returns>Запрашиваемое значение свойства.</returns>
      <param name="instance">Экземпляр типа владельца для члена.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
      <exception cref="T:System.NotSupportedException">Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> на основе неизвестного <see cref="T:System.Xaml.XamlMember" />.— или —Этот метод вызван для члена, доступного только на запись.— или —<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary>Задает значение соответствующего свойства в элементе.</summary>
      <param name="instance">Экземпляр типа владельца для члена.</param>
      <param name="value">Задаваемое значение свойства.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
      <exception cref="T:System.NotSupportedException">Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> на основе неизвестного <see cref="T:System.Xaml.XamlMember" />.— или —Этот метод вызван для члена, доступного только для чтения.— или —<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary>Указывает, нужно ли сохранять значение с помощью процессов сериализации.</summary>
      <returns>Значение перечисления.</returns>
      <param name="instance">Экземпляр со свойством, возможность сохранения которого нужно проверить.</param>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или null.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или null.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary>Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>Статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary>Предоставляет точку расширения, которая может осуществлять построение экземпляров типа XAML с использованием методик, отличных от отражения и конструкторов.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> на основе заданного <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="type">Значение <see cref="T:System.Xaml.XamlType" /> для определенного XAML-типа, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary>Добавляет предоставленный элемент в экземпляр типа, соответствующий данному объекту <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />. </summary>
      <param name="instance">Экземпляр типа, заданного объектом <see cref="T:System.Xaml.XamlType" />, который используется для построения данного объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item">Добавляемый элемент.</param>
      <exception cref="T:System.NotSupportedException">Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> на основе неизвестного <see cref="T:System.Xaml.XamlType" />.— или —Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является коллекцией.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> возвращает null.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary>Добавляет предоставленный ключ и значение элемента в экземпляр типа, соответствующий данному объекту <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />. </summary>
      <param name="instance">Экземпляр типа, заданного объектом <see cref="T:System.Xaml.XamlType" />, который используется для построения данного объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key">Ключ словаря для добавляемого элемента.</param>
      <param name="item">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> на основе неизвестного <see cref="T:System.Xaml.XamlType" />.— или —Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является словарем.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> возвращает null.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary>Создает экземпляр объекта на основе <see cref="T:System.Xaml.XamlType" />, инициируемого при конструкции для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <returns>Созданный экземпляр объекта на основе <see cref="T:System.Xaml.XamlType" />, инициируемого при конструкции для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <param name="arguments">Массив объектов, которые предоставляют аргументы x:ConstructorArgs для экземпляра.Может быть null для типов, не требующих использования x:ConstructorArgs.</param>
      <exception cref="T:System.MissingMethodException">Не удалось разрешить конструктор.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary>Возвращает соответствующий метод Add для объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, соответствующего коллекции или словарю. </summary>
      <returns>Сведения <see cref="T:System.Reflection.MethodInfo" /> в среде CLR для метода Add, или null.</returns>
      <param name="contentType">
        <see cref="T:System.Xaml.XamlType" /> для типа элемента, используемого методом Add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary>Возвращает объект, представляющий метод, который может осуществлять перечисление по элементам.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> для метода перечислителя, или null.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, представляющий набор элементов.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> или null.</returns>
      <param name="instance">Экземпляр типа, заданного объектом <see cref="T:System.Xaml.XamlType" />, который используется для построения данного объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.NotSupportedException">Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> на основе неизвестного <see cref="T:System.Xaml.XamlType" />.— или —Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является коллекцией или словарем.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary>Получает обработчик, который необходимо использовать при вызове реализованного объекта <see cref="T:System.Windows.Markup.MarkupExtension" /> объектом <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns>Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary>Получает обработчик, используемый, когда <see cref="T:System.Xaml.XamlObjectWriter" /> вызывает реализованный в среде CLR метод <see cref="T:System.ComponentModel.TypeConverter" />.</summary>
      <returns>Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary>Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <returns>Статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary>Предоставляет средства для указания XAML-типа в терминах имени и пространства имен.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени и пространства имен.</summary>
      <param name="xamlNamespace">Пространство имен XAML, содержащее имя.</param>
      <param name="name">Имя типа, для которого необходимо создать <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строк имени и пространства имен, а также массива аргументов типов.</summary>
      <param name="xamlNamespace">Пространство имен XAML, содержащее <paramref name="name" />.</param>
      <param name="name">Имя типа, для которого необходимо создать <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments">Массив аргументов типов, каждый из которых должен иметь значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе существующего объекта <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="xamlType">Существующий объект <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary>Получает имя, используемое для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Имя типа.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary>Получает идентификатор пространства имен XAML, используемый для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Идентификатор пространства имен XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <returns>Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <param name="typeName">Имя типа, для которого необходимо создать значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> или <paramref name="namespaceResolver" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Строка не может быть проанализирована.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строки, в которой может указываться несколько имен типов, и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <returns>Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <param name="typeNameList">Строка, содержащая несколько типов.См. примечания.</param>
      <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Строка не может быть проанализирована.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление.</summary>
      <returns>Эквивалентное строковое представление данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов нескольких типов.</summary>
      <returns>Объединенная строка, содержащая результаты по всем типам.</returns>
      <param name="typeNameList">Список типов.</param>
      <param name="prefixLookup">Ссылка на службу для поиска префикса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="prefixLookup" /> или <paramref name="typeNameList" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов определенного типа.</summary>
      <returns>Строка с использованием префикса.</returns>
      <param name="prefixLookup">Ссылка на службу для поиска префикса.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> для этого <see cref="T:System.Xaml.Schema.XamlTypeName" /> равно null.— или —Недопустимый параметр <see cref="P:System.Xaml.Schema.XamlTypeName.Name" />.— или —Не удалось найти префикс.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary>Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <returns>Значение true, если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае — значение false.</returns>
      <param name="typeName">Имя типа, для которого необходимо создать значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Выходной параметр, содержащий созданное имя <see cref="T:System.Xaml.Schema.XamlTypeName" /> при возвращаемом значении true.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> или <paramref name="namespaceResolver" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary>Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строки, в которой может указываться несколько имен типов, и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <returns>Значение true, если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае — значение false.</returns>
      <param name="typeNameList">Строка, содержащая несколько типов.См. примечания.</param>
      <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Выходной параметр, содержащий созданное имя <see cref="T:System.Xaml.Schema.XamlTypeName" /> при возвращаемом значении true.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary>Получает аргументы типов, используемые для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Аргументы типов (если есть).Может принимать значение NULL.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary>Преобразует объект <see cref="T:System.Xaml.XamlType" /> в строку, представляющую имя типа, и обратно.Эта возможность используется определениями разметки для обеспечения расширяемости XAML с помощью определения <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Xaml.XamlType" /> с использованием заданного контекста.</summary>
      <returns>Значение true, если данный преобразователь может выполнить операцию, в противном случае — значение false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр типа <see cref="T:System.Xaml.XamlType" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <returns>Значение true, если данный преобразователь может выполнить операцию, в противном случае — значение false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать указанный объект в <see cref="T:System.Xaml.XamlType" />, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать объект <see cref="T:System.Xaml.XamlType" /> к заданному типу, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Тип, в который требуется преобразовать объект.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary>Предоставляет общую область API для всех методик, генерирующих значения инициализации или сериализации XAML на основе входных значений, отличных от конечного целевого типа.Это включает расширения разметки и преобразователи типов.</summary>
      <typeparam name="TConverterBase">Базовый класс CLR для определенного преобразователя, представляемого данным объектом <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.Обычно это один из следующих параметров: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> на основе преобразователя, реализующего <see cref="T:System.Type" />, и целевого типа <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType">
        <see cref="T:System.Type" />, реализующий поведение преобразователя.</param>
      <param name="targetType">Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> на основе преобразователя, реализующего <see cref="T:System.Type" />, целевого типа <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и строкового имени.</summary>
      <param name="converterType">
        <see cref="T:System.Type" />, реализующий поведение преобразователя.</param>
      <param name="targetType">Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name">Имя строки.</param>
      <exception cref="T:System.ArgumentException">Все три параметра имеют значение null (по крайней мере один должен отличаться от null).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary>Получает созданный экземпляр реализации преобразователя.</summary>
      <returns>Созданный экземпляр реализации преобразователя, или null.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary>Получает тип <see cref="T:System.Type" /> для класса, который реализует поведение преобразователя.</summary>
      <returns>Тип <see cref="T:System.Type" /> для класса, который реализует поведение преобразователя.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary>Возвращает экземпляр реализации преобразователя.</summary>
      <returns>Экземпляр реализации преобразователя, или null.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException">Преобразователь не реализовал правильный базовый тип.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary>Определяет, равны ли значения этого экземпляра <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и указанного объекта, который также должен быть объектом <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>true, если <paramref name="obj" /> имеет тип <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и его значение совпадает со значением данного экземпляра; в противном случае — false. </returns>
      <param name="obj">Объект для сравнения.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Определяет, равны ли значения данного экземпляра <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и другого объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>true, если <paramref name="other" /> имеет тип <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и его значение совпадает со значением данного экземпляра; в противном случае — false. </returns>
      <param name="other">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> для сравнения.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. </summary>
      <returns>Целочисленный хэш-код. </returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary>Получает строковое имя данного <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Строковое имя данного <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. </summary>
      <returns>Значение true, если значение <paramref name="converter1" /> совпадает со значением <paramref name="converter2" />; в противном случае — значение false. </returns>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или null.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или null.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. </summary>
      <returns>Значение true, если значение <paramref name="converter1" /> отличается от значения <paramref name="converter2" />; в противном случае — значение false. </returns>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или null.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или null.</param>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary>Получает целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, которая представляет данный объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. </summary>
      <returns>Строка <see cref="T:System.String" />, представляющая этот курсор <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. </returns>
    </member>
  </members>
</doc>