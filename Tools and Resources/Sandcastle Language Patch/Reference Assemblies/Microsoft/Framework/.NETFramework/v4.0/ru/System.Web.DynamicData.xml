<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DynamicData</name>
  </assembly>
  <members>
    <member name="T:System.Web.DynamicData.ContainerType">
      <summary>Задает тип контейнера элемента управления данными. </summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.List">
      <summary>Указывает, что используется контейнер типа "список", реализующий интерфейс <see cref="T:System.Web.UI.WebControls.IDataBoundListControl" />, такой как элемент управления <see cref="T:System.Web.UI.WebControls.ListView" />, элемент управления <see cref="T:System.Web.UI.WebControls.GridView" /> или элемент управления <see cref="T:System.Web.UI.WebControls.Repeater" />.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.Item">
      <summary>Указывает, что используется контейнер типа "элемент", реализующий интерфейс <see cref="T:System.Web.UI.WebControls.IDataBoundItemControl" />, такой как элемент управления <see cref="T:System.Web.UI.WebControls.DetailsView" /> или элемент управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
    </member>
    <member name="T:System.Web.DynamicData.ContextConfiguration">
      <summary>Предоставляет для экземпляра контекста данных сведения, необходимые для разрешения настройки.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ContextConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.MetadataProviderFactory">
      <summary>Возвращает или задает поставщик метаданных. </summary>
      <returns>Тип поставщика метаданных. </returns>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.ScaffoldAllTables">
      <summary>Возвращает или задает значение, указывающее, включено ли формирование шаблонов.</summary>
      <returns>true, если формирование шаблонов включено; в противном случае — false.Значением по умолчанию является false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ControlFilterExpression">
      <summary>Изменяет запрос к базе данных, используя ключ данных элемента, выбранного в элементе управления с привязкой к данным. </summary>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.Column">
      <summary>Получает или задает имя столбца, на котором основан запрос.</summary>
      <returns>Имя столбца, на котором основан запрос.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.ControlID">
      <summary>Получает или задает идентификатор исходного элемента управления с привязкой к данным. </summary>
      <returns>Идентификатор исходного элемента управления с привязкой к данным. </returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Получает изменяемый запрос к источнику данных. </summary>
      <returns>Объект, представляющий запрос к источнику данных, изменяемый данным экземпляром <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.</returns>
      <param name="source">Изменяемый запрос к источнику данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)">
      <summary>Восстанавливает сохраненное раннее состояние представления. </summary>
      <param name="savedState">Состояние, которое требуется восстановить.</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState">
      <summary>Сохраняет изменения состояния представления с того момента, как страница была отправлена на сервер.</summary>
      <returns>Объект, содержащий изменения состояния представления.Если с объектом не связано состояние представления, метод возвращает значение null.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Инициализирует выражение фильтра сведениями об источнике данных.</summary>
      <param name="owner">Элемент управления, в котором содержится экземпляр <see cref="T:System.Web.DynamicData.ControlFilterExpression" />, такой как элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
      <param name="context">Текущий объект <see cref="T:System.Web.HttpContext" /> приложения. </param>
      <param name="dataSource">Целевой источник данных для экземпляра <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.Если экземпляр <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> содержится в элементе управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />, этот параметр представляет собой источник данных, на который ссылается элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState">
      <summary>Инициирует отслеживание объектом <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> изменений в состоянии его представления, благодаря чему эти изменения можно сохранить в объекте состояния просмотра элемента управления и хранить их для всех запросов одной и той же страницы.</summary>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReference">
      <summary>Позволяет элементу управления <see cref="T:System.Web.DynamicData.DynamicDataManager" /> декларативно определять элементы управления данными, которыми он управляет.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DataControlReference" />. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.ControlID">
      <summary>Получает идентификатор элемента управления с привязкой к данным, которым управляет элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</summary>
      <returns>Идентификатор элемента управления с привязкой к данным, которым управляет элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.Owner">
      <summary>Получает элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />, содержащий элемент управления данными.</summary>
      <returns>Элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />, содержащий элемент управления данными.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.ToString">
      <summary>Получает строковый литерал DataControl: , к которому добавлено значение элемента управления <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" />.</summary>
      <returns>Строковый литерал DataControl: , к которому добавлено значение свойства <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" />.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReferenceCollection">
      <summary>Представляет набор объектов <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.#ctor(System.Web.DynamicData.DynamicDataManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DataControlReferenceCollection" />.</summary>
      <param name="owner">Объект контейнера.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="owner" /> — null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.InsertItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>Вставляет ссылку на элемент управления данными в коллекцию ссылок на элементы управления данными.</summary>
      <param name="index">Индекс, указывающий место вставки элемента управления данными.</param>
      <param name="item">Вставляемый элемент управления данными.</param>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReferenceCollection.Owner">
      <summary>Получает элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />, содержащий элемент управления данными. </summary>
      <returns>Элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />, содержащий элемент управления данными. </returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.RemoveItem(System.Int32)">
      <summary>Удаляет ссылку на элемент управления данными из коллекции.</summary>
      <param name="index">Индекс удаляемой ссылки на элемент управления данными.</param>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.SetItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>Задает элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />, содержащий ссылку на элемент управления данными.</summary>
      <param name="index">Индекс задаваемой ссылки на элемент управления данными.</param>
      <param name="item">Элемент управления данными.</param>
    </member>
    <member name="T:System.Web.DynamicData.DefaultAutoFieldGenerator">
      <summary>Автоматически создает поля динамических данных (столбцы) для элементов управления с привязкой к данным. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.#ctor(System.Web.DynamicData.MetaTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DefaultAutoFieldGenerator" />.</summary>
      <param name="table">Метаданные для таблицы, для которой нужно создать динамические поля.</param>
      <exception cref="T:System.ArgumentNullException">Таблица имеет значение null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.CreateField(System.Web.DynamicData.MetaColumn,System.Web.DynamicData.ContainerType,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Создает динамическое поле данных. </summary>
      <returns>Создаваемое динамическое поле.</returns>
      <param name="column">Метаданные для столбца, для которого нужно создать динамическое поле.</param>
      <param name="containerType">Элемент управления с привязкой к данным, содержащий динамическое поле.</param>
      <param name="mode">Режим доступа для динамического поля.</param>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.GenerateFields(System.Web.UI.Control)">
      <summary>Создает объекты <see cref="T:System.Web.DynamicData.DynamicField" /> на основе метаданных таблицы.</summary>
      <returns>Коллекция объектов <see cref="T:System.Web.DynamicData.DynamicField" />.</returns>
      <param name="control">Элемент управления с привязкой к данным, содержащий динамическое поле данных.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControl">
      <summary>Отображает содержимое, определенное для поля в элементах управления-шаблонах с привязкой к данным с использованием функций платформы динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.DynamicData.DynamicControl" />. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicControl" /> указанным режимом. </summary>
      <param name="mode">Одно из значений из перечисления, указывающее режим элемента управления.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode">
      <summary>Возвращает или задает значение, указывающее, применима ли заданная в свойстве <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> строка форматирования к значениям полей, когда поле находится в режиме правки.</summary>
      <returns>true, если строка форматирования применяется; в противном случае — false.Значением по умолчанию является false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Column">
      <summary>Возвращает или задает объект столбца, связанного с элементом управления.</summary>
      <returns>Объект столбца, связанный с элементом управления.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull">
      <summary>Возвращает или задает значение, показывающее, преобразовываются ли пустые строковые значения ("") автоматически в значения null, когда в источнике данных обновляется поле данных.</summary>
      <returns>Значение true, если пустые строковые значения автоматически преобразуются в значения null; в противном случае — значение false.Значением по умолчанию является false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.CssClass">
      <summary>Возвращает или задает класс каскадной таблицы стилей (CSS), задающей стили отображения содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
      <returns>Имя класса CSS.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataField">
      <summary>Возвращает или задает имя поля данных, к которому привязан элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
      <returns>Имя поля данных, к которому привязывается элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" />.Значением по умолчанию является пустая строка (""), указывающая, что это свойство не задано.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataFormatString">
      <summary>Возвращает или задает строку, определяющую формат отображения значения поля.</summary>
      <returns>Строка форматирования, определяющая формат отображения значения поля.По умолчанию это пустая строка (""), указывающая на неприменение к значению поля специального форматирования.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.FieldTemplate">
      <summary>Возвращает шаблон поля, созданный для элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />. </summary>
      <returns>Шаблон поля, созданный для элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)">
      <summary>Извлекает значение атрибута, используя заданный ключ.</summary>
      <returns>Значение атрибута.</returns>
      <param name="key">Имя атрибута.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.HtmlEncode">
      <summary>Возвращает или задает значение, указывающее, осуществляется ли перед отрисовкой HTML-кодирование данных для элемента управления.</summary>
      <returns>true, если перед отрисовкой осуществляется HTML-кодирование данных для элемента управления; в противном случае — false.Значением по умолчанию является true.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Mode">
      <summary>Возвращает или задает режим отрисовки.</summary>
      <returns>Одно из значений из перечисления, указывающее режим отрисовки для элемента управления.Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.NullDisplayText">
      <summary>Возвращает или задает заголовок, отображаемый для поля данных, когда оно имеет значение null.</summary>
      <returns>Заголовок, отображаемый для поля данных, когда оно имеет значение null.Значение по умолчанию — пустая строка (""), указывающая, что это свойство не задано.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)">
      <summary>Генерирует событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
      <param name="e">Данные события.</param>
      <exception cref="T:System.InvalidOperationException">Не задано свойство <see cref="P:System.Web.DynamicData.DynamicControl.DataField" />.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Осуществляет рендеринг содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" /> для клиентского обозревателя, используя заданный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
      <param name="writer">Объект, который используется для рендеринга содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" /> для клиентского обозревателя.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)">
      <summary>Присваивает заданному атрибуту заданное значение. </summary>
      <param name="key">Имя устанавливаемого атрибута.</param>
      <param name="value">Значение, присвоенное атрибуту.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions">
      <summary>Описание этого члена см. в разделе, посвященном <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />.</summary>
      <returns>Параметры форматирования, применяемые к шаблону поля.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Table">
      <summary>Возвращает объект таблицы, связанный с элементом управления.</summary>
      <returns>Объект таблицы, связанный с элементом управления.</returns>
      <exception cref="T:System.Exception">Элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" /> находится в элементе управления с привязкой к данным, не связанном с элементом управления источником данных, реализующим интерфейс <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.UIHint">
      <summary>Возвращает или задает имя шаблона поля, используемого для рендеринга поля данных.</summary>
      <returns>Имя шаблона поля, используемого для рендеринга поля данных.Значением по умолчанию является пустая строка (""), указывающая, что рендеринг шаблона поля будет основан на типе поля данных или на информации метаданных, применяемых к модели данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ValidationGroup">
      <summary>Возвращает или задает имя группы проверки для элемента управления.</summary>
      <returns>Имя группы проверки для элемента управления.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControlParameter">
      <summary>Представляет параметр, используемый для фильтров "главный-подчиненный", в которых источник данных получает информацию из другого элемента управления данными.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicControlParameter" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="System.Web.DynamicData.DynamicControlParameter" />, связанный с заданным элементом управления.</summary>
      <param name="controlId">Идентификатор элемента управления, значения которого представляет данный параметр.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControlParameter.ControlId">
      <summary>Возвращает или задает уникальный идентификатор элемента управления, к которому привязывается объект <see cref="T:System.Web.DynamicData.DynamicControlParameter" />.</summary>
      <returns>Уникальный идентификатор элемента управления, от которого объект <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> получает данные.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>Выбрасывает исключение <see cref="T:System.InvalidOperationException" />, чтобы указать, что элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" /> отсутствует.</summary>
      <returns>Объект <see cref="T:System.InvalidOperationException" />., указывающий, что элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" /> отсутствует.</returns>
      <param name="context">Контекст HTTP.</param>
      <param name="control">Параметр динамического элемента управления. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Возвращает коллекцию параметров, которые используются для создания предложения Where при запросах к источнику данных.</summary>
      <returns>Коллекция объектов <see cref="T:System.Web.UI.WebControls.Parameter" />, представляющих параметры запроса для указанного экземпляра <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</returns>
      <param name="dataSource">Экземпляр <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> для получения от него параметров.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataExtensions">
      <summary>Представляет методы расширения, используемые платформой динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
      <summary>Возвращает значение, предоставленное пользователем для проверяемого элемента управления.</summary>
      <returns>Значение null, если параметр <paramref name="value" /> имеет значение null или является пустой строкой и свойство <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull" /> объекта, переданного в параметре <paramref name="formattingOptions" />, имеет значение true; значение null, если значением параметра <paramref name="value" /> не является null или пустая строка и оно соответствует свойству <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText" /> объекта, переданного в параметре <paramref name="formattingOptions" />; в остальных случаях —значение параметра <paramref name="value" /> без изменений.</returns>
      <param name="formattingOptions">Объект параметров форматирования, определенных объектом <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" />.</param>
      <param name="value">Преобразуемое входное значение.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Позволяет сохранять выделение в элементах управления данными, поддерживающих выделение и разбиение по страницам.</summary>
      <param name="dataBoundControl">Элемент управления с привязкой к данным.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Расширяет динамические фильтры в параметры Where, подходящие для использования источником данных.</summary>
      <param name="dataSource">Объект источника данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
      <summary>Возвращает источник данных, связанный с элементом управления данными, для заданного элемента управления.</summary>
      <returns>Источник данных, связанный с элементом управления данными, для заданного элемента управления.</returns>
      <param name="current">Элемент управления в иерархии элемента управления с привязкой к данным, контейнерный элемент управления которого требуется найти.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
      <summary>Возвращает шаблон поля для заданного столбца в контейнере именования заданного элемента управления.</summary>
      <returns>Шаблон поля для заданного столбца в контейнере именования заданного элемента управления.</returns>
      <param name="control">Контейнерный элемент управления.</param>
      <param name="columnName">Имя столбца.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
      <summary>Возвращает объект метатаблицы для контейнерного элемента управления данными.</summary>
      <returns>Объект метатаблицы для контейнерного элемента управления данными.</returns>
      <param name="current">Текущий элемент управления.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>Форматирует заданное значение поля, используя заданные параметры форматирования.</summary>
      <returns>Значение поля, форматируемое с использованием заданных параметров форматирования.</returns>
      <param name="formattingOptions">Экземпляр класса <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> для использования.</param>
      <param name="fieldValue">Значение поля для форматирования.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>Форматирует заданное значение поля, используя заданные параметры форматирования.</summary>
      <returns>Значение поля, форматируемое с использованием заданных параметров форматирования.</returns>
      <param name="formattingOptions">Экземпляр класса <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> для использования.</param>
      <param name="fieldValue">Значение поля для форматирования.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
      <summary>Получает коллекцию значений по умолчанию для заданного источника данных.</summary>
      <returns>Коллекция значений по умолчанию, связанных с объектом <see cref="T:System.Web.UI.IDataSource" />.</returns>
      <param name="dataSource">Источник данных, для которого требуется получить значения по умолчанию.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
      <summary>Получает коллекцию значений по умолчанию для заданного элемента управления данными.</summary>
      <returns>Коллекция значений по умолчанию, связанных с объектом <see cref="T:System.Web.UI.INamingContainer" />.</returns>
      <param name="control">Элемент управления данными, для которого требуется получить значения по умолчанию.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
      <summary>Получает тип перечисления, представляющий столбец.</summary>
      <returns>Тип перечисления, представляющий столбец, если базовый тип является перечислением; в противном случае — значение null.</returns>
      <param name="column">Столбец, для которого следует получить тип перечисления.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
      <summary>Получает метаданные для таблицы в заданном объекте источника данных.</summary>
      <returns>Метаданные таблицы, связанные с объектом <see cref="T:System.Web.UI.IDataSource" />.</returns>
      <param name="dataSource">Объект источника данных, для которого требуется получить метаданные таблицы. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
      <summary>Получает метаданные таблицы для заданного элемента управления данными.</summary>
      <returns>Метаданные таблицы, связанные с объектом <see cref="T:System.Web.UI.INamingContainer" />.</returns>
      <param name="control">Элемент управления данными, для которого требуется получить метаданные таблицы. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaTable" />, связанный с заданным элементом управления источником данных.</summary>
      <returns>Таблица, связанная с указанным элементом управления источником данных.</returns>
      <param name="dataSource">Элемент управления источником данных.</param>
      <exception cref="T:System.InvalidOperationException">Свойству <see cref="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName" /> объекта <paramref name="dataSource" /> присвоено значение null.— или —Свойству <see cref="P:System.Web.DynamicData.IDynamicDataSource.ContextType" /> объекта <paramref name="dataSource" /> присвоено значение null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
      <summary>Задает значение <see cref="T:System.Data.Linq.DataLoadOptions" /> источника данных LINQ-to-SQL, чтобы инициировать загрузку всех сущностей внешних ключей.</summary>
      <param name="dataSource">Источник данных LINQ, из которого загружаются внешние ключи.</param>
      <typeparam name="TEntity">Тип сущностей, возвращаемых источником данных.</typeparam>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
      <summary>Задает значение <see cref="T:System.Data.Linq.DataLoadOptions" /> источника данных LINQ-to-SQL, чтобы инициировать загрузку всех сущностей внешних ключей.</summary>
      <param name="dataSource">Источник данных LINQ, из которого загружаются внешние ключи.</param>
      <param name="rowType">Тип сущностей, возвращаемых источником данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
      <summary>Задает метаданные таблицы для заданного элемента управления данными.</summary>
      <param name="control">Объект <see cref="T:System.Web.UI.INamingContainer" />, который содержит таблицу.</param>
      <param name="table">Метаданные таблицы.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Задает метаданные таблицы и преобразование значений по умолчанию для заданного элемента управления данными.</summary>
      <param name="control">Объект <see cref="T:System.Web.UI.INamingContainer" />, который содержит таблицу.</param>
      <param name="table">Метаданные таблицы.</param>
      <param name="defaultValues">Преобразование значений по умолчанию.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
      <summary>Задает метаданные таблицы и преобразование значений по умолчанию для заданного элемента управления данными.</summary>
      <param name="control">Объект <see cref="T:System.Web.UI.INamingContainer" />, который содержит таблицу.</param>
      <param name="table">Метаданные таблицы.</param>
      <param name="defaultValues">Преобразование значений по умолчанию.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
      <summary>Определяет, доступны ли метаданные таблицы.</summary>
      <returns>Значение true, если метаданные таблицы доступны; в противном случае — значение false.</returns>
      <param name="dataSource">Источник данных, содержащий таблицу.</param>
      <param name="table">При возвращении данный метод содержит метаданные таблицы.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
      <summary>Определяет, доступны ли метаданные таблицы.</summary>
      <returns>Значение true, если метаданные таблицы доступны; в противном случае — значение false.</returns>
      <param name="control">Объект <see cref="T:System.Web.UI.INamingContainer" />, который содержит таблицу. </param>
      <param name="table">При возвращении данный метод содержит метаданные таблицы.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataManager">
      <summary>Включает динамическое поведение для веб-элементов управления ASP.NET, поддерживающих платформу динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.#ctor">
      <summary>Инициализирует новый экземпляр элемента управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys">
      <summary>Возвращает или задает значение, указывающее, выполняется ли автоматическая загрузка внешних ключей для содержимого данных LINQ-to-SQL.</summary>
      <returns>true, если внешние ключи загружаются автоматически; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientID">
      <summary>Получает свойство <see cref="P:System.Web.UI.Control.ClientID" />, сформированное ASP.NET. </summary>
      <returns>Свойство <see cref="P:System.Web.UI.Control.ClientID" />, сформированное ASP.NET. </returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode">
      <summary>Получает алгоритм, используемый для создания значения в свойстве <see cref="P:System.Web.UI.Control.ClientID" />.</summary>
      <returns>Значение, указывающее, как создается свойство <see cref="P:System.Web.UI.Control.ClientID" />.Задать это свойство нельзя.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.DataControls">
      <summary>Получает список ссылок на элементы управления данными в элементе управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</summary>
      <returns>Список ссылок на элементы управления данными в элементе управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnInit(System.EventArgs)">
      <summary>Порождает событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
      <param name="e">Данные события. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnLoad(System.EventArgs)">
      <summary>Порождает событие <see cref="E:System.Web.UI.Control.Load" />. </summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control)">
      <summary>Регистрирует элемент управления в элементе управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</summary>
      <param name="control">Регистрируемый элемент управления данными.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control,System.Boolean)">
      <summary>Регистрирует элемент управления в элементе управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />.</summary>
      <param name="control">Регистрируемый элемент управления данными.</param>
      <param name="setSelectionFromUrl">trueдля использования первичного ключа для задания выбранного элемента; в противном случае выбранный элемент не задан.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.Visible">
      <summary>Возвращает значение, указывающее, видим ли элемент управления <see cref="T:System.Web.DynamicData.DynamicDataManager" />. </summary>
      <returns>true, если объект <see cref="T:System.Web.DynamicData.DynamicDataManager" /> является видимым; в противном случае — false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRoute">
      <summary>Представляет маршрут, используемый платформой динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicDataRoute" />, используя указанный шаблон URL-адреса.</summary>
      <param name="url">Шаблон URL-адреса.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Action">
      <summary>Возвращает или задает имя действия для маршрута.</summary>
      <returns>Имя действия для маршрута.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)">
      <summary>Возвращает действие из объекта <see cref="T:System.Web.Routing.RouteData" /> для текущего веб-запроса платформы динамических данных.</summary>
      <returns>Действие.Список возможных значений см. в разделе <see cref="T:System.Web.DynamicData.PageAction" />.</returns>
      <param name="routeData">Данные маршрута, относящиеся к текущему запросу.Дополнительные сведения см. в разделе <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
      <exception cref="T:System.InvalidOperationException">В информации маршрутизации веб-запроса действие не обнаружено.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)">
      <summary>Возвращает информацию маршрутизации для заданного веб-запроса.</summary>
      <returns>Информация маршрутизации для данного веб-запроса.</returns>
      <param name="httpContext">Содержит сведения о веб-запросе. </param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)">
      <summary>Идентифицирует таблицу, связанную с запросом веб-страницы на платформе динамических данных.</summary>
      <returns>Метаданные, описывающие таблицу, отображаемую платформой динамических данных.</returns>
      <param name="routeData">Данные маршрута, относящиеся к текущему запросу.Дополнительные сведения см. в разделе <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
      <exception cref="T:System.InvalidOperationException">В информации маршрутизации веб-запроса эта таблица не обнаружена.</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает виртуальный путь маршрута.</summary>
      <returns>Виртуальный путь.</returns>
      <param name="requestContext">Содержит сведения о веб-запросе.</param>
      <param name="values">Коллекцию объектов маршрута для текущего приложения.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Model">
      <summary>Возвращает или задает модель данных, к которой относится маршрут.</summary>
      <returns>Метаданные модели данных, к которой относится маршрут. </returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler">
      <summary>Возвращает или задает объект, обрабатывающий запросы для маршрута.</summary>
      <returns>Дескриптор, используемый для обработки запросов для маршрута.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Table">
      <summary>Возвращает или задает имя таблицы для маршрута.</summary>
      <returns>Имя таблицы, связанной с маршрутом.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.ViewName">
      <summary>Возвращает или задает имя страницы с расширением ASPX, связанной с маршрутом.</summary>
      <returns>Имя страницы с расширением ASPX, связанной с маршрутом.Если страница для маршрута не задана, это свойство возвращает значение свойства <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> с добавленным к нему расширением ".aspx".</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRouteHandler">
      <summary>Обрабатывает шаблоны маршрута платформы динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)">
      <summary>Создает обработчик для обработки запроса.</summary>
      <returns>Обработчик, способный обработать запрос.</returns>
      <param name="route">Соответствующий маршрут.</param>
      <param name="table">Таблица метаданных, содержащаяся в маршруте.</param>
      <param name="action">Действие, содержащееся в маршруте.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>Создает виртуальный путь к пользовательской странице.</summary>
      <returns>Виртуальный путь к пользовательской странице.</returns>
      <param name="table">Таблица метаданных модели данных, для которой предназначена страница.</param>
      <param name="viewName">Имя действия представления, которым является имя страницы без расширения имени файла ".aspx".</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Routing.RequestContext" /> для текущего веб-запроса.</summary>
      <returns>Текущий контекст веб-запроса.</returns>
      <param name="httpContext">Информация контекста, связанная с веб-запросом.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaTable" /> из объекта <see cref="T:System.Web.HttpContext" />.</summary>
      <returns>Таблица метаданных модели данных, связанная с текущим веб-запросом, или null, если запрос не является запросом платформы динамических данных.</returns>
      <param name="httpContext">Информация контекста, связанная с веб-запросом.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>Возвращает виртуальный путь страницы, поддерживающей платформу динамических данных.</summary>
      <returns>Виртуальный путь к странице.</returns>
      <param name="table">Таблица метаданных, для которой предназначена страница.</param>
      <param name="viewName">Имя действия представления, которым является имя страницы без расширения имени файла ".aspx".</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRouteHandler.Model">
      <summary>Возвращает или задает объект <see cref="T:System.Web.DynamicData.MetaModel" />, с которым связан класс <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" />.</summary>
      <returns>Модель данных, с которой связан класс <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)">
      <summary>Задает объект <see cref="T:System.Web.DynamicData.MetaTable" />, связанный с текущим объектом <see cref="T:System.Web.HttpRequest" />. </summary>
      <param name="httpContext">Информация контекста, связанная с веб-запросом.</param>
      <param name="table">Метатаблица, связанная с текущим веб-запросом.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Возвращает обработчик, обрабатывающий шаблоны маршрута платформы динамических данных ASP.NET.</summary>
      <returns>Обработчик, обрабатывающий шаблоны маршрута платформы динамических данных ASP.NET.</returns>
      <param name="requestContext">Информация контекста, связанная с веб-запросом.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicEntity">
      <summary>Предоставляет элемент управления ASP.NET, который представляет сущность для использования платформой динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicEntity" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.Mode">
      <summary>Получает или задает значение перечисления <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> для элемента управления <see cref="T:System.Web.DynamicData.DynamicEntity" />. </summary>
      <returns>Режим.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.OnLoad(System.EventArgs)">
      <summary>Создает событие <see cref="E:System.Web.UI.Control.Load" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Отправляет содержимое серверного элемента управления указанному объекту <see cref="T:System.Web.UI.HtmlTextWriter" />, который выводит содержимое.</summary>
      <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое серверного элемента управления. </param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.UIHint">
      <summary>Получает или задает атрибут <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> для сущности.</summary>
      <returns>Атрибут <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> для сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.ValidationGroup">
      <summary>Получает или задает группу проверки для элемента управления <see cref="T:System.Web.DynamicData.DynamicEntity" />.</summary>
      <returns>Группа проверки.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicField">
      <summary>Представляет поле данных, отображаемое в элементе управления с привязкой к данным, использующем функции платформы динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode">
      <summary>Возвращает или задает значение, указывающее, применима ли строка форматирования, заданная в свойстве <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />, к значению поля, если поле данных находится в режиме правки.</summary>
      <returns>true, если <see cref="T:System.Web.DynamicData.DynamicField" /> применяет форматирование в режиме правки; в противном случае — false.Значением по умолчанию является false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.Column">
      <summary>Получает объект <see cref="T:System.Web.DynamicData.MetaColumn" />, с которым связан данный объект <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Метастолбец.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)">
      <summary>Предоставляет механизм для изменения объекта <see cref="T:System.Web.DynamicData.DynamicControl" />, созданного методом <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />.</summary>
      <param name="control">Изменяемый элемент управления.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull">
      <summary>Возвращает или задает значение, показывающее, преобразовываются ли пустые строковые значения ("") автоматически в значения null, когда в источнике данных обновляется поле данных.</summary>
      <returns>true, если пустые строковые значения автоматически преобразуются в значения null; в противном случае — false.Значением по умолчанию является false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
      <summary>Копирует свойства текущего объекта <see cref="T:System.Web.DynamicData.DynamicField" /> в указанный объект <see cref="T:System.Web.UI.WebControls.DataControlField" />.</summary>
      <param name="newField">Объект <see cref="T:System.Web.UI.WebControls.DataControlField" />, в который копируются свойства текущего объекта <see cref="T:System.Web.DynamicData.DynamicField" />.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateDynamicControl">
      <summary>Предоставляет механизм для переопределения способа создания объекта <see cref="T:System.Web.DynamicData.DynamicControl" /> для классов, которые являются производными от класса <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Новый динамический элемент управления.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateField">
      <summary>Создает и возвращает новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicField" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataField">
      <summary>Возвращает или задает имя поля данных, к которому привязывается объект <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Имя поля данных, к которому привязывается объект <see cref="T:System.Web.DynamicData.DynamicField" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataFormatString">
      <summary>Возвращает или задает строку, определяющую формат отображения значения поля данных.</summary>
      <returns>Строка форматирования, определяющая формат отображения поля данных.По умолчанию это пустая строка (""), указывающая на неприменение к значению специального форматирования.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
      <summary>Извлекает значение поля данных из текущей ячейки таблицы и добавляет его в указанный словарь.</summary>
      <param name="dictionary">Словарь, в котором будут содержаться значения ячейки.</param>
      <param name="cell">Ячейка, содержащая текст или элементы управления объекта <see cref="T:System.Web.DynamicData.DynamicField" />.</param>
      <param name="rowState">Одно из значений из перечисления, указывающее состояние строки.</param>
      <param name="includeReadOnly">true, чтобы включить в <paramref name="dictionary" /> значения полей, доступных только для чтения; в противном случае — false.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)">
      <summary>Извлекает значение указанного атрибута.</summary>
      <returns>Значение атрибута.</returns>
      <param name="key">Ключ извлекаемого атрибута.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HeaderText">
      <summary>Возвращает или задает текст для отображения в заголовке элемента управления с привязкой к данным, содержащего объект <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Текст для отображения в заголовке элемента управления с привязкой к данным, содержащего объект <see cref="T:System.Web.DynamicData.DynamicField" />. </returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Web.DynamicData.DynamicField" /> находится в элементе управления с привязкой к данным, не связанном с элементом управления источником данных, реализующим интерфейс <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HtmlEncode">
      <summary>Возвращает или задает значение, указывающее, следует ли выполнять HTML-кодирование значений полей данных перед их отображением в объекте <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>true если значения подвергаются HTML-кодированию перед отображением; в противном случае — false.Значением по умолчанию является true.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
      <summary>Добавляет в или элементы управления в заданную ячейку.</summary>
      <param name="cell">Объект, содержащий текст или элементы управления объекта <see cref="T:System.Web.DynamicData.DynamicField" />.</param>
      <param name="cellType">Одно из значений из перечисления, задающее функцию объекта <paramref name="cell" />.</param>
      <param name="rowState">Одно из значений из перечисления, указывающее состояние строки.</param>
      <param name="rowIndex">Индекс строки ячейки, в которой содержится объект <paramref name="cell" />.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.NullDisplayText">
      <summary>Возвращает или задает заголовок, отображаемый для поля данных, когда оно имеет значение null.</summary>
      <returns>Заголовок, отображаемый для поля данных, когда оно имеет значение null.Значение по умолчанию — пустая строка (""), указывающая, что это свойство не задано.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ReadOnly">
      <summary>Получает состояние "только для чтения" динамического поля.</summary>
      <returns>Состояние "только для чтения" динамического поля.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)">
      <summary>Устанавливает атрибут, связанный с объектом <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <param name="key">Имя задаваемого атрибута.</param>
      <param name="value">Значение атрибута.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.SortExpression">
      <summary>Возвращает или задает выражение сортировки, применяемое, когда поле данных используется для сортировки по нему источника данных.</summary>
      <returns>Выражение сортировки, применяемое, когда поле данных используется для сортировки по нему источника данных. </returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Web.DynamicData.DynamicField" /> находится в элементе управления с привязкой к данным, не связанном с элементом управления источником данных, реализующим интерфейс <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.UIHint">
      <summary>Возвращает или задает шаблон поля, используемый для отображения поля данных.</summary>
      <returns>Имя шаблона поля, используемого для отображения поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ValidationGroup">
      <summary>Получает объект <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" />, с которым связан данный объект <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
      <returns>Имя группы проверки, к которой принадлежит элемент управления проверки.По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilter">
      <summary>Отображает пользовательский интерфейс для фильтрации строк таблицы с использованием указанного столбца.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicFilter" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.Column">
      <summary>Получает или задает столбец таблицы, используемый для фильтрации.</summary>
      <returns>Столбец таблицы, используемый для фильтрации.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.DataField">
      <summary>Получает или задает имя столбца, который следует использовать для фильтрации строк таблицы.</summary>
      <returns>Имя столбца, используемого для фильтрации строк таблицы.</returns>
    </member>
    <member name="E:System.Web.DynamicData.DynamicFilter.FilterChanged">
      <summary>Происходит при выборе значения для внешнего ключа.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterTemplate">
      <summary>Получает шаблон фильтра, связанный с текущим экземпляром данного элемента управления.</summary>
      <returns>Шаблон фильтра, связанный с текущим экземпляром данного элемента управления.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterUIHint">
      <summary>Получает или задает имя шаблона фильтра, используемого для создания пользовательского интерфейса.</summary>
      <returns>Имя шаблона фильтра.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Отправляет содержимое серверного элемента управления в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
      <param name="writer">Объект, получающий содержимое серверного элемента управления.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilterExpression">
      <summary>Изменяет запрос к базе данных с помощью значения из указанного фильтра элемента управления.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilterExpression.ControlID">
      <summary>Получает или задает идентификатор фильтра элемента управления.</summary>
      <returns>Идентификатор фильтра элемента управления.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Получает измененный запрос с помощью текущего значения фильтра.</summary>
      <returns>Запрос к источнику данных, измененный с использованием текущего значения, содержащегося в экземпляре <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</returns>
      <param name="source">Изменяемый запрос к источнику данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Инициализирует выражение сведениями об источнике данных.</summary>
      <param name="owner">Элемент управления, содержащий экземпляр <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />, например элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
      <param name="context">Текущий объект <see cref="T:System.Web.HttpContext" />. </param>
      <param name="dataSource">Целевой источник данных для экземпляра <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />. </param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicHyperLink">
      <summary>Отображает ссылки на действия над таблицами, такие как изменение, удаление и вставка.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicHyperLink" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.Action">
      <summary>Получает или задает действие, связанное со ссылкой.</summary>
      <returns>Действие, связанное со ссылкой.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName">
      <summary>Получает или задает контекст данных для модели данных, к которой относится ссылка.</summary>
      <returns>Контекст данных, применяемый к ссылке.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.DataField">
      <summary>Получает или задает отображаемый текст ссылки.</summary>
      <returns>Отображаемый текст ссылки.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnDataBinding(System.EventArgs)">
      <summary>Порождает событие <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnPreRender(System.EventArgs)">
      <summary>Порождает событие <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Извлекает значение заданного атрибута, примененного к элементу управления <see cref="T:System.Web.DynamicData.DynamicHyperLink" />.</summary>
      <returns>Заданный атрибут, примененный к ссылке.</returns>
      <param name="key">Имя извлекаемого атрибута.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Определяет атрибут и значение атрибута для применения к элементу управления <see cref="T:System.Web.DynamicData.DynamicHyperLink" />.</summary>
      <param name="key">Имя атрибута. </param>
      <param name="value">Значение, присваиваемое атрибуту. </param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.TableName">
      <summary>Получает или задает таблицу для действия ссылки.</summary>
      <returns>Имя таблицы для действия ссылки.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicQueryStringParameter">
      <summary>Автоматически генерирует коллекцию параметров, используемых для создания предложения Where для элемента управления источником данных, путем извлечения значений из строки запроса.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicQueryStringParameter" />. </summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>Во всех случаях выбрасывает исключение <see cref="T:System.InvalidOperationException" />.</summary>
      <returns>Во всех случаях выбрасывает исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="context">Сведения об HTTP-запросе.</param>
      <param name="control">Элемент управления, к которому привязан параметр.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Web.UI.WebControls.Parameter" />, автоматически сгенерированных для столбцов таблицы путем извлечения значений из строки запроса.</summary>
      <returns>Коллекция параметров, автоматически сгенерированных для столбцов таблицы путем извлечения значений из строки запроса.</returns>
      <param name="dataSource">Объект источника данных.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicRouteExpression">
      <summary>Получает первичный ключ из сведений маршрутизации, чтобы выполнить фильтрацию данных.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicRouteExpression.ColumnName">
      <summary>Получает или задает имя столбца, который содержит внешний ключ, используемый для запросов к источнику данных.</summary>
      <returns>Имя столбца внешнего ключа.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Получает запрос от источника данных.</summary>
      <returns>Экземпляр измененного запроса.</returns>
      <param name="source">Изменяемый запрос.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Задает HTTP-контекст объекта <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</summary>
      <param name="owner">Элемент управления, содержащий экземпляр <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.Это элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
      <param name="context">Контекст веб-запроса.</param>
      <param name="dataSource">Целевой источник данных для экземпляра <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidator">
      <summary>Обеспечивает порождение исключений, вызываемых в модели данных, перехватывает эти исключения и выводит ошибку.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicValidator" />. </summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.Column">
      <summary>Возвращает или задает проверяемый столбец.</summary>
      <returns>Проверяемый столбец или значение null, если проверяется сущность данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ColumnName">
      <summary>Возвращает имя проверяемого столбца.</summary>
      <returns>Имя проверяемого столбца или значение null, если проверяется сущность данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ControlPropertiesValid">
      <summary>Указывает, допустимы ли свойства заданного элемента управления <see cref="T:System.Web.DynamicData.DynamicValidator" />.</summary>
      <returns>true, если свойства заданного проверяющего элемента управления допустимы; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.EvaluateIsValid">
      <summary>Определяет, допустимо ли значение элемента управления для ввода. </summary>
      <returns>true, если оцениваемый проверяющий элемент управления допустим; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)">
      <summary>Генерирует событие Init для инициализации элемента управления <see cref="T:System.Web.DynamicData.DynamicValidator" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)">
      <summary>Выбрасывает исключение проверки, если в модели данных происходит исключение. </summary>
      <param name="exception">Выбрасываемое исключение.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ValidationException">
      <summary>Возвращает или задает исключение проверки, происходящее во время проверки.</summary>
      <returns>Выбрасываемое исключение проверки. </returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplate">
      <summary>Отображает содержимое, определенное для сущности в элементах управления с привязкой к данным, представляющих собой шаблоны для сущностей, используя функции платформы динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplate.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.EntityTemplate" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplate.ItemTemplate">
      <summary>Возвращает или задает пользовательское содержимое для элемента данных в элементе управления <see cref="T:System.Web.DynamicData.EntityTemplate" />.</summary>
      <returns>Пользовательское содержимое для элемента данных в элементе управления <see cref="T:System.Web.DynamicData.EntityTemplate" />.</returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateFactory">
      <summary>Создает шаблон сущности.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.EntityTemplateFactory" />. </summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.BuildEntityTemplateVirtualPath(System.String,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Строит путь к шаблону сущности для заданной таблицы.</summary>
      <returns>Путь к шаблону сущности для заданной таблицы.</returns>
      <param name="templateName">Имя шаблона сущности, для которого нужно построить путь.</param>
      <param name="mode">Режим отображения шаблона сущности.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="templateName" /> является null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.CreateEntityTemplate(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Создает экземпляр шаблона сущности для заданной таблицы.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" />.</returns>
      <param name="table">Метаданные для таблицы, к которой применяется шаблон сущности. </param>
      <param name="mode">Режим отображения шаблона сущности.</param>
      <param name="uiHint">Имя шаблона для использования.</param>
      <exception cref="T:System.ArgumentNullException">Таблица имеет значение null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.GetEntityTemplateVirtualPath(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Получает виртуальный путь к шаблону сущности для заданной таблицы.</summary>
      <returns>Виртуальный путь к шаблону сущности для заданной таблицы.</returns>
      <param name="table">Метаданные для таблицы, к которой применяется шаблон сущности.</param>
      <param name="mode">Режим отображения шаблона сущности.</param>
      <param name="uiHint">Имя шаблона для использования.</param>
      <exception cref="T:System.ArgumentNullException">Таблица имеет значение null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateUserControl">
      <summary>Определяет базовый класс для шаблонов сущностей.</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateUserControl.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ContainerType">
      <summary>Получает тип элемента управления с привязкой к данным, содержащий данный шаблон сущности.</summary>
      <returns>Тип, содержащий шаблон.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Mode">
      <summary>Получает режим отрисовки данных для сущности. </summary>
      <returns>Режим отрисовки данных для сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Table">
      <summary>Получает таблицу, к которой применяется шаблон сущности.</summary>
      <returns>Таблицу, к которой применяется шаблон сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ValidationGroup">
      <summary>Получает проверку для применения к группе элементов управления сущности.</summary>
      <returns>Проверку для применения к группе элементов управления сущности.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateFactory">
      <summary>Создает шаблоны поля.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Формирует виртуальный путь к шаблону поля, основываясь на имени этого шаблона и режиме.</summary>
      <returns>Виртуальный путь к шаблону поля.</returns>
      <param name="templateName">Имя шаблона для использования.</param>
      <param name="column">Задает столбец данных, к которому применяется шаблон поля.</param>
      <param name="mode">Указывает режим отображения шаблона поля.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="templateName" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Создает экземпляр шаблона поля, используя класс <see cref="T:System.Web.DynamicData.MetaColumn" />, класс <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> и свойство <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />.</summary>
      <returns>Экземпляр интерфейса, реализуемый классом <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</returns>
      <param name="column">Задает столбец данных, к которому применяется шаблон поля.</param>
      <param name="mode">Указывает режим отображения шаблона поля.</param>
      <param name="uiHint">Указывает используемый шаблон поля.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Определяет виртуальный путь к шаблону поля. </summary>
      <returns>Виртуальный путь к шаблону поля. </returns>
      <param name="column">Задает столбец данных, к которому применяется шаблон поля.</param>
      <param name="mode">Указывает режим отображения шаблона поля: только чтение, изменение или вставка.</param>
      <param name="uiHint">Указывает используемый шаблон поля.Этот параметр влияет на поиск шаблона поля.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>Связывает объект <see cref="T:System.Web.DynamicData.MetaModel" /> с объектом <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />. </summary>
      <param name="model">Задает модель данных для связывания с объектом <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.Model">
      <summary>Возвращает или задает объект <see cref="T:System.Web.DynamicData.MetaModel" />, связанный с классом <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /></summary>
      <returns>Модель, связанная с объектом <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Изменяет режим столбца данных.</summary>
      <returns>Режим рендеринга столбца.</returns>
      <param name="column">Заголовок столбца, для которого требуется шаблон поля.</param>
      <param name="mode">Режим (только чтение, изменение или вставка), в который следует переключиться.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath">
      <summary>Возвращает или задает папку для создания шаблона поля. </summary>
      <returns> Путь к папке, содержащей шаблоны полей.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateUserControl">
      <summary>Представляет базовый класс для всех элементов управления-шаблонов полей. </summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildChildrenPath(System.String)">
      <summary>Возвращает URL-адрес страницы, отображающей список дочерних сущностей и допускающей переопределение пути.</summary>
      <returns>URL-адрес, связывающий отображаемую страницу с дочерней страницей. </returns>
      <param name="path">Переопределяемый путь.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildForeignKeyPath(System.String)">
      <summary>Возвращает URL-адрес, связывающий текущую страницу со страницей, отображающей подробные данные сущности внешнего ключа и позволяющей переопределять путь.</summary>
      <returns>URL-адрес страницы, отображающей подробные сведения страницы внешнего ключа.</returns>
      <param name="path">Переопределяемый путь.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />, связанный с шаблоном поля. </summary>
      <returns>Столбец, представляющий отношение "один-ко-многим".</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenPath">
      <summary>Возвращает URL-адрес, указывающий на страницу, отображающую список дочерних сущностей. </summary>
      <returns> URL-адрес, связывающий отображаемую страницу с дочерними сущностями. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Column">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaColumn" />, связанный с шаблоном поля. </summary>
      <returns>Объект, представляющий столбец базы данных. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ContainerType">
      <summary>Получает тип элемента управления с привязкой к данным, содержащего класс <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" />.</summary>
      <returns>Тип контейнерного элемента управления.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ConvertEditedValue(System.String)">
      <summary>Возвращает либо входное значение, либо значение null на основе свойств <see cref="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" /> и <see cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />. </summary>
      <returns>Преобразованное значение.</returns>
      <param name="value">Входное значение.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.DataControl">
      <summary>Возвращает элемент управления данными, обрабатывающий поле данных в шаблоне поля.</summary>
      <returns>Элемент управления данными, обрабатывающий поле данных в шаблоне поля.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>Сохраняет значения внешних ключей. </summary>
      <param name="dictionary">Словарь, который содержит новые значения.</param>
      <param name="selectedValue">Сохраняемое значение. </param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Предоставляет словарный доступ ко всем данным в текущей строке. </summary>
      <param name="dictionary">Словарь, который содержит новые значения.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValue">
      <summary>Возвращает или задает значение столбца в текущей строке.</summary>
      <returns>Объект, представляющий значение столбца в текущей строке.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueEditString">
      <summary>Возвращает строковое представление значения столбца в текущей строке, когда эта строка находится в режиме правки. </summary>
      <returns>Значение указанного столбца в редактируемой строке. </returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueString">
      <summary>Возвращает форматированное строковое представление значения столбца в текущей строке.</summary>
      <returns>Форматированное значение столбца в текущей строке.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FindOtherFieldTemplate(System.String)">
      <summary>Определяет шаблон поля, используемый для рендеринга заданного столбца данных. </summary>
      <returns>Шаблон поля, используемый для рендеринга заданного столбца данных.</returns>
      <param name="columnName">Столбец данных, рендеринг которого осуществляет шаблон поля.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyColumn">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />, связанный со столбцом внешнего ключа. </summary>
      <returns>Столбец, представляющий отношение "многие-к-одному".</returns>
      <exception cref="T:System.Exception">Если <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> не является столбцом внешнего ключа.</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyPath">
      <summary>Возвращает URL-адрес, связывающий текущую страницу со страницей, отображающей подробные данные сущности внешнего ключа. </summary>
      <returns>URL-адрес для связи с подробными данными, на которые указывает внешний ключ.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FormatFieldValue(System.Object)">
      <summary>Применяет HTML-кодирование и форматирование к подлежащей отображению строке.</summary>
      <returns>Форматируемое значение.</returns>
      <param name="fieldValue">Значение из поля данных, которое нужно отформатировать. </param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FormattingOptions">
      <summary>Возвращает или задает параметры HTML-кодирования и форматирования для применения к шаблону поля. </summary>
      <returns>Интерфейс, открывающий доступ к параметрам HTML-кодирования и форматирования для применения к шаблону поля.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetColumnValue(System.Web.DynamicData.MetaColumn)">
      <summary>Возвращает значение указанного столбца в текущей строке.</summary>
      <returns>Объект, представляющий значение заданного столбца в текущей строке.</returns>
      <param name="column">Столбец, из которого извлекается значение.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetSelectedValueString">
      <summary>Возвращает строковое представление значения столбца.</summary>
      <returns>Если текущее значение столбца представляет собой столбец внешних ключей или столбец перечисления, строковое представление выбранного значения; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Host">
      <summary>Возвращает или задает контейнерный объект, предоставляющий контекст для данного класса <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" />. </summary>
      <returns>Объект, предоставляющий контекст для данного класса шаблона поля.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.IgnoreModelValidationAttribute(System.Type)">
      <summary>Этот метод позволяет <see cref="T:System.Web.DynamicData.DynamicValidator" /> игнорировать конкретный тип атрибута проверки модели.</summary>
      <param name="attributeType">Игнорируемый атрибут.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.MetadataAttributes">
      <summary>Возвращает коллекцию атрибутов метаданных, относящихся к текущему столбцу.</summary>
      <returns>Коллекцию атрибутов метаданных, относящихся к столбцу.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Mode">
      <summary>Получает режим, используемый шаблоном поля.  </summary>
      <returns>Текущий режим шаблона поля. </returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Заполняет списочный элемент управления всеми значениями из родительской таблицы. </summary>
      <param name="listControl">Заполняемый списочный элемент управления.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Row">
      <summary>Возвращает текущий объект строки данных.</summary>
      <returns>Текущий объект строки данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator)">
      <summary>Создайте <see cref="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup" /> для всех проверяющих элементов управления.</summary>
      <param name="validator">Создаваемый проверяющий элемент управления. </param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator,System.Web.DynamicData.MetaColumn)">
      <summary>Задает <see cref="T:System.Web.DynamicData.DynamicValidator" /> с использованием типа проверяющего элемента управления и проверяемого столбца.</summary>
      <param name="validator">Тип создаваемого проверяющего элемента управления.</param>
      <param name="column">Заголовок столбца, для которого задается проверяющий элемент управления.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#DynamicData#IFieldTemplate#SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>Связывает шаблон поля с объектом, управляющим использованием шаблона поля. </summary>
      <param name="host">Объект, содержащий класс шаблона поля.Управляет использованием шаблона поля.</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#UI#IBindableControl#ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Извлекает набор пар имя-значение для реализации двухсторонней привязки данных в элементах управления шаблона полей.</summary>
      <param name="dictionary">Словарь, содержащий пары имя-значение.</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Table">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaTable" />, к которому принадлежит столбец шаблона поля.</summary>
      <returns>Таблица, которой принадлежит столбец, связанный с шаблоном поля. </returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterFactory">
      <summary>Создает шаблон поля.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.FilterFactory" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>Создает экземпляр шаблона фильтра.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" />.</returns>
      <param name="column">Столбец данных, к которому применяется шаблон фильтра.</param>
      <param name="filterUIHint">Имя шаблона фильтра для использования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>Получает виртуальный путь к шаблону фильтра.</summary>
      <returns>Виртуальный путь к шаблону фильтра.</returns>
      <param name="column">Столбец данных, к которому применяется шаблон фильтра.</param>
      <param name="filterUIHint">Используемый шаблон фильтра.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.FilterRepeater">
      <summary>Представляет элемент управления, перечисляющий столбцы таблицы, для которых поддерживается фильтрация.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.FilterRepeater" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.ContextTypeName">
      <summary>Возвращает или задает имя объекта источника данных, используемого для извлечения данных. </summary>
      <returns>Имя объекта источника данных, используемого для извлечения данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.DataBind">
      <summary>Привязывает элемент управления <see cref="T:System.Web.DynamicData.FilterRepeater" /> к данным, извлекаемым из источника данных.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.DynamicFilterContainerId">
      <summary>Возвращает или задает идентификатор элемента управления <see cref="T:System.Web.DynamicData.FilterRepeater" /> в экземпляре <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" />.</summary>
      <returns>Иидентификатор элемента управления, используемый для отображения пользовательского интерфейса фильтра в экземпляре <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" />, если идентификатор задан; в противном случае — "DynamicFilter".</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetFilteredColumns">
      <summary>Возвращает перечисление поддерживающих сортировку столбцов, принадлежащих таблице, связанной с текущим элементом управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</summary>
      <returns>Перечисление поддерживающих сортировку столбцов, принадлежащих таблице, связанной с текущим элементом управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Возвращает список параметров Where, добавляемых в коллекцию параметров Where элемента управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</summary>
      <returns>Список параметров Where.</returns>
      <param name="dataSource">Источник данных параметров Where.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnFilterItemCreated(System.Web.UI.WebControls.RepeaterItem)">
      <summary>Вызывается для каждого шаблона элемента и шаблона четного элемента, экземпляр которого создается этим элементом управления <see cref="T:System.Web.DynamicData.FilterRepeater" /> при привязке данных.</summary>
      <param name="item">Содержимое шаблона элемента.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnInit(System.EventArgs)">
      <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" /> для инициализации элемента управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)">
      <summary>Генерирует событие <see cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" />.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Table">
      <summary>Возвращает таблицу, связанную с элементом управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</summary>
      <returns>Таблица, связанная с элементом управления <see cref="T:System.Web.DynamicData.FilterRepeater" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.TableName">
      <summary>Возвращает имя фильтруемой таблицы.</summary>
      <returns>Имя фильтруемой таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Visible">
      <summary>Получает или задает значение, определяющее, отображается ли элемент управления.</summary>
      <returns>Если элемент управления отображается, значение true; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterUserControlBase">
      <summary>Предоставляет базовый класс для пользовательских элементов управления, используемых для фильтрации данных в таблице данных.Этот класс используется для отображения селекторов фильтра.</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.FilterUserControlBase" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.Column">
      <summary>Возвращает столбец, к которому применяется фильтр.</summary>
      <returns>Столбец, к которому применяется фильтр.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.ContextTypeName">
      <summary>Возвращает или задает тип контекста, частью которого является таблица или столбец данных.</summary>
      <returns>Имя объекта источника данных, используемого для извлечения данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.DataField">
      <summary>Возвращает или задает имя столбца для фильтрации.</summary>
      <returns>Имя столбца для фильтрации.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.InitialValue">
      <summary>Возвращает исходное значение фильтра при заполнении фильтра.</summary>
      <returns>Начальное значение фильтра.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Заполняет объект <see cref="T:System.Web.UI.WebControls.ListControl" /> всеми элементами в таблице данных, связанными с текущей таблицей посредством внешнего ключа.</summary>
      <param name="listControl">Элемент управления для заполнения.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedDataKey">
      <summary>Возвращает ключ данных для выбранного элемента.</summary>
      <returns>Ключ выделенного элемента.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedValue">
      <summary>Возвращает значение, выбранное в элементе управления — раскрывающемся списке.</summary>
      <returns>Значение, выбранное в элементе управления — раскрывающемся списке.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#FilteredColumn">
      <summary>Возвращает фильтруемый столбец данных.</summary>
      <returns>Фильтруемый столбец данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#GetPropertyNameExpression(System.String)">
      <summary>Возвращает имя фильтруемого столбца.</summary>
      <returns>Фильтруемый столбец.</returns>
      <param name="columnName">Фильтруемый столбец.</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#Table">
      <summary>Возвращает фильтруемую таблицу.</summary>
      <returns>Отфильтрованная таблица.</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.TableName">
      <summary>Возвращает или задает имя таблицы данных, которая используется фильтром.</summary>
      <returns>Имя таблицы данных, которая используется фильтром.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IControlParameterTarget">
      <summary>Определяет члены, которые должен реализовать класс, для того чтобы предоставить данные для экземпляра класса <see cref="T:System.Web.DynamicData.DynamicControlParameter" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.FilteredColumn">
      <summary>Возвращает столбец, к которому применяется данный параметр, если таковой имеется.</summary>
      <returns>Столбец, к которому применяется данный параметр, если таковой имеется.</returns>
    </member>
    <member name="M:System.Web.DynamicData.IControlParameterTarget.GetPropertyNameExpression(System.String)">
      <summary>Возвращает выражение, которое может использоваться как имя свойства параметра элемента управления.</summary>
      <returns>Выражение, которое может использоваться как имя свойства параметра элемента управления.</returns>
      <param name="columnName">Имя столбца.</param>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.Table">
      <summary>Возвращает тип данных, предоставляемый данным поставщиком.</summary>
      <returns>Тип данных, предоставляемый данным поставщиком.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldFormattingOptions">
      <summary>Определяет интерфейс для общих свойств параметров форматирования, применяемых к пользовательским элементам управления шаблонов полей. </summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode">
      <summary>Возвращает значение, указывающее, применима ли заданная в свойстве <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString" /> строка форматирования к значениям полей, когда поле находится в режиме правки.</summary>
      <returns>true, если строка форматирования применима в режиме правки; в противном случае — false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull">
      <summary>Возвращает значение, указывающее, выполняется ли автоматическое преобразование пустых строковых значений ("") в значения null при обновлении поля данных в источнике данных.</summary>
      <returns>Значение true, если пустые строковые значения автоматически преобразуются в значения null; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString">
      <summary>Возвращает строку, определяющую формат отображения значения поля.</summary>
      <returns>Строка форматирования, определяющая формат отображения значения поля. </returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode">
      <summary>Возвращает значение, указывающее, осуществляется ли перед рендерингом HTML-кодирование данных для элемента управления.</summary>
      <returns>true, если перед рендерингом осуществляется HTML-кодирование данных для элемента управления; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText">
      <summary>Возвращает заголовок, отображаемый для поля, когда оно имеет значение null.</summary>
      <returns>Заголовок, отображаемый для поля, когда оно имеет значение null.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplate">
      <summary>Определяет члены, которые должен реализовать класс, для того чтобы он распознавался как шаблон поля.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplate.SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>Связывает шаблон поля с объектом, управляющим его использованием. </summary>
      <param name="host">Объект, управляющий использованием шаблона поля.</param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateFactory">
      <summary>Определяет интерфейс, реализованный объектами, создающими шаблоны полей.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>Создает экземпляр шаблона поля, используя класс <see cref="T:System.Web.DynamicData.MetaColumn" />, класс <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> и свойство <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />.  </summary>
      <returns>Экземпляр объекта <see cref="FieldTemplateFactory" />, когда реализован в классе.</returns>
      <param name="column">Задает столбец данных, используемый для отображения шаблона поля.</param>
      <param name="mode">Указывает режим отображения шаблона поля.</param>
      <param name="uiHint">Указывает используемый шаблон поля.</param>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>Инициализирует объект <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />, используя заданную модель данных. </summary>
      <param name="model">Указывает модель данных, используемую шаблоном поля. </param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateHost">
      <summary>Определяет члены, которые должны быть реализованы классом, управляющим использованием пользовательских элементов управления шаблонов полей.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Column">
      <summary>Возвращает столбец, с которым связан шаблон поля.</summary>
      <returns>Столбец, с которым связан шаблон поля.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <summary>Возвращает параметры форматирования, которые будут применяться к шаблону поля.</summary>
      <returns>Параметры форматирования, которые будут применяться к шаблону поля.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Mode">
      <summary>Возвращает режим отрисовки для шаблона поля.</summary>
      <returns>Одно из значений из перечисления, указывающее режим отрисовки для шаблона поля.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup">
      <summary>Возвращает имя группы проверки для шаблона поля. </summary>
      <returns>Имя группы проверки для шаблона поля.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IWhereParametersProvider">
      <summary>Реализуется классами параметров, предоставляющими один или более параметров Where.</summary>
    </member>
    <member name="M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>Возвращает список параметров Where, которые следует добавить в коллекцию параметров Where.</summary>
      <returns>Список параметров.</returns>
      <param name="dataSource">Источник параметра.</param>
    </member>
    <member name="T:System.Web.DynamicData.MetaChildrenColumn">
      <summary>Представляет поле базы данных, задающее отношение "один-ко-многим".</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</summary>
      <param name="table">Метатаблица.</param>
      <param name="entityMember">Поставщик столбца.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable">
      <summary>Возвращает объект, представляющий дочернюю таблицу в отношении "один-ко-многим".</summary>
      <returns>Объект, представляющий дочернюю таблицу в отношении "один-ко-многим".</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable">
      <summary>Возвращает объект, представляющий поле внешнего ключа в дочерней таблице.</summary>
      <returns>Объект, представляющий поле внешнего ключа в дочерней таблице.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)">
      <summary>Получает путь к странице действия списка для дочерней таблицы.</summary>
      <returns>Путь к странице действия списка для дочерней таблицы.</returns>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)">
      <summary>Получает путь к заданной странице действия для дочерней таблицы.</summary>
      <returns>Путь к заданной странице действия для дочерней таблицы.</returns>
      <param name="action">Целевое действие.</param>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)">
      <summary>Возвращает путь к заданной странице действия для дочерней таблицы.</summary>
      <returns>Путь к заданной странице действия для дочерней таблицы.</returns>
      <param name="action">Целевое действие. </param>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
      <param name="path">Целевая страница.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.Initialize">
      <summary>Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany">
      <summary>Получает значение, указывающее, является ли столбец частью отношения "многие-ко-многим".</summary>
      <returns>Значение true, если столбец является частью отношения "многие-ко-многим"; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaColumn">
      <summary>Представляет столбец базы данных, используемый платформой динамических данных.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaColumn" />.</summary>
      <param name="table">Метатаблица, содержащая столбец.</param>
      <param name="columnProvider">Поставщик столбца.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.AllowInitialValue">
      <summary>Получает или задает значение, указывающее, допускает ли столбец вставку значения.</summary>
      <returns>Значение true, если столбец допускает вставку значения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode">
      <summary>Возвращает или задает значение, указывающее, применяется ли строка форматирования, заданная свойством <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />, к значениям полей, когда элемент управления с привязкой к данными, содержащий поле данных, представленное объектом <see cref="T:System.Web.DynamicData.MetaColumn" />, находится в режиме редактирования.</summary>
      <returns>true, если строка форматирования, заданная свойством <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />, применяется к значениям полей, когда элемент управления с привязкой к данными, содержащий поле данных, представленное объектом <see cref="T:System.Web.DynamicData.MetaColumn" />, находится в режиме редактирования; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Attributes">
      <summary>Возвращает коллекцию атрибутов метаданных, применяемых к полю данных, представленному объектом <see cref="T:System.Web.DynamicData.MetaColumn" />.</summary>
      <returns>Коллекция атрибутов метаданных, применяемых к полю данных, представленному объектом <see cref="T:System.Web.DynamicData.MetaColumn" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection">
      <summary>Получает коллекцию атрибутов.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ColumnType">
      <summary>Возвращает тип поля данных.</summary>
      <returns>Тип поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull">
      <summary>Возвращает значение, указывающее, выполняется ли автоматическое преобразование пустых строковых значений ("") в значения null при обновлении поля данных в источнике данных.</summary>
      <returns>true, если пустые строковые значения автоматически преобразуются в значения null при обновлении поля данных в источнике данных; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataFormatString">
      <summary>Возвращает строку, определяющую формат отображения значения поля.</summary>
      <returns>Строка, определяющая формат отображения значения поля.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />, применяемый к полю данных.</summary>
      <returns>Атрибут <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />, применяемый к полю данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DefaultValue">
      <summary>Возвращает значение поля данных по умолчанию.</summary>
      <returns>Значение поля данных по умолчанию.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Description">
      <summary>Возвращает описание поля данных.</summary>
      <returns>Описание поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DisplayName">
      <summary>Возвращает отображаемое имя поля данных.</summary>
      <returns>Отображаемое имя поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty">
      <summary>Возвращает объект, содержащий атрибуты свойства, представляющего поле данных в типе сущности.</summary>
      <returns>Объект, содержащий атрибуты свойства, представляющего поле данных в типе сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.FilterUIHint">
      <summary>Получает значение <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" />, используемое для столбца.</summary>
      <returns>Значение <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" />, используемое для столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.HtmlEncode">
      <summary>Возвращает значение, указывающее, следует ли выполнять HTML-кодирование значений полей перед их отображением в элементе управления с привязкой к данным.</summary>
      <returns>true во всех случаях.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.Initialize">
      <summary>Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsBinaryData">
      <summary>Возвращает значение, указывающее, содержит ли поле данных двоичные данные.</summary>
      <returns>true, если поле содержит двоичные данные; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsCustomProperty">
      <summary>Возвращает значение, указывающее, имеется ли поле данных в базе данных.</summary>
      <returns>true если поле данных имеется в базе данных; в противном случае — false. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint">
      <summary>Возвращает значение, указывающее, является ли тип поля данных типом с плавающей запятой.</summary>
      <returns>true если тип поля данных является типом с плавающей запятой; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent">
      <summary>Возвращает значение, указывающее, входит ли поле данных в состав внешнего ключа.</summary>
      <returns>true если поле данных входит в состав внешнего ключа; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsGenerated">
      <summary>Возвращает значение, указывающее, генерируется ли поле данных в базе данных автоматически.</summary>
      <returns>true если поле данных генерируется в базе данных автоматически; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsInteger">
      <summary>Возвращает значение, указывающее, является ли тип поля данных целочисленным.</summary>
      <returns>true, если тип поля данных является целочисленным; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsLongString">
      <summary>Возвращает значение, указывающее, может ли поле данных содержать длинные строки.</summary>
      <returns>true если поле данных может содержать длинные строки; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey">
      <summary>Возвращает значение, указывающее, входит ли поле данных в состав первичного ключа таблицы.</summary>
      <returns>true, если поле данных входит в состав первичного ключа таблицы; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступно ли поле данных только для чтения.</summary>
      <returns>Значение true, если поле данных доступно только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsRequired">
      <summary>Возвращает значение, указывающее, обязательно ли поле данных должно содержать значение.</summary>
      <returns>true, если поле обязательно должно содержать значение; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsString">
      <summary>Возвращает значение, указывающее, является ли тип поля данных строковым.</summary>
      <returns>true, если тип поля данных является строковым; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.MaxLength">
      <summary>Возвращает значение, указывающее максимальную длину данных, которые могут храниться в поле данных.</summary>
      <returns>Максимальная длина данных, которые могут храниться в поле данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Model">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaModel" />, представляющий модель данных, которой принадлежит это поле данных.</summary>
      <returns>Объект, представляющий модель данных, которой принадлежит это поле данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Name">
      <summary>Возвращает имя поля данных.</summary>
      <returns>Имя поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.NullDisplayText">
      <summary>Возвращает заголовок, отображаемый для поля, когда оно имеет значение null.</summary>
      <returns>Заголовок, отображаемый для поля, когда оно имеет значение null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Prompt">
      <summary>Получает значение, которое можно использовать в качестве водяного знака в пользовательском интерфейсе, привязанном к данным в столбце.</summary>
      <returns>Значение, которое можно использовать в качестве водяного знака в пользовательском интерфейсе, привязанном к данным в столбце.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Provider">
      <summary>Возвращает объект поставщика абстракции, используемый для создания объекта <see cref="T:System.Web.DynamicData.MetaColumn" />.</summary>
      <returns>Объект поставщика абстракции, используемый для создания объекта <see cref="T:System.Web.DynamicData.MetaColumn" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage">
      <summary>Возвращает сообщение об ошибке, отображаемое, когда поле данных обязательно должно содержать значение, но его значение является пустым.</summary>
      <returns>Сообщение об ошибке, отображаемое, когда поле данных обязательно должно содержать значение, но его значение является пустым.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ResetMetadata">
      <summary>Очищает кэшированные метаданные столбца.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Scaffold">
      <summary>Возвращает значение, указывающее, должно ли отображаться поле данных.</summary>
      <returns>true, если поле данных должно отображаться; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ShortDisplayName">
      <summary>Получает короткое имя столбца.</summary>
      <returns>Короткое имя столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.SortExpression">
      <summary>Возвращает выражение, используемое для определения порядка сортировки поля данных.</summary>
      <returns>Выражение, используемое для определения порядка сортировки поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Table">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.MetaTable" />, представляющий таблицу, которой принадлежит это поле данных.</summary>
      <returns>Объект, представляющий таблицу, которой принадлежит это поле данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ToString">
      <summary>Возвращает имя поля данных.</summary>
      <returns>Имя поля данных для поиска, являющееся строковым представлением столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.TypeCode">
      <summary>Возвращает тип поля данных.</summary>
      <returns>Тип поля данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.UIHint">
      <summary>Возвращает имя шаблона поля, заданного для поля данных.</summary>
      <returns>Имя шаблона поля, заданного для поля данных.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaForeignKeyColumn">
      <summary>Представляет поле внешнего ключа базы данных, используемое платформой динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />.</summary>
      <param name="table">Имя метатаблицы сущности.</param>
      <param name="entityMember">Поставщик столбца сущности.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>Сохраняет значение внешнего ключа в заданном словаре.</summary>
      <param name="dictionary">Объект словаря, содержащий новые значения для поля данных.</param>
      <param name="value">Значение внешнего ключа.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames">
      <summary>Возвращает коллекцию, содержащую имена внешних ключей в связи, представляющей отношение в базе данных.</summary>
      <returns>Коллекция, содержащая имена внешних ключей.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)">
      <summary>Возвращает альтернативное имя, сопоставляемое внешнему ключу.</summary>
      <returns>Альтернативное имя, сопоставляемое внешнему ключу.</returns>
      <param name="foreignKeyName">Имя внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)">
      <summary>Возвращает путь к странице действия подробных сведений родительской таблицы заданного поля внешнего ключа.</summary>
      <returns>Путь к странице действия подробных сведений родительской таблицы заданного поля внешнего ключа.</returns>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)">
      <summary>Возвращает путь к заданной странице действия родительской таблицы заданного поля внешнего ключа.</summary>
      <returns>Путь к заданной странице действия родительской таблицы заданного поля внешнего ключа.</returns>
      <param name="action">Целевое действие.</param>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)">
      <summary>Возвращает путь к заданной странице действия родительской таблицы заданного поля внешнего ключа.</summary>
      <returns>Путь к заданной странице действия родительской таблицы заданного поля внешнего ключа.</returns>
      <param name="action">Целевое действие. </param>
      <param name="row">Строка, содержащая поле внешнего ключа.</param>
      <param name="path">Целевая страница.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)">
      <summary>Извлекает разделенный запятыми список значений, представляющих внешний ключ для заданной строки.</summary>
      <returns>Разделенный запятыми список значений, представляющих внешний ключ для заданной строки.</returns>
      <param name="row">Строка, для которой следует извлечь значения внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)">
      <summary>Извлекает коллекцию значений, представляющих внешние ключи для заданной строки.</summary>
      <returns>Коллекция значений, представляющих внешние ключи для заданной строки.</returns>
      <param name="row">Строка, для которой следует извлечь значения внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.Initialize">
      <summary>Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable">
      <summary>Получает значение, указывающее, входит ли поле внешнего ключа в состав первичного ключа таблицы.</summary>
      <returns>true, если поле внешнего ключа входит в состав первичного ключа таблицы; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable">
      <summary>Возвращает родительскую таблицу поля внешнего ключа.</summary>
      <returns>Родительская таблица поля внешнего ключа.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaModel">
      <summary>Представляет одну или несколько баз данных, используемых платформой динамических данных ASP.NET. </summary>
      <exception cref="T:System.InvalidOperationException">Может быть выброшено любым методом, при наличии ошибки регистрации контекста данных.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaModel" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaModel" />.</summary>
      <param name="registerGlobally">Значение true, если необходимо указать, что модель зарегистрирована глобально; в противном случае — значение false.Значение по умолчанию — true.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Создает новый объект <see cref="T:System.Web.DynamicData.MetaTable" />. </summary>
      <returns>Новый экземпляр таблицы.</returns>
      <param name="provider">Поставщик для таблицы.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Default">
      <summary>Возвращает первый экземпляр модели данных, созданной приложением.</summary>
      <returns>Экземпляр модели данных. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath">
      <summary>Возвращает или задает виртуальный путь к папке DynamicData веб-узла.</summary>
      <returns>Виртуальный путь к папке DynamicData.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory">
      <summary>Получает или задает объект <see cref="T:System.Web.DynamicData.EntityTemplateFactory" />, связанный с моделью.</summary>
      <returns>Экземпляр объекта <see cref="T:System.Web.DynamicData.EntityTemplateFactory" />, связанный с моделью.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory">
      <summary>Возвращает или задает пользовательский интерфейс <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" />.</summary>
      <returns>Интерфейс <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FilterFactory">
      <summary>Получает или задает объект <see cref="T:System.Web.DynamicData.FilterFactory" />, связанный с моделью.</summary>
      <returns>Экземпляр объекта <see cref="T:System.Web.DynamicData.FilterFactory" />, связанный с моделью.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)">
      <summary>Возвращает путь действия, связанного с определенной таблицей. </summary>
      <returns>URL-адрес, связанный с данным маршрутом.</returns>
      <param name="tableName">Имя таблицы, к которой относится это действие.</param>
      <param name="action">Применяемой к таблице действие.</param>
      <param name="row">Объект, представляющий одну строку данных в таблице.Параметр <paramref name="row" /> используется для задания значений параметров строк запросов.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)">
      <summary>Возвращает экземпляр модели данных для заданного контекста.</summary>
      <returns>Модель данных, связанная с заданным типом контекста.</returns>
      <param name="contextType">Тип контекста данных, определенный в модели данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String)">
      <summary>Возвращает метаданные, связанные с заданной таблицей.</summary>
      <returns>Метаданные, описывающие заданную таблицу.</returns>
      <param name="uniqueTableName">Имя, идентифицирующее таблицу в модели данных.</param>
      <exception cref="T:System.ArgumentException">Имя не найдено в модели данных.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)">
      <summary>Возвращает метаданные, описывающие заданную таблицу.</summary>
      <returns>Метаданные, описывающие заданную таблицу.</returns>
      <param name="tableName">Имя таблицы.</param>
      <param name="contextType">Контекст данных для поиска таблицы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="tablename" /> или <paramref name="contextType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Контекст не зарегистрирован или таблица не существует в этом контексте данных.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)">
      <summary>Возвращает метаданные, описывающие заданную таблицу.</summary>
      <returns>Метаданные, описывающие заданную таблицу.</returns>
      <param name="entityType">Тип, идентифицирующий таблицу в модели данных.</param>
      <exception cref="T:System.ArgumentNullException">Тип не найден в модели данных.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})">
      <summary>Регистрирует контекст данных, заданный фабрикой контекста.</summary>
      <param name="contextFactory">Фабрика для создания экземпляров контекста данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)">
      <summary>Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста и разрешив пользовательский конструктор. </summary>
      <param name="contextFactory">Делегат, используемый для создания экземпляра контекста модели данных.</param>
      <param name="configuration">Информация контекста для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextFactory" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentException">Объект <paramref name="contextType" />, созданный объектом <paramref name="contextFactory" />, недействителен.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)">
      <summary>Регистрирует экземпляр контекста данных. </summary>
      <param name="contextType">Тип контекста данных, определенный в модели данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)">
      <summary>Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста. </summary>
      <param name="contextType">Тип контекста данных, определенный в модели данных.</param>
      <param name="configuration">Информация конфигурации для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextType" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>Регистрирует экземпляр контекста данных, используя поставщик модели данных.</summary>
      <param name="dataModelProvider">Поставщик модели данных.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)">
      <summary>Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста и разрешив использование поставщика модели данных. </summary>
      <param name="dataModelProvider">Поставщик модели данных.</param>
      <param name="configuration">Информация контекста для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dataModelProvider" /> или <paramref name="configuration" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="contextType" /> уже зарегистрирован.</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.ResetRegistrationException">
      <summary>Сбрасывает предыдущую ошибку регистрации контекста, которая могла произойти. </summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Tables">
      <summary>Возвращает коллекцию всех таблиц, входящих в состав модели данных.</summary>
      <returns>Коллекция таблиц, принадлежащих модели данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)">
      <summary>Пытается получить метаданные, связанные с заданной таблицей.</summary>
      <returns>true, если метаданные таблицы найдены; в противном случае — false.</returns>
      <param name="uniqueTableName">Имя, однозначно идентифицирующее таблицу.</param>
      <param name="table">По возвращении из этого метода в случае, если запрошенная таблица найдена, содержит метаданные для этой таблицы.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uniqueTableName" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>Пытается получить метаданные, связанные с заданной таблицей.</summary>
      <returns>Значение true, если метаданные таблицы найдены; в противном случае — false.</returns>
      <param name="entityType">Тип таблицы.</param>
      <param name="table">После выполнения возврата этим методом в случае, если запрошенная таблица найдена, содержит метаданные для указанной таблицы.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entityType" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.VisibleTables">
      <summary>Возвращает коллекцию видимых таблиц в модели данных.</summary>
      <returns>Видимой называется таблица, для которой включено формирование шаблонов.Это означает, что для данной таблицы существуют страница List.aspx.</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaTable">
      <summary>Представляет метаданные, описывающие таблицу для использования страницами платформы динамических данных.</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaTable" />.</summary>
      <param name="metaModel">Метамодель сущности.</param>
      <param name="tableProvider">Поставщик модели сущности.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Attributes">
      <summary>Возвращает атрибуты, связанные с таблицей.</summary>
      <returns>Коллекция, содержащая все атрибуты таблицы.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection">
      <summary>Создает коллекцию атрибутов.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю производить операции удаления.</summary>
      <returns>Значение true, если пользователь может выполнять операции удаления; в противном случае — значение false.</returns>
      <param name="principal">Контекст безопасности пользователя.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю производить операции вставки.</summary>
      <returns>Значение true, если пользователь может выполнять операции вставки; в противном случае — значение false.</returns>
      <param name="principal">Контекст безопасности пользователя.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю производить операции чтения.</summary>
      <returns>Значение true, если пользователь может выполнять операции чтения; в противном случае — значение false.</returns>
      <param name="principal">Контекст безопасности пользователя.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю производить операции обновления.</summary>
      <returns>Значение true, если пользователь может выполнять операции обновления; в противном случае — значение false.</returns>
      <param name="principal">Контекст безопасности пользователя.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Columns">
      <summary>Возвращает коллекцию столбцов для таблицы.</summary>
      <returns>Коллекция, содержащая столбцы для таблицы.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Создает новый объект <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</summary>
      <returns>Новый дочерний объект метастолбца.</returns>
      <param name="columnProvider">Поставщик столбца.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Создает объект <see cref="T:System.Web.DynamicData.MetaColumn" />.</summary>
      <returns>Новый объект метастолбца.</returns>
      <param name="columnProvider">Поставщик столбца.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateContext">
      <summary>Возвращает контекст данных для таблицы.</summary>
      <returns>Контекст данных для таблицы.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Создает объект, содержащий метаданные внешнего ключа.</summary>
      <returns>Объект, содержащий метаданные внешнего ключа.</returns>
      <param name="columnProvider">Поставщик столбца.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)">
      <summary>Создает метаданные для указанной таблицы.</summary>
      <returns>Объект, содержащий метаданные таблицы.</returns>
      <param name="typeDescriptor">Сведения типе таблицы.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)">
      <summary>Создает метаданные для указанной таблицы.</summary>
      <returns>Объект, содержащий метаданные таблицы.</returns>
      <param name="entityType">Тип таблицы, для которого нужно создать метаданные.</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextPropertyName">
      <summary>Возвращает имя таблицы.</summary>
      <returns>Имя таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextType">
      <summary>Возвращает тип связанного с таблицей контекста данных.</summary>
      <returns>Тип контекста данных. </returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayColumn">
      <summary>Возвращает столбец, используемый для отображения значений, когда записи в этой таблице используются в качестве родительских в отношениях внешнего ключа.</summary>
      <returns>Столбец, используемый для отображения значений, когда записи в этой таблице используются в качестве родительских в отношениях внешнего ключа.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayName">
      <summary>Возвращает имя таблицы в понятном формате.</summary>
      <returns>Строка, представляющая понятное имя таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.EntityType">
      <summary>Возвращает тип сущности, которую представляет таблица.</summary>
      <returns>Тип, представляющий сущность.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames">
      <summary>Возвращает разделенный запятыми список имен внешних ключей.</summary>
      <returns>Разделенный запятыми список имен внешних ключей.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)">
      <summary>Возвращает путь к действию для текущей таблицы и заданного действия.</summary>
      <returns>Путь к действию для заданного действия.</returns>
      <param name="action">Имя действия.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})">
      <summary>Возвращает путь к действию для заданной таблицы, заданного действия и заданного первичного ключа.</summary>
      <returns>Путь к действию для заданного действия и первичного ключа.</returns>
      <param name="action">Имя действия.</param>
      <param name="primaryKeyValues">Список значений столбцов, составляющих первичный ключ.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)">
      <summary>Добавляет строки запроса в конец пути к действию на основе заданного первичного ключа и виртуального пути.</summary>
      <returns>Путь к действию для заданных первичного ключа и виртуального пути с добавленными в конец значениями строки запроса.</returns>
      <param name="action">Имя действия.</param>
      <param name="primaryKeyValues">Список значений столбцов, составляющих первичный ключ.</param>
      <param name="path">Виртуальный путь к действию.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)">
      <summary>Возвращает путь к действию для заданной строки с использованием имени действия.</summary>
      <returns>Путь к действию для заданной строки.</returns>
      <param name="action">Имя действия.</param>
      <param name="row">Строка, для которой требуется получить путь к действию.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)">
      <summary>Возвращает путь к действию для заданной строки с использованием имени действия и виртуального пути к этому действию.</summary>
      <returns>Путь к действию для заданной строки.</returns>
      <param name="action">Имя действия.</param>
      <param name="row">Объект, содержащий строку для пути к действию.</param>
      <param name="path">Виртуальный путь к действию.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает путь к действию для текущей таблицы и заданных действия и маршрутов.</summary>
      <returns>Путь к действию для заданных действия и маршрутов.</returns>
      <param name="action">Имя действия.</param>
      <param name="routeValues">Список маршрутов для действия.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)">
      <summary>Возвращает метаданные для заданного столбца.</summary>
      <returns>Столбец метаданных. </returns>
      <param name="columnName">Имя столбца, для которого следует получить метаданные.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)">
      <summary>Получает коллекцию значений столбцов.</summary>
      <returns>Коллекция значений столбцов.</returns>
      <param name="context">Контекст указанного веб-запроса.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute">
      <summary>Получает первичный ключ сущности из значений маршрута.</summary>
      <returns>Значения первичных ключей значений, если они найдены; в противном случае — значение null.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)">
      <summary>Возвращает значение для использования в качестве строки отображения для экземпляра строки, когда строка используется в отношениях внешнего ключа.</summary>
      <returns>Отображаемое имя для экземпляра строки.</returns>
      <param name="row">Строка, для которой требуется получить отображаемую строку.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetFilteredColumns">
      <summary>Получает список фильтруемых столбцов.</summary>
      <returns>Список фильтруемых столбцов.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)">
      <summary>Получает словарь имен и значений первичных ключей для указанной строки.</summary>
      <returns>Словарь имен и значений первичных ключей.</returns>
      <param name="row">Строка.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})">
      <summary>Возвращает разделенный запятыми список значений столбцов, представляющих первичный ключ для заданной строки.</summary>
      <returns>Разделенный запятыми список значений столбцов.Если этот список пуст, возвращается пустая строка.</returns>
      <param name="primaryKeyValues">Список значений столбцов, составляющих первичный ключ.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)">
      <summary>Возвращает разделенный запятыми список значений столбцов, представляющих первичный ключ для заданной строки.</summary>
      <returns>Разделенный запятыми список значений столбцов, представляющих первичный ключ для строки.</returns>
      <param name="row">Строка, для которой требуется получить первичный ключ.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)">
      <summary>Возвращает коллекцию значений столбцов, представляющих первичный ключ для заданной строки.</summary>
      <returns>Коллекция значений столбцов, представляющих первичный ключ для строки.</returns>
      <param name="row">Строка, для которой требуется получить первичный ключ.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery">
      <summary>Возвращает экземпляр <see cref="T:System.Linq.IQueryable" /> для типа сущности, представляющей таблицу.</summary>
      <returns>Экземпляр <see cref="T:System.Linq.IQueryable" /> для типа сущности.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)">
      <summary>Возвращает экземпляр <see cref="T:System.Linq.IQueryable" /> для типа сущности, представляющей таблицу, используя контекст данных.</summary>
      <returns>Экземпляр <see cref="T:System.Linq.IQueryable" /> для типа сущности, представляющей таблицу в контексте данных.</returns>
      <param name="context">Контекст объекта <see cref="T:System.Web.DynamicData.MetaTable" />.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)">
      <summary>Возвращает список столбцов, отображаемых с помощью формирования шаблонов.</summary>
      <returns>Список столбцов, отображаемых с помощью формирования шаблонов.</returns>
      <param name="mode">Режим элемента управления с привязкой к данным.</param>
      <param name="containerType">Значение, показывающее, отображается ли таблица как отдельная сущность или как часть списка сущностей.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)">
      <summary>Получает метатаблицу, связанную с заданным типом.</summary>
      <returns>Метатаблица, связанная с заданным типом.</returns>
      <param name="entityType">Тип сущности.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />, вызванный этим методом, возвращает false.</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.HasPrimaryKey">
      <summary>Возвращает значение, указывающее, имеет ли таблица первичный ключ.</summary>
      <returns>true, если таблица имеет первичный ключ; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.Initialize">
      <summary>Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступна ли таблица только для чтения.</summary>
      <returns>true, если таблица доступна только для чтения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ListActionPath">
      <summary>Возвращает путь к действию списка для таблицы.</summary>
      <returns>Путь к действию списка для таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Model">
      <summary>Возвращает метамодель, которой принадлежит таблица.</summary>
      <returns>Метамодель, которой принадлежит таблица.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Name">
      <summary>Возвращает уникальное имя таблицы.</summary>
      <returns>Уникальное имя таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns">
      <summary>Возвращает коллекцию столбцов, определяющих первичный ключ.</summary>
      <returns>Коллекция, содержащая столбцы первичного ключа.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Provider">
      <summary>Возвращает поставщик для таблицы.</summary>
      <returns>Поставщик для таблицы.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ResetMetadata">
      <summary>Сбрасывает кэшированные метаданные для таблицы.</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.RootEntityType">
      <summary>Получает корневой тип иерархии наследования сущности.</summary>
      <returns>Корневой тип иерархии наследования сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Scaffold">
      <summary>Возвращает или задает значение, указывающее, следует ли отображать таблицу.</summary>
      <returns>true если таблицу следует отображать; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortColumn">
      <summary>Возвращает значение <see cref="T:System.Web.DynamicData.MetaColumn" />, по которому отсортирована таблица.</summary>
      <returns>Столбец, по которому отсортирована таблица.</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortDescending">
      <summary>Возвращает значение, указывающее, сортируются ли записи по убыванию, когда они используются в качестве родительских в отношении внешнего ключа.</summary>
      <returns>true, если записи сортируются по убыванию; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ToString">
      <summary>Возвращает имя таблицы.</summary>
      <returns>Имя таблицы.</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)">
      <summary>Возвращает значение, указывающее, может ли быть найден заданный столбец.</summary>
      <returns>true, если заданный столбец может быть найден; в противном случае — false.</returns>
      <param name="columnName">Имя столбца для поиска.</param>
      <param name="column">Когда этот метод возвращает управление, содержит объект MetaColumn для <paramref name="columnName" />.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>Получает метатаблицу, связанную с заданным типом и таблицей.</summary>
      <returns>Метатаблица, связанная с данным заданным и таблицей.</returns>
      <param name="entityType">Тип сущности.</param>
      <param name="table">После выполнения возврата этим методом содержит метатаблицу, связанную с указанным типом.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="entityType" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Web.DynamicData.PageAction">
      <summary>Задает значения действия по умолчанию, используемые механизмом маршрутизации в приложениях платформы динамических данных ASP.NET.</summary>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Details">
      <summary>Возвращает имя действия для страницы, которая отображает детали элемента данных.</summary>
      <returns>Литеральное значение "Details".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Edit">
      <summary>Возвращает имя действия для страницы, которая редактирует элемент данных.</summary>
      <returns>Литеральное значение "Edit".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Insert">
      <summary>Возвращает имя действия для страницы, которая вставляет элемент данных.</summary>
      <returns>Литеральное значение "Insert".</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.List">
      <summary>Возвращает имя действия для страницы, которая отображает данные из таблицы.</summary>
      <returns>Литеральное значение "List".</returns>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterRepeater">
      <summary>Предоставляет элемент управления-шаблон, автоматически создающий пользовательский интерфейс для фильтрации строк таблицы по поддерживаемым типам столбцов.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId">
      <summary>Получает или задает идентификатор элемента управления <see cref="T:System.Web.DynamicData.DynamicFilter" /> внутри шаблона, настроенного как фильтр по столбцу.</summary>
      <returns>Идентификатор элемента управления <see cref="T:System.Web.DynamicData.DynamicFilter" /> внутри шаблона, настроенного как фильтр по столбцу.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate">
      <summary>Получает или задает элементы управления, заполняющие класс <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</summary>
      <returns>Объект, определяющий отображение элементов в элементе управления <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)">
      <summary>Проверяет, содержит ли элемент управления фильтры полей данных.</summary>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterUserControl">
      <summary>Предоставляет базовый класс для элементов управления фильтром.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.ApplyEqualityFilter(System.Linq.IQueryable,System.String,System.Object)">
      <summary>Получает преобразованный объект <see cref="T:System.Linq.IQueryable" /> из исходного объекта <see cref="T:System.Linq.IQueryable" />.</summary>
      <returns>Преобразованный объект <see cref="T:System.Linq.IQueryable" />, полученный из исходного объекта <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="source">Исходный объект <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Значение для параметра <paramref name="propertyName" />.</param>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.Column">
      <summary>Получает столбец, используемый для фильтрации.</summary>
      <returns>Столбец, используемый для фильтрации.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValue">
      <summary>Получает значения по умолчанию, сопоставляемые для таблицы.</summary>
      <returns>Значения по умолчанию, сопоставляемые для таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValues">
      <summary>Получает значения по умолчанию, сопоставляемые для таблицы.</summary>
      <returns>Значения по умолчанию, сопоставляемые для таблицы.</returns>
    </member>
    <member name="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged">
      <summary>Происходит, когда вызывается метод <see cref="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" />.</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.FilterControl">
      <summary>Получает элемент управления данными, обрабатывающий фильтр внутри шаблона фильтра.</summary>
      <returns>Элемент управления данными, обрабатывающий фильтр.</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable(System.Linq.IQueryable)">
      <summary>Получает преобразованный объект <see cref="T:System.Linq.IQueryable" /> из исходного объекта <see cref="T:System.Linq.IQueryable" />.</summary>
      <returns>Преобразованный объект <see cref="T:System.Linq.IQueryable" />, полученный из исходного объекта <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="source">Исходный объект <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged">
      <summary>Порождает событие <see cref="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" />.</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>Заполняет элемент управления "список" всеми элементами внешнего ключа или логическими элементами в таблице.</summary>
      <param name="listControl">Элемент управления "список".</param>
    </member>
    <member name="T:System.Web.DynamicData.TableNameAttribute">
      <summary>Предоставляет атрибут для изменения отображаемого имени таблицы.</summary>
    </member>
    <member name="M:System.Web.DynamicData.TableNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.TableNameAttribute" /> указанным именем таблицы.</summary>
      <param name="name">Имя, которое будет отображать таблицу.</param>
    </member>
    <member name="P:System.Web.DynamicData.TableNameAttribute.Name">
      <summary>Возвращает или задает имя таблицы.</summary>
      <returns>Имя, связанное с таблицей.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationDirection">
      <summary>Указывает отношение между двумя сущностями.</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToOne">
      <summary>Указывает отношение "один к одному".</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToMany">
      <summary>Указывает отношение "один ко многим".</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToOne">
      <summary>Указывает отношение "многие к одному".</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToMany">
      <summary>Указывает отношение "многие ко многим".</summary>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationProvider">
      <summary>Предоставляет базовый класс для поставщиков ассоциаций столбцов.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.ModelProviders.AssociationProvider" /> для использования экземпляром унаследованного класса.Этот конструктор может вызываться только унаследованным классом.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.Direction">
      <summary>Возвращает или задает тип ассоциации.</summary>
      <returns>Тип ассоциации.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames">
      <summary>Возвращает или задает имена внешних ключей, составляющих данную ассоциацию.</summary>
      <returns>Имена внешних ключей, составляющих данную ассоциацию.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn">
      <summary>Возвращает или задает исходный столбец для ассоциации.</summary>
      <returns>Исходный столбец ассоциации.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.GetSortExpression(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>Возвращает выражение сортировки для столбца, представленного ассоциацией. </summary>
      <returns>Если свойство <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable" /> возвращает true, выражение сортировки для столбца, представленного ассоциацией; в противном случае — null.</returns>
      <param name="sortColumn">Столбец, по которому необходимо отсортировать сущность.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable">
      <summary>Возвращает или задает значение, указывающее, входят ли исходные столбцы первичного ключа в данную таблицу.</summary>
      <returns>true, если исходные столбцы первичного ключа входит в состав таблицы; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn">
      <summary>Возвращает или задает столбец назначения для ассоциации.</summary>
      <returns>Столбец назначения ассоциации.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable">
      <summary>Возвращает таблицу назначения ассоциации.</summary>
      <returns>Таблица назначения ассоциации.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.ColumnProvider">
      <summary>Предоставляет базовый класс для поставщиков столбцов.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.#ctor(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>Инициализирует класс для использования экземпляром унаследованного класса.Этот конструктор может вызываться только унаследованным классом.</summary>
      <param name="table">Таблица, содержащая столбец.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.AddDefaultAttributes(System.Web.DynamicData.ModelProviders.ColumnProvider,System.ComponentModel.AttributeCollection)">
      <summary>Добавляет атрибуты по умолчанию.</summary>
      <returns>Коллекция атрибутов.</returns>
      <param name="columnProvider">Поставщик столбца.</param>
      <param name="attributes">Коллекция атрибутов.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Association">
      <summary>Возвращает поставщик для таблицы, которую представляет столбец.</summary>
      <returns>Поставщик для таблицы, которую представляет столбец, если таковой существует; в противном случае — null.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Attributes">
      <summary>Получает атрибуты, определенные для столбца, представленного данным поставщиком.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.ColumnType">
      <summary>Возвращает или задает тип столбца.</summary>
      <returns>Тип столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.EntityTypeProperty">
      <summary>Возвращает или задает значение <see cref="T:System.Reflection.PropertyInfo" /> свойства, представляющего столбец типа сущности.</summary>
      <returns>Значение <see cref="T:System.Reflection.PropertyInfo" /> свойства, представляющего столбец типа сущности.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsCustomProperty">
      <summary>Возвращает или задает значение, указывающее, является ли столбец дополнительным свойством, отсутствующим в контексте модели данных.</summary>
      <returns>true, если столбец является дополнительным свойством, отсутствующим в контексте модели данных; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsForeignKeyComponent">
      <summary>Возвращает или задает значение, указывающее, входит ли столбец в состав внешнего ключа.</summary>
      <returns>true, если столбец является частью внешнего ключа; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsGenerated">
      <summary>Возвращает или задает значение, указывающее, генерируется ли столбец базой данных автоматически.</summary>
      <returns>true если столбец автоматически генерируется базой данных; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsPrimaryKey">
      <summary>Возвращает или задает значение, указывающее, входит ли столбец в состав первичного ключа таблицы.</summary>
      <returns>true если столбец является частью первичного ключа таблицы; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли столбец только для чтения.</summary>
      <returns>Значение true , если столбец доступен только для чтения (read-only); в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable">
      <summary>При переопределении в производном классе возвращает или задает значение, указывающее, поддерживает ли модель данных сортировку таблицы по этому столбцу. </summary>
      <returns>true, если модель данных поддерживает сортировку таблицы по этому столбцу; в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.MaxLength">
      <summary>Возвращает или задает максимальную длину, допустимую для этого столбца.</summary>
      <returns>Максимальная длина, допустимая для этого столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name">
      <summary>Возвращает или задает имя столбца.</summary>
      <returns>Имя столбца.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable">
      <summary>Возвращает или задает значение, указывающее, может ли столбец принимать значения null.</summary>
      <returns>true, если столбец принимает значения null, в противном случае — false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Table">
      <summary>Возвращает или задает таблицу, которой принадлежит столбец.</summary>
      <returns>Таблица, которой принадлежит столбец.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.ToString">
      <summary>Возвращает свойство <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" />.</summary>
      <returns>Свойство <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> или строковое представление объекта, если свойство <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> имеет значение null.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.DataModelProvider">
      <summary>Предоставляет базовый класс для поставщиков модели платформы динамических данных.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> для использования экземпляром унаследованного класса.Этот конструктор может вызываться только унаследованным классом.</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.ContextType">
      <summary>Возвращает тип контекста данных.</summary>
      <returns>Тип контекста данных.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.CreateContext">
      <summary>При переопределении в производном классе создает экземпляр контекста данных.</summary>
      <returns>Экземпляр контекста данных.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.Tables">
      <summary>При переопределении в производном классе возвращает список таблиц, доступ к которым предоставляет модель данных.</summary>
      <returns>Список таблиц, доступ к которым предоставляет модель данных.</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.TableProvider">
      <summary>Предоставляет базовый класс для поставщиков таблиц платформы динамических данных.</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> для использования экземпляром унаследованного класса.Этот конструктор может вызываться только унаследованным классом.</summary>
      <param name="model">Модель, которой принадлежит столбец.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Attributes">
      <summary>Получает атрибуты, определенные для таблицы, представленной данным поставщиком.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю удалять элементы из таблицы.</summary>
      <returns>Значение true, если пользователь может удалять элементы из таблицы; в противном случае — значение false.</returns>
      <param name="principal">Пользователь.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю вставлять элементы в таблицу.</summary>
      <returns>Значение true, если пользователь может вставлять элементы в таблицу; в противном случае — значение false.</returns>
      <param name="principal">Пользователь.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю считывать элементы в таблице.</summary>
      <returns>Значение true, если пользователь может считывать элементы в таблице; в противном случае — значение false.</returns>
      <param name="principal">Пользователь.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>Получает значение, указывающее, разрешено ли пользователю обновлять элементы в таблице.</summary>
      <returns>Значение true, если пользователь может обновлять элементы в таблице; в противном случае — значение false.</returns>
      <param name="principal">Пользователь.</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Columns">
      <summary>При переопределении в произвольном классе возвращает коллекцию столбцов этой таблицы.</summary>
      <returns>Коллекция столбцов этой таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName">
      <summary>Получает имя таблицы из контекста данных.</summary>
      <returns>Имя таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataModel">
      <summary>Возвращает объект <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" />.</summary>
      <returns>Объект <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.EntityType">
      <summary>Возвращает или задает тип сущности, представляющий таблицу.</summary>
      <returns>Тип, представляющий таблицу.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)">
      <summary>Возвращает значение внешнего ключа для заданной строки.</summary>
      <returns>Внешний ключ.</returns>
      <param name="row">Строка, для которой требуется получить значение внешнего ключа.</param>
      <param name="foreignKeyName">Имя столбца внешнего ключа.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)">
      <summary>Будучи переопределенным в производном классе, возвращает объект <see cref="T:System.Linq.IQueryable" />, который, с свою очередь, возвращает элементы таблицы.</summary>
      <returns>Объект <see cref="T:System.Linq.IQueryable" />, возвращающий элементы таблицы.</returns>
      <param name="context">Контекст данных для таблицы.</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor">
      <summary>Получает дескриптор типа для таблицы.</summary>
      <returns>Дескриптор типа для таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Name">
      <summary>Возвращает имя таблицы.</summary>
      <returns>Имя таблицы.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType">
      <summary>Получает родительский тип.</summary>
      <returns>Родительский тип, если у сущности есть родитель; в противном случае — экземпляр класса <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType">
      <summary>Получает корневой тип для данной сущности.</summary>
      <returns>Корневой тип для данной сущности, если у сущности есть родитель; в противном случае — экземпляр класса <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.ToString">
      <summary>Возвращает свойство <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> экземпляра класса <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />.</summary>
      <returns>Имя экземпляра <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />.Если свойство <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> имеет значение null, возвращается свойство Name базового класса.</returns>
    </member>
    <member name="T:System.Web.UI.DataControlExtensions">
      <summary>Представляет методы расширения, используемые платформой динамических данных ASP.NET.</summary>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
      <summary>Включает поведение платформы динамических данных для указанного элемента управления данными.</summary>
      <param name="control">Элемент управления данными, для которого нужно включить поведение платформы динамических данных.</param>
      <param name="entityType">Тип, используемый для метаданных.</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Включает поведение платформы динамических данных для указанного элемента управления данными.</summary>
      <param name="control">Элемент управления данными, для которого нужно включить поведение платформы динамических данных.</param>
      <param name="entityType">Тип, используемый для метаданных.</param>
      <param name="defaultValues">Значения по умолчанию для использования с объектом <see cref="T:System.Web.UI.INamingContainer" />.</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
      <summary>Включает поведение платформы динамических данных для указанного элемента управления данными.</summary>
      <param name="control">Элемент управления данными, для которого нужно включить поведение платформы динамических данных.</param>
      <param name="entityType">Тип, представляющий отображаемую таблицу.</param>
      <param name="defaults">Значения по умолчанию для использования с объектом <see cref="T:System.Web.UI.INamingContainer" />.</param>
    </member>
  </members>
</doc>