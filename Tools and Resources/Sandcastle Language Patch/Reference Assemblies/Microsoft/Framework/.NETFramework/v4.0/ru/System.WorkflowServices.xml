<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.WorkflowServices</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.WorkflowServiceHost">
      <summary>Предоставляет узел для служб, основанных на рабочем процессе.</summary>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, потока байтов, содержащего определение правил рабочего процесса, и базовых адресов указанной службы.</summary>
      <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
      <param name="ruleDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение правил рабочего процесса.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, потока байтов, содержащего определение правил рабочего процесса, поставщика типа для настраиваемых типов действий и базовых адресов указанной службы.</summary>
      <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
      <param name="ruleDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение правил рабочего процесса.</param>
      <param name="typeProvider">Поставщик типов, реализующий интерфейс <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, и базовых адресов указанной службы.</summary>
      <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса, пути к определению правил рабочего процесса, и базовых адресов указанной службы.</summary>
      <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
      <param name="ruleDefinitionPath">Строка, содержащая путь к файлу определения правил рабочего процесса.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса, пути к определению правил рабочего процесса, поставщика типов для настраиваемых типов действий и базовых адресов указанной службы.</summary>
      <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
      <param name="ruleDefinitionPath">Строка, содержащая путь к файлу определения правил рабочего процесса.</param>
      <param name="typeProvider">Поставщик типов, реализующий интерфейс <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса и базовым адресам указанной службы.</summary>
      <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием типа рабочего процесса и базовых адресов указанной службы.</summary>
      <param name="workflowType">Тип <see cref="T:System.Type" /> экземпляра рабочего процесса.</param>
      <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Добавляет конечную точку службы рабочего процесса с использованием указанных контракта, привязки и адреса конечной точки.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес для добавленной конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="implementedContract" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
      <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой, адресом конечной точки и кодом URI, по которому служба ожидает передачи данных. </summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Адрес конечной точки для службы.</param>
      <param name="listenUri">URI <see cref="T:System.Uri" />, который может прослушиваться конечными точками службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="implementedContract" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
      <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой и кодом URI, содержащим адрес конечной точки.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="implementedContract" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
      <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой, кодом URI, содержащим адрес конечной точки, и кодом URI, по которому служба ожидает передачи данных. </summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
      <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
      <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
      <param name="listenUri">URI <see cref="T:System.Uri" />, который может прослушиваться конечными точками службы.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="implementedContract" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
      <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>Создает описание службы рабочего процесса.</summary>
      <returns>Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы рабочего процесса.</returns>
      <param name="implementedContracts">Когда метод возвращает управление, объект <see cref="T:System.Collections.Generic.IDictionary`2" /> содержит контракты с ключами для размещенной службы, которые были реализованы. </param>
    </member>
    <member name="M:System.ServiceModel.WorkflowServiceHost.OnClosing">
      <summary>Этот метод вызывается перед переводом <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в состояние закрытия.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.WorkflowServiceHostFactory">
      <summary>Фабрика, предоставляющая экземпляры <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в управляемых средах размещения, в которых экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Создает <see cref="T:System.ServiceModel.WorkflowServiceHost" /> из строки, содержащей либо имя файла разметки рабочего процесса, либо имя типа службы рабочего процесса, а также базовый адрес указанной службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" />, связанный со службой рабочего процесса.Реализация по умолчанию возвращает объект <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с указанными базовыми адресами.</returns>
      <param name="constructorString">Имя файла разметки рабочего процесса, определяющего службу рабочего процесса, или имя типа службы рабочего процесса. </param>
      <param name="baseAddresses">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint">
      <summary>Объект <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> добавляет конечную точку управления по умолчанию при помощи этого класса, если вложенный элемент &lt;workflowInstanceControl&gt; в элементе &lt;sqlWorkflowInstanceStoreBehavior&gt; не задан явным образом.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.AddService(System.Object)">
      <summary>Добавляет указанную службу в список служб времени выполнения, поддерживаемых экземпляром времени выполнения рабочего процесса.</summary>
      <param name="service">Объект службы, который необходимо добавить в список служб времени выполнения.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.GetService``1">
      <summary>Возвращает объект службы, который соответствует типу службы, указанному в качестве параметра шаблона.</summary>
      <returns>Получает тип службы, на которую ссылается данный объект.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.GetService(System.Type)">
      <summary>Получает объект службы указанного типа, из списка служебных объектов.</summary>
      <returns>Объект службы для указанного типа службы.</returns>
      <param name="serviceType">Тип службы, объект которой необходимо извлечь из списка объектов.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)">
      <summary>Возвращает идентификатор экземпляра на основе входных данных и контекста операции, переданных в качестве параметров.</summary>
      <returns>Идентификатор экземпляра.</returns>
      <param name="inputs">Входные объекты.</param>
      <param name="operationContext">Сведения о контексте операции.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)">
      <summary>Разрешает закладку.</summary>
      <returns>Закладка.</returns>
      <param name="inputs">Входные объекты.</param>
      <param name="operationContext">Сведения о контексте операции.</param>
      <param name="responseContext">Сведения о контексте ответа.</param>
      <param name="value">Объект значения.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint.RemoveService(System.Object)">
      <summary>Удаляет указанную службу из списка служб времени выполнения, поддерживаемых экземпляром времени выполнения рабочего процесса.</summary>
      <param name="service">Объект службы, который необходимо удалить из списка поддерживаемых служб времени выполнения.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtendedWorkflowRuntimeServiceElementCollection">
      <summary>Представляет коллекцию элементов конфигурации, которая представляет расширенные службы для добавления в подсистему среды выполнения рабочих процессов.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtendedWorkflowRuntimeServiceElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.ExtendedWorkflowRuntimeServiceElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtendedWorkflowRuntimeServiceElementCollection.Remove(System.String)">
      <summary>Удаляет из этой коллекции элемент конфигурации с указанным ключом.</summary>
      <param name="key">Ключ элемента конфигурации, который необходимо удалить.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtendedWorkflowRuntimeServiceElementCollection.Remove(System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElement)">
      <summary>Удаляет из коллекции первое вхождение конкретного элемента конфигурации.</summary>
      <param name="serviceSettings">Элемент конфигурации службы, который необходимо удалить.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.PersistenceProviderElement">
      <summary>Представляет элемент конфигурации службы сохраняемости, задающий тип используемой реализации поставщика сохраняемости, а также используемое время ожидания для операций сохраняемости.Дополнительные атрибуты, находящиеся в этом элементе, передаются в конструктор для заданного поставщика сохраняемости.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.PersistenceProviderElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.PersistenceProviderElement.BehaviorType">
      <summary>Возвращает тип поведения. </summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.CreateBehavior">
      <summary>Создает пользовательское поведение на основе параметров данного элемента конфигурации.</summary>
      <returns>Пользовательское поведение на основе параметров данного элемента конфигурации.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.IsModified">
      <summary>Указывает, был ли изменен этот элемент конфигурации с момента последнего сохранения или загрузки.</summary>
      <returns>Значение true, если элемент был изменен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Возвращает значение, указывающее, был ли при десериализации обнаружен неизвестный атрибут.</summary>
      <returns>Значение true, если при десериализации был обнаружен неизвестный атрибут; в противном случае — значение false.</returns>
      <param name="name">Имя неопознанного атрибута.</param>
      <param name="value">Значение неопознанного атрибута.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PersistenceProviderElement.PersistenceOperationTimeout">
      <summary>Возвращает или задает время ожидания, используемое для операций сохраняемости. </summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время ожидания, используемое для операций сохраняемости. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.PersistenceProviderElement.PersistenceProviderArguments">
      <summary>Получает дополнительные атрибуты этого класса <see cref="T:System.ServiceModel.Configuration.PersistenceProviderElement" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, в которой содержатся дополнительные атрибуты этого типа <see cref="T:System.ServiceModel.Configuration.PersistenceProviderElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.PostDeserialize">
      <summary>Вызывается после десериализации.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает содержимое данного элемента конфигурации в файл конфигурации.</summary>
      <returns>true, если данные действительно были сериализованы; в противном случае — false. </returns>
      <param name="writer">Модуль записи <see cref="T:System.Xml.XmlWriter" />, используемый для записи данных в файл конфигурации.</param>
      <param name="serializeCollectionKey">Значение true для сериализации только свойств ключа коллекции; в противном случае — значение false.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PersistenceProviderElement.Type">
      <summary>Возвращает или задает тип поставщика сохраняемости, используемый службой.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.PersistenceProviderElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Изменяет данный объект элемента конфигурации для удаления всех значений, которые не должны сохраняться.</summary>
      <param name="sourceElement">Класс <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенное представление свойств.</param>
      <param name="parentElement">Родительский элемент <see cref="T:System.Configuration.ConfigurationElement" /> или null, если это верхний уровень.</param>
      <param name="saveMode">
        <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств включать.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.WorkflowRuntimeElement">
      <summary>Представляет элемент конфигурации, который задает параметры экземпляра <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> для размещения служб  на основе рабочих процессов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WorkflowRuntimeElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Configuration.WorkflowRuntimeElement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.BehaviorType">
      <summary>Возвращает тип этого элемента поведения.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.CachedInstanceExpiration">
      <summary>Возвращает или задает значение, указывающее время истечения срока действия кэшированного экземпляра.</summary>
      <returns>
        <see cref="T:System.Timespan" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.CommonParameters">
      <summary>Возвращает коллекцию общих параметров, используемых службами.</summary>
      <returns>Коллекция NameValueConfigurationCollection, в которой содержатся общие параметры, используемые службами.Значение по умолчанию — null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Configuration.WorkflowRuntimeElement.CreateBehavior">
      <summary>Создает пользовательское поведение на основе параметров данного элемента конфигурации.</summary>
      <returns>Пользовательское поведение на основе параметров данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.EnablePerformanceCounters">
      <summary>Возвращает или задает значение, указывающее, включены ли счетчики производительности.</summary>
      <returns>Значение true, если счетчики производительности включены; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.Name">
      <summary>Возвращает или задает имя подсистемы среды выполнения рабочих процессов.</summary>
      <returns>Строка, содержащая имя подсистемы среды выполнения рабочих процессов.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.Properties">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</summary>
      <returns>Экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, содержащий коллекцию объектов <see cref="T:System.Configuration.ConfigurationProperty" />, которые могут быть атрибутами или объектами <see cref="T:System.Configuration.ConfigurationElement" /> данного элемента конфигурации.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.Services">
      <summary>Возвращает коллекцию служб для добавления в подсистему <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</summary>
      <returns>Класс <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElementCollection" />, в котором содержится коллекция служб для добавления в подсистему <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ServiceModel.Configuration.WorkflowRuntimeElement.ValidateOnCreate">
      <summary>Возвращает или задает значение, указывающее, возникнет ли проверка подлинности при создании экземпляра рабочего процесса. </summary>
      <returns>Значение true, если при создании выполняется проверка; в противном случае —false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ServiceModel.Description.DurableOperationAttribute">
      <summary>Задает расширение функциональности локального выполнения метода устойчивой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DurableOperationAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DurableOperationAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DurableOperationAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.DurableOperationAttribute" />.</summary>
      <param name="operationDescription">Не реализовано.</param>
      <param name="bindingParameters">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DurableOperationAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.DurableOperationAttribute" />.</summary>
      <param name="operationDescription">Не реализовано.</param>
      <param name="clientOperation">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DurableOperationAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Реализует расширение функциональности операции на стороне службы.</summary>
      <param name="operationDescription">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.Description.DurableOperationAttribute" />.</param>
      <param name="dispatchOperation">Точка расширяемости для вставки изменений пользовательских служб для этой операции.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance">
      <summary>Возвращает или задает значение, которое указывает, может ли создаваться новый экземпляр службы, если для данной операции получено сообщение активации.Диспетчер считает, что сообщения без присоединенного ИД экземпляра являются сообщениями активации.</summary>
      <returns>Значение true, если новый экземпляр службы может быть создан; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DurableOperationAttribute.CompletesInstance">
      <summary>Возвращает или задает значение, которое указывает, будет ли экземпляр службы выгружен из памяти и удален из хранилища сохраняемости после завершения выполнения операции.</summary>
      <returns>Значение true, если после завершения выполнения операции экземпляр будет выгружен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DurableOperationAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.DurableOperationAttribute" />.</summary>
      <param name="operationDescription">Не реализовано.</param>
    </member>
    <member name="T:System.ServiceModel.Description.DurableServiceAttribute">
      <summary>Задает расширение функциональности внутреннего выполнения реализации контракта устойчивой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DurableServiceAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
      <param name="endpoints">Не реализовано.</param>
      <param name="bindingParameters">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Настраивает среду выполнения службы для поддержки свойств расширения функциональности устойчивой службы, например, задавая параметр <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> для этой службы.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction">
      <summary>Возвращает или задает значение, которое указывает, сохраняется ли состояние экземпляра службы в <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> с использованием той же транзакции, в которой выполняется операция.</summary>
      <returns>Значение true, если состояние экземпляра службы сохраняется с использованием этой же транзакции; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction">
      <summary>Возвращает или задает значение перечисления <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" />, связанного с устойчивой службой.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет правильность настройки всех устойчивых операций службы.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PersistenceProviderBehavior">
      <summary>Определяет расширение функциональности для <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, связанной с <see cref="T:System.ServiceModel.WorkflowServiceHost" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.PersistenceProviderBehavior.#ctor(System.ServiceModel.Persistence.PersistenceProviderFactory)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.PersistenceProviderBehavior" />.</summary>
      <param name="providerFactory">Объект <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, связанный с объектом расширения функциональности.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PersistenceProviderBehavior.#ctor(System.ServiceModel.Persistence.PersistenceProviderFactory,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.PersistenceProviderBehavior" />.</summary>
      <param name="providerFactory">Объект <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, связанный с объектом расширения функциональности.</param>
      <param name="persistenceOperationTimeout">Время ожидания, по истечении которого прерываются операции сохраняемости, выполняемые поставщиками сохраняемости, которые настроены для этого объекта.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PersistenceProviderBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.PersistenceProviderBehavior" />.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
      <param name="endpoints">Не реализовано.</param>
      <param name="bindingParameters">Не реализовано.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ServiceModel.Description.PersistenceProviderBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.PersistenceProviderBehavior" />.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
    </member>
    <member name="P:System.ServiceModel.Description.PersistenceProviderBehavior.PersistenceOperationTimeout">
      <summary>Время ожидания, по истечении которого прерываются операции сохраняемости, выполняемые поставщиками сохраняемости, которые настроены для этого объекта.</summary>
      <returns>Время ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PersistenceProviderBehavior.PersistenceProviderFactory">
      <summary>Объект <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, связанный с объектом расширения функциональности.</summary>
      <returns>Фабрика поставщика.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PersistenceProviderBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.PersistenceProviderBehavior" />.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
    </member>
    <member name="T:System.ServiceModel.Description.UnknownExceptionAction">
      <summary>Определяет, как устойчивая служба будет обрабатывать неизвестные исключения.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.UnknownExceptionAction.TerminateInstance">
      <summary>Служба закроет все каналы и удалит информацию о своем состоянии из хранилища сохраняемости.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.UnknownExceptionAction.AbortInstance">
      <summary>Служба будет немедленно остановлена, а ее существующая информация о состоянии останется в ее хранилище сохраняемости.Любые изменения состояния экземпляра, произведенные во время выполнения операции, вызвавшей неизвестное исключение, будут утрачены.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.WorkflowRuntimeBehavior">
      <summary>Определяет расширение функциональности для среды <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, связанной с <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WorkflowRuntimeBehavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WorkflowRuntimeBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WorkflowRuntimeBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Не реализовано в <see cref="T:System.ServiceModel.Description.WorkflowRuntimeBehavior" />.</summary>
      <param name="serviceDescription">Не реализовано.</param>
      <param name="serviceHostBase">Не реализовано.</param>
      <param name="endpoints">Не реализовано.</param>
      <param name="bindingParameters">Не реализовано.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WorkflowRuntimeBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Настраивает службу рабочего процесса для поддержки расширения функциональности времени выполнения рабочего процесса. </summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WorkflowRuntimeBehavior.CachedInstanceExpiration">
      <summary>Возвращает или задает значение, указывающее время, в течении которого экземпляр рабочего процесса сохраняется в памяти в состоянии простоя, после чего принудительно удаляется из памяти.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, указывающий время, в течении которого экземпляр рабочего процесса сохраняется в памяти в состоянии простоя, после чего принудительно удаляется из памяти.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WorkflowRuntimeBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Проверяет, что служба планирования, использованная для службы рабочего процесса, была добавлена в объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, и что объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> не был запущен до вызова метода <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Open" />.</summary>
      <param name="serviceDescription">Описание службы.</param>
      <param name="serviceHostBase">Узел службы.</param>
      <exception cref="T:System.InvalidOperationException">Зарегистрирована неправильная служба <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WorkflowRuntimeBehavior.WorkflowRuntime">
      <summary>Возвращает <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, связанное с экземпляром <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DurableOperationContext">
      <summary>Предоставляет набор статических методов для получения доступа к связанной информации и функциональным возможностям.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DurableOperationContext.AbortInstance">
      <summary>Удаляет текущий экземпляр устойчивой службы из памяти после завершения операции.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DurableOperationContext.CompleteInstance">
      <summary>Выгружает экземпляр устойчивой службы из памяти и удаляет его из хранилища сохраняемости после завершения операции.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DurableOperationContext.InstanceId">
      <summary>Возвращает ИД службы для данного экземпляра службы.</summary>
      <returns>
        <see cref="T:System.Guid" />, содержащий идентификатор службы.</returns>
    </member>
    <member name="T:System.ServiceModel.Persistence.InstanceLockException">
      <summary>Это исключение предназначено для использования классами-наследниками <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, если операция не может быть выполнена из-за состояния блокировки экземпляра.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="id">Уникальный идентификатор экземпляра исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="id">Уникальный идентификатор экземпляра исключения.</param>
      <param name="innerException">Экземпляр <see cref="T:System.Exception" />, вызвавший текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="id">Уникальный идентификатор экземпляра исключения.</param>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="id">Уникальный идентификатор экземпляра исключения.</param>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр <see cref="T:System.Exception" />, вызвавший текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceLockException" />.</summary>
      <param name="message">Сообщение, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр <see cref="T:System.Exception" />, вызвавший текущее исключение.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в <see cref="T:System.Runtime.Serialization.SerializationInfo" /> информацию об исключении. </summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.InstanceLockException.InstanceId">
      <summary>Уникальный идентификатор экземпляра исключения.</summary>
      <returns>Объект <see cref="T:System.Guid" />, содержащий уникальный идентификатор экземпляра исключения.</returns>
    </member>
    <member name="T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <summary>Это исключение возникает при следующих условиях: операция выполняется с экземпляром устойчивой службы, который был отмечен для завершения, или поставщик сохраняемости, созданный <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, пытается заблокировать, разблокировать или другим образом обработать данные о состоянии, отсутствующие в базе данных.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
      <param name="id">Уникальный идентификатор, связанный с данным экземпляром.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
      <param name="id">Уникальный идентификатор, связанный с данным экземпляром.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее исключение <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />. </summary>
      <param name="id">Уникальный идентификатор, связанный с данным экземпляром.</param>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />. </summary>
      <param name="id">Уникальный идентификатор, связанный с данным экземпляром.</param>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее исключение <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее исключение <see cref="T:System.ServiceModel.Persistence.InstanceNotFoundException" />.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает <see cref="T:system.runtime.serialization.SerializationInfo" /> с информацией об исключении, включая идентификатор <see cref="P:System.ServiceModel.Persistence.InstanceNotFoundException.InstanceId" /> исключения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.InstanceNotFoundException.InstanceId">
      <summary>Уникальный идентификатор, связанный с данным экземпляром.</summary>
      <returns>Объект <see cref="T:System.Guid" />, содержащий уникальный идентификатор экземпляра исключения.</returns>
    </member>
    <member name="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <summary>Абстрактный базовый класс, от которого наследуются все поставщики сохраняемости устойчивых служб, реализующие блокировку.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)">
      <summary>Если реализуется в производном классе, создает новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, настроенный в соответствии с заданным значением идентификации.</summary>
      <param name="id">Уникальный идентификатор, связанный с данным экземпляром поставщика сохраняемости.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для создания сведений о состоянии экземпляра в хранилище сохраняемости с параметрами.Этот метод не разблокирует экземпляр после сохранения сведений о состоянии.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instance">Маркер экземпляра, сведения о состоянии которого сохраняются в хранилище сохраняемости.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для создания сведений о состоянии экземпляра в хранилище сохраняемости с параметрами.Этот метод разблокирует экземпляр после сохранения состояния экземпляра, если параметр <paramref name="unlockInstance" /> имеет значение true.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instance">Маркер экземпляра, сведения о состоянии которого сохраняются в хранилище сохраняемости.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="unlockInstance">Значение true, если экземпляр должен быть разблокирован в хранилище сохраняемости, в противном случае — значение false.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для загрузки экземпляра на основе сведений о состоянии в хранилище сохраняемости с помощью этих параметров.Этот метод не блокирует экземпляр.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для загрузки экземпляра на основе сведений о состоянии в хранилище сохраняемости с помощью этих параметров.Этот метод блокирует экземпляр после загрузки состояния экземпляра, если параметр <paramref name="lockInstance" /> имеет значение true.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="lockInstance">Значение true, если экземпляр должен блокироваться, и значение false в противном случае.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа LoadIfChanged.Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщика сохраняемости из хранилища сохраняемости, и данные о состоянии в хранилище сохраняемости были изменены.Вызов этого метода не блокирует экземпляр в хранилище сохраняемости.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту операцию.</param>
      <param name="instanceToken">Маркер, возвращенный предыдущим вызовом метода Create или Update, который представляет текущее состояние, в котором находится вызывающий объект.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа LoadIfChanged.Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщика сохраняемости из хранилища сохраняемости, и данные о состоянии в хранилище сохраняемости были изменены.Вызов этого метода позволяет указывать, нужно ли блокировать экземпляр в хранилище сохраняемости.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту операцию.</param>
      <param name="instanceToken">Маркер, возвращенный предыдущим вызовом метода Create или Update, который представляет текущее состояние, в котором находится вызывающий объект.</param>
      <param name="lockInstance">Значение true, если экземпляр блокируется в хранилище сохраняемости, в противном случае — значение false.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для разблокирования экземпляра в хранилище сохраняемости.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для обновления сведений о состоянии экземпляра в хранилище сохраняемости с переданными параметрами.Эта операция не разблокирует экземпляр в хранилище сохраняемости.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instance">Маркер экземпляра, сведения о состоянии которого обновляются в хранилище сохраняемости.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии асинхронной операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для обновления сведений о состоянии экземпляра в хранилище сохраняемости с переданными параметрами.Эта операция блокирует экземпляр в хранилище сохраняемости, если параметр <paramref name="unlockInstance" /> имеет значение true.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="instance">Маркер экземпляра, сведения о состоянии которого обновляются в хранилище сохраняемости.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="unlockInstance">Значение true, если экземпляр должен блокироваться после обновления состояния экземпляра в хранилище сохраняемости. В противном случае — значение false.</param>
      <param name="callback">Делегат, принимающий уведомление о завершении операции.</param>
      <param name="state">Сведения о состоянии асинхронной операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
      <summary>Создает сведения о состоянии экземпляра в хранилище сохраняемости, используя параметры, переданные в метод.Этот метод не разблокирует экземпляр в хранилище сохраняемости после сохранения состояния экземпляра.</summary>
      <returns>Сведения о состоянии.</returns>
      <param name="instance">Объект экземпляра, сведения о состоянии которого должны сохраняться в хранилище сохраняемости.</param>
      <param name="timeout">Интервал времени ожидания для выполнения операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
      <summary>Этот метод создает сведения о состоянии экземпляра в хранилище сохраняемости, используя параметры, переданные в метод.Метод разблокирует экземпляр в хранилище экземпляров, если параметр <paramref name="unlockInstance" /> имеет значение true.</summary>
      <returns>Сведения о состоянии.</returns>
      <param name="instance">Объект экземпляра, сведения о состоянии которого сохраняются в хранилище сохраняемости.</param>
      <param name="timeout">Интервал времени ожидания для выполнения операции.</param>
      <param name="unlockInstance">Значение true, если экземпляр должен быть разблокирован в хранилище сохраняемости, в противном случае — значение false.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию для разблокирования экземпляра в хранилище сохраняемости.</summary>
      <param name="result">Результат, возвращаемый операцией разблокирования.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
      <summary>Загружает сведения о состоянии службы из хранилища сохраняемости без блокировки экземпляра.</summary>
      <returns>Сведения о состоянии службы.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
      <summary>Загружает сведения о состоянии службы из хранилища сохраняемости после блокировки экземпляра.</summary>
      <returns>Сведения о состоянии.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту операцию.</param>
      <param name="lockInstance">Значение true, если экземпляр должен блокироваться, и значение false в противном случае.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
      <summary>Загружает сведения о состоянии экземпляра в хранилище сохраняемости, если информация о состоянии изменилась после последней ее загрузки вызывающим.Этот метод также позволяет вызывающему объекту указывать, нужно ли блокировать экземпляр в хранилище сохраняемости.</summary>
      <returns>Значение true, если экземпляр должен быть заблокирован в хранилище сохраняемости по завершении этой операции, в противном случае — значение false.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту операцию.</param>
      <param name="instanceToken">Маркер, который возвращается предыдущим вызовом метода Create или Update и представляет текущее состояние, хранимое в вызывающем объекте.</param>
      <param name="lockInstance">Значение true, если экземпляр должен быть заблокирован в хранилище сохраняемости по завершении этой операции, в противном случае — значение false.</param>
      <param name="instance">Сведения о состоянии экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
      <summary>Загружает сведения о состоянии экземпляра в хранилище сохраняемости, если информация о состоянии изменилась после последней ее загрузки вызывающим.Этот метод не блокирует экземпляр в хранилище сохраняемости.</summary>
      <returns>Значение true, если экземпляр должен быть заблокирован в хранилище сохраняемости по завершении этой операции, в противном случае — значение false.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту операцию.</param>
      <param name="instanceToken">Маркер, который возвращается предыдущим вызовом метода Create или Update и представляет текущее состояние, хранимое в вызывающем объекте.</param>
      <param name="instance">Сведения о фактическом состоянии экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)">
      <summary>Разблокирует экземпляр, идентификатор которого был указан при создании объекта <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> в хранилище сохраняемости.</summary>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает операцию.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
      <summary>При реализации в производном классе обновляет сведения о состоянии экземпляра в хранилище сохраняемости.Этот метод не разблокирует экземпляр после обновления сведений о состоянии экземпляра в хранилище сохраняемости.</summary>
      <returns>Сведения о состоянии экземпляра.</returns>
      <param name="instance">Сведения о состоянии экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает операцию.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
      <summary>При реализации в производном классе обновляет сведения о состоянии экземпляра в хранилище сохраняемости.Этот метод не разблокирует экземпляр после обновления сведений о состоянии экземпляра в хранилище сохраняемости.</summary>
      <returns>Сведения о состоянии экземпляра.</returns>
      <param name="instance">Сведения о состоянии экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает операцию.</param>
      <param name="unlockInstance">Значение true, если экземпляр разблокируется после обновления сведений о состоянии экземпляра, и значение false в противном случае.</param>
    </member>
    <member name="T:System.ServiceModel.Persistence.PersistenceException">
      <summary>Это исключение создается объектом <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> при обнаружении общих ошибок подключения. </summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о создаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, вызвавшее исключение <see cref="T:System.ServiceModel.Persistence.PersistenceException" />. </param>
    </member>
    <member name="T:System.ServiceModel.Persistence.PersistenceProvider">
      <summary>Абстрактный базовый класс, от которого наследуются все поставщики сохраняемости устойчивых служб. </summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</summary>
      <param name="id">Уникальный идентификатор сохраняемых данных о состоянии службы.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа Create.Этап Create наступает при первом создании записей экземпляров службы в хранилище сохраняемости.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа Delete.Этап Delete наступает при окончательном удалении данных о состоянии службы из хранилища сохраняемости.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа Load.Этап Load наступает при загрузке данных о состоянии в поставщик сохраняемости из хранилища сохраняемости.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа LoadIfChanged.Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщика сохраняемости из хранилища сохраняемости, и данные о состоянии в хранилище сохраняемости были изменены.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="instanceToken">Маркер, который возвращается предыдущим вызовом <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> или <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> и представляет текущее состояние, хранимое в вызывающем объекте.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе представляет начало этапа Update.Этап Update наступает при обновлении данных о состоянии службы в хранилище сохраняемости.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />. </returns>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)">
      <summary>При реализации в производном классе создает запись состояния службы в хранилище сохраняемости.</summary>
      <returns>Маркер экземпляра, соответствующий только что сохраненному состоянию.Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</returns>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)">
      <summary>При реализации в производном классе окончательно удаляет информацию о состоянии службы из хранилища сохраняемости.</summary>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)">
      <summary>При реализации в производном классе представляет конец этапа Create.Этап Create наступает при первом создании записей состояния службы в хранилище сохраняемости.</summary>
      <returns>Маркер экземпляра, соответствующий только что сохраненному состоянию.Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</returns>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)">
      <summary>При реализации в производном классе представляет конец этапа Delete.Этап Delete наступает при окончательном удалении данных о состоянии из хранилища сохраняемости.</summary>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)">
      <summary>При реализации в производном классе представляет конец этапа Load.Этап Load наступает при загрузке данных о состоянии в поставщика сохраняемости из хранилища сохраняемости.</summary>
      <returns>Сведения о состоянии службы.</returns>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)">
      <summary>При реализации в производном классе представляет конец этапа LoadIfChanged.Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщик сохраняемости из хранилища сохраняемости, данные о состоянии в хранилище сохраняемости изменены.</summary>
      <returns>Значение true, если в выходном параметре экземпляра задана последняя копия из хранилища сохраняемости, или значение false, если состояние в локальном кэше уже имеет самую последнюю версию.</returns>
      <param name="result">Ссылка на результат операции.</param>
      <param name="instance">Фактическое состояние экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)">
      <summary>Представляет конец этапа Update.Этап Update наступает при обновлении записей состояния службы в хранилище сохраняемости.</summary>
      <returns>Маркер экземпляра, соответствующий только что сохраненному состоянию.Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</returns>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.PersistenceProvider.Id">
      <summary>Представляет объект <see cref="T:System.Guid" />, связанный с данным экземпляром.</summary>
      <returns>Идентификатор GUID, связанный с этим экземпляром.</returns>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)">
      <summary>При реализации в производном классе загружает информацию о состоянии службы из хранилища сохраняемости.</summary>
      <returns>Загруженное состояние экземпляра.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
      <summary>При реализации в производном классе загружает информацию о состоянии службы из хранилища сохраняемости, если эти данные были изменены.</summary>
      <returns>Значение true, если в выходном параметре <paramref name="instance" /> задана последняя копия хранилища сохраняемости, или значение false, если состояние в локальном кэше уже имеет самую последнюю версию.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="instanceToken">Маркер, который возвращается предыдущим вызовом <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> или <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> и представляет текущее состояние, хранимое в вызывающем объекте.</param>
      <param name="instance">Фактическое состояние экземпляра.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)">
      <summary>При реализации в производном классе обновляет записи состояния службы в хранилище сохраняемости.</summary>
      <returns>Маркер экземпляра, соответствующий только что сохраненному состоянию.Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</returns>
      <param name="instance">Фактическое состояние экземпляра.</param>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <summary>Абстрактный класс, от которого должны наследоваться все поставщики сохраняемости устойчивых служб.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProviderFactory.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.PersistenceProviderFactory.CreateProvider(System.Guid)">
      <summary>Если реализован в производном классе, инициализирует новый экземпляр <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</returns>
      <param name="id">Уникальный идентификатор создаваемого поставщика сохраняемости.</param>
    </member>
    <member name="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <summary>Предоставляемая системой реализация <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, используемая для создания экземпляра <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, использующего базу данных SQL для хранения сведений о сохраняемом состоянии службы.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной коллекцией параметров.</summary>
      <param name="parameters">Коллекция параметров, используемых новой фабрикой поставщика сохраняемости.Допустимые параметры: lockTimeout, connectionStringName и serializeAsText.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой соединения.</summary>
      <param name="connectionString">Параметры соединения для нового экземпляра поставщика сохраняемости.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой соединения и параметрами serializeAsText.</summary>
      <param name="connectionString">Параметры соединения для нового экземпляра поставщика сохраняемости.</param>
      <param name="serializeAsText">Задает, будут ли данные сериализованы как текст или как двоичные данные.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой соединения, параметрами serializeAsText и lockTimeout.</summary>
      <param name="connectionString">Параметры соединения для нового экземпляра фабрики поставщика сохраняемости.</param>
      <param name="serializeAsText">Задает, будут ли данные сериализованы как текст или как двоичные данные.</param>
      <param name="lockTimeout">Время ожидания для блокировки владения.Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.Значение времени ожидания TimeSpan.Zero означает, что блокировка не используется.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
      <summary>Возвращает параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</summary>
      <returns>Параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</returns>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, использующий в качестве хранилища сохраняемости базу данных SQL.</summary>
      <returns>Созданный новый объект <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</returns>
      <param name="id">Уникальный идентификатор создаваемого поставщика сохраняемости.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
      <summary>Возвращает значение времени ожидания по умолчанию, используемое при закрытии поставщиков сохраняемости, созданных с помощью этой фабрики.</summary>
      <returns>Значение времени ожидания по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
      <summary>Возвращает значение времени ожидания по умолчанию, используемое при открытии поставщика сохраняемости.</summary>
      <returns>Значение времени ожидания по умолчанию.</returns>
    </member>
    <member name="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
      <summary>Значение времени ожидания для владения блокировкой, используемое экземплярами поставщика сохраняемости, созданными этим экземпляром.Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.</summary>
      <returns>Значение времени ожидания для владения блокировкой.</returns>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
      <summary>Представляет этап прерывания.</summary>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Представляет начало этапа Close.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Представляет начало этапа Open.</summary>
      <returns>Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
      <summary>Представляет этап Close.</summary>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
      <summary>Представляет конец этапа Close.</summary>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Представляет конец этапа Open.</summary>
      <param name="result">Ссылка на результат операции.</param>
    </member>
    <member name="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
      <summary>Представляет этап Open.</summary>
      <param name="timeout">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</param>
    </member>
    <member name="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
      <summary>Указывает способ сериализации данных в поставщиках сохраняемости, созданных этой фабрикой: как текст или как двоичные данные.</summary>
      <returns>Значение true, если данные службы проходят сериализацию как текст, и значение false в противном случае.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ChannelToken">
      <summary>Используется действием <see cref="T:System.Workflow.Activities.SendActivity" />, чтобы связать себя с каналом клиентской стороны.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ChannelToken.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ChannelToken" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.ChannelToken.EndpointName">
      <summary>Возвращает или задает настраиваемый адрес, используемый для взаимодействия со службой.</summary>
      <returns>Строка, представляющая настраиваемый адрес, используемый для взаимодействия со службой.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ChannelToken.Name">
      <summary>Имя данного экземпляра <see cref="T:System.Workflow.Activities.ChannelToken" />.</summary>
      <returns>Строка, представляющая имя данного экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ChannelToken.OwnerActivityName">
      <summary>Имя действия <see cref="T:System.Workflow.ComponentModel.Activity" />, связанного с данным экземпляром.</summary>
      <returns>Строка, представляющая имя действия, связанного с данным экземпляром.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ContextToken">
      <summary>Представляет маркер, с помощью которого можно задать контекст, который следует использовать для корреляции обмена данными между действием <see cref="T:System.Workflow.Activities.ReceiveActivity" /> и клиентом, с которым взаимодействует это действие.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ContextToken.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ContextToken" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ContextToken.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ContextToken" />.</summary>
      <param name="name">Имя нового экземпляра.</param>
    </member>
    <member name="P:System.Workflow.Activities.ContextToken.Name">
      <summary>Возвращает или задает имя экземпляра.</summary>
      <returns>Строка, представляющая имя данного экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ContextToken.OwnerActivityName">
      <summary>Возвращает или задает имя действия <see cref="T:System.Workflow.ComponentModel.Activity" />, связанного с данным маркером контекста.</summary>
      <returns>Строка, представляющая имя действия, связанного с данным маркером контекста.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ContextToken.RootContextName">
      <summary>Постоянная строка, представляющая корневой контекст.Значение этой строки — "(RootContext)".</summary>
    </member>
    <member name="T:System.Workflow.Activities.OperationInfo">
      <summary>Представляет информацию для операции контракта, определенной в службе рабочего процесса.</summary>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationInfo" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfo.Clone">
      <summary>Создает копию объекта.</summary>
      <returns>Копия объекта <see cref="T:System.Workflow.Activities.OperationInfo" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfo.ContractName">
      <summary>Возвращает или задает полное имя контракта, который определяет эту операцию.</summary>
      <returns>Строка, представляющая полное имя контракта, который определяет операцию.</returns>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfo.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра объекта.</summary>
      <returns>true, если текущий объект <see cref="T:System.Workflow.Activities.OperationInfo" /> и объект <paramref name="obj" /> равны; в противном случае — false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Workflow.Activities.OperationInfo" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfo.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Workflow.Activities.OperationInfo" />. </summary>
      <returns>Хэш-код для данного экземпляра.</returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfo.HasProtectionLevel">
      <summary>Возвращает сведения о том, определен ли для операции объект <see cref="T:System.Net.Security.ProtectionLevel" />. </summary>
      <returns>Логическое значение, указывающее, связан ли с операцией объект <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfo.IsOneWay">
      <summary>Возвращает или задает сведения для операции, чтобы указать, что связь между службой и клиентом является односторонней.</summary>
      <returns>true, если операция поддерживает одностороннюю связь; в противном случае — false. </returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfo.Parameters">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Workflow.Activities.OperationParameterInfo" />, представляющих определения параметров, используемые операцией.</summary>
      <returns>Коллекция объектов <see cref="T:System.Workflow.Activities.OperationParameterInfo" />, представляющих определения параметров, используемые операцией, когда она вызвана клиентом.</returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfo.ProtectionLevel">
      <summary>Возвращает или задает объект <see cref="T:System.Net.Security.ProtectionLevel" /> операции.</summary>
      <returns>Объект <see cref="T:System.Net.Security.ProtectionLevel" />, используемый операцией.</returns>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfo.ToString">
      <summary>Возвращает строку, представляющую данный экземпляр.</summary>
      <returns>Строка, представляющая данный экземпляр.</returns>
    </member>
    <member name="T:System.Workflow.Activities.OperationInfoBase">
      <summary>Базовый класс, который служит для хранения информации для операции контракта, определенной в службе рабочего процесса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.#ctor">
      <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationInfoBase" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.Clone">
      <summary>При реализации в производном классе создает глубокую копию экземпляра <see cref="T:System.Workflow.Activities.OperationInfoBase" />.</summary>
      <returns>Копия объекта <see cref="T:System.Workflow.Activities.OperationInfoBase" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)">
      <summary>Определяет, равен ли указанный экземпляр <see cref="T:System.object" /> текущему экземпляру.</summary>
      <returns>Значение True, если объект <paramref name="obj" /> равен текущему объекту, в противном случае значение False.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetContractFullName(System.IServiceProvider)">
      <summary>Возвращает полное имя контракта, который реализует эту операцию. </summary>
      <returns>Строка, представляющая полное имя контракта, который реализует эту операцию.</returns>
      <param name="provider">Поставщик услуг, связанный с данной операцией.</param>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetContractType(System.IServiceProvider)">
      <summary>Возвращает тип контракта, связанного с данной операцией.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип контракта, связанного с данной операцией.</returns>
      <param name="provider">Поставщик услуг, связанный с данной операцией.</param>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetHashCode">
      <summary>Создает число, соответствующее значению объекта, для обеспечения возможности использования хэш-таблицы.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее хэш-код объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetIsOneWay(System.IServiceProvider)">
      <summary>Значение true, если операция является односторонней, значение false, если операция является двусторонней.</summary>
      <returns>Значение true, если операция является односторонней, значение false, если операция является двусторонней.</returns>
      <param name="provider">Поставщик услуг, связанный с данной операцией.  </param>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetMethodInfo(System.IServiceProvider)">
      <summary>Возвращает объект <see cref="T:System.Reflection.MethodInfo" />, связанный с операцией.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, содержащий сведения об операции.</returns>
      <param name="provider">Поставщик услуг, связанный с данной операцией.  </param>
    </member>
    <member name="M:System.Workflow.Activities.OperationInfoBase.GetParameters(System.IServiceProvider)">
      <summary>Возвращает коллекцию параметров, связанных с операцией.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />, содержащий сведения о параметрах операции.</returns>
      <param name="provider">Поставщик услуг, связанный с данной операцией.</param>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfoBase.Name">
      <summary>Если реализован в производном классе, возвращает или задает имя, связанное с данным экземпляром.</summary>
      <returns>Строка, представляющая имя объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName">
      <summary>Возвращает или задает имя пользователя, связанное с контекстом безопасности операции.</summary>
      <returns>Строка, представляющая имя пользователя, связанное с контекстом безопасности операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole">
      <summary>Возвращает или задает роль пользователя (например,Администратор), связанную с контекстом безопасности операции.</summary>
      <returns>Строка, представляющая роль пользователя, связанную с контекстом безопасности операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.OperationParameterInfo">
      <summary>Содержит сведения о параметре операции.  </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfo.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</summary>
      <param name="parameterName">Представляет имя параметра.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.Attributes">
      <summary>Возвращает или задает атрибуты параметра связанной операции.</summary>
      <returns>Атрибуты <see cref="T:System.Reflection.ParameterAttributes" /> параметра связанной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.OperationParameterInfo.AttributesProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.OperationParameterInfo.Attributes" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfo.Clone">
      <summary>Создает неполную копию экземпляра <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</summary>
      <returns>Копия объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfo.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра <see cref="T:System.Object" />.</summary>
      <returns>Значение true, если объект <paramref name="obj" /> равен текущему объекту, в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, который требуется сравнить с текущим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfo.GetHashCode">
      <summary>Создает число, соответствующее значению объекта, для обеспечения возможности использования хэш-таблицы.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее хэш-код объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.IsIn">
      <summary>Значение true, если параметр связанной операции является параметром In, в противном случае — значение false.</summary>
      <returns>Значение true, если параметр связанной операции является параметром In, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.IsLcid">
      <summary>Значение true, если параметр связанной операции является кодом языка, в противном случае — значение false.</summary>
      <returns>Значение true, если параметр связанной операции является кодом языка, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.IsOptional">
      <summary>Значение true, если параметр связанной операции является необязательным, в противном случае — значение false.</summary>
      <returns>Значение true, если параметр связанной операции является необязательным, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.IsOut">
      <summary>Значение true, если параметр связанной операции является параметром Out, в противном случае — значение false.</summary>
      <returns>Значение true, если параметр связанной операции является параметром Out, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.IsRetval">
      <summary>Значение true, если параметр связанной операции является возвращаемым значением операции, в противном случае — значение false.</summary>
      <returns>Значение true, если параметр связанной операции является возвращаемым значением операции, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.Name">
      <summary>Возвращает или задает имя параметра связанной операции.</summary>
      <returns>Строка, представляющая имя параметра связанной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.OperationParameterInfo.NameProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.OperationParameterInfo.Name" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.ParameterType">
      <summary>Возвращает или задает тип параметра связанной операции.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип параметра связанной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.OperationParameterInfo.ParameterTypeProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.OperationParameterInfo.ParameterType" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfo.Position">
      <summary>Возвращает или задает позицию сигнатуры параметра связанной операции.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее позицию сигнатуры параметра связанной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.OperationParameterInfo.PositionProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.OperationParameterInfo.Position" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.OperationParameterInfoCollection">
      <summary>Коллекция объектов <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <param name="owner">Объект <see cref="T:System.Workflow.Activities.OperationInfoBase" />, использующий эту коллекцию, чтобы определить параметры операции службы, представляемой этим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)">
      <summary>Добавляет объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> в конец коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <param name="item">Добавляемый объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.Clear">
      <summary>Удаляет из объекта <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" /> все элементы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)">
      <summary>Определяет, входит ли элемент в коллекцию <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <returns>Принимает значение true, если объект <paramref name="item" /> найден в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />, и значение false — в противном случае.</returns>
      <param name="item">Искомый элемент. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.Count">
      <summary>Возвращает число элементов, содержащихся в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее число элементов в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию по коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />. </summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может выполнять итерацию по коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)">
      <summary>Возвращает отсчитываемый от нуля индекс первого вхождения объекта <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <returns>Значение <see cref="T:System.Int32" />, которое представляет отсчитываемый от нуля индекс первого вхождения объекта <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</returns>
      <param name="item">Объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" />, который требуется найти в коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)">
      <summary>Вставляет объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> в коллекцию <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</param>
      <param name="item">Вставляемый объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.В C# это свойство является индексатором класса <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" />, представляющий элемент по указанному индексу.</returns>
      <param name="index">Индекс запрошенного элемента в массиве.</param>
    </member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.OperationParameterInfo" />, представляющий элемент с указанным ключом.</returns>
      <param name="key">Значение ключа запрошенного элемента.</param>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)">
      <summary>Удаляет первое вхождение конкретного объекта <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> из коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <returns>Возвращает значение true, если элемент был успешно удален, и значение false — в противном случае.</returns>
      <param name="item">Интерфейс <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> для удаления.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)">
      <summary>Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Workflow.Activities.OperationParameterInfoCollection" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого объекта <see cref="T:System.Workflow.Activities.OperationParameterInfo" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#Add(System.Workflow.Activities.OperationParameterInfo)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#Clear"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#Contains(System.Workflow.Activities.OperationParameterInfo)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#Count"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{T}#Remove(System.Workflow.Activities.OperationParameterInfo)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{T}#IndexOf(System.Workflow.Activities.OperationParameterInfo)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{T}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{T}#Item(System.Int32)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)"></member>
    <member name="T:System.Workflow.Activities.OperationValidationEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.OperationValidationEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.OperationValidationEventArgs" />.</summary>
      <param name="claimSets">Коллекция <see cref="T:System.IdentityModel.Claims.ClaimSet" /> объектов, содержащая утверждения, добавленные в контекст авторизации операции.</param>
    </member>
    <member name="P:System.Workflow.Activities.OperationValidationEventArgs.ClaimSets">
      <summary>Коллекция <see cref="T:System.IdentityModel.Claims.ClaimSet" /> объектов, содержащая утверждения, добавленные в контекст авторизации операции.</summary>
      <returns>Коллекция <see cref="T:System.IdentityModel.Claims.ClaimSet" /> объектов, содержащая утверждения, добавленные в контекст авторизации операции.</returns>
    </member>
    <member name="P:System.Workflow.Activities.OperationValidationEventArgs.IsValid">
      <summary>Значение true, если операция допустима, в противном случае — значение false.</summary>
      <returns>Значение true, если операция допустима, в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Workflow.Activities.ReceiveActivity">
      <summary>Действие службы, реализующее операцию, которая определяется контрактом службы .</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ReceiveActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ReceiveActivity" /> с инициализацией свойства <see cref="P:System.Workflow.ComponentModel.Activity.Name" />.</summary>
      <param name="name">Имя, которое нужно присвоить экземпляру действия.</param>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance">
      <summary>Возвращает или задает значение, которое определяет, вызывает ли операция создание нового экземпляра службы рабочего процесса.</summary>
      <returns>Значение true, если создается новый экземпляр рабочего процесса, в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.Context">
      <summary>Возвращает сведения контекста для данного действия.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий сведения контекста для данного действия.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.ContextToken">
      <summary>Представляет маркер, с помощью которого можно задать контекст, который следует использовать для корреляции обмена данными между действием <see cref="T:System.Workflow.Activities.ReceiveActivity" /> и клиентом, с которым взаимодействует это действие.</summary>
      <returns>Маркер <see cref="T:System.Workflow.Activities.ContextToken" />, который можно использовать для корреляции.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.FaultMessage">
      <summary>Исключение, возвращаемое, когда завершается выполнение действия получения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultException" />, содержащий текст и подробные сведения сообщения об ошибке.</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)">
      <summary>Статический метод, возвращающий сведения контекста для заданного экземпляра действия и маркера контекста.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />.</returns>
      <param name="activity">Экземпляр действия, для которого запрашиваются сведения контекста.</param>
      <param name="contextName">Имя маркера контекста, используемого действием.</param>
      <param name="ownerActivityName">Имя действия-владельца.</param>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)">
      <summary>Статический метод, возвращающий сведения контекста для заданного экземпляра действия и маркера контекста.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />.</returns>
      <param name="activity">Экземпляр действия, для которого запрашиваются сведения контекста.</param>
      <param name="contextToken">Маркер контекста, используемый действием.</param>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)">
      <summary>Статический метод, возвращающий сведения контекста для корневого контекста, связанного с заданным экземпляром действия.Сведения контекста используются для взаимодействия между ведущим приложением и службой рабочего процесса.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />, представляющие сведения контекста для корневого контекста.Если не принимать во внимание логику создания пользовательских экземпляров, то получение сообщений, вызывающих создание новых экземпляров, происходит в корневом контексте.</returns>
      <param name="activity">Экземпляр дочернего действия.</param>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)">
      <summary>Возвращает атрибуты <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> для службы, реализованной с помощью действия <see cref="T:System.Workflow.Activities.ReceiveActivity" />.Эти атрибуты включают такие элементы, как <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />, а также сведения о том, нужно ли включать информацию об исключениях во все ошибки, возвращаемые действием <see cref="T:System.Workflow.Activities.ReceiveActivity" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, представляющий объект <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" />, который содержит данные атрибута службы.</returns>
      <param name="dependencyObject">Объект, из которого следует извлекать атрибуты службы.</param>
    </member>
    <member name="E:System.Workflow.Activities.ReceiveActivity.OperationValidation">
      <summary>Происходит при получении сообщения для операции, если требуется проверка.</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязываемых параметров, обнаруженных в списке формальных параметров службы.</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> параметров, к которым требуется выполнить привязку.</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo">
      <summary>Определяет контракт и операцию службы, которые реализует действие <see cref="T:System.Workflow.Activities.ReceiveActivity" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.OperationInfoBase" />, содержащий имя контракта, тип контракта, имя операции (которое может отличаться от имени метода), сведения о том, является ли операция односторонней, а также данные метода, включая параметры, касающиеся операции.</returns>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)">
      <summary>Задает атрибуты для службы, реализованной с помощью действия <see cref="T:System.Workflow.Activities.ReceiveActivity" />.Эти атрибуты включают такие элементы, как <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, а также сведения о том, нужно ли включать информацию об исключениях во все ошибки, возвращаемые действием <see cref="T:System.Workflow.Activities.ReceiveActivity" />.</summary>
      <param name="dependencyObject">Объект, к которому следует применить атрибуты службы.</param>
      <param name="value">Объект <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" />, содержащий данные атрибутов службы, которые требуется применить.</param>
    </member>
    <member name="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>Возвращает имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных.</summary>
      <returns>Имя очереди <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, в которой действие ожидает поступления данных. </returns>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Создает подписку действия <see cref="T:System.Workflow.Activities.ReceiveActivity" /> на событие.</summary>
      <param name="parentContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.Activities.ReceiveActivity" />.</param>
      <param name="parentEventHandler">Обработчик <see cref="T:System.EventHandler" />, который обрабатывает это событие.Этот обработчик событий принадлежит родительскому действию.</param>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Отменяет подписку действия <see cref="T:System.Workflow.ComponentModel.Activity" /> на событие.</summary>
      <param name="parentContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, представляющий среду выполнения действия <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />.</param>
      <param name="parentEventHandler">Обработчик <see cref="T:System.EventHandler" />, который обрабатывает это событие.Этот обработчик событий принадлежит родительскому действию.</param>
    </member>
    <member name="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)"></member>
    <member name="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />.</summary>
    </member>
    <member name="T:System.Workflow.Activities.SendActivity">
      <summary>Действие клиента, моделирующее синхронный вызов операции службы .</summary>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SendActivity" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SendActivity" /> с заданным свойством name.</summary>
      <param name="name">Значение, присваиваемое свойству <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> при инициализации действия.</param>
    </member>
    <member name="E:System.Workflow.Activities.SendActivity.AfterResponse">
      <summary>Происходит после получения ответа от службы.</summary>
    </member>
    <member name="F:System.Workflow.Activities.SendActivity.AfterResponseEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />.</summary>
    </member>
    <member name="E:System.Workflow.Activities.SendActivity.BeforeSend">
      <summary>Происходит перед тем, как действие <see cref="T:System.Workflow.Activities.SendActivity" /> отправляет сообщение в службу.</summary>
    </member>
    <member name="F:System.Workflow.Activities.SendActivity.BeforeSendEvent">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.SendActivity.ChannelToken">
      <summary>Маркер <see cref="T:System.Workflow.Activities.ChannelToken" />, используемый действием <see cref="T:System.Workflow.Activities.SendActivity" />, чтобы связать себя с клиентским каналом.</summary>
      <returns>Маркер <see cref="T:System.Workflow.Activities.ChannelToken" />, определяющий клиентский канал, используемый действием <see cref="T:System.Workflow.Activities.SendActivity" /> для взаимодействия со службой.</returns>
    </member>
    <member name="P:System.Workflow.Activities.SendActivity.Context">
      <summary>Возвращает словарь, содержащий контекст, используемый для взаимодействия между клиентом и службой, с которой он взаимодействует, включая, например, данные идентификации для корреляции.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Workflow.Activities.SendActivity.CustomAddress">
      <summary>Возвращает или задает настраиваемый адрес, используемый для взаимодействия со службой.</summary>
      <returns>Строковое значение, определяющее адрес, по которому служба ожидает передачу данных.</returns>
    </member>
    <member name="F:System.Workflow.Activities.SendActivity.CustomAddressProperty">
      <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> для свойства <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)">
      <summary>Статический метод, возвращающий сведения контекста, заданный экземпляр действия, имя конечной точки, используемое этим действием, имя действия-владельца и объект <see cref="T:System.Type" />, представляющий тип контракта.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />.</returns>
      <param name="activity">Действие, для которого требуются сведения контекста.</param>
      <param name="endpointName">Имя конечной точки, используемой для корреляции со службой.</param>
      <param name="ownerActivityName">Имя действия-владельца.</param>
      <param name="contractType">Значение <see cref="T:System.Type" /> контракта, реализуемого службой.</param>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)">
      <summary>Возвращает или задает сведения контекста для операции отправки.</summary>
      <returns>Коллекция на основе словаря, содержащая ключи <see cref="T:System.Xml.XmlQualifiedName" /> и связанные с ними значения <see cref="T:System.String" />.</returns>
      <param name="activity">Действие, для которого требуются сведения контекста.</param>
      <param name="endpoint">Сведения о конечной точке для корреляции со службой.</param>
      <param name="contractType">Значение <see cref="T:System.Type" /> контракта, реализуемого службой.</param>
    </member>
    <member name="P:System.Workflow.Activities.SendActivity.ParameterBindings">
      <summary>Возвращает коллекцию привязываемых параметров, обнаруженных в списке формальных параметров службы .</summary>
      <returns>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> параметров, к которым требуется выполнить привязку.</returns>
    </member>
    <member name="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName">
      <summary>Имя свойства, используемое для возвращаемого значения, передаваемого службой, с которой взаимодействует действие SendActivity.</summary>
    </member>
    <member name="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo">
      <summary>Определяет контракт и операцию службы, с которой взаимодействует действие SendActivity.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.TypedOperationInfo" />, содержащий имя контракта, тип контракта, имя операции (которое может отличаться от фактического имени метода), сведения о том, является ли операция односторонней, а также данные метода, включая параметры, касающиеся операции.</returns>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Статический метод, устанавливающий сведения контекста для действия <see cref="T:System.Workflow.Activities.SendActivity" />, заданный экземпляр действия, имя конечной точки, используемое этим действием, имя действия-владельца, объект <see cref="T:System.Type" />, представляющий тип контракта, и сами сведения контекста.</summary>
      <param name="activity">Экземпляр действия, с которым должны быть связаны сведения контекста.</param>
      <param name="endpointName">Имя конечной точки, используемой для корреляции со службой.</param>
      <param name="ownerActivityName">Имя действия-владельца.</param>
      <param name="contractType">Значение <see cref="T:System.Type" /> контракта, реализуемого службой.</param>
      <param name="context">Задаваемые сведения контекста.</param>
    </member>
    <member name="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Статический метод, устанавливающий сведения контекста для действия <see cref="T:System.Workflow.Activities.SendActivity" />, заданный экземпляр действия, конечную точку, используемую этим действием, объект <see cref="T:System.Type" />, представляющий тип контракта, и сами сведения контекста.</summary>
      <param name="activity">Экземпляр действия, с которым должны быть связаны сведения контекста.</param>
      <param name="endpoint">Конечная точка, используемая для корреляции со службой.</param>
      <param name="contractType">Значение <see cref="T:System.Type" /> контракта, реализуемого службой.</param>
      <param name="context">Задаваемые сведения контекста.</param>
    </member>
    <member name="T:System.Workflow.Activities.SendActivityEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> и <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.SendActivityEventArgs.#ctor(System.Workflow.Activities.SendActivity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.SendActivityEventArgs" />.</summary>
      <param name="sendActivity">Объект T:System.Workflow.Activities.SendActivity, вызвавший событие, связанное с данным классом <see cref="T:System.Workflow.Activities.SendActivityEventArgs" />.</param>
    </member>
    <member name="P:System.Workflow.Activities.SendActivityEventArgs.SendActivity">
      <summary>Возвращает объект <see cref="T:System.Workflow.Activities.SendActivity" />, вызвавший событие, связанное с данным классом <see cref="T:System.Workflow.Activities.SendActivityEventArgs" />.</summary>
      <returns>Объект <see cref="T:System.Workflow.Activities.SendActivity" />, вызвавший событие, связанное с данным классом <see cref="T:System.Workflow.Activities.SendActivityEventArgs" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.TypedOperationInfo">
      <summary>Объект <see cref="T:System.Workflow.Activities.OperationInfo" />, наследуемый от объекта <see cref="T:System.Workflow.Activities.OperationInfoBase" />, используемого для связанных с действиями <see cref="T:System.Workflow.Activities.SendActivity" /> и <see cref="T:System.Workflow.Activities.ReceiveActivity" /> сведений об операциях службы.Обратите внимание, что эти сведения об операциях должны быть основаны на типе среды CLR.</summary>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</summary>
      <param name="contractType">Тип связанного интерфейса контракта.</param>
      <param name="operationName">Имя метода связанной операции службы.</param>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.Clone">
      <summary>Создает копию текущего объекта.</summary>
      <returns>Копия объекта.</returns>
    </member>
    <member name="P:System.Workflow.Activities.TypedOperationInfo.ContractType">
      <summary>Тип связанного интерфейса контракта.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип связанного интерфейса контракта.</returns>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</summary>
      <returns>Значение true, если экземпляры объектов равны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с текущим объектом <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</param>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.GetHashCode">
      <summary>Формирует число, соответствующее значению объекта, обеспечивающего возможность использования хэш-таблицы.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее хэш-код объекта.</returns>
    </member>
    <member name="M:System.Workflow.Activities.TypedOperationInfo.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, представляющую текущий объект <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</summary>
      <returns>Строка <see cref="T:System.String" />, представляющая текущий объект <see cref="T:System.Workflow.Activities.TypedOperationInfo" />.</returns>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowServiceAttributes">
      <summary>Выполняет построение расширения функциональности для службы рабочего процесса, к которой относится.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" />.</summary>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode">
      <summary>Возвращает или задает перечисление <see cref="T:System.ServiceModel.AddressFilterMode" />, используемое диспетчером для маршрутизации входящих сообщений на правильную конечную точку.</summary>
      <returns>Значение перечисления <see cref="T:System.ServiceModel.AddressFilterMode" />, используемое диспетчером для маршрутизации входящих сообщений на правильную конечную точку.</returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName">
      <summary>Возвращает или задает значение, используемое для поиска элемента службы в файле конфигурации приложения.</summary>
      <returns>Значение, которое требуется найти в файле конфигурации. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.IgnoreExtensionDataObject">
      <summary>Возвращает или задает значение, которое указывает, требуется ли передавать по линии связи неизвестные данные сериализации.</summary>
      <returns>true, если неизвестные данные сериализации никогда не передаются; в противном случае — false. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults">
      <summary>Возвращает или задает значение, указывающее, что общие необработанные исключения выполнения должны преобразовываться в исключения <see cref="T:System.ServiceModel.FaultException" /> типа <see cref="T:System.ServiceModel.ExceptionDetail" /> и отправляться как сообщения об ошибке.Задавайте значение true только во время разработки для устранения неполадок службы.</summary>
      <returns>true, если необработанные исключения должны возвращаться в виде ошибок SOAP; в противном случае — false. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.MaxItemsInObjectGraph">
      <summary>Возвращает или задает максимальное количество элементов, допустимое в сериализованном объекте. </summary>
      <returns>Максимальное количество элементов, разрешенное в объекте. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.Name">
      <summary>Возвращает или задает значение атрибута имени в элементе службы в языке WSDL.</summary>
      <returns>Значение свойства Name. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.Namespace">
      <summary>Возвращает или задает значение целевого пространства имен для службы в языке WSDL. </summary>
      <returns>Значение свойства Namespace.</returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.UseSynchronizationContext">
      <summary>Возвращает или задает значение, определяющее, следует ли использовать текущий контекст синхронизации для выбора потока исполнения. </summary>
      <returns>true, если все вызовы службы должны запускаться в потоке, указанном контекстом <see cref="T:System.Threading.SynchronizationContext" />; в противном случае — false. </returns>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowServiceAttributes.ValidateMustUnderstand">
      <summary>Возвращает или задает значение, определяющее, кем выполняется принудительная обработка заголовка SOAP MustUnderstand: системой или приложением. </summary>
      <returns>true, если обработка заголовка SOAP MustUnderstand должна выполняться системой; в противном случае — false, что означает, что эта обработка выполняется приложением. </returns>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator">
      <summary>Проверяющий элемент управления свойства, используемый свойством <see cref="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" />.</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Проверяет свойство <see cref="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" /> и возвращает коллекцию объектов <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />, представляющих результаты проверки.</returns>
      <param name="manager">Диспетчер проверки, связанный с проверкой.</param>
      <param name="obj">Параметр, который необходимо проверить.</param>
    </member>
    <member name="T:System.Workflow.Runtime.Hosting.ChannelManagerService">
      <summary>Обеспечивает функциональные возможности для создания клиентских каналов, кэширования каналов и фабрик каналов.</summary>
    </member>
    <member name="M:System.Workflow.Runtime.Hosting.ChannelManagerService.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.ChannelManagerService" />.</summary>
    </member>
    <member name="M:System.Workflow.Runtime.Hosting.ChannelManagerService.#ctor(System.Collections.Generic.IList{System.ServiceModel.Description.ServiceEndpoint})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.ChannelManagerService" />.</summary>
      <param name="endpoints">Коллекция конечных точек службы.</param>
    </member>
    <member name="M:System.Workflow.Runtime.Hosting.ChannelManagerService.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.ChannelManagerService" />.</summary>
      <param name="parameters">Параметры конфигурации для службы.</param>
    </member>
    <member name="M:System.Workflow.Runtime.Hosting.ChannelManagerService.#ctor(System.ServiceModel.Channels.ChannelPoolSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.ChannelManagerService" />.</summary>
      <param name="settings">Параметры для квот для пула каналов, управляемых этой службой. </param>
    </member>
    <member name="M:System.Workflow.Runtime.Hosting.ChannelManagerService.#ctor(System.ServiceModel.Channels.ChannelPoolSettings,System.Collections.Generic.IList{System.ServiceModel.Description.ServiceEndpoint})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.ChannelManagerService" />.</summary>
      <param name="settings">Параметры для квот для пула каналов, управляемых этой службой.</param>
      <param name="endpoints">Коллекция конечных точек службы.</param>
    </member>
  </members>
</doc>