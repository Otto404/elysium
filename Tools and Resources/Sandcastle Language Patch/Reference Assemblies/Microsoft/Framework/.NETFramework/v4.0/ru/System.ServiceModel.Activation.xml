<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Activation</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ServiceHostingEnvironment">
      <summary>Предоставляет информацию о текущей среде размещения, в которой работают службы . </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled">
      <summary>Возвращает значение, указывающее, работает ли текущая служба в контексте конвейера приложения HTTP ASP.NET.</summary>
      <returns>Значение true, если для текущего домена приложения AppDomain включен режим совместимости ASP.NET; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostingEnvironment.EnsureServiceAvailable(System.String)">
      <summary>Обеспечивает активацию службы по предоставленному виртуальному пути.</summary>
      <param name="virtualPath">Виртуальный путь к службе.</param>
      <exception cref="T:System.ServiceModel.EndpointNotFoundException">Служба по указанному виртуальному пути не найдена.</exception>
      <exception cref="T:System.ServiceModel.ServiceActivationException">Ошибка активации службы.</exception>
      <exception cref="T:System.InvalidOperationException">Служба не работает в среде размещения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="virtualPath" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualPath" /> является абсолютным универсальным кодом ресурса либо недействителен.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostingEnvironment.MultipleSiteBindingsEnabled">
      <summary>Возвращает или задает значение, указывающее, разрешено ли для узла службы наличие нескольких привязок для узла.</summary>
      <returns>Значение true, если наличие нескольких привязок для узла разрешено; значение false — в противном случае.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.HostedTransportConfiguration">
      <summary>Обеспечивает относящуюся к транспорту конфигурацию для реализаций транспорта, размещенных в службе активации Windows (WAS).</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.HostedTransportConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.HostedTransportConfiguration" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)">
      <summary>При переопределении в производном классе получает базовый адрес узла.</summary>
      <returns>
        <see cref="T:System.Uri" />, содержащий базовый адрес узла.</returns>
      <param name="virtualPath">Виртуальный путь к службе.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceActivationBuildProviderAttribute">
      <summary>Задает поставщик построения, используемый для документов XAML на сервере.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceActivationBuildProviderAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceActivationBuildProviderAttribute" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceBuildProvider">
      <summary>Определяет набор свойств и методов для создания исходного кода в среде построения ASP.NET.Этот класс  является реализацией класса <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceBuildProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceBuildProvider" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Activation.ServiceBuildProvider.CodeCompilerType">
      <summary>Представляет тип компилятора, используемый поставщиком построения для создания исходного кода для пользовательского типа файлов.</summary>
      <returns>Тип компилятора, доступный только для чтения, представляющий настройки генератора кода, компилятора кода и компилятора, используемые для сборки исходного кода для виртуального пути.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Формирует исходный код для виртуального пути поставщика компоновки и добавляет исходный код в заданный построитель сборок.</summary>
      <param name="assemblyBuilder">Построитель сборок, который ссылается на исходный код, созданный поставщиком компоновки.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceBuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)">
      <summary>Создает строку, которая должна быть сохранена в скомпилированной сборке.</summary>
      <returns>Строка, которая должна быть сохранена в среде разработки.</returns>
      <param name="results">Результат компиляции для виртуального пути поставщика компоновки.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceBuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)">
      <summary>Возвращает значение, указывающее необходимые действия при создании виртуального пути.</summary>
      <returns>Действия, которые должны быть выполнены после построения виртуального пути в среде разработки ASP.NET.</returns>
      <param name="results">Результат компиляции для виртуального пути поставщика компоновки.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.ServiceBuildProvider.VirtualPathDependencies">
      <summary>Представляет коллекцию виртуальных путей, которые должны быть построены перед тем, как поставщик построения сможет создать код.</summary>
      <returns>Виртуальные пути, от которых зависит этот экземпляр поставщика построения.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceHostFactory">
      <summary>Фабрика, предоставляющая экземпляры <see cref="T:System.ServiceModel.ServiceHost" /> в управляемых средах размещения, в которых экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Создает <see cref="T:System.ServiceModel.ServiceHost" /> с указанными базовыми адресами и инициализирует его с указанными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ServiceHost" /> с указанными базовыми адресами.</returns>
      <param name="constructorString">Данные инициации, передаваемые в экземпляр <see cref="T:System.ServiceModel.ServiceHostBase" />, создаваемый фабрикой. </param>
      <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса размещаемой службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseAddress" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Отсутствует контекст размещения, строка <paramref name="constructorString" /> пуста или имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Создает <see cref="T:System.ServiceModel.ServiceHost" /> для указанного типа службы с указанным базовым адресом. </summary>
      <returns>Узел <see cref="T:System.ServiceModel.ServiceHost" /> типа службы с указанным базовым адресом.</returns>
      <param name="serviceType">Задает тип размещаемой службы. </param>
      <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса размещаемой службы.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceRoute">
      <summary>Разрешает создание маршрутов служб по протоколу HTTP для поддержки сценариев REST.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceRoute.#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceRoute" /> с указанным префиксом маршрута, фабрикой узла служб и типом службы.</summary>
      <param name="routePrefix">Префикс маршрута.</param>
      <param name="serviceHostFactory">Экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" />.</param>
      <param name="serviceType">Тип службы.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory">
      <summary>Фабрика, предоставляющая экземпляры <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> в управляемых средах размещения, в которых экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Создает новый узел службы. </summary>
      <returns>Базовый экземпляр узла службы.</returns>
      <param name="constructorString">Имя файла XAML, определяющего службу рабочего процесса или тип службы.</param>
      <param name="baseAddresses">Список адресов, служащий точкой ссылки для других адресов.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory.CreateWorkflowServiceHost(System.Activities.Activity,System.Uri[])">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> с помощью указанного экземпляра <see cref="T:System.Activities.Activity" /> и базовых адресов.</summary>
      <returns>Экземпляр узла службы рабочего процесса.</returns>
      <param name="activity">Определение рабочего процесса.</param>
      <param name="baseAddresses">Список адресов, служащий точкой ссылки для других адресов.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory.CreateWorkflowServiceHost(System.ServiceModel.Activities.WorkflowService,System.Uri[])">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> с заданным <see cref="T:System.ServiceModel.Activities.WorkflowService" /> и базовыми адресами.</summary>
      <returns>Экземпляр узла службы рабочего процесса.</returns>
      <param name="service">Служба рабочего процесса, получающая узел.</param>
      <param name="baseAddresses">Список адресов, служащий точкой ссылки для других адресов.</param>
    </member>
  </members>
</doc>