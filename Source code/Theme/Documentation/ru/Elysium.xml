<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <member name="T:Elysium.AccentBrushes">
      <summary>
        Предоставляет набор кистей со сплошной заливкой на основе одного из акцентирующих цветов.
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Blue">
      <summary>
        Возвращает кисть сплошной заливки голубого цвета (#FF1BA1E2).
      </summary>
      <value>Кисть со сплошной заливкой голубого цвета (#FF1BA1E2).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Brown">
      <summary>
        Возвращает кисть сплошной заливки коричневого цвета (#FFA05000).
      </summary>
      <value>Кисть со сплошной заливкой коричневого цвета (#FFA05000).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Green">
      <summary>
        Возвращает кисть сплошной заливки зелёного цвета (#FF339933).
      </summary>
      <value>Кисть со сплошной заливкой зелёного цвета (#FF339933).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Lime">
      <summary>
        Возвращает кисть сплошной заливки лаймового цвета (#FF8CBF26).
      </summary>
      <value>Кисть со сплошной заливкой лаймового цвета (#FF8CBF26).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Magenta">
      <summary>
        Возвращает кисть сплошной заливки пурпурного цвета (#FFFF0097).
      </summary>
      <value>Кисть со сплошной заливкой пурпурного цвета (#FFFF0097).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Orange">
      <summary>
        Возвращает кисть сплошной заливки оранжевого цвета (#FFF09609).
      </summary>
      <value>Кисть со сплошной заливкой оранжевого цвета (#FFF09609).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Pink">
      <summary>
        Возвращает кисть сплошной заливки розового цвета (#FFE671B8).
      </summary>
      <value>Кисть со сплошной заливкой розового цвета (#FFE671B8).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Purple">
      <summary>
        Возвращает кисть сплошной заливки фиолетового цвета (#FFA200FF).
      </summary>
      <value>Кисть со сплошной заливкой фиолетового цвета (#FFA200FF).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Red">
      <summary>
        Возвращает кисть сплошной заливки красного цвета (#FFE51400).
      </summary>
      <value>Кисть со сплошной заливкой красного цвета (#FFE51400).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Viridian">
      <summary>
        Возвращает кисть сплошной заливки морского цвета (#FF00ABA9).
      </summary>
      <value>Кисть со сплошной заливкой морского цвета (#FF00ABA9).</value>
    </member>
    <member name="T:Elysium.Theme">
      <summary>
        Определяет тип темы.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Dark">
      <summary>
        Элементы управления используют тёмную цветовую гамму по умолчанию.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Light">
      <summary>
        Элементы управления используют светлую цветовую гамму по умолчанию.
      </summary>
    </member>
    <member name="T:Elysium.ThemeManager">
      <summary>
        Представляет класс, управляющий базовыми настройками темы.
      </summary>
    </member>
    <member name="P:Elysium.ThemeManager.Theme">
      <summary>
        Получает или задаёт значение, указывающее на текующий тип темы.
      </summary>
      <value>
        Одно из значений перечисления <see cref="T:Elysium.Theme" /> или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.ThemeManager.ThemeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = ThemeManager.GetTheme(control);
          SetTheme(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl metro:ThemeManager.Theme="Light"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.ThemeManager.ThemeProperty">
      <inheritdoc />
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.ThemeManager.Theme" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.ThemeManager.Theme" />.
      </value>
    </member>
    <member name="M:Elysium.ThemeManager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.ThemeManager.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий тип темы для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.ThemeManager.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.ThemeManager.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Новый тип темы для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.ThemeManager.AccentBrush">
      <summary>
        Получает или задаёт акцентирующий цвет.
      </summary>
      <value>Кисть, содержащая акцентирующий цвет, или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.ThemeManager.AccentBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = ThemeManager.GetAccentBrush(control);
          SetAccentBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl metro:ThemeManager.AccentBrush="{DynamicResource BlueBrush}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.ThemeManager.AccentBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.ThemeManager.AccentBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.ThemeManager.AccentBrush" />.
      </value>
    </member>
    <member name="M:Elysium.ThemeManager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.ThemeManager.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий акцентирующий цвет для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.ThemeManager.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.ThemeManager.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Акцентирующий цвет для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.ThemeManager.ContrastBrush">
      <summary>
        Получает или задаёт контрастный (к акцентирующему) цвет.
      </summary>
      <value>Кисть, содержащая контрастный цвет, или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.ThemeManager.ContrastBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = ThemeManager.GetContrastBrush(control);
          SetContrastBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl metro:ThemeManager.ContrastBrush="White"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.ThemeManager.ContrastBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.ThemeManager.ContrastBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.ThemeManager.ContrastBrush" />.
      </value>
    </member>
    <member name="M:Elysium.ThemeManager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.ThemeManager.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий контрастный цвет для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.ThemeManager.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.ThemeManager.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Контрастный цвет для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.ThemeManager.ApplyTheme(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" /> или null, если необходимо использовать ранее заданный тип темы.
      </param>
      <param name="accentBrush">Кисть, содержащая акцентирующий цвет, или null, если необходимо использовать ранее заданный цвет.</param>
      <param name="contrastBrush">Кисть, содержащая контрастный цвет, или null, если необходимо использовать ранее заданный цвет.</param>
      <remarks>
        Если настройки задаются для приложения в первый (после запуска) раз, то ни одно из значений не должно быть null.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.ThemeManager.RemoveTheme(System.Windows.Application,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        Отключает тему в указанном приложении.
      </summary>
      <param name="application">Экземпляр приложения, для которого производится отключение темы.</param>
      <param name="isRemoveTheme">Указывает, должен ли из параметров удаляться тип темы.</param>
      <param name="isRemoveAccentBrush">Указывает, должен ли из параметров удаляться акцентирующий цвет.</param>
      <param name="isRemoveContrastBrush">Указывает, должен ли из параметров удаляться контрастный цвет.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="T:Elysium.Parameters">
      <summary>
        Представляет класс, управляющий настройками стилей элементов управления.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TitleFontSize">
      <summary>
        Получает или задаёт размер шрифта в заголовке окна.
      </summary>
      <value>Размер шрифта в заголовке окна. Значение по умолчанию — 12pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TitleFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.Window" /> (только заголовок)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Parameters.GetTitleFontSize(control);
          SetTitleFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Window metro:Parameters.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TitleFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TitleFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TitleFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetTitleFontSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.TitleFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта в заголовке окна.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetTitleFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TitleFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта в заголовке окна.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.HeaderFontSize">
      <summary>
        Получает или задаёт размер шрифта в заголовке элемента управления.
      </summary>
      <value>Размер шрифта в заголовке элемента управления. Значение по умолчанию — 16pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.HeaderFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.TabItem" /> (только заголовок)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.GetTitleFontSize(control);
          SetTitleFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TabControl metro:Parameters.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.HeaderFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.HeaderFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.HeaderFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetHeaderFontSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.HeaderFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта в заголовке элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetHeaderFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.HeaderFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта в заголовке элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ContentFontSize">
      <summary>
        Получает или задаёт размер шрифта для содержимого элемента управления.
      </summary>
      <value>Размер шрифта для содержимого элемента управления. Значение по умолчанию — 10pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ContentFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.ApplicationBar" /></description></item><item><description><see cref="T:System.Windows.Controls.Button" /></description></item><item><description><see cref="T:System.Windows.Controls.CheckBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ComboBox" /></description></item><item><description><see cref="T:Elysium.Controls.CommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ContextMenu" /></description></item><item><description><see cref="T:Elysium.Controls.DropDownCommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ListBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RadioButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.RepeatButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Slider" /></description></item><item><description><see cref="T:Elysium.Controls.Submenu" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.ToggleButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleCommandButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleSwitch" /></description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetContentFontSize(control);
          SetContentFontSize(control, 10d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.ContentFontSize="10pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ContentFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ContentFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ContentFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetContentFontSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ContentFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта для содержимого элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetContentFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ContentFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта для содержимого элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.TextFontSize">
      <summary>
        Получает или задаёт размер шрифта текста.
      </summary>
      <value>Размер шрифта текста. Значение по умолчанию — 9pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TextFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.PasswordBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RichTextBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ScrollViewer" /></description></item><item><description><see cref="T:System.Windows.Controls.TabControl" /> (только содержимое)
            </description></item><item><description><see cref="T:System.Windows.Controls.TextBox" /></description></item><item><description><see cref="T:Elysium.Controls.Window" /> (только содержимое)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TextBox();
          var currentValue = Parameters.GetTextFontSize(control);
          SetTextFontSize(control, 9d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TextBox metro:Parameters.ContentFontSize="9pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TextFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TextFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TextFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetTextFontSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.TextFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта текста.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetTextFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TextFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта текста.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DefaultThickness">
      <summary>
        Получает или задаёт толщину линии по умолчанию.
      </summary>
      <value>Толщина линии по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DefaultThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThickness(control);
          SetDefaultThickness(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.DefaultThickness="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DefaultThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DefaultThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetDefaultThickness(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetDefaultThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина линии по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SemiBoldThickness">
      <summary>
        Получает или задаёт толщину полужирной линии.
      </summary>
      <value>Толщина полужирной линии. Значение по умолчанию — 1.5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SemiBoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThickness(control);
          SetSemiBoldThickness(control, new Thickness(1.5d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.SemiBoldThickness="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SemiBoldThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SemiBoldThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSemiBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина полужирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSemiBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина полужирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.BoldThickness">
      <summary>
        Получает или задаёт толщину жирной линии.
      </summary>
      <value>Толщина жирной линии. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThickness(control);
          SetBoldThickness(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.BoldThickness="2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BoldThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BoldThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BoldThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина жирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина жирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DefaultThicknessValue">
      <summary>
        Получает или задаёт толщину линии по умолчанию.
      </summary>
      <value>Толщина линии по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DefaultThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThicknessValue(control);
          SetDefaultThicknessValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.DefaultThicknessValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DefaultThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DefaultThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetDefaultThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetDefaultThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина линии по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SemiBoldThicknessValue">
      <summary>
        Получает или задаёт толщину полужирной линии.
      </summary>
      <value>Толщина полужирной линии. Значение по умолчанию — 1.5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SemiBoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThicknessValue(control);
          SetSemiBoldThicknessValue(control, 1.5d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.SemiBoldThicknessValue="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SemiBoldThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SemiBoldThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSemiBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина полужирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSemiBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина полужирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.BoldThicknessValue">
      <summary>
        Получает или задаёт толщину жирной линии.
      </summary>
      <value>Толщина жирной линии. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThicknessValue(control);
          SetBoldThicknessValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.BoldThicknessValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BoldThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BoldThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BoldThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина жирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина жирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DefaultPadding">
      <summary>
        Получает или задаёт размер отступов по умолчанию.
      </summary>
      <value>Размер отступов по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DefaultPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPadding(control);
          SetDefaultPadding(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.DefaultPadding="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DefaultPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DefaultPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetDefaultPadding(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер отступов по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetDefaultPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер отступов по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SemiBoldPadding">
      <summary>
        Получает или задаёт величину отступов среднего размера.
      </summary>
      <value>Величина отступов среднего размера. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SemiBoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPadding(control);
          SetSemiBoldPadding(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.SemiBoldPadding="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SemiBoldPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SemiBoldPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSemiBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина отступов среднего размера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSemiBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина отступов среднего размера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.BoldPadding">
      <summary>
        Получает или задаёт величину наиболее большого отступа.
      </summary>
      <value>Величина наиболее большого отступа. Значение по умолчанию — 5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPadding(control);
          SetBoldPadding(control, new Thickness(5d));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.BoldPadding="5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BoldPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BoldPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BoldPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина наиболее большого отступа.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина наиболее большого отступа.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DefaultPaddingValue">
      <summary>
        Получает или задаёт размер отступов по умолчанию.
      </summary>
      <value>Размер отступов по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DefaultPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPaddingValue(control);
          SetDefaultPaddingValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.DefaultPaddingValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DefaultPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DefaultPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetDefaultPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер отступов по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetDefaultPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер отступов по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SemiBoldPaddingValue">
      <summary>
        Получает или задаёт величину отступов среднего размера.
      </summary>
      <value>Величина отступов среднего размера. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SemiBoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPaddingValue(control);
          SetSemiBoldPaddingValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.SemiBoldPaddingValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SemiBoldPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SemiBoldPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSemiBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина отступов среднего размера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSemiBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SemiBoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина отступов среднего размера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.BoldPaddingValue">
      <summary>
        Получает или задаёт величину наиболее большого отступа.
      </summary>
      <value>Величина наиболее большого отступа. Значение по умолчанию — 5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPaddingValue(control);
          SetBoldPaddingValue(control, 5d);
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.BoldPaddingValue="5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BoldPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BoldPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BoldPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина наиболее большого отступа.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина наиболее большого отступа.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DefaultDuration">
      <summary>
        Получает или задаёт продолжительность анимации по умолчанию.
      </summary>
      <value>Продолжительность анимации по умолчанию. Значение по умолчанию — 0 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DefaultDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultDuration(control);
          SetDefaultDuration(control, new Duration(TimeSpan.FromSeconds(0d)));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.DefaultDuration="00:00:00.0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DefaultDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DefaultDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DefaultDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetDefaultDuration(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Продолжительность анимации по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetDefaultDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DefaultDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Продолжительность анимации по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MinimumDuration">
      <summary>
        Получает или задаёт минимальную продолжительность анимации.
      </summary>
      <value>Минимальная продолжительность анимации. Значение по умолчанию — 0.2 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MinimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMinimumDuration(control);
          SetMinimumDuration(control, new Duration(TimeSpan.FromSeconds(0.2d)));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.MinimumDuration="00:00:00.2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MinimumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MinimumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MinimumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetMinimumDuration(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.MinimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Минимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetMinimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MinimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Минимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.OptimumDuration">
      <summary>
        Получает или задаёт оптимальную продолжительность анимации.
      </summary>
      <value>Оптимальная продолжительность анимации. Значение по умолчанию — 0.5 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.OptimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetOptimumDuration(control);
          SetOptimumDuration(control, new Duration(TimeSpan.FromSeconds(0.5d)));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.OptimumDuration="00:00:00.5"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.OptimumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.OptimumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.OptimumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetOptimumDuration(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.OptimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Оптимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetOptimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.OptimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Оптимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MaximumDuration">
      <summary>
        Получает или задаёт максимальную продолжительность анимации.
      </summary>
      <value>Максимальная продолжительность анимации. Значение по умолчанию — 1 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MaximumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMaximumDuration(control);
          SetMaximumDuration(control, new Duration(TimeSpan.FromSeconds(1d)));
        </code>
        <code lang="XAML">
          &lt;Button metro:Parameters.MaximumDuration="00:00:01"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MaximumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MaximumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MaximumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetMaximumDuration(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.MaximumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Максимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetMaximumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MaximumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Максимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ShadowBrush">
      <summary>
        Получает или задаёт кисть, используемую при создании теней.
      </summary>
      <value>Кисть, используемая при создании тени. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ShadowBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, совпадающее со значением ресурса ForegroundBrush со степенью прозрачность 0.3.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetShadowBrush(control);
          SetShadowBrush(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;ComboBox metro:Parameters.ShadowBrush="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ShadowBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ShadowBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ShadowBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetShadowBrush(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ShadowBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая при создании теней.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetShadowBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ShadowBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая при создании теней.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.CommandButtonMask">
      <summary>
        Получает или задаёт кисть, используемую для заливки содержимого кнопок управления — классов, наследующихся от класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />.
      </summary>
      <value>Кисть, используемая для заливки содержимого кнопок управления. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.CommandButtonMaskProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, сопадающее со значением ресурса MiddleLightBrush.
      </remarks>
      <example>
        <code lang="C#">
          var control = new CommandButton();
          var currentValue = Parameters.GetCommandButtonMask(control);
          SetCommandButtonMask(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;CommandButton metro:Parameters.CommandButtonMask="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CommandButtonMaskProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.CommandButtonMask" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtonMask" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetCommandButtonMask(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtonMask" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая для заливки содержимого кнопок управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetCommandButtonMask(Elysium.Controls.Primitives.CommandButtonBase,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtonMask" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая для заливки содержимого кнопок управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.BulletDecoratorSize">
      <summary>
        Получает или задаёт размер области, на которой располагается маркер у классов <see cref="T:System.Windows.Controls.CheckBox" /> и <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
      <value>Размер области, на которой располагается маркер. Значение по умолчанию — 16px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BulletDecoratorSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetBulletDecoratorSize(control);
          SetBulletDecoratorSize(control, 16d);
        </code>
        <code lang="XAML">
          &lt;CheckBox metro:Parameters.BulletDecoratorSize="16px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BulletDecoratorSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BulletDecoratorSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BulletDecoratorSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBulletDecoratorSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BulletDecoratorSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер области, на которой располагается маркер.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBulletDecoratorSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BulletDecoratorSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер области, на которой располагается маркер.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
    </member>
    <member name="P:Elysium.Parameters.BulletSize">
      <summary>
        Получает или задаёт размер маркера в состоянии "не определено" у классов <see cref="T:System.Windows.Controls.CheckBox" /> и <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
      <value>Размер маркера в состоянии "не определено". Значение по умолчанию — 8px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.BulletSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetBulletSize(control);
          SetBulletSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;CheckBox metro:Parameters.BulletSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.BulletSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.BulletSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.BulletSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetBulletSize(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.BulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера в состоянии "не определено".</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetBulletSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.BulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера в состоянии "не определено".</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
    </member>
    <member name="P:Elysium.Parameters.CheckSize">
      <summary>
        Получает или задаёт размер маркера в состоянии "включен" для элемента управления <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
      <value>Размер маркера в состоянии "включен". Значение по умолчанию — 10px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.CheckSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetCheckSize(control);
          SetCheckSize(control, 10d);
        </code>
        <code lang="XAML">
          &lt;CheckBox metro:Parameters.CheckSize="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CheckSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.CheckSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.CheckSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetCheckSize(System.Windows.Controls.CheckBox)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.CheckSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера в состоянии "включен".</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetCheckSize(System.Windows.Controls.CheckBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.CheckSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера в состоянии "включен".</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitchTrackSize">
      <summary>
        Получает или задаёт ширину переключателя в элементе управления <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Ширина переключателя. Значение по умолчанию — 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitchTrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.GetToggleSwitchTrackSize(control);
          SetToggleSwitchTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch metro:Parameters.ToggleSwitchTrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitchTrackSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchTrackSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchTrackSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetToggleSwitchTrackSize(Elysium.Controls.ToggleSwitch)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchTrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Ширина переключателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetToggleSwitchTrackSize(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchTrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Ширина переключателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitchThumbThickness">
      <summary>
        Получает или задаёт толщину переключателя в элементе управления <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Толщина переключателя. Значение по умолчанию — 10px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitchThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.GetToggleSwitchThumbThickness(control);
          SetToggleSwitchThumbThickness(control, 10d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch metro:Parameters.ToggleSwitchThumbThickness="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitchThumbThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchThumbThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchThumbThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetToggleSwitchThumbThickness(Elysium.Controls.ToggleSwitch)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина переключателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetToggleSwitchThumbThickness(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitchThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина переключателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBoxButtonSize">
      <summary>
        Получает или задаёт ширину кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — 18px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBoxButtonSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        Значение этого свойства используется только если элемент управления <see cref="T:System.Windows.Controls.ComboBox" /> объявлен как редактируемый.
        В противном случае, значение игнорируется, а кнопка растягивается на всю ширину элемента управления.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetComboBoxButtonSize(control);
          SetComboBoxButtonSize(control, 18d);
        </code>
        <code lang="XAML">
          &lt;ComboBox metro:Parameters.ComboBoxButtonSize="18px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBoxButtonSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBoxButtonSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxButtonSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetComboBoxButtonSize(System.Windows.Controls.ComboBox)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxButtonSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetComboBoxButtonSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxButtonSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBoxArrowSize">
      <summary>
        Получает или задаёт размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBoxArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetComboBoxArrowSize(control);
          SetComboBoxArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;ComboBox metro:Parameters.ComboBoxArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBoxArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetComboBoxArrowSize(System.Windows.Controls.ComboBox)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetComboBoxArrowSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBoxArrowMargin">
      <summary>
        Получает или задаёт отступ указателя на возможность открытия (стрелки) от краёв кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Отступ указателя на возможность открытия (стрелки) от краёв кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — (5, 0, 5, 0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBoxArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        В стиле по умолчанию используется значение только правого отступа, остальные значения игнорируются.
        Тем не менее, при переопределении стиля вы можете использовать и значения других отступов.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetComboBoxArrowMargin(control);
          SetComboBoxArrowMargin(control, new Thickness(5d, 0d, 5d, 0d));
        </code>
        <code lang="XAML">
          &lt;ComboBox metro:Parameters.ComboBoxArrowMargin="5,0,5,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBoxArrowMarginProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowMargin" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowMargin" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetComboBoxArrowMargin(System.Windows.Controls.ComboBox)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetComboBoxArrowMargin(System.Windows.Controls.ComboBox,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBoxArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SliderTrackSize">
      <summary>
        Получает или задаёт длину трека в элементе управления <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Длина трека. Значение по умолчанию — 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SliderTrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.GetSliderTrackSize(control);
          SetSliderTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;Slider metro:Parameters.SliderTrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SliderTrackSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SliderTrackSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SliderTrackSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSliderTrackSize(System.Windows.Controls.Slider)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SliderTrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Длина трека.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSliderTrackSize(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SliderTrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Длина трека.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SliderThumbThickness">
      <summary>
        Получает или задаёт ширину ползунка в элементе управления <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Ширина ползунка. Значение по умолчанию — 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SliderThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.GetSliderThumbThickness(control);
          SetSliderThumbThickness(control, 6d);
        </code>
        <code lang="XAML">
          &lt;Slider metro:Parameters.SliderThumbThickness="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SliderThumbThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SliderThumbThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SliderThumbThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSliderThumbThickness(System.Windows.Controls.Slider)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SliderThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Ширина ползунка.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSliderThumbThickness(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SliderThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Ширина ползунка.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ProgressBarBusyElementSize">
      <summary>
        Получает или задаёт размер элемента индикации состояния занятости (по умолчанию — кружка) для наследников класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />.
      </summary>
      <value>Размер элемента индикации состояния занятости. Значение по умолчанию — 4px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ProgressBarBusyElementSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new LinearProgressBar();
          var currentValue = Parameters.GetProgressBarBusyElementSize(control);
          SetProgressBarBusyElementSize(control, 4d);
        </code>
        <code lang="XAML">
          &lt;LinearProgressBar metro:Parameters.ProgressBarBusyElementSize="4px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ProgressBarBusyElementSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ProgressBarBusyElementSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ProgressBarBusyElementSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetProgressBarBusyElementSize(Elysium.Controls.Primitives.ProgressBarBase)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ProgressBarBusyElementSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер элемента индикации состояния занятости.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetProgressBarBusyElementSize(Elysium.Controls.Primitives.ProgressBarBase,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ProgressBarBusyElementSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер элемента индикации состояния занятости.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ScrollBarArrowSize">
      <summary>
        Получает или задаёт размер указателя (стрелки) в элементе управления <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
      <value>
        Размер указателя (стрелки). Значение по умолчанию — 6px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ScrollBarArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ScrollBar();
          var currentValue = Parameters.GetScrollBarArrowSize(control);
          SetScrollBarArrowSize(control, 6d);
        </code>
        <code lang="XAML">
          &lt;ScrollBar metro:Parameters.ScrollBarArrowSize="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ScrollBarArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ScrollBarArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBarArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetScrollBarArrowSize(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBarArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер указателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetScrollBarArrowSize(System.Windows.Controls.Primitives.ScrollBar,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBarArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер указателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.TabControlIndicatorBrush">
      <summary>
        Получает или задаёт кисть, используемую для заливки индикатора текущей вкладки элемента управления <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>Кисть, используемая для заливки индикатора текущей вкладки. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControlIndicatorBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, сопадающее со значением ресурса AccentBrush для активной вкладки и HighlightBrush для остальной части индикатора.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.GetTabControlIndicatorBrush(control);
          SetTabControlIndicatorBrush(control, Brushes.LightGray);
        </code>
        <code lang="XAML">
          &lt;CommandButton metro:Parameters.TabControlIndicatorBrush="LightGray"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControlIndicatorBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetTabControlIndicatorBrush(System.Windows.DependencyObject)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая для заливки индикатора текущей вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="M:Elysium.Parameters.SetTabControlIndicatorBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая для заливки индикатора текущей вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="P:Elysium.Parameters.TabControlIndicatorThickness">
      <summary>
        Получает или задаёт толщину индикатора текущей вкладки в элементе управления <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>Толщина индикатора текущей вкладки. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControlIndicatorThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.GetTabControlIndicatorThickness(control);
          SetTabControlIndicatorThickness(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Slider metro:Parameters.TabControlIndicatorThickness="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControlIndicatorThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetTabControlIndicatorThickness(System.Windows.Controls.TabControl)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина индикатора текущей вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetTabControlIndicatorThickness(System.Windows.Controls.TabControl,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControlIndicatorThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина индикатора текущей вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.TabItemHeaderStyle">
      <summary>
        Получает или задаёт стиль заголовка вкладки в элементе управления <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
      <value>Стиль заголовка вкладки. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabItemHeaderStyleProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        Это свойство обычно устанавливается локально в стиле элемента управления.
      </remarks>
    </member>
    <member name="F:Elysium.Parameters.TabItemHeaderStyleProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabItemHeaderStyle" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabItemHeaderStyle" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetTabItemHeaderStyle(System.Windows.Controls.TabItem)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabItemHeaderStyle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Стиль заголовка вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.SetTabItemHeaderStyle(System.Windows.Controls.TabItem,System.Windows.Style)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabItemHeaderStyle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Стиль заголовка вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SubmenuItemBulletSize">
      <summary>
        Получает или задаёт размер маркера у класса <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>Размер маркера. Значение по умолчанию — 12px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SubmenuItemBulletSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        Это свойство имеет действие на элемент управления MenuItem, вложенный в выпадающее меню любого типа (будь то ContextMenu или Submenu) и не являющийся родительским элементом другого выпадающего меню.
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.GetSubmenuItemBulletSize(control);
          SetSubmenuItemBulletSize(control, 12d);
        </code>
        <code lang="XAML">
          &lt;MenuItem metro:Parameters.SubmenuItemBulletSize="12px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SubmenuItemBulletSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SubmenuItemBulletSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuItemBulletSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSubmenuItemBulletSize(System.Windows.Controls.MenuItem)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuItemBulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSubmenuItemBulletSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuItemBulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SubmenuHeaderArrowSize">
      <summary>
        Получает или задаёт размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>
        Размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />. Значение по умолчанию — 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SubmenuHeaderArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.GetSubmenuHeaderArrowSize(control);
          SetSubmenuHeaderArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;MenuItem metro:Parameters.SubmenuHeaderArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SubmenuHeaderArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSubmenuHeaderArrowSize(System.Windows.Controls.MenuItem)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSubmenuHeaderArrowSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.SubmenuHeaderArrowMargin">
      <summary>
        Получает или задаёт отступ указателя на возможность открытия (стрелки) от краёв элемента управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>
        Отступ указателя на возможность открытия (стрелки) от краёв элемента управления <see cref="T:System.Windows.Controls.MenuItem" />. Значение по умолчанию — (3, 0, 3, 0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.SubmenuHeaderArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        В стиле по умолчанию используется значение только правого отступа, остальные значения игнорируются.
        Тем не менее, при переопределении стиля вы можете использовать и значения других отступов.
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.GetSubmenuHeaderArrowMargin(control);
          SetSubmenuHeaderArrowMargin(control, new Thickness(3d, 0d, 3d, 0d));
        </code>
        <code lang="XAML">
          &lt;MenuItem metro:Parameters.SubmenuHeaderArrowMargin="3,0,3,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.SubmenuHeaderArrowMarginProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowMargin" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowMargin" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetSubmenuHeaderArrowMargin(System.Windows.Controls.MenuItem)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetSubmenuHeaderArrowMargin(System.Windows.Controls.MenuItem,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.SubmenuHeaderArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.WindowResizeBorderThickness">
      <summary>
        Получает или задаёт толщину рамки изменения размера элемента управления <see cref="T:Elysium.Controls.Window" />.
      </summary>
      <value>
        Толщина рамки изменения размера окна. Значение по умолчанию — 3px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.WindowResizeBorderThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Elysium.Controls.Window();
          var currentValue = Parameters.GetWindowResizeBorderThickness(control);
          SetWindowResizeBorderThickness(control, 3d);
        </code>
        <code lang="XAML">
          &lt;metro:Window metro:Parameters.WindowResizeBorderThickness="3px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.WindowResizeBorderThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.WindowResizeBorderThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.WindowResizeBorderThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.GetWindowResizeBorderThickness(Elysium.Controls.Window)">
      <summary>
        Получает значение свойства зависимостей <see cref="P:Elysium.Parameters.WindowResizeBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина рамки изменения размера окна.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.SetWindowResizeBorderThickness(Elysium.Controls.Window,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.WindowResizeBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина рамки изменения размера окна.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Extensions.LogicalTreeHelperExtensions">
      <summary>
        Предоставляет методы расширения для поиска по логическому дереву элементов WPF.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск родителя указанного объекта в логическом дереве элементов WPF.
      </summary>
      <typeparam name="T">Тип родителя.</typeparam>
      <param name="current">Элемент, для которого осуществляется поиск родителя.</param>
      <returns>Родитель или null, если среди предков нет объектов указанного типа.</returns>
    </member>
    <member name="T:Elysium.Extensions.VisualTreeHelperExtensions">
      <summary>
        Предоставляет методы расширения для поиска по визуальному дереву элементов WPF.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск родителя указанного объекта в визуальном дереве элементов WPF.
      </summary>
      <typeparam name="T">Тип родителя.</typeparam>
      <param name="reference">Элемент, для которого осуществляется поиск родителя.</param>
      <returns>Родитель или null, если среди предков нет объектов указанного типа.</returns>
    </member>
    <member name="T:Elysium.Converters.AngleToCoordinateConverter">
      <summary>
        Конвертирует значение угла, под которым находится объект по отношению к центру окружности, в координаты.
      </summary>
    </member>
    <member name="M:Elysium.Converters.AngleToCoordinateConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение угла, под которым находится объект по отношению к центру окружности, в координаты.
      </summary>
      <param name="values">
        Исходные значения. Все значения, кроме первого, должны быть типа <see cref="T:System.Double" />.
        Первое значение обязательно. Это значение, возвращаемое в случае неудачного выполнения метода.
        Следующие три значения обязательны:
        <list type="number"><item><description>Угол, под которым находится объект по отношению к центру окружности.</description></item><item><description>Ширина прямоугольника, в которую вписана окружность.</description></item><item><description>Высота прямоугольника, в которую вписана окружность.</description></item></list>
        Следующие четыре значения необязательны:
        <list type="number"><item><description>Ширина объекта.</description></item><item><description>Высота объекта.</description></item><item><description>Координата X центра окружности.</description></item><item><description>Координата Y центра окружности.</description></item></list></param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "X", "x", "Y", "y".</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Координаты объекта. В случае, если метод выполняется неудачно, возвращается указанное для этого случая значение. Если параметер <paramref name="values" /> имеет значение null или длину менее 4, возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.PercentToAngleConverter">
      <summary>
        Конвертирует процент от полного угла в значение угла.
      </summary>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует процент от полного угла в значение угла.
      </summary>
      <param name="value">
        Процент от полного угла. Должен иметь один из следующих типов: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение угла, того же типа, что и <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение угла в процент от полного угла.
      </summary>
      <param name="value">
        Значение угла. Должен иметь один из следующих типов: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Процент от полного угла, того же типа, что и <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.IsGreaterThanConverter">
      <summary>
        Определяет, больше одно число другого или нет.
      </summary>
    </member>
    <member name="M:Elysium.Converters.IsGreaterThanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Определяет, больше одно число другого или нет, с двойной точностью.
      </summary>
      <param name="value">
        Число, принадлежащее к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />."</param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">
        Параметр конвертера. Второе сравниваемое значение. Должен быть строкой, и выражать число, которое может быть приведено к типу <see cref="T:System.Double" /></param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        True, если <paramref name="value" /> больше, чем <paramref name="parameter" />, иначе — False.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.NumberPositiveToNegativeConverter">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
      <param name="value">
        Число. Должно принадлежать к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Число, по модулю равное <paramref name="value" />, но с противоположным знаком.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
      <param name="value">
        Число. Должно принадлежать к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Число, по модулю равное <paramref name="value" />, но с противоположным знаком.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessPositiveToNegativeConverter">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, в котором значение для каждого из краёв рамки равно соответствующему значению <paramref name="value" /> по модулю, но знак изменён на противоположный.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, в котором значение для каждого из краёв рамки равно соответствующему значению <paramref name="value" /> по модулю, но знак изменён на противоположный.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToGridLengthConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.GridLength" />.
        Результат зависит от значения параметра <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. Значение параметра <paramref name="value" /> игнорируется.
            </description></item><item><description>
              "*": Значение выражается как взвешенная пропорция доступного пространства. Значение доли должно быть указано в параметре <paramref name="value" />.
            </description></item><item><description>
              null: Возвращается значение в пикселях. Количество пикселей должно быть указано в параметре <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Double" />. Результатом является значение <see cref="P:System.Windows.GridLength.Value" /> или
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, в случае несовпадения типов ("Auto", "*" или количество пикселей) <paramref name="value" /> и <paramref name="parameter" /> или неудачного выполнения метода.
      </returns>
    </member>
    <member name="T:Elysium.Converters.GridLengthToDoubleConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Double" />. Результатом является значение <see cref="P:System.Windows.GridLength.Value" /> или
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, в случае несовпадения типов ("Auto", "*" или количество пикселей) <paramref name="value" /> и <paramref name="parameter" /> или неудачного выполнения метода.
      </returns>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.GridLength" />.
        Результат зависит от значения параметра <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. Значение параметра <paramref name="value" /> игнорируется.
            </description></item><item><description>
              "*": Значение выражается как взвешенная пропорция доступного пространства. Значение доли должно быть указано в параметре <paramref name="value" />.
            </description></item><item><description>
              null: Возвращается значение в пикселях. Количество пикселей должно быть указано в параметре <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToThicknessConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom" или null. Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />. Все стороны рамки, указанные в <paramref name="parameter" /> имеют значение <paramref name="value" />;
        остальные стороны имеют значение 0. В случае, если <paramref name="parameter" /> равен null, то все края рамки имеют значение <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Усреднённое значение указанных сторон или всех сторон, если <paramref name="parameter" /> равен null.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessToDoubleConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.Thickness" /> в значение типа <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.Thickness" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Усреднённое значение указанных сторон или всех сторон, если <paramref name="parameter" /> равен null.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom" или null. Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />. Все стороны рамки, указанные в <paramref name="parameter" /> имеют значение <paramref name="value" />;
        остальные стороны имеют значение 0. В случае, если <paramref name="parameter" /> равен null, то все края рамки имеют значение <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarDock">
      <summary>
        Определяет положение элемента управления внутри <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Left">
      <summary>
        Элемент управления выравнивается по левой стороне.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Right">
      <summary>
        Элемент управления выравнивается по правой стороне.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarTransitionMode">
      <summary>
        Определяет анимацию появления и исчезания элемента управления <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.None">
      <summary>
        Анимация отсутствует.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Fade">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ApplicationBar" /> меняет свою прозрачность с 0% до 100%.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ApplicationBar" /> постепенно "выезжает" из-за нижнего края окна.
      </summary>
    </member>
    <member name="T:Elysium.Controls.DropDownDirection">
      <summary>
        Определяет, с какой стороны элемента управления <see cref="T:Elysium.Controls.DropDownCommandButton" /> находится его выпадающее меню.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Up">
      <summary>
        Выпадающее меню находится сверху.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Down">
      <summary>
        Выпадающее меню находится снизу.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ProgressBarState">
      <summary>
        Определяет состояние индикатора выполнения (один из наследников <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />).
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressBarState.Normal">
      <summary>
        Нормальное состояние.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressBarState.Indeterminate">
      <summary>
        Неопределённое состояние.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressBarState.Busy">
      <summary>
        Состоние занятости.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ToastNotificationAnimation">
      <summary>
        Определяет анимацию появления и исчезания элемента управления <see cref="T:Elysium.Controls.ToastNotification" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToastNotificationAnimation.None">
      <summary>
        Анимация отсутствует.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToastNotificationAnimation.Fade">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ToastNotification" /> меняет свою прозрачность с 0% до 100%.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToastNotificationAnimation.Slide">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ToastNotification" /> постепенно "выезжает" из-за указанного края экрана.
      </summary>
    </member>
    <member name="T:Elysium.Controls.HorizontalPlacement">
      <summary>
        Определяет, по какой стороне экрана выравнивается элемент управления <see cref="T:Elysium.Controls.ToastNotification" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.HorizontalPlacement.Left">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ToastNotification" /> выравнивается по левой стороне экрана.
      </summary>
    </member>
    <member name="F:Elysium.Controls.HorizontalPlacement.Right">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ToastNotification" /> выравнивается по правой стороне экрана.
      </summary>
    </member>
    <member name="T:Elysium.Controls.VerticalPlacement">
      <summary>
        Определяет, по какой стороне экрана выравнивается группа элементов <see cref="T:Elysium.Controls.ToastNotification" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.VerticalPlacement.Top">
      <summary>
        Группа элементов <see cref="T:Elysium.Controls.ToastNotification" /> выравнивается по верхнему краю экрана.
      </summary>
    </member>
    <member name="F:Elysium.Controls.VerticalPlacement.Bottom">
      <summary>
        Группа элементов <see cref="T:Elysium.Controls.ToastNotification" /> выравнивается по нижнему краю экрана.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ApplicationBar" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.#ctor(Elysium.Controls.ApplicationBar)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ApplicationBar" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ApplicationBar" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ApplicationBar".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ApplicationBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта <see cref="T:Elysium.Controls.ApplicationBar" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Menu.</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer">
      <summary>
        Является базовым классом для провайдеров наследников класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.#ctor(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.Owner">
      <summary>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button">AutomationControlType.Button</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Button.</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.CommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.#ctor(Elysium.Controls.CommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.CommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.CommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "CommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "CommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.CommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.Invoke">
      <summary>
        Направляет запрос на активацию элемента управления и инициирует его единственное, однозначное действие.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.DropDownCommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.#ctor(Elysium.Controls.DropDownCommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.DropDownCommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.DropDownCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "DropDownCommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "DropDownCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.DropDownCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Expand">
      <summary>
        Отображает всплывающее меню.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
      <exception cref="T:System.InvalidOperationException">Всплывающее меню не задано для этого экземпляра.</exception>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Collapse">
      <summary>
        Скрывает всплывающее меню.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
      <exception cref="T:System.InvalidOperationException">Всплывающее меню не задано для этого экземпляра.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.ExpandCollapseState">
      <summary>Возвращает состояние элемента управления — развернут или свернут.</summary>
      <value>Cостояние элемента управления — развернут или свернут.</value>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ToggleCommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.#ctor(Elysium.Controls.ToggleCommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ToggleCommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ToggleCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ToggleCommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ToggleCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.ToggleCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.Toggle">
      <summary>
        Выполняет переключение состояния элемента управления.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.ToggleState">
      <summary>Возвращает состояние элемента управления (из числа тех, в которые он может переключаться).</summary>
      <value>Одно из значений перечисления <see cref="T:System.Windows.Automation.ToggleState" />.</value>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ToggleSwitch" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.#ctor(Elysium.Controls.ToggleSwitch)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Owner">
      <summary>
        Экземпляр элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ToggleSwitch".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ToggleSwitch"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider">AutomationControlType.Slider</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Slider.</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Toggle">
      <summary>
        Выполняет переключение состояния элемента управления.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.ToggleState">
      <summary>Возвращает состояние элемента управления (из числа тех, в которые он может переключаться).</summary>
      <value>Одно из значений перечисления <see cref="T:System.Windows.Automation.ToggleState" />.</value>
    </member>
    <member name="T:Elysium.Controls.Automation.ProgressBarAutomationPeer">
      <summary>
        Является провайдером для наследников класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressBarAutomationPeer.#ctor(Elysium.Controls.Primitives.ProgressBarBase)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ProgressBarAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressBarAutomationPeer.Owner">
      <summary>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса для наследника <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ProgressBar".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ProgressBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">AutomationControlType.ProgressBar</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.ProgressBar.</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressBarAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />,      
      а состояние объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBarBase" /> не равно <see cref="F:Elysium.Controls.ProgressBarState.Indeterminate" /> или <see cref="F:Elysium.Controls.ProgressBarState.Busy" />,
      то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.</returns>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressBarAutomationPeer.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли значение элемента управления доступным только для чтения.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно True.</ensures>
      </getter>
      <value>
        True, если значение доступно только для чтения; False, если его можно изменять.
        Всегда возвращается значение True, т.е. элемента управления является доступным только для чтения.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressBarAutomationPeer.LargeChange">
      <summary>Возвращает значение, добавляемое к значению свойства <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> или вычитаемое из него при внесении большого изменения, например, при нажатии кнопки PAGE DOWN.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно Double.NaN.</ensures>
      </getter>
      <value>
        Поддерживаемое элементом управления значение большого изменения или <see cref="F:System.Double.NaN">Double.NaN</see>, если элемент управления не поддерживает это свойство.
        Всегда возвращается значение <see cref="F:System.Double.NaN">Double.NaN</see>, поскольку элемент управления не поддерживает это свойство.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressBarAutomationPeer.SmallChange">
      <summary>Возвращает значение, добавляемое к значению свойства <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> или вычитаемое из него при внесении малого изменения, например, при нажатии кнопки СТРЕЛКА ВНИЗ.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно Double.NaN.</ensures>
      </getter>
      <value>
        Поддерживаемое элементом управления значение малого изменения или <see cref="F:System.Double.NaN">Double.NaN</see>, если элемент управления не поддерживает это свойство.
        Всегда возвращается значение <see cref="F:System.Double.NaN">Double.NaN</see>, поскольку элемент управления не поддерживает это свойство.
      </value>
    </member>
    <member name="T:Elysium.Controls.Automation.SubmenuAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.Submenu" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.#ctor(Elysium.Controls.Submenu)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.Submenu" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.Submenu" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "Submenu".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "Submenu"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта <see cref="T:Elysium.Controls.Submenu" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Menu.</ensures>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarPanel">
      <summary>
        Панель, на которой размещаются дочерние элементы класса <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.Primitives.CommandButtonBase">
      <summary>
        Базовый класс для кнопок управления (command buttons).
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.Header">
      <summary>
        Возвращает или задает данные, используемые для заголовка элемента управления.
      </summary>
      <value>Объект заголовка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </summary>
      <param name="oldHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </param>
      <param name="newHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader">
      <summary>
        Возвращает значение, указывающее имеет ли заголовок значение null в данный момент.
      </summary>
      <value>
        True, если значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> не равно null, в противном случае False. Значение по умолчанию — False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat">
      <summary>
        Возвращает или задает составную строку, которая определяет форматирование заголовка, если он отображается как строка.
      </summary>
      <value>Составная строка, которая определяет форматирование заголовка, если он отображается как строка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </summary>
      <param name="oldHeaderStringFormat">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </param>
      <param name="newHeaderStringFormat">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate">
      <summary>
        Возвращает или задает шаблон, используемый для отображения содержимого заголовка элемента управления.
      </summary>
      <value>Шаблон, используемый для отображения содержимого заголовка элемента управления. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderTemplateedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </summary>
      <param name="oldHeaderTemplate">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </param>
      <param name="newHeaderTemplate">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector">
      <summary>
        Возвращает или задает селектор шаблона данных, предоставляющий пользовательскую логику для выбора шаблона отображения содержимого заголовка элемента управления.
      </summary>
      <value>Экземпляр селектора шаблона данных. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderTemplateSelectoredContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </summary>
      <param name="oldHeaderTemplateSelector">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </param>
      <param name="newHeaderTemplateSelector">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.CommandButton">
      <summary>
        Кнопка управления.
      </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ToggleCommandButton">
      <summary>
        Кнопка управления, поддерживающая состояния "включено", "выключено" и "неопределено".
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsChecked">
      <summary>
        Возвращает или задает значение, указывающее, находится ли кнопка управления во включенном состоянии.
      </summary>
      <value>True, если кнопка управления находится во включенном состоянии; False — если в выключенном; иначе null. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Journal" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.IsCheckededContentControl.IsChecked" />
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </value>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Checked">
      <summary>
        Событие генерируется при переходе в состояние "включено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.CheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnChecked" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.CheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Unchecked">
      <summary>
        Событие генерируется при переходе в состояние "выключено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnUnchecked" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Indeterminate">
      <summary>
        Событие генерируется при переходе в состояние "неопределено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsThreeState">
      <summary>
        Возвращает или задает значение, указывающее, два или три состояния поддерживает элемент управления.
      </summary>
      <value>True, если кнопка управления поддерживает три состояния; в противном случае False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.IsThreeStateedContentControl.IsThreeState" />
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnToggle">
      <inheritdoc cref="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle" />
    </member>
    <member name="T:Elysium.Controls.Submenu">
      <summary>
        Выпадающее меню.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Submenu.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
  </members>
</doc>