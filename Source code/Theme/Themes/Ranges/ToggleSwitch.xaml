<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:root="clr-namespace:Elysium.Theme"
                    xmlns:controls="clr-namespace:Elysium.Theme.Controls"
                    xmlns:converters="clr-namespace:Elysium.Theme.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Elysium.Theme;component/Themes/SharedResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToggleSwitchSwitchStyle" TargetType="{x:Type Button}">

        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>

        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>

        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               StrokeThickness="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="ToggleSwitchThumbStyle" TargetType="{x:Type Thumb}">

        <Setter Property="Background" Value="{StaticResource MiddleLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Background}"/>

        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>

        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>

        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Lowlight}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{StaticResource Lowlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Disabled}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="{x:Type controls:ToggleSwitch}" TargetType="{x:Type controls:ToggleSwitch}">

        <Setter Property="Background" Value="{StaticResource Highlight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLight}"/>
        <Setter Property="BorderThickness" Value="{Binding Source={x:Static root:Parameters.Instance}, Path=DefaultThickness, Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="FontFamily" Value="{Binding Source={x:Static root:Parameters.Instance}, Path=FontFamily, Mode=OneWay}"/>
        <Setter Property="FontSize" Value="{Binding Source={x:Static root:Parameters.Instance}, Path=TextFontSize, Mode=OneWay}"/>
        <Setter Property="FontWeight" Value="Normal"/>

        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>

        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>

        <Setter Property="Padding" Value="0"/>

        <Setter Property="MinHeight" Value="14"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="MaxHeight" Value="22"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToggleSwitch}">
                    
                    <ControlTemplate.Resources>
                        <converters:ThicknessPositiveToNegativeConverter x:Key="ThicknessPositiveToNegativeConverter"/>
                    </ControlTemplate.Resources>
                    
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ToggleSwitchTrackSize), Mode=OneWay, Converter={StaticResource DoubleToGridLengthConverter}}"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="OnHeaderHost"
                                          Grid.Column="0"
                                          Content="{TemplateBinding OnHeader}"
                                          ContentStringFormat="{TemplateBinding OnHeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding OnHeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding OnHeaderTemplateSelector}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="Collapsed"/>
                        <ContentPresenter x:Name="OffHeaderHost"
                                          Grid.Column="0"
                                          Content="{TemplateBinding OffHeader}"
                                          ContentStringFormat="{TemplateBinding OffHeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding OffHeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding OffHeaderTemplateSelector}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="Collapsed"/>
                        <Border x:Name="PART_Track"
                                Grid.Column="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <Thumb x:Name="PART_Thumb"
                                       DockPanel.Dock="Left"
                                       BorderThickness="{Binding Source={x:Static root:Parameters.Instance}, Path=DefaultThicknessValue, Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Right}"
                                       IsEnabled="{TemplateBinding IsEnabled}"
                                       Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessPositiveToNegativeConverter}, ConverterParameter='Left, Top, Bottom'}"
                                       Width="{TemplateBinding root:Parameters.ToggleSwitchThumbThickness}"
                                       Height="{TemplateBinding Height}"
                                       Panel.ZIndex="1"
                                       Style="{StaticResource ToggleSwitchThumbStyle}"/>
                                <Button x:Name="PART_Switch"
                                        Background="{TemplateBinding Background}"
                                        Panel.ZIndex="0"
                                        Style="{StaticResource ToggleSwitchSwitchStyle}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="OffHeaderHost" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Track" Property="Background" Value="{StaticResource Accent}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OnHeaderHost" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Thumb" Property="DockPanel.Dock" Value="Right"/>
                            <Setter TargetName="PART_Thumb" Property="BorderThickness" Value="{Binding Source={x:Static root:Parameters.Instance}, Path=DefaultThicknessValue, Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}"/>
                            <Setter TargetName="PART_Thumb" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessPositiveToNegativeConverter}, ConverterParameter='Right, Top, Bottom'}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Switch" Property="Background" Value="{StaticResource Accent}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

</ResourceDictionary>