<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:root="clr-namespace:Elysium.Theme"
                    xmlns:controls="clr-namespace:Elysium.Theme.Controls"
                    xmlns:converters="clr-namespace:Elysium.Theme.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Elysium.Theme;component/Themes/SharedResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="HorizontalProgressBarTemplate" TargetType="{x:Type controls:LinearProgressBar}">

        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                ClipToBounds="True">
            <Canvas x:Name="PART_Track"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Rectangle x:Name="PART_Indicator"
                           Fill="{TemplateBinding Foreground}"
                           StrokeThickness="0"
                           Canvas.Left="0" Canvas.Top="0"
                           Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
                    <Rectangle.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percent}"/>
                    </Rectangle.LayoutTransform>
                </Rectangle>
                <Canvas x:Name="PART_LoadingBar"
                        Canvas.Left="0" Canvas.Top="0"
                        Visibility="Hidden">
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                </Canvas>
            </Canvas>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsIndeterminate" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="PART_Indicator" Property="Canvas.Left" Value="{Binding ElementName=PART_Indicator, Path=ActualWidth, Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"/>
                    <Setter TargetName="PART_Indicator" Property="LayoutTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.4"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsIndeterminate" Value="{x:Null}"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PART_LoadingBar" Property="Visibility" Value="Visible"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalProgressBarTemplate" TargetType="{x:Type controls:LinearProgressBar}">

        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                ClipToBounds="True">
            <Canvas x:Name="PART_Track"
                    Background="{TemplateBinding Background}"
                    ClipToBounds="True"
                    RenderTransformOrigin="0.5,0.5"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Canvas.RenderTransform>
                    <ScaleTransform ScaleY="-1"/>
                </Canvas.RenderTransform>
                <Rectangle x:Name="PART_Indicator"
                           Fill="{TemplateBinding Foreground}"
                           StrokeThickness="0"
                           Canvas.Left="0" Canvas.Top="0"
                           Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
                    <Rectangle.LayoutTransform>
                        <ScaleTransform ScaleY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percent}"/>
                    </Rectangle.LayoutTransform>
                </Rectangle>
                <Canvas x:Name="PART_LoadingBar"
                        Canvas.Left="0" Canvas.Top="0"
                        Visibility="Hidden">
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                    <Ellipse Fill="{TemplateBinding Foreground}"
                             StrokeThickness="0"
                             Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(root:Parameters.ProgressBarLoadingElementSize), Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"
                             Width="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"
                             Height="{TemplateBinding root:Parameters.ProgressBarLoadingElementSize}"/>
                </Canvas>
            </Canvas>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsIndeterminate" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="PART_Indicator" Property="Canvas.Top" Value="{Binding ElementName=PART_Indicator, Path=ActualHeight, Converter={x:Static converters:PositiveToNegativeConverter.Instance}}"/>
                    <Setter TargetName="PART_Indicator" Property="LayoutTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleY="0.4"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsIndeterminate" Value="{x:Null}"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PART_LoadingBar" Property="Visibility" Value="Visible"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type controls:LinearProgressBar}" TargetType="{x:Type controls:LinearProgressBar}">

        <Setter Property="Background" Value="{StaticResource ForegroundHighlight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundMiddlelight}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource Accent}"/>
        
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Style.Triggers>

            <Trigger Property="IsIndeterminate" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource Background}"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
            </Trigger>

            <Trigger Property="Orientation" Value="Horizontal">

                <Setter Property="MinHeight" Value="2"/>
                <Setter Property="Height" Value="4"/>
                <Setter Property="MaxHeight" Value="8"/>
                
                <Setter Property="Template" Value="{StaticResource HorizontalProgressBarTemplate}"/>

            </Trigger>

            <Trigger Property="Orientation" Value="Vertical">
                
                <Setter Property="MinWidth" Value="2"/>
                <Setter Property="Width" Value="4"/>
                <Setter Property="MaxWidth" Value="8"/>

                <Setter Property="Template" Value="{StaticResource VerticalProgressBarTemplate}"/>

            </Trigger>

        </Style.Triggers>

    </Style>
    
</ResourceDictionary>