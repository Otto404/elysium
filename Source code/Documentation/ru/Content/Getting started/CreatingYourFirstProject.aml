<?xml version="1.0" encoding="utf-8"?>
<topic id="38e98c7d-0495-49a4-9dea-01d0dccd3302" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
                                xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>В данном разделе описывается создание простейшего приложения использующего возможности Elysium.</para>
    </introduction>

    <prerequisites>
      <content>
        <alert class="warning">
          <para>
            Шаблоны Visual Studio доступны только при установке <legacyBold>Elysium SDK</legacyBold> через программу установки или msi-пакет.
            В данный момент поддерживаются только шаблоны для C#.
          </para>
        </alert>
      </content>
    </prerequisites>
    
    <procedure address="CreatingViaTemplate">
      <title>Создание приложения с помощью шаблона Visual Studio</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              В окне Visual Studio выберите пункт <legacyBold>Файл - Создать - Проект</legacyBold> | <legacyBold>File - New - Project</legacyBold>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              В диалоговом окне <legacyBold>Создать проект</legacyBold> | <legacyBold>New Project</legacyBold> выберите тип
              шаблона <legacyBold>Visual C# - Windows</legacyBold>,
              затем - <legacyBold>Приложение WPF в стиле Metro</legacyBold> | <legacyBold>WPF Metro Application</legacyBold> и нажмите <legacyBold>OK</legacyBold>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Visual Studio создаст новый проект, автоматически подключит необходимые зависимости и создаст базовую инфраструктуру проекта.
            </para>
            <alert class="tip">
              <para>
                Для создания дополнительных окон вы можете воспользоваться
                шаблоном <legacyBold>Окно в стиле Metro (WPF)</legacyBold> | <legacyBold>WPF Metro Window</legacyBold>. Для этого щёлкните на проекте правой кнопкой
                и выберите пункт <legacyBold>Добавить - Создать элемент</legacyBold> | <legacyBold>Add - New item</legacyBold>. В появившемся окне выберите
                тип шаблона <legacyBold>Visual C# - WPF</legacyBold>,
                а затем - <legacyBold>Окно в стиле Metro (WPF)</legacyBold> | <legacyBold>WPF Metro Window</legacyBold>,
                после чего нажмите <legacyBold>OK</legacyBold>.
              </para>
            </alert>
          </content>
        </step>
      </steps>
    </procedure>

    <procedure address="CreatingManually">
      <title>Создание приложения вручную</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              В окне Visual Studio выберите пункт <legacyBold>Файл - Создать - Проект</legacyBold> | <legacyBold>File - New - Project</legacyBold>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              В диалоговом окне <legacyBold>Создать проект</legacyBold> | <legacyBold>New Project</legacyBold> выберите тип
              шаблона <legacyBold>Visual C#</legacyBold>, затем - <legacyBold>Приложение WPF</legacyBold> | <legacyBold>WPF Application</legacyBold> и
              нажмите <legacyBold>OK</legacyBold>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              После того, как Visual Studio создаст новый проект, добавьте необходимые зависимости.
              Нажмите правой кнопкой <legacyBold>Ссылки</legacyBold> | <legacyBold>References</legacyBold> и выберите пункт
              <legacyBold>Добавить ссылку...</legacyBold> | <legacyBold>Add reference...</legacyBold>. В появившемся окне выберите пункт
              <legacyBold>Сборки - Расширения</legacyBold> | <legacyBold>Assemblies - Extensions</legacyBold>, затем выберите сборку <legacyBold>Elysium</legacyBold>
              и нажмите <legacyBold>OK</legacyBold>.
            </para>
            <alert class="note">
              <para>
                Если вы используете Visual Studio 2010 и у вас не установлено расширение <legacyBold>Productivity Power Tools</legacyBold>, то в диалоге
                <legacyItalic>Добавить ссылку</legacyItalic> вам нужно выбрать пункт <legacyBold>.NET</legacyBold>.
              </para>
            </alert>
          </content>
        </step>
      </steps>
    </procedure>

    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
