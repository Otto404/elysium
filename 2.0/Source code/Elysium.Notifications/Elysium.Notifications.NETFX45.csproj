<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9509ED08-83F8-4F74-8461-24A485E60759}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Elysium.Notifications</RootNamespace>
    <AssemblyName>Elysium.Notifications</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <FileAlignment>512</FileAlignment>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\SigningKey.pfx</AssemblyOriginatorKeyFile>
    <DigitalSignatureKeyFile>..\..\..\..\Source code\SigningKey.pfx</DigitalSignatureKeyFile>
    <DigitalSignatureParams>/t http://timestamp.comodoca.com/authenticode</DigitalSignatureParams>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <OutputPath>..\..\Binary\.NET Framework 4.5\Debug\AnyCPU\</OutputPath>
    <IntermediateOutputPath>obj\.NET Framework 4.5\Debug\AnyCPU\</IntermediateOutputPath>
    <DefineConstants>NETFX45;TRACE;DEBUG;CONTRACTS_FULL</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsInferRequires>False</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>False</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsDisjunctiveRequires>False</CodeContractsDisjunctiveRequires>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>False</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>False</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <OutputPath>..\..\Binary\.NET Framework 4.5\Release\AnyCPU\</OutputPath>
    <IntermediateOutputPath>obj\.NET Framework 4.5\Release\AnyCPU\</IntermediateOutputPath>
    <DefineConstants>NETFX45;TRACE;RELEASE</DefineConstants>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <DebugType>none</DebugType>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsInferRequires>False</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>False</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Analysis|AnyCPU'">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <OutputPath>..\..\Binary\.NET Framework 4.5\Analysis\AnyCPU\</OutputPath>
    <IntermediateOutputPath>obj\.NET Framework 4.5\Analysis\AnyCPU\</IntermediateOutputPath>
    <DefineConstants>NETFX45;TRACE;DEBUG;CONTRACTS_FULL;CODE_ANALYSIS</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisLogFile>..\..\Binary\.NET Framework 4.5\Analysis\AnyCPU\Elysium.Notifications.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>True</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>True</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>True</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>True</CodeContractsSuggestObjectInvariants>
    <CodeContractsDisjunctiveRequires>True</CodeContractsDisjunctiveRequires>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions>-outputwarnmasks -maxWarnings 2147483647</CodeContractsExtraAnalysisOptions>
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>False</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>2</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Xaml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <Target Name="Default">
    <MSBuild.ExtensionPack.Framework.Assembly TaskAction="GetInfo" NetAssembly="..\..\Binary\.NET Framework 4.5\$(Configuration)\AnyCPU\Elysium.dll">
      <Output TaskParameter="OutputItems" ItemName="Elysium" />
    </MSBuild.ExtensionPack.Framework.Assembly>
  </Target>
  <Choose>
    <When Condition="'$(BuildingInsideVisualStudio)' == 'true'">
      <ItemGroup>
        <ProjectReference Include="..\Elysium\Elysium.NETFX45.csproj">
          <Project>{C61E1435-AB54-4C63-BAEC-1583C31099DB}</Project>
          <Name>Elysium.NETFX45</Name>
          <Private>True</Private>
        </ProjectReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="%(Elysium.FullName)">
          <HintPath>..\..\Binary\.NET Framework 4.5\$(Configuration)\AnyCPU\Elysium.dll</HintPath>
          <Private>True</Private>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>AssemblyInfo.tt</DependentUpon>
    </Compile>
    <Compile Include="Animation.cs" />
    <Compile Include="Client\NotificationManager.cs" />
    <Compile Include="Exceptions\PushNotificationFailedException.cs" />
    <Compile Include="Exceptions\ServerUnavailableException.cs" />
    <Compile Include="HorizontalPlacement.cs" />
    <Compile Include="Internal\INotificationManager.cs" />
    <Compile Include="Internal\Notification.cs" />
    <Compile Include="NotificationManager.cs" />
    <Compile Include="VerticalPlacement.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Properties\AssemblyInfo.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AssemblyInfo.cs</LastGenOutput>
    </None>
    <None Include="Documentation\en\Elysium.Notifications.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Elysium.Notifications.xml</LastGenOutput>
    </None>
    <None Include="Documentation\ru\Elysium.Notifications.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Elysium.Notifications.xml</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Documentation\en\Elysium.Notifications.xml">
      <DependentUpon>Elysium.Notifications.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </None>
    <None Include="Documentation\ru\Elysium.Notifications.xml">
      <DependentUpon>Elysium.Notifications.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Animation.en.xml">
      <DependentUpon>Animation.cs</DependentUpon>
    </None>
    <None Include="Animation.ru.xml">
      <DependentUpon>Animation.cs</DependentUpon>
    </None>
    <None Include="HorizontalPlacement.en.xml">
      <DependentUpon>HorizontalPlacement.cs</DependentUpon>
    </None>
    <None Include="HorizontalPlacement.ru.xml">
      <DependentUpon>HorizontalPlacement.cs</DependentUpon>
    </None>
    <None Include="VerticalPlacement.en.xml">
      <DependentUpon>VerticalPlacement.cs</DependentUpon>
    </None>
    <None Include="VerticalPlacement.ru.xml">
      <DependentUpon>VerticalPlacement.cs</DependentUpon>
    </None>
    <None Include="NotificationManager.en.xml">
      <DependentUpon>NotificationManager.cs</DependentUpon>
    </None>
    <None Include="NotificationManager.ru.xml">
      <DependentUpon>NotificationManager.cs</DependentUpon>
    </None>
    <None Include="Exceptions\PushNotificationFailedException.en.xml">
      <DependentUpon>PushNotificationFailedException.cs</DependentUpon>
    </None>
    <None Include="Exceptions\PushNotificationFailedException.ru.xml">
      <DependentUpon>PushNotificationFailedException.cs</DependentUpon>
    </None>
    <None Include="Exceptions\ServerUnavailableException.en.xml">
      <DependentUpon>ServerUnavailableException.cs</DependentUpon>
    </None>
    <None Include="Exceptions\ServerUnavailableException.ru.xml">
      <DependentUpon>ServerUnavailableException.cs</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <TextTemplatingPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\TextTemplating\v10.0\Microsoft.TextTemplating.targets</TextTemplatingPath>
    <TextTemplatingPath Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v11.0\TextTemplating\Microsoft.TextTemplating.targets')">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v11.0\TextTemplating\Microsoft.TextTemplating.targets</TextTemplatingPath>
    <MSBuildExtensionPackPath>$(MSBuildExtensionsPath32)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks</MSBuildExtensionPackPath>
    <MSBuildExtensionPackPath Condition="Exists('$(MSBuildExtensionsPath64)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks')">$(MSBuildExtensionsPath64)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks</MSBuildExtensionPackPath>
  </PropertyGroup>
  <Import Condition="Exists('$(MSBuildExtensionPackPath)')" Project="$(MSBuildExtensionPackPath)" />
  <Import Condition="Exists('$(TextTemplatingPath)')" Project="$(TextTemplatingPath)" />
  <PropertyGroup>
    <PostBuildEvent>"..\..\..\..\Tools and Resources\Utilities\signtool\.NET Framework 4.5\x86\signtool.exe" sign /f "$(DigitalSignatureKeyFile)" $(DigitalSignatureParams) "$(AssemblyName).dll"</PostBuildEvent>
  </PropertyGroup>
</Project>