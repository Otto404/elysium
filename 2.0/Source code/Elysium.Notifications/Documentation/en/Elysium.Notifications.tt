<#@ template language="C#" hostSpecific="true" #>
<#@ output extension=".xml" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#
    var root = Host.ResolvePath(@"..\..\");
    
    var paths = new List<string>
        {
            @"Animation.en.xml",
            @"HorizontalPlacement.en.xml",
            @"NotificationManager.en.xml",
            @"VerticalPlacement.en.xml",

            @"Exceptions\PushNotificationFailedException.en.xml",
            @"Exceptions\ServerUnavailableException.en.xml"
        };

    var documentation = new XDocument(new XDeclaration("1.0", "utf-8", "yes"));
    
    var doc = new XElement("doc");
    doc.Add(new XElement("assembly", new XElement("name", "Elysium.Notifications")));
    
    var members = new XElement("members");
    
    foreach (var declaration in paths.Select(path => XDocument.Load(Path.Combine(root, path)).Root.Element("members").Elements()).SelectMany(partOfDocumentation => partOfDocumentation))
    {
        declaration.Name = "member";
        members.Add(declaration);
    }
    
    doc.Add(members);
    
    documentation.Add(doc);
#>
<#= documentation.Declaration #>
<#= documentation #>