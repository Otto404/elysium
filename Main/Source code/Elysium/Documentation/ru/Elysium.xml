<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <member name="T:Elysium.AccentBrushes">
      <summary>
        Предоставляет набор кистей со сплошной заливкой на основе одного из акцентирующих цветов.
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Blue">
      <summary>
        Возвращает кисть сплошной заливки синего цвета (#FF017BCD).
      </summary>
      <value>Кисть со сплошной заливкой синего цвета (#FF017BCD).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Brown">
      <summary>
        Возвращает кисть сплошной заливки коричневого цвета (#FFA05000).
      </summary>
      <value>Кисть со сплошной заливкой коричневого цвета (#FFA05000).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Green">
      <summary>
        Возвращает кисть сплошной заливки зелёного цвета (#FF339933).
      </summary>
      <value>Кисть со сплошной заливкой зелёного цвета (#FF339933).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Lime">
      <summary>
        Возвращает кисть сплошной заливки лаймового цвета (#FF8CBF26).
      </summary>
      <value>Кисть со сплошной заливкой лаймового цвета (#FF8CBF26).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Magenta">
      <summary>
        Возвращает кисть сплошной заливки цвета маджента (#FFFF0097).
      </summary>
      <value>Кисть со сплошной заливкой цвета маджента (#FFFF0097).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Mango">
      <summary>
        Возвращает кисть сплошной заливки цвета манго (#FFF09609).
      </summary>
      <value>Кисть со сплошной заливкой цвета манго (#FFF09609).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Orange">
      <summary>
        Возвращает кисть сплошной заливки оранжевого цвета (#FFCB5201).
      </summary>
      <value>Кисть со сплошной заливкой оранжевого цвета (#FFCB5201).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Pink">
      <summary>
        Возвращает кисть сплошной заливки светло-розового цвета (#FFE671B8).
      </summary>
      <value>Кисть со сплошной заливкой светло-розового цвета (#FFE671B8).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Purple">
      <summary>
        Возвращает кисть сплошной заливки пурпурного цвета (#FF69227B).
      </summary>
      <value>Кисть со сплошной заливкой пурпурного цвета (#FFA69227B).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Red">
      <summary>
        Возвращает кисть сплошной заливки красного цвета (#FFE51400).
      </summary>
      <value>Кисть со сплошной заливкой красного цвета (#FFE51400).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Rose">
      <summary>
        Возвращает кисть сплошной заливки розового цвета (#FFD80073).
      </summary>
      <value>Кисть со сплошной заливкой розового цвета (#FFD80073).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Sky">
      <summary>
        Возвращает кисть сплошной заливки голубого цвета (#FF1BA1E2).
      </summary>
      <value>Кисть со сплошной заливкой голубого цвета (#FF1BA1E2).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Viridian">
      <summary>
        Возвращает кисть сплошной заливки морского цвета (#FF00ABA9).
      </summary>
      <value>Кисть со сплошной заливкой морского цвета (#FF00ABA9).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Violet">
      <summary>
        Возвращает кисть сплошной заливки фиолетового цвета (#FF00ABA9).
      </summary>
      <value>Кисть со сплошной заливкой фиолетового цвета (#FFA200FF).</value>
    </member>
    <member name="T:Elysium.Manager">
      <summary>
        Представляет класс, управляющий базовыми настройками темы.
      </summary>
    </member>
    <member name="P:Elysium.Manager.DefaultTheme">
      <summary>
        Возвращает тип темы по-умолчанию.
      </summary>
      <value>Одно из значений перечисления <see cref="T:Elysium.Theme" /></value>
    </member>
    <member name="P:Elysium.Manager.DefaultAccentBrush">
      <summary>
        Возвращает кисть сплошной заливки, содержащую акцентирующий цвет, используемый по-умолчанию.
      </summary>
      <value>Кисть со сплошной заливкой.</value>
    </member>
    <member name="P:Elysium.Manager.DefaultContrastBrush">
      <summary>
        Возвращает кисть сплошной заливки, содержащую контрастный (к акцентирующему) цвет, используемый по-умолчанию.
      </summary>
      <value>Кисть со сплошной заливкой.</value>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.FrameworkElement,Elysium.Theme@)">
      <summary>
        Возвращает актуальный для элемента управления тип темы безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать текущий тип темы.</param>
      <param name="theme">Актуальный для указанного элемента управления тип темы.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Возвращает актуальный для элемента управления тип темы.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать текущий тип темы.</param>
      <returns>Тип темы для указанного элемента управления.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.Application,Elysium.Theme@)">
      <summary>
        Возвращает актуальный для приложения тип темы безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать текущий тип темы.</param>
      <param name="theme">Актуальный для указанного приложения тип темы.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.Application)">
      <summary>
        Возвращает актуальный для приложения тип темы.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать текущий тип темы.</param>
      <returns>Тип темы для указанного приложения.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Возвращает значение акцентирующего цвета для указанного элемента управления безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать акцентирующий цвет.</param>
      <param name="accentBrush">Акцентирующий цвет для указанного элемента управления.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение акцентирующего цвета для указанного элемента управления.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать акцентирующий цвет.</param>
      <returns>Акцентирующий цвет для указанного элемента управления.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Возвращает значение акцентирующего цвета для указанного приложения безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать акцентирующий цвет.</param>
      <param name="accentBrush">Акцентирующий цвет для указанного приложения.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.Application)">
      <summary>
        Возвращает значение акцентирующего цвета для указанного приложения.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать акцентирующий цвет.</param>
      <returns>Акцентирующий цвет для указанного приложения.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Возвращает значение контрастного (к акцентирующему) цвета для указанного элемента управления безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать контрастный (к акцентирующему) цвет.</param>
      <param name="contrastBrush">Контрастный (к акцентирующему) цвет для указанного элемента управления.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение контрастного (к акцентирующему) цвета для указанного элемента управления.
      </summary>
      <param name="reference">Элемент управления, для которого требуется узнать контрастный (к акцентирующему) цвет.</param>
      <returns>Контрастный (к акцентирующему) цвет для указанного элемента управления.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Возвращает значение контрастного (к акцентирующему) цвета для указанного приложения безопасным методом без генерации исключений.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать контрастный (к акцентирующему) цвет.</param>
      <param name="contrastBrush">Контрастный (к акцентирующему) цвет для указанного приложения.</param>
      <returns>True, если выполнение метода прошло успешно, иначе False.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.Application)">
      <summary>
        Возвращает значение контрастного (к акцентирующему) цвета для указанного приложения.
      </summary>
      <param name="reference">Экземпляр приложения, для которого требуется узнать контрастный (к акцентирующему) цвет.</param>
      <returns>Контрастный (к акцентирующему) цвет для указанного приложения.</returns>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <returns>Экземпляр <see cref="T:System.Windows.Threading.DispatcherOperation" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Вызов данного метода эквивалентен вызову базового метода BeginApply со значением null для параметров theme, accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.ApplyAsync(System.Windows.Application)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <returns>Экземпляр <see cref="T:System.Threading.Tasks.Task" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Вызов данного метода эквивалентен вызову базового метода ApplyAsync со значением null для параметров theme, accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application)">
      <summary>
        Задаёт настройки темы для всего приложения.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <remarks>
        Вызов данного метода эквивалентен вызову базового метода Apply со значением null для параметров theme, accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Windows.Threading.DispatcherOperation" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода BeginApply со значением null для параметров accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.ApplyAsync(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Threading.Tasks.Task" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода ApplyAsync со значением null для параметров accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт настройки темы для всего приложения.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода Apply со значением null для параметров accentBrush и contrastBrush.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Windows.Threading.DispatcherOperation" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода Apply со значением null для параметра theme.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.ApplyAsync(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Threading.Tasks.Task" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода Apply со значением null для параметра theme.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list>
        Вызов данного метода эквивалентен вызову базового метода Apply со значением null для параметра theme.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Windows.Threading.DispatcherOperation" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list></remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.ApplyAsync(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <returns>Экземпляр <see cref="T:System.Threading.Tasks.Task" />, который позволяет управлять потоком выполнения задачи.</returns>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list></remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт настройки темы для всего приложения.
      </summary>
      <param name="application">Экземпляр приложения, для которого задаются настройки темы.</param>
      <param name="theme">
        Одно из значений перечисления <see cref="T:Elysium.Theme" />, либо null.
      </param>
      <param name="accentBrush">
        Кисть, содержащая акцентирующий цвет, либо null.
      </param>
      <param name="contrastBrush">
        Кисть, содержащая контрастный цвет, либо null.
      </param>
      <remarks>
        Если параметру задано значение null, то:
        <list type="number"><item>В случае, если ранее этот параметр уже задавался, то будет использовано его старое значение.</item><item>В случае, если ранее этот параметр не задавался, то будет использовано значение по-умолчанию.</item></list></remarks>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.BeginRemove(System.Windows.Application)">
      <summary>
        Отключает тему в указанном приложении асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого производится отключение темы.</param>
      <returns>Экземпляр <see cref="T:System.Windows.Threading.DispatcherOperation" />, который позволяет управлять потоком выполнения задачи.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.RemoveAsync(System.Windows.Application)">
      <summary>
        Отключает тему в указанном приложении асинхронно.
      </summary>
      <param name="application">Экземпляр приложения, для которого производится отключение темы.</param>
      <returns>Экземпляр <see cref="T:System.Threading.Tasks.Task" />, который позволяет управлять потоком выполнения задачи.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Remove(System.Windows.Application)">
      <summary>
        Отключает тему в указанном приложении.
      </summary>
      <param name="application">Экземпляр приложения, для которого производится отключение темы.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="application" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="T:Elysium.Theme">
      <summary>
        Определяет тип темы.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Dark">
      <summary>
        Элементы управления используют тёмную цветовую гамму по умолчанию.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Light">
      <summary>
        Элементы управления используют светлую цветовую гамму по умолчанию.
      </summary>
    </member>
    <member name="T:Elysium.InvalidStyleException">
      <summary>
        Исключение, которое генерируется при проведении недопустимой операции связанной со стилем.
      </summary>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor">
      <inheritdoc cref="M:System.Exception.#ctor" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String)">
      <inheritdoc cref="M:System.Exception.#ctor(System.String)" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String,System.Exception)">
      <inheritdoc cref="M:System.Exception.#ctor(System.String,System.Exception)" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="T:Elysium.Extensions.DispatcherExtensions">
      <summary>
        Предоставляет методы-расширения класса <see cref="T:System.Windows.Threading.Dispatcher" />.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
      <inheritdoc cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <param name="dispatcher">Экземпляр <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="callback">Обратный вызов.</param>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
      <inheritdoc cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <param name="dispatcher">Экземпляр <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="callback">Обратный вызов.</param>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
      <inheritdoc cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <param name="dispatcher">Экземпляр <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="callback">Обратный вызов.</param>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
      <inheritdoc cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <param name="dispatcher">Экземпляр <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="callback">Обратный вызов.</param>
    </member>
    <member name="T:Elysium.Extensions.LogicalTreeHelperExtensions">
      <summary>
        Предоставляет методы расширения для поиска по логическому дереву элементов WPF.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск родителя указанного объекта в логическом дереве элементов WPF.
      </summary>
      <typeparam name="T">Тип родителя.</typeparam>
      <param name="reference">Элемент, для которого осуществляется поиск родителя.</param>
      <returns>Родитель или null, если среди предков нет объектов указанного типа.</returns>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск корневого элемента логического дерева WPF для указанного объекта.
      </summary>
      <param name="reference">Элемент, для которого осуществляется поиск корневого элемента логического дерева WPF.</param>
      <returns>Корневой элемент логического дерева WPF или null, если указанный объект является корневым элементом.</returns>
    </member>
    <member name="T:Elysium.Extensions.VisualTreeHelperExtensions">
      <summary>
        Предоставляет методы расширения для поиска по визуальному дереву элементов WPF.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск родителя указанного объекта в визуальном дереве элементов WPF.
      </summary>
      <typeparam name="T">Тип родителя.</typeparam>
      <param name="reference">Элемент, для которого осуществляется поиск родителя.</param>
      <returns>Родитель или null, если среди предков нет объектов указанного типа.</returns>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Осуществляет поиск корневого элемента визуального дерева WPF для указанного объекта.
      </summary>
      <param name="reference">Элемент, для которого осуществляется поиск корневого элемента визуального дерева WPF.</param>
      <returns>Корневой элемент визуального дерева WPF или null, если указанный объект является корневым элементом.</returns>
    </member>
    <member name="T:Elysium.Parameters.Bullet">
      <summary>
        Представляет класс, управляющий основными настройками флажка в стилях элементов управления <see cref="T:System.Windows.Controls.CheckBox" /> и
        <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Bullet.DecoratorSize">
      <summary>
        Возвращает или задаёт размер области на которой располагается маркер в элементах управления <see cref="T:System.Windows.Controls.CheckBox" /> и
        <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
      <value>Размер области на которой располагается маркер. Значение по умолчанию — 16px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Bullet.DecoratorSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetDecoratorSize(control);
          Parameters.SetDecoratorSize(control, 16d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:Bullet.DecoratorSize="16px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Bullet.DecoratorSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetDecoratorSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер области на которой располагается маркер.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetDecoratorSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер области на которой располагается маркер.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
    </member>
    <member name="P:Elysium.Parameters.Bullet.Size">
      <summary>
        Возвращает или задаёт размер маркера в элементах управления <see cref="T:System.Windows.Controls.CheckBox" /> и
        <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
      <value>Размер маркера. Значение по умолчанию — 8px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Bullet.SizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetSize(control);
          Parameters.SetSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:Bullet.Size="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Bullet.SizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Bullet.Size" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.Size" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.Size" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Bullet.Size" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.CheckBox" />, <see cref="T:System.Windows.Controls.RadioButton" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is CheckBox) || (obj is RadioButton)</requires>
    </member>
    <member name="T:Elysium.Parameters.CheckBox">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.CheckBox.CheckSize">
      <summary>
        Возвращает или задаёт размер маркера в состоянии "включен" для элемента управления <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
      <value>Размер маркера в состоянии "включен". Значение по умолчанию — 10px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.CheckBox.CheckSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.CheckBox.GetCheckSize(control);
          Parameters.CheckBox.SetCheckSize(control, 10d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:CheckBox.CheckSize="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CheckBox.CheckSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.CheckBox.CheckSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.CheckBox.CheckSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.GetCheckSize(System.Windows.Controls.CheckBox)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера в состоянии "включен".</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.SetCheckSize(System.Windows.Controls.CheckBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера в состоянии "включен".</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ComboBox">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ButtonSize">
      <summary>
        Возвращает или задаёт ширину кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — 18px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ButtonSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        Значение этого свойства используется только если элемент управления <see cref="T:System.Windows.Controls.ComboBox" /> объявлен как редактируемый.
        В противном случае, значение игнорируется, а кнопка растягивается на всю ширину элемента управления.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetButtonSize(control);
          Parameters.ComboBox.SetButtonSize(control, 18d);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ButtonSize="18px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ButtonSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetButtonSize(System.Windows.Controls.ComboBox)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetButtonSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Ширина кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowSize">
      <summary>
        Возвращает или задаёт размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetArrowSize(control);
          Parameters.ComboBox.SetArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowSize(System.Windows.Controls.ComboBox)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowMargin">
      <summary>
        Возвращает или задаёт отступ указателя на возможность открытия (стрелки) от краёв кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        Отступ указателя на возможность открытия (стрелки) от краёв кнопки в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />. Значение по умолчанию — (5, 0, 5, 0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        В стиле по умолчанию используется значение только правого отступа, остальные значения игнорируются.
        Тем не менее, при переопределении стиля вы можете использовать и значения других отступов.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetArrowMargin(control);
          Parameters.ComboBox.SetArrowMargin(control, new Thickness(5d, 0d, 5d, 0d));
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ArrowMargin="5,0,5,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowMarginProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowMargin(System.Windows.Controls.ComboBox)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowMargin(System.Windows.Controls.ComboBox,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.CommandButtons">
      <summary>
        Представляет класс, управляющий настройками стилей кнопок управления.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.CommandButtons.Mask">
      <summary>
        Возвращает или задаёт кисть, используемую для заливки содержимого кнопок управления — классов, наследующихся от класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />.
      </summary>
      <value>Кисть, используемая для заливки содержимого кнопок управления. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.CommandButtons.MaskProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, сопадающее со значением ресурса MiddleLightBrush.
      </remarks>
      <example>
        <code lang="C#">
          var control = new CommandButton();
          var currentValue = Parameters.CommandButtons.GetMask(control);
          Parameters.CommandButtons.SetMask(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;CommandButton params:CommandButtons.Mask="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CommandButtons.MaskProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.CommandButtons.Mask" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtons.Mask" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.GetMask(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая для заливки содержимого кнопок управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.SetMask(Elysium.Controls.Primitives.CommandButtonBase,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая для заливки содержимого кнопок управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Design">
      <summary>
        Представляет класс, предоставляющий свойства зависимостей для управления настройками темы элемента управления из XAML в режиме конструктора.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Design.Theme">
      <summary>
        Возвращает или задаёт значение, указывающее на текующий тип темы в режиме конструктора.
      </summary>
      <value>
        Одно из значений перечисления <see cref="T:Elysium.Theme" /> или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.ThemeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetTheme(control);
          Parameters.Design.SetTheme(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.Theme="Light"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.ThemeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Design.Theme" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Design.Theme" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий тип темы для указанного элемента управления в режиме конструктора.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Новый тип темы для указанного элемента управления в режиме конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Design.AccentBrush">
      <summary>
        Возвращает или задаёт акцентирующий цвет в режиме конструктора.
      </summary>
      <value>Кисть, содержащая акцентирующий цвет, или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.AccentBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetAccentBrush(control);
          Parameters.Design.SetAccentBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.AccentBrush="{x:Static metro:AccentBrushes.Blue}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.AccentBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Design.AccentBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Design.AccentBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий акцентирующий цвет для указанного элемента управления в режиме конструктора.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Акцентирующий цвет для указанного элемента управления в режиме конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Design.ContrastBrush">
      <summary>
        Возвращает или задаёт контрастный (к акцентирующему) цвет в режиме конструктора.
      </summary>
      <value>Кисть, содержащая контрастный цвет, или null, если элемент управления должен использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.ContrastBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetContrastBrush(control);
          Parameters.Design.SetContrastBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.ContrastBrush="White"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.ContrastBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Design.ContrastBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Design.ContrastBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий контрастный цвет для указанного элемента управления в режиме конструктора.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Контрастный цвет для указанного элемента управления в режиме конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.DropDown">
      <summary>
        Представляет класс, управляющий настройками стиля выпадающего списка (в т.ч. выпадающего субменю).
      </summary>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsOpen">
      <summary>
        Возвращает или задаёт значение, указывающее открыт ли в данный момент выпадающий список.
      </summary>
      <value>True, если выпадающий список открыт; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsOpen(control);
          Parameters.DropDown.SetIsOpen(control, true);
        </code>
        <code lang="XAML">
          &lt;Trigger Property="IsSubmenuOpen" Value="True"&gt;
            &lt;Setter TargetName="PART_Popup" Property="params:DropDown.IsOpen" Value="True"/&gt;
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsOpenProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DropDown.IsOpen" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsOpen" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsOpen(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Значение, указывающее открыт ли в данный момент выпадающий список.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.DropDown.SetIsOpen(System.Windows.Controls.Primitives.Popup,System.Boolean)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Значение, указывающее открыт ли в данный момент выпадающий список.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition">
      <summary>
        Возвращает значение, указывающее совпадает ли текущее горизонтальное положение выпадающего списка и соответствующее значение по-умолчнию.
      </summary>
      <value>True, если значения сопадают; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsDefaultHorizontalPositionProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsDefaultHorizontalPosition(control);
        </code>
        <code lang="XAML">
          &lt;Trigger SourceName="PART_Popup" Property="params:DropDown.IsDefaultHorizontalPosition" Value="True"&gt;
            ...
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultHorizontalPositionProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultHorizontalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Значение, указывающее совпадает ли текущее горизонтальное положение выпадающего списка и соответствующее значение по-умолчнию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition">
      <summary>
        Возвращает значение, указывающее совпадает ли текущее вертикальное положение выпадающего списка и соответствующее значение по-умолчнию.
      </summary>
      <value>True, если значения сопадают; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsDefaultVerticalPositionProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsDefaultVerticalPosition(control);
        </code>
        <code lang="XAML">
          &lt;Trigger SourceName="PART_Popup" Property="params:DropDown.IsDefaultVerticalPosition" Value="True"&gt;
            ...
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultVerticalPositionProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultVerticalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Значение, указывающее совпадает ли текущее вертикальное положение выпадающего списка и соответствующее значение по-умолчнию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="F:Elysium.Parameters.DropDown.PopupPlacementCallback">
      <summary>
        Возвращает делегат, используемый для вычисления положения выпадающего списка.
      </summary>
      <value>Делегат, используемый для вычисления положения выпадающего списка.</value>
      <seealso cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
    </member>
    <member name="T:Elysium.Parameters.General">
      <summary>
        Представляет класс, управляющий основными настройками стилей элементов управления.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.TitleFontSize">
      <summary>
        Возвращает или задаёт размер шрифта в заголовке окна.
      </summary>
      <value>Размер шрифта в заголовке окна. Значение по умолчанию — 12pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.TitleFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.Window" /> (только заголовок)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Parameters.GetTitleFontSize(control);
          Parameters.SetTitleFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Window params:General.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.TitleFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.TitleFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.TitleFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetTitleFontSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.TitleFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта в заголовке окна.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetTitleFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.TitleFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта в заголовке окна.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.HeaderFontSize">
      <summary>
        Возвращает или задаёт размер шрифта в заголовке элемента управления.
      </summary>
      <value>Размер шрифта в заголовке элемента управления. Значение по умолчанию — 16pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.HeaderFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.TabItem" /> (только заголовок)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.GetHeaderFontSize(control);
          Parameters.SetHeaderFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TabControl params:General.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.HeaderFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.HeaderFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.HeaderFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetHeaderFontSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта в заголовке элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetHeaderFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта в заголовке элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.ContentFontSize">
      <summary>
        Возвращает или задаёт размер шрифта для содержимого элемента управления.
      </summary>
      <value>Размер шрифта для содержимого элемента управления. Значение по умолчанию — 10pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.ContentFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.ApplicationBar" /></description></item><item><description><see cref="T:System.Windows.Controls.Button" /></description></item><item><description><see cref="T:System.Windows.Controls.CheckBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ComboBox" /></description></item><item><description><see cref="T:Elysium.Controls.CommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ContextMenu" /></description></item><item><description><see cref="T:Elysium.Controls.DropDownCommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ListBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RadioButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.RepeatButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Slider" /></description></item><item><description><see cref="T:Elysium.Controls.Submenu" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.ToggleButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleCommandButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleSwitch" /></description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetContentFontSize(control);
          Parameters.SetContentFontSize(control, 10d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.ContentFontSize="10pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.ContentFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.ContentFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.ContentFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetContentFontSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.ContentFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта для содержимого элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetContentFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.ContentFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта для содержимого элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.TextFontSize">
      <summary>
        Возвращает или задаёт размер шрифта текста.
      </summary>
      <value>Размер шрифта текста. Значение по умолчанию — 9pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.TextFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        Это свойство имеет действие только на следующие классы:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.PasswordBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RichTextBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ScrollViewer" /></description></item><item><description><see cref="T:System.Windows.Controls.TabControl" /> (только содержимое)
            </description></item><item><description><see cref="T:System.Windows.Controls.TextBox" /></description></item><item><description><see cref="T:Elysium.Controls.Window" /> (только содержимое)
            </description></item></list>
        Несмотря на это, вы можете применять его к любому элементу управления, т.к. это свойство наследуется.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TextBox();
          var currentValue = Parameters.GetTextFontSize(control);
          Parameters.SetTextFontSize(control, 9d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TextBox params:General.ContentFontSize="9pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.TextFontSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.TextFontSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.TextFontSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetTextFontSize(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.TextFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер шрифта текста.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetTextFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.TextFontSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер шрифта текста.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThickness">
      <summary>
        Возвращает или задаёт толщину линии по умолчанию.
      </summary>
      <value>Толщина линии по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThickness(control);
          Parameters.SetDefaultThickness(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultThickness="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.DefaultThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThickness(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина линии по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThickness">
      <summary>
        Возвращает или задаёт толщину полужирной линии.
      </summary>
      <value>Толщина полужирной линии. Значение по умолчанию — 1.5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThickness(control);
          Parameters.SetSemiBoldThickness(control, new Thickness(1.5d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldThickness="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина полужирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина полужирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThickness">
      <summary>
        Возвращает или задаёт толщину жирной линии.
      </summary>
      <value>Толщина жирной линии. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThickness(control);
          Parameters.SetBoldThickness(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldThickness="2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.BoldThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина жирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина жирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThicknessValue">
      <summary>
        Возвращает или задаёт толщину линии по умолчанию.
      </summary>
      <value>Толщина линии по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThicknessValue(control);
          Parameters.SetDefaultThicknessValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultThicknessValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина линии по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThicknessValue">
      <summary>
        Возвращает или задаёт толщину полужирной линии.
      </summary>
      <value>Толщина полужирной линии. Значение по умолчанию — 1.5px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThicknessValue(control);
          Parameters.SetSemiBoldThicknessValue(control, 1.5d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldThicknessValue="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина полужирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина полужирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThicknessValue">
      <summary>
        Возвращает или задаёт толщину жирной линии.
      </summary>
      <value>Толщина жирной линии. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThicknessValue(control);
          Parameters.SetBoldThicknessValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldThicknessValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.BoldThicknessValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThicknessValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина жирной линии.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина жирной линии.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPadding">
      <summary>
        Возвращает или задаёт размер отступов по умолчанию.
      </summary>
      <value>Размер отступов по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPadding(control);
          Parameters.SetDefaultPadding(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultPadding="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.DefaultPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPadding(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер отступов по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер отступов по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPadding">
      <summary>
        Возвращает или задаёт величину отступов среднего размера.
      </summary>
      <value>Величина отступов среднего размера. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPadding(control);
          Parameters.SetSemiBoldPadding(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldPadding="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина отступов среднего размера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина отступов среднего размера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPadding">
      <summary>
        Возвращает или задаёт величину наиболее большого отступа.
      </summary>
      <value>Величина наиболее большого отступа. Значение по умолчанию — 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPadding(control);
          Parameters.SetBoldPadding(control, new Thickness(6d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldPadding="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.BoldPadding" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPadding" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина наиболее большого отступа.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPadding" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина наиболее большого отступа.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPaddingValue">
      <summary>
        Возвращает или задаёт размер отступов по умолчанию.
      </summary>
      <value>Размер отступов по умолчанию. Значение по умолчанию — 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPaddingValue(control);
          Parameters.SetDefaultPaddingValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultPaddingValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер отступов по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер отступов по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPaddingValue">
      <summary>
        Возвращает или задаёт величину отступов среднего размера.
      </summary>
      <value>Величина отступов среднего размера. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPaddingValue(control);
          Parameters.SetSemiBoldPaddingValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldPaddingValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина отступов среднего размера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина отступов среднего размера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPaddingValue">
      <summary>
        Возвращает или задаёт величину наиболее большого отступа.
      </summary>
      <value>Величина наиболее большого отступа. Значение по умолчанию — 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPaddingValue(control);
          Parameters.SetBoldPaddingValue(control, 6d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldPaddingValue="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingValueProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.BoldPaddingValue" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPaddingValue" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Величина наиболее большого отступа.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Величина наиболее большого отступа.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultDuration">
      <summary>
        Возвращает или задаёт продолжительность анимации по умолчанию.
      </summary>
      <value>Продолжительность анимации по умолчанию. Значение по умолчанию — 0 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultDuration(control);
          Parameters.SetDefaultDuration(control, new Duration(TimeSpan.FromSeconds(0d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultDuration="00:00:00.0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.DefaultDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultDuration(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Продолжительность анимации по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.DefaultDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Продолжительность анимации по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.MinimumDuration">
      <summary>
        Возвращает или задаёт минимальную продолжительность анимации.
      </summary>
      <value>Минимальная продолжительность анимации. Значение по умолчанию — 0.2 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.MinimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMinimumDuration(control);
          Parameters.SetMinimumDuration(control, new Duration(TimeSpan.FromSeconds(0.2d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.MinimumDuration="00:00:00.2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.MinimumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.MinimumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.MinimumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetMinimumDuration(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.MinimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Минимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetMinimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.MinimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Минимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.OptimumDuration">
      <summary>
        Возвращает или задаёт оптимальную продолжительность анимации.
      </summary>
      <value>Оптимальная продолжительность анимации. Значение по умолчанию — 0.5 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.OptimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetOptimumDuration(control);
          Parameters.SetOptimumDuration(control, new Duration(TimeSpan.FromSeconds(0.5d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.OptimumDuration="00:00:00.5"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.OptimumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.OptimumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.OptimumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetOptimumDuration(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.OptimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Оптимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetOptimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.OptimumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Оптимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.MaximumDuration">
      <summary>
        Возвращает или задаёт максимальную продолжительность анимации.
      </summary>
      <value>Максимальная продолжительность анимации. Значение по умолчанию — 1 сек.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.MaximumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMaximumDuration(control);
          Parameters.SetMaximumDuration(control, new Duration(TimeSpan.FromSeconds(1d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.MaximumDuration="00:00:01"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.MaximumDurationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.MaximumDuration" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.MaximumDuration" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetMaximumDuration(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.MaximumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Максимальная продолжительность анимации.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetMaximumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.MaximumDuration" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Максимальная продолжительность анимации.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.ShadowBrush">
      <summary>
        Возвращает или задаёт кисть, используемую при создании теней.
      </summary>
      <value>Кисть, используемая при создании тени. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.General.ShadowBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, совпадающее со значением ресурса ForegroundBrush со степенью прозрачность 0.3.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetShadowBrush(control);
          Parameters.SetShadowBrush(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:General.ShadowBrush="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.ShadowBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.General.ShadowBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.General.ShadowBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetShadowBrush(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.General.ShadowBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая при создании теней.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetShadowBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.General.ShadowBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая при создании теней.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Manager">
      <summary>
        Представляет класс, предоставляющий свойства зависимостей для управления настройками темы элемента управления из XAML.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Manager.Theme">
      <summary>
        Возвращает или задаёт значение, указывающее на текующий тип темы.
      </summary>
      <value>
        Одно из значений перечисления <see cref="T:Elysium.Theme" /> или null, если элемент управления должен наследовать значение от родителя или использовать значение, указанное для всего приложения. Значение по умолчанию — null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.ThemeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        В случае, если параметр наследуется от приложения, гарантируется, что его значение будет обновлено при обновлении соответствующего значения для приложения.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetTheme(control);
          Parameters.Manager.SetTheme(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Manager.Theme="Light"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.ThemeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Manager.Theme" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Manager.Theme" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий тип темы для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.Theme" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Новый тип темы для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Manager.AccentBrush">
      <summary>
        Возвращает или задаёт акцентирующий цвет.
      </summary>
      <value>Кисть, содержащая акцентирующий цвет, или null, если элемент управления должен наследовать значение от родителя или использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.AccentBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        В случае, если параметр наследуется от приложения, гарантируется, что его значение будет обновлено при обновлении соответствующего значения для приложения.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetAccentBrush(control);
          Parameters.Manager.SetAccentBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Manager.AccentBrush="{x:Static metro:AccentBrushes.Blue}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.AccentBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Manager.AccentBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Manager.AccentBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий акцентирующий цвет для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Акцентирующий цвет для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Manager.ContrastBrush">
      <summary>
        Возвращает или задаёт контрастный (к акцентирующему) цвет.
      </summary>
      <value>Кисть, содержащая контрастный цвет, или null, если элемент управления должен наследовать значение от родителя или использовать значение, указанное для всего приложения. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.ContrastBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        В случае, если параметр наследуется от приложения, гарантируется, что его значение будет обновлено при обновлении соответствующего значения для приложения.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetContrastBrush(control);
          Parameters.Manager.SetContrastBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Manager.ContrastBrush="White"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.ContrastBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Manager.ContrastBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Manager.ContrastBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Текущий контрастный цвет для указанного элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Контрастный цвет для указанного элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.MenuBase">
      <summary>
        Представляет класс, управляющий настройками стиля меню.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBackground">
      <summary>
        Возвращает или задаёт цвет фона выпадающего субменю.
      </summary>
      <value>Цвет фона выпадающего меню. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBackgroundProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBackground(control);
          Parameters.MenuBase.SetSubmenuBackground(control, null);
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBackground="{x:Null}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBackgroundProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Цвет фона выпадающего меню.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Цвет фона выпадающего меню.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush">
      <summary>
        Возвращает или задаёт цвет границы выпадающего субменю.
      </summary>
      <value>
        Цвет границы выпадающего субменю. Значение по умолчанию — null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBorderBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBorderBrush(control);
          Parameters.MenuBase.SetSubmenuBorderBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBorderBrush="{x:Null}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Цвет границы выпадающего субменю.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Цвет границы выпадающего субменю.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness">
      <summary>
        Возвращает или задаёт размер границы выпадающего субменю.
      </summary>
      <value>
        Размер границы выпадающего субменю. Значение по умолчанию — (0, 0, 0, 0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBorderThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBorderThickness(control);
          Parameters.MenuBase.SetSubmenuBorderThickness(control, new Thickness(0d));
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBorderThickness="0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер границы выпадающего субменю.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер границы выпадающего субменю.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.MenuItem">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.BulletSize">
      <summary>
        Возвращает или задаёт размер маркера у класса <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>Размер маркера. Значение по умолчанию — 12px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.BulletSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        Это свойство имеет действие на элемент управления MenuItem, вложенный в выпадающее меню любого типа (будь то ContextMenu или Submenu) и не являющийся родительским элементом другого выпадающего меню.
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetBulletSize(control);
          Parameters.MenuItem.SetBulletSize(control, 12d);
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.BulletSize="12px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.BulletSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuItem.BulletSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.BulletSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetBulletSize(System.Windows.Controls.MenuItem)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер маркера.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetBulletSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер маркера.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowSize">
      <summary>
        Возвращает или задаёт размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>
        Размер указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />. Значение по умолчанию — 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetArrowSize(control);
          Parameters.MenuItem.SetArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.ArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowSize(System.Windows.Controls.MenuItem)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Размер указателя на возможность открытия в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowMargin">
      <summary>
        Возвращает или задаёт размер отступа указателя на возможность открытия (стрелки) от краёв элемента управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>
        Размер отступ указателя на возможность открытия (стрелки) от краёв элемента управления <see cref="T:System.Windows.Controls.MenuItem" />. Значение по умолчанию — (3, 0, 3, 0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.ArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetArrowMargin(control);
          Parameters.MenuItem.SetArrowMargin(control, new Thickness(3d, 0d, 3d, 0d));
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.ArrowMargin="3,0,3,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowMarginProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowMargin(System.Windows.Controls.MenuItem)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>
        Отступ указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowMargin(System.Windows.Controls.MenuItem,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">
        Размер отступа указателя на возможность открытия (стрелки) в элементе управления <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Progress">
      <summary>
        Представляет класс, управляющий настройками стилей элементов управления наследников класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Progress.BusyElementSize">
      <summary>
        Возвращает или задаёт размер элемента индикации состояния занятости (по умолчанию — кружка) для наследников класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
      <value>Размер элемента индикации состояния занятости. Значение по умолчанию — 4px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Progress.BusyElementSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ProgressBar();
          var currentValue = Parameters.Progress.GetBusyElementSize(control);
          Parameters.Progress.SetBusyElementSize(control, 4d);
        </code>
        <code lang="XAML">
          &lt;ProgressBar params:Progress.BusyElementSize="4px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Progress.BusyElementSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Progress.BusyElementSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Progress.BusyElementSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Progress.GetBusyElementSize(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер элемента индикации состояния занятости.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Progress.SetBusyElementSize(Elysium.Controls.Primitives.ProgressBase,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер элемента индикации состояния занятости.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ScrollBar">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ScrollBar.ArrowSize">
      <summary>
        Возвращает или задаёт размер указателя (стрелки) в элементе управления <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
      <value>
        Размер указателя (стрелки). Значение по умолчанию — 6px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ScrollBar.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ScrollBar();
          var currentValue = Parameters.ScrollBar.GetArrowSize(control);
          Parameters.ScrollBar.SetArrowSize(control, 6d);
        </code>
        <code lang="XAML">
          &lt;ScrollBar params:ScrollBar.ArrowSize="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ScrollBar.ArrowSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.GetArrowSize(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Размер указателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.SetArrowSize(System.Windows.Controls.Primitives.ScrollBar,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Размер указателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Slider">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Slider.TrackSize">
      <summary>
        Возвращает или задаёт длину трека в элементе управления <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Длина трека. Значение по умолчанию — 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Slider.TrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.Slider.GetTrackSize(control);
          Parameters.Slider.SetTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;Slider params:Slider.TrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Slider.TrackSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Slider.TrackSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Slider.TrackSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetTrackSize(System.Windows.Controls.Slider)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Slider.TrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Длина трека.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetTrackSize(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Slider.TrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Длина трека.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Slider.ThumbThickness">
      <summary>
        Возвращает или задаёт ширину ползунка в элементе управления <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Ширина ползунка. Значение по умолчанию — 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Slider.ThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.Slider.GetThumbThickness(control);
          Parameters.Slider.SetThumbThickness(control, 6d);
        </code>
        <code lang="XAML">
          &lt;Slider params:Slider.ThumbThickness="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Slider.ThumbThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Slider.ThumbThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Slider.ThumbThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetThumbThickness(System.Windows.Controls.Slider)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Ширина ползунка.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetThumbThickness(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Ширина ползунка.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.TabControl">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorBrush">
      <summary>
        Возвращает или задаёт кисть, используемую для заливки индикатора текущей вкладки элемента управления <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>Кисть, используемая для заливки индикатора текущей вкладки. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControl.IndicatorBrushProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        Это свойство устанавливается локально в стиле элемента управления и обычно имеет значение, сопадающее со значением ресурса AccentBrush для активной вкладки и HighlightBrush для остальной части индикатора.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.TabControl.GetIndicatorBrush(control);
          Parameters.TabControl.SetIndicatorBrush(control, Brushes.LightGray);
        </code>
        <code lang="XAML">
          &lt;CommandButton params:TabControl.IndicatorBrush="LightGray"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorBrushProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorBrush(System.Windows.DependencyObject)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Кисть, используемая для заливки индикатора текущей вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Кисть, используемая для заливки индикатора текущей вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <exception cref="T:System.ArgumentException">
        Параметер <paramref name="obj" /> не принадлежит к одному из следующих типов: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorThickness">
      <summary>
        Возвращает или задаёт толщину индикатора текущей вкладки в элементе управления <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>Толщина индикатора текущей вкладки. Значение по умолчанию — 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControl.IndicatorThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.TabControl.GetIndicatorThickness(control);
          Parameters.TabControl.SetIndicatorThickness(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Slider params:TabControl.IndicatorThickness="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorThickness(System.Windows.Controls.TabControl)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина индикатора текущей вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorThickness(System.Windows.Controls.TabControl,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина индикатора текущей вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.TabItem">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TabItem.HeaderStyle">
      <summary>
        Возвращает или задаёт стиль заголовка вкладки в элементе управления <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
      <value>Стиль заголовка вкладки. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.TabItem.HeaderStyleProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        Это свойство обычно устанавливается локально в стиле элемента управления.
      </remarks>
    </member>
    <member name="F:Elysium.Parameters.TabItem.HeaderStyleProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabItem.GetHeaderStyle(System.Windows.Controls.TabItem)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Стиль заголовка вкладки.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.TabItem.SetHeaderStyle(System.Windows.Controls.TabItem,System.Windows.Style)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Стиль заголовка вкладки.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ToggleSwitch">
      <summary>
        Представляет класс, управляющий настройками стиля элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.TrackSize">
      <summary>
        Возвращает или задаёт ширину переключателя в элементе управления <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Ширина переключателя. Значение по умолчанию — 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitch.TrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.ToggleSwitch.GetTrackSize(control);
          Parameters.ToggleSwitch.SetTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch params:ToggleSwitch.TrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.TrackSizeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetTrackSize(Elysium.Controls.ToggleSwitch)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Ширина переключателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetTrackSize(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Ширина переключателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.ThumbThickness">
      <summary>
        Возвращает или задаёт толщину переключателя в элементе управления <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Толщина переключателя. Значение по умолчанию — 10px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitch.ThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.ToggleSwitch.GetThumbThickness(control);
          Parameters.ToggleSwitch.SetThumbThickness(control, 10d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch params:ToggleSwitch.ThumbThickness="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.ThumbThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetThumbThickness(Elysium.Controls.ToggleSwitch)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина переключателя.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetThumbThickness(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина переключателя.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Window">
      <summary>
        Представляет класс, управляющий основными настройками стилей элементов управления.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.ResizeBorderThickness">
      <summary>
        Возвращает или задаёт толщину рамки изменения размера элемента управления <see cref="T:Elysium.Controls.Window" />.
      </summary>
      <value>
        Толщина рамки изменения размера окна. Значение по умолчанию — 3px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Parameters.Window.ResizeBorderThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Elysium.Controls.Window();
          var currentValue = Parameters.Window.GetResizeBorderThickness(control);
          Parameters.Window.SetResizeBorderThickness(control, new Thickness(3d));
        </code>
        <code lang="XAML">
          &lt;metro:Window params:Window.ResizeBorderThickness="3"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Window.ResizeBorderThicknessProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" />.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Window.GetResizeBorderThickness(Elysium.Controls.Window)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Толщина рамки изменения размера окна.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение всегда является положительным.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Window.SetResizeBorderThickness(Elysium.Controls.Window,System.Windows.Thickness)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Толщина рамки изменения размера окна.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Converters.AngleToCoordinateConverter">
      <summary>
        Конвертирует значение угла, под которым находится объект по отношению к центру окружности, в координаты.
      </summary>
    </member>
    <member name="M:Elysium.Converters.AngleToCoordinateConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение угла, под которым находится объект по отношению к центру окружности, в координаты.
      </summary>
      <param name="values">
        Исходные значения. Все значения, кроме первого, должны быть типа <see cref="T:System.Double" />.
        Первое значение обязательно. Это значение, возвращаемое в случае неудачного выполнения метода.
        Следующие три значения обязательны:
        <list type="number"><item><description>Угол, под которым находится объект по отношению к центру окружности.</description></item><item><description>Ширина прямоугольника, в которую вписана окружность.</description></item><item><description>Высота прямоугольника, в которую вписана окружность.</description></item></list>
        Следующие четыре значения необязательны:
        <list type="number"><item><description>Ширина объекта.</description></item><item><description>Высота объекта.</description></item><item><description>Координата X центра окружности.</description></item><item><description>Координата Y центра окружности.</description></item></list></param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "X", "x", "Y", "y".</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Координаты объекта. В случае, если метод выполняется неудачно, возвращается указанное для этого случая значение. Если параметер <paramref name="values" /> имеет значение null или длину менее 4, возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToGridLengthConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.GridLength" />.
        Результат зависит от значения параметра <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. Значение параметра <paramref name="value" /> игнорируется.
            </description></item><item><description>
              "*": Значение выражается как взвешенная пропорция доступного пространства. Значение доли должно быть указано в параметре <paramref name="value" />.
            </description></item><item><description>
              null: Возвращается значение в пикселях. Количество пикселей должно быть указано в параметре <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Double" />. Результатом является значение <see cref="P:System.Windows.GridLength.Value" /> или
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, в случае несовпадения типов ("Auto", "*" или количество пикселей) <paramref name="value" /> и <paramref name="parameter" /> или неудачного выполнения метода.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToThicknessConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom" или null. Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />. Все стороны рамки, указанные в <paramref name="parameter" /> имеют значение <paramref name="value" />;
        остальные стороны имеют значение 0. В случае, если <paramref name="parameter" /> равен null, то все края рамки имеют значение <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Усреднённое значение указанных сторон или всех сторон, если <paramref name="parameter" /> равен null.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.IsGreaterThanConverter">
      <summary>
        Определяет, больше одно число другого или нет.
      </summary>
    </member>
    <member name="M:Elysium.Converters.IsGreaterThanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Определяет, больше одно число другого или нет, с двойной точностью.
      </summary>
      <param name="value">
        Число, принадлежащее к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />."</param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">
        Параметр конвертера. Второе сравниваемое значение. Должен быть строкой, и выражать число, которое может быть приведено к типу <see cref="T:System.Double" /></param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        True, если <paramref name="value" /> больше, чем <paramref name="parameter" />, иначе — False.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.GridLengthToDoubleConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.GridLength" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Double" />. Результатом является значение <see cref="P:System.Windows.GridLength.Value" /> или
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, в случае несовпадения типов ("Auto", "*" или количество пикселей) <paramref name="value" /> и <paramref name="parameter" /> или неудачного выполнения метода.
      </returns>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Auto", "*" или null.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.GridLength" />.
        Результат зависит от значения параметра <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. Значение параметра <paramref name="value" /> игнорируется.
            </description></item><item><description>
              "*": Значение выражается как взвешенная пропорция доступного пространства. Значение доли должно быть указано в параметре <paramref name="value" />.
            </description></item><item><description>
              null: Возвращается значение в пикселях. Количество пикселей должно быть указано в параметре <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="T:Elysium.Converters.NumberPositiveToNegativeConverter">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
      <param name="value">
        Число. Должно принадлежать к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Число, по модулю равное <paramref name="value" />, но с противоположным знаком.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак числа на противоположный.
      </summary>
      <param name="value">
        Число. Должно принадлежать к одному из следующих типов: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Число, по модулю равное <paramref name="value" />, но с противоположным знаком.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.PercentToAngleConverter">
      <summary>
        Конвертирует процент от полного угла в значение угла.
      </summary>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует процент от полного угла в значение угла.
      </summary>
      <param name="value">
        Процент от полного угла. Должен иметь один из следующих типов: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение угла, того же типа, что и <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение угла в процент от полного угла.
      </summary>
      <param name="value">
        Значение угла. Должен иметь один из следующих типов: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Значение игнорируется.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Процент от полного угла, того же типа, что и <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessConverter">
      <summary>
        Обнуляет значения указанных краёв рамки.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Обнуляет значения указанных краёв рамки.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краям рамки, которые должны быть сохранены.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, идентичное значению <paramref name="value" />, за исключением обнулённых краёв.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessPositiveToNegativeConverter">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, в котором значение для каждого из краёв рамки равно соответствующему значению <paramref name="value" /> по модулю, но знак изменён на противоположный.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Меняет знак значений указанных краёв рамки на противоположный.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, в котором значение для каждого из краёв рамки равно соответствующему значению <paramref name="value" /> по модулю, но знак изменён на противоположный.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessToDoubleConverter">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.Thickness" /> в значение типа <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Windows.Thickness" /> в значение типа <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom". Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Усреднённое значение указанных сторон или всех сторон, если <paramref name="parameter" /> равен null.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Конвертирует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Исходное значение типа <see cref="T:System.Double" />.
      </param>
      <param name="targetType">Целевой тип. Значение игнорируется.</param>
      <param name="parameter">Параметр конвертера. Должен быть строкой и принимать одно из следующих значений: "Left", "Top", "Right", "Bottom" или null. Это значение соответствует краю рамки, который используется в расчётах.</param>
      <param name="culture">Язык и региональные параметры, используемые в конвертере. Значение игнорируется.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />. Все стороны рамки, указанные в <paramref name="parameter" /> имеют значение <paramref name="value" />;
        остальные стороны имеют значение 0. В случае, если <paramref name="parameter" /> равен null, то все края рамки имеют значение <paramref name="value" />.
        В случае неудачного выполнения метода возвращается значение <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ApplicationBar" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.#ctor(Elysium.Controls.ApplicationBar)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ApplicationBar" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ApplicationBar" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ApplicationBar".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ApplicationBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта <see cref="T:Elysium.Controls.ApplicationBar" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Menu.</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.CommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.#ctor(Elysium.Controls.CommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.CommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.CommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "CommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "CommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.CommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.Invoke">
      <summary>
        Направляет запрос на активацию элемента управления и инициирует его единственное, однозначное действие.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer">
      <summary>
        Является базовым классом для провайдеров наследников класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.#ctor(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.Owner">
      <summary>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button">AutomationControlType.Button</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Button.</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.DropDownCommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.#ctor(Elysium.Controls.DropDownCommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.DropDownCommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.DropDownCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "DropDownCommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "DropDownCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.DropDownCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Expand">
      <summary>
        Отображает всплывающее меню.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
      <exception cref="T:System.InvalidOperationException">Всплывающее меню не задано для этого экземпляра.</exception>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Collapse">
      <summary>
        Скрывает всплывающее меню.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
      <exception cref="T:System.InvalidOperationException">Всплывающее меню не задано для этого экземпляра.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.ExpandCollapseState">
      <summary>Возвращает состояние элемента управления — развернут или свернут.</summary>
      <value>Cостояние элемента управления — развернут или свернут.</value>
    </member>
    <member name="T:Elysium.Controls.Automation.ProgressAutomationPeer">
      <summary>
        Является провайдером для наследников класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.#ctor(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.Owner">
      <summary>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса для наследника <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ProgressBar".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ProgressBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">AutomationControlType.ProgressBar</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.ProgressBar.</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />,      
      а состояние объекта-наследника класса <see cref="T:Elysium.Controls.Primitives.ProgressBase" /> не равно <see cref="F:Elysium.Controls.ProgressState.Indeterminate" /> или <see cref="F:Elysium.Controls.ProgressState.Busy" />,
      то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.</returns>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли значение элемента управления доступным только для чтения.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно True.</ensures>
      </getter>
      <value>
        True, если значение доступно только для чтения; False, если его можно изменять.
        Всегда возвращается значение True, т.е. элемента управления является доступным только для чтения.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.LargeChange">
      <summary>Возвращает значение, добавляемое к значению свойства <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> или вычитаемое из него при внесении большого изменения, например, при нажатии кнопки PAGE DOWN.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно Double.NaN.</ensures>
      </getter>
      <value>
        Поддерживаемое элементом управления значение большого изменения или <see cref="F:System.Double.NaN">Double.NaN</see>, если элемент управления не поддерживает это свойство.
        Всегда возвращается значение <see cref="F:System.Double.NaN">Double.NaN</see>, поскольку элемент управления не поддерживает это свойство.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.SmallChange">
      <summary>Возвращает значение, добавляемое к значению свойства <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> или вычитаемое из него при внесении малого изменения, например, при нажатии кнопки СТРЕЛКА ВНИЗ.</summary>
      <getter>
        <ensures>Возвращаемое значение всегда равно Double.NaN.</ensures>
      </getter>
      <value>
        Поддерживаемое элементом управления значение малого изменения или <see cref="F:System.Double.NaN">Double.NaN</see>, если элемент управления не поддерживает это свойство.
        Всегда возвращается значение <see cref="F:System.Double.NaN">Double.NaN</see>, поскольку элемент управления не поддерживает это свойство.
      </value>
    </member>
    <member name="T:Elysium.Controls.Automation.SubmenuAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.Submenu" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.#ctor(Elysium.Controls.Submenu)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.Submenu" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.Submenu" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "Submenu".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "Submenu"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для объекта <see cref="T:Elysium.Controls.Submenu" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Menu.</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ToggleCommandButton" /> для технологии UI Automation.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.#ctor(Elysium.Controls.ToggleCommandButton)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ToggleCommandButton" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ToggleCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ToggleCommandButton".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ToggleCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.ToggleCommandButton" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.Toggle">
      <summary>
        Выполняет переключение состояния элемента управления.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.ToggleState">
      <summary>Возвращает состояние элемента управления (из числа тех, в которые он может переключаться).</summary>
      <value>Одно из значений перечисления <see cref="T:System.Windows.Automation.ToggleState" />.</value>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer">
      <summary>
        Является провайдером типа <see cref="T:Elysium.Controls.ToggleSwitch" /> для технологии UI Automation.
      </summary>
      <invariant>Свойство Owner никогда не равно null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.#ctor(Elysium.Controls.ToggleSwitch)">
      <summary>
        Создаёт новый экземпляр класса <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="owner">
        Экземпляр класса <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого будет использоваться провайдер.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Owner">
      <summary>
        Экземпляр элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого используется провайдер.
      </summary>
      <getter>
        <ensures>Значение не может равняться null.</ensures>
      </getter>
      <value>
        Экземпляр элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, для которого используется провайдер.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetClassNameCore">
      <summary>
        Возвращает имя класса <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        Строка со значением "ToggleSwitch".
      </returns>
      <ensures>Возвращаемая строка всегда имеет значение "ToggleSwitch"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Возвращает тип элемента управления для элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. Данный метод вызывается методом <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        Значение <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider">AutomationControlType.Slider</see>.
      </returns>
      <ensures>Возвращаемое значение всегда является значением AutomationControlType.Slider.</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Возвращает шаблон элемента управления для экземпляра элемента управления <see cref="T:Elysium.Controls.ToggleSwitch" />, который связан с данным объектом <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        Одно из значений перечисления <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        Если параметр <paramref name="patternInterface" /> имеет значение <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        то данный метод возвращает указатель this; в противном случае данный метод возвращает значение null.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Toggle">
      <summary>
        Выполняет переключение состояния элемента управления.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Элемент управления отключен.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.ToggleState">
      <summary>Возвращает состояние элемента управления (из числа тех, в которые он может переключаться).</summary>
      <value>Одно из значений перечисления <see cref="T:System.Windows.Automation.ToggleState" />.</value>
    </member>
    <member name="T:Elysium.Controls.ApplicationBar">
      <summary>
        Панель управления приложением.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.Dock">
      <summary>
        Возвращает или задаёт алгоритм размещения элемента управления внутри панели управления приложением.
      </summary>
      <value>Одно из значений перечисления <see cref="T:Elysium.Controls.ApplicationBarDock" />. Значение по умолчанию — <see cref="F:Elysium.Controls.ApplicationBarDock.Left" />ApplicationBarDock.Left</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.DockProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CommandButton();
          var currentValue = ApplicationBar.GetDock(control);
          ApplicationBar.SetDock(control, ApplicationBarDock.Left);
        </code>
        <code lang="XAML">
          &lt;CommandButton metro:ApplicationBar.Dock="Left"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.DockProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ApplicationBar.Dock" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.Dock" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetDock(System.Windows.UIElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Алгоритм размещения элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetDock(System.Windows.UIElement,Elysium.Controls.ApplicationBarDock)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Алгоритм размещения элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.IsOpen">
      <summary>
        Возвращает или задаёт значение, указывающее, открыта ли в данный момент панель управления приложением. По умолчанию, панель управления приложением открывается правой кнопкой мыши.
      </summary>
      <value>True, если панель управления приложением открыто; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.IsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.IsOpenProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" />.
      </summary>
      <param name="oldIsOpen">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" />.
      </param>
      <param name="newIsOpen">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" />.
      </param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opening">
      <summary>
        Событие генерируется перед открытием панели управления приложением.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.OpeningEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnOpening(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Нисходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpeningEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpening(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closing">
      <summary>
        Событие генерируется перед закрытием панели управления приложением.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.ClosingEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnClosing(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Нисходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosingEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosing(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opened">
      <summary>
        Событие генерируется после открытия панели управления приложением.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.OpenedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnOpened(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpenedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closed">
      <summary>
        Событие генерируется после закрытия панели управления приложением.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.ClosedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnClosed(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.StaysOpen">
      <summary>
        Возвращает или задаёт значение, указывающее, закрывается ли панель управления приложением при потере фокуса.
      </summary>
      <value>
        True, если панель управления приложением закрывается, когда пользователь повторно нажимает на правую кнопку мыши;
        False, если панель управления приложением закрывается при возникновении события мыши или клавиатуры вне панели управления приложением.
        Значение по умолчанию — True.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.StaysOpenProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.StaysOpenProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnStaysOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" />.
      </summary>
      <param name="oldStaysOpen">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" />.
      </param>
      <param name="newStaysOpen">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.PreventsOpen">
      <summary>
        Возвращает или задаёт значение, указывающее на возможность открытия панели управления приложением при щелчке правой кнопкой над указанным элементов управления.
      </summary>
      <value>True, если панель управления приложением может вызываться правым щелчком на указанном элементе управления; иначе False. Значение по умолчанию — True.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.PreventsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Grid();
          var currentValue = ApplicationBar.GetPreventsOpen(control);
          ApplicationBar.SetPreventsOpen(control, true);
        </code>
        <code lang="XAML">
          &lt;Grid metro:ApplicationBar.PreventsOpen="True"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.PreventsOpenProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetPreventsOpen(System.Windows.UIElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Алгоритм размещения элемента управления.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>Возвращаемое значение является положительным числом.</ensures>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetPreventsOpen(System.Windows.UIElement,System.Boolean)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Алгоритм размещения элемента управления.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.TransitionMode">
      <summary>
        Возвращает или задаёт значение, указывающее, какая анимация используется при открытии и закрытии панели управления приложением.
      </summary>
      <value>Одно из значений перечисления <see cref="T:Elysium.Controls.ApplicationBarTransitionMode" />. Значение по умолчанию — <see cref="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">ApplicationBarTransitionMode.Slide</see>.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.TransitionModeProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.TransitionModeProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnTransitionModeChanged(Elysium.Controls.ApplicationBarTransitionMode,Elysium.Controls.ApplicationBarTransitionMode)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" />.
      </summary>
      <param name="oldTransitionMode">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" />.
      </param>
      <param name="newTransitionMode">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.IsItemItsOwnContainerOverride(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetContainerForItemOverride">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ApplicationBarDock">
      <summary>
        Определяет положение элемента управления внутри <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Left">
      <summary>
        Элемент управления выравнивается по левой стороне.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Right">
      <summary>
        Элемент управления выравнивается по правой стороне.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarPanel">
      <summary>
        Панель, на которой размещаются дочерние элементы класса <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ApplicationBarTransitionMode">
      <summary>
        Определяет анимацию появления и исчезания элемента управления <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.None">
      <summary>
        Анимация отсутствует.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Fade">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ApplicationBar" /> меняет свою прозрачность с 0% до 100%.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">
      <summary>
        Элемент управления <see cref="T:Elysium.Controls.ApplicationBar" /> постепенно "выезжает" из-за нижнего края окна.
      </summary>
    </member>
    <member name="T:Elysium.Controls.CommandButton">
      <summary>
        Кнопка управления.
      </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.DropDownCommandButton">
      <summary>
        Кнопка управления с выпадающим меню.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.Submenu">
      <summary>
        Возвращает или задаёт выпадающее меню.
      </summary>
      <value>Меню. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.SubmenuProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.SubmenuProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnSubmenuChanged(Elysium.Controls.Submenu,Elysium.Controls.Submenu)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" />.
      </summary>
      <param name="oldSubmenu">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" />.
      </param>
      <param name="newSubmenu">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.HasSubmenu">
      <summary>
        Возвращает значение, указывающее имеет ли выпадающее меню значение null в данный момент.
      </summary>
      <value>
        True, если значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> не равно null, в противном случае False. Значение по умолчанию — False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.HasSubmenuProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.HasSubmenuProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnHasSubmenuChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" />.
      </summary>
      <param name="oldHasSubmenu">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" />.
      </param>
      <param name="newHasSubmenu">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen">
      <summary>
        Возвращает или задаёт значение, указывающее, открыто ли в данный момент выпадающее меню.
      </summary>
      <value>True, если выпадающее меню открыто; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.IsDropDownOpenProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.IsDropDownOpenProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnIsDropDownOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" />.
      </summary>
      <param name="oldIsDropDownOpen">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" />.
      </param>
      <param name="newIsDropDownOpen">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" />.
      </param>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownOpened">
      <summary>
        Событие генерируется при открытии выпадающего меню.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownOpened(System.EventArgs)">
      <summary>
        Вызывается при генерации события <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownOpened" />.
      </summary>
      <param name="e">Аргументы события.</param>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownClosed">
      <summary>
        Событие генерируется при закрытии выпадающего меню.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownClosed(System.EventArgs)">
      <summary>
        Вызывается при генерации события <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownClosed" />.
      </summary>
      <param name="e">Аргументы события.</param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.DropDownDirection">
      <summary>
        Возвращает или задаёт направление выпадающего меню.
      </summary>
      <value>Одно из значений перечисления <see cref="T:Elysium.Controls.DropDownDirection" />. Значение по умолчанию — <see cref="F:Elysium.Controls.DropDownDirection.Up">DropDownDirection.Up</see>.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.DropDownDirectionProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.DropDownDirectionProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.DropDownDirection" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.DropDownDirection" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight">
      <summary>
        Возвращает или задаёт максимальный размер выпадающего меню.
      </summary>
      <value>Максимальный размер выпадающего меню. Значение по умолчанию — 300px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.MaxDropDownHeightProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.MaxDropDownHeightProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.DropDownDirection">
      <summary>
        Определяет, с какой стороны элемента управления <see cref="T:Elysium.Controls.DropDownCommandButton" /> находится его выпадающее меню.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Up">
      <summary>
        Выпадающее меню находится сверху.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Down">
      <summary>
        Выпадающее меню находится снизу.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ToggleCommandButton">
      <summary>
        Кнопка управления, поддерживающая состояния "включено", "выключено" и "неопределено".
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsChecked">
      <summary>
        Возвращает или задаёт значение, указывающее, находится ли кнопка управления во включенном состоянии.
      </summary>
      <value>True, если кнопка управления находится во включенном состоянии; False — если в выключенном; иначе null. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIsCheckedChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </summary>
      <param name="oldIsChecked">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </param>
      <param name="newIsChecked">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" />.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Checked">
      <summary>
        Событие генерируется при переходе в состояние "включено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.CheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.CheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Unchecked">
      <summary>
        Событие генерируется при переходе в состояние "выключено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Indeterminate">
      <summary>
        Событие генерируется при переходе в состояние "неопределено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsThreeState">
      <summary>
        Возвращает или задаёт значение, указывающее, два или три состояния поддерживает элемент управления.
      </summary>
      <value>True, если кнопка управления поддерживает три состояния; в противном случае False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIsThreeStateChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </summary>
      <param name="oldIsThreeState">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </param>
      <param name="newIsThreeState">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnToggle">
      <inheritdoc cref="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle" />
    </member>
    <member name="T:Elysium.Controls.Primitives.CommandButtonBase">
      <summary>
        Базовый класс для кнопок управления (command buttons).
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.Header">
      <summary>
        Возвращает или задаёт данные, используемые для заголовка элемента управления.
      </summary>
      <value>Объект заголовка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </summary>
      <param name="oldHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </param>
      <param name="newHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader">
      <summary>
        Возвращает значение, указывающее имеет ли заголовок значение null в данный момент.
      </summary>
      <value>
        True, если значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> не равно null, в противном случае False. Значение по умолчанию — False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHasHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </summary>
      <param name="oldHasHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </param>
      <param name="newHasHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat">
      <summary>
        Возвращает или задаёт составную строку, которая определяет форматирование заголовка, если он отображается как строка.
      </summary>
      <value>Составная строка, которая определяет форматирование заголовка, если он отображается как строка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </summary>
      <param name="oldHeaderStringFormat">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </param>
      <param name="newHeaderStringFormat">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate">
      <summary>
        Возвращает или задаёт шаблон, используемый для отображения содержимого заголовка элемента управления.
      </summary>
      <value>Шаблон, используемый для отображения содержимого заголовка элемента управления. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </summary>
      <param name="oldHeaderTemplate">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </param>
      <param name="newHeaderTemplate">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector">
      <summary>
        Возвращает или задаёт селектор шаблона данных, предоставляющий пользовательскую логику для выбора шаблона отображения содержимого заголовка элемента управления.
      </summary>
      <value>Экземпляр селектора шаблона данных. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </summary>
      <param name="oldHeaderTemplateSelector">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </param>
      <param name="newHeaderTemplateSelector">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressBar">
      <summary>
        Линейный индикатор выполнения.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ProgressBar.Orientation">
      <summary>
        Возвращает или задаёт значение, указывающее ориентацию линейного индикатора выполнения в пространстве.
      </summary>
      <value>
        Одно из значений перечисления <see cref="T:System.Windows.Controls.Orientation" />. Значение по умолчанию — <see cref="F:System.Windows.Controls.Orientation.Horizontal">Orientation.Horizontal</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ProgressBar.OrientationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ProgressBar.OrientationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ProgressBar.Orientation" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ProgressBar.Orientation" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ProgressBar.Orientation" />.
      </summary>
      <param name="oldOrientation">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ProgressBar.Orientation" />.
      </param>
      <param name="newOrientation">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ProgressBar.Orientation" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressRing">
      <summary>
        Кольцевой индикатор выполнения.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ProgressRing.Angle">
      <summary>
        Возвращает или задаёт значение угла (так, как если бы индикатор выполнения являлся бы единичной окружностью) для дочерних элементов индикатора.
      </summary>
      <value>
        Значение угла (так, как если бы индикатор выполнения являлся бы единичной окружностью) для дочерних элементов индикатора
        или -1d, если дочерний элемент расположен вне окружности. Значение по умолчанию — -1d.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ProgressRing.AngleProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Ellipse();
          var currentValue = ProgressRing.GetAngle(control);
          ProgressRing.SetAngle(control, 180d);
        </code>
        <code lang="XAML">
          &lt;Ellipse metro:ProgressRing.Angle="180"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ProgressRing.AngleProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ProgressRing.Angle" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ProgressRing.Angle" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.GetAngle(System.Windows.UIElement)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.ProgressRing.Angle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Значение угла для дочернего элемента индикатора выполнения.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.SetAngle(System.Windows.UIElement,System.Double)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.ProgressRing.Angle" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Значение угла для дочернего элемента индикатора выполнения.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ProgressRing.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ProgressRing.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressState">
      <summary>
        Определяет состояние индикатора выполнения (один из наследников <see cref="T:Elysium.Controls.Primitives.ProgressBase" />).
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Normal">
      <summary>
        Нормальное состояние.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Indeterminate">
      <summary>
        Неопределённое состояние.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Busy">
      <summary>
        Состоние занятости.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Primitives.ProgressBase">
      <summary>
        Базой класс для индикаторов выполнения.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.Percent">
      <summary>
        Возвращает значение, указывающее процент заполненности индикатора.
      </summary>
      <value>
        Процент заполненности индикатора, либо <see cref="F:System.Double.NaN">Dobuel.NaN</see>, если индикатор выполнения находится в состоянии "неопределено" или "занят". Значение по умолчанию — 0.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.PercentProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.PercentProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnPercentChanged(System.Double,System.Double)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" />.
      </summary>
      <param name="oldPercent">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" />.
      </param>
      <param name="newPercent">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnValueChanged(System.Double,System.Double)">
      <inheritdoc />
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.State">
      <summary>
        Возвращает или задаёт значение, указывающее текущее состояние индикатора выполнения.
      </summary>
      <value>
        Одно из значений перечисления <see cref="T:Elysium.Controls.ProgressState" />. Значение по умолчанию — <see cref="F:Elysium.Controls.ProgressState.Normal">ProgressState.Normal</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.StateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.StateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnStateChanged(Elysium.Controls.ProgressState,Elysium.Controls.ProgressState)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" />.
      </summary>
      <param name="oldState">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" />.
      </param>
      <param name="newState">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation">
      <summary>
        Возвращает или задаёт значение, являющееся раскадровкой анимации при состоянии "неопределено".
      </summary>
      <value>Раскадровка. Значение по умолчанию — экземпляр раскадровки стандартной анимации.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning">
      <summary>
        Возвращает или задаёт (доступно только для наследников) значение, указывающее запущена ли анимация состояния "неопределено".
      </summary>
      <value>True, если анимация состояния "неопределено" запущена, иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </value>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningPropertyKey">
      <summary>
        Идентифицирует свойство зависимостей только для чтения <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </summary>
      <value>
        Идентификатор огранниченного доступа на запись для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation">
      <summary>
        Возвращает или задаёт значение, являющееся раскадровкой анимации при состоянии "занят".
      </summary>
      <value>Раскадровка. Значение по умолчанию — экземпляр раскадровки стандартной анимации.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.BusyAnimationProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.BusyAnimationProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning">
      <summary>
        Возвращает или задаёт значение, указывающее запущена ли анимация состояния "занят".
      </summary>
      <value>True, если анимация состояния "занят" запущена, иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" />.
      </value>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningPropertyKey">
      <summary>
        Идентифицирует свойство зависимостей только для чтения <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" />.
      </summary>
      <value>
        Идентификатор огранниченного доступа на запись для свойства зависимостей <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" />.
      </value>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating">
      <summary>
        Событие генерируется перед началом процедуры обновления анимации состояний.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatingEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdating(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Нисходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatingEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated">
      <summary>
        Событие генерируется после окончания процедуры обновления анимации состояний.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdated(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdated(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.Submenu">
      <summary>
        Выпадающее меню.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Submenu.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ToggleSwitch">
      <summary>
        Переключатель (toggle switch).
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsChecked">
      <summary>
        Возвращает или задаёт значение, указывающее, находится ли переключатель во включенном состоянии.
      </summary>
      <value>True, если переключатель находится во включенном состоянии; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.IsCheckedProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsCheckedProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsCheckedChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" />.
      </summary>
      <param name="oldIsChecked">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" />.
      </param>
      <param name="newIsChecked">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" />.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Checked">
      <summary>
        Событие генерируется при переходе в состояние "включено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.CheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnChecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.CheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Unchecked">
      <summary>
        Событие генерируется при переходе в состояние "выключено".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.UncheckedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnUnchecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.UncheckedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsSwitching">
      <summary>
        Возвращает значение, указывающее, производится ли в данный момент смена состояний переключателя.
      </summary>
      <value>True, если в данный момент смена состояний переключателя производится; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.IsSwitchingProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsSwitchingProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsSwitchingChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" />.
      </summary>
      <param name="oldIsSwitching">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" />.
      </param>
      <param name="newIsSwitching">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" />.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchStarted">
      <summary>
        Событие генерируется перед началом изменения состояния переключателя.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.SwitchStartedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnSwitchStarted(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchStartedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchStarted(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchCompleted">
      <summary>
        Событие генерируется после завершения изменения состояния переключателя.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.SwitchCompletedEvent" />
            </description>
          </item>
          <item>
            <term>Ассоциированный метод</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnSwitchCompleted(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Стратегия маршрутизации</term>
            <description>Восходящая маршрутизация событий</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchCompletedEvent">
      <summary>
        Идентифицирует маршрутизируемое событие <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </summary>
      <value>
        Идентификатор маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchCompleted(System.Windows.RoutedEventArgs)">
      <summary>
        Вызывается при генерации маршрутизируемого события <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </summary>
      <param name="e">Маршрутизируемое событие.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeader">
      <summary>
        Возвращает или задаёт данные, используемые для заголовка переключателя во включенном состоянии.
      </summary>
      <value>Объект заголовка переключателя во включенном состоянии. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderChanged(System.Object,System.Object)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" />.
      </summary>
      <param name="oldOnHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" />.
      </param>
      <param name="newOnHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOnHeader">
      <summary>
        Возвращает значение, указывающее имеет ли заголовок переключателя во включенном состоянии значение null в данный момент.
      </summary>
      <value>
        True, если значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> не равно null, в противном случае False. Значение по умолчанию — False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.HasOnHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOnHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOnHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" />.
      </summary>
      <param name="oldHasOnHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" />.
      </param>
      <param name="newHasOnHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat">
      <summary>
        Возвращает или задаёт составную строку, которая определяет форматирование заголовка переключателя во включенном состоянии, если он отображается как строка.
      </summary>
      <value>Составная строка, которая определяет форматирование заголовка переключателя во включенном состоянии, если он отображается как строка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderStringFormatProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" />.
      </summary>
      <param name="oldOnHeaderStringFormat">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" />.
      </param>
      <param name="newOnHeaderStringFormat">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate">
      <summary>
        Возвращает или задаёт шаблон, используемый для отображения содержимого заголовка переключателя во включенном состоянии.
      </summary>
      <value>Шаблон, используемый для отображения содержимого заголовка переключателя во включенном состоянии. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" />.
      </summary>
      <param name="oldOnHeaderTemplate">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" />.
      </param>
      <param name="newOnHeaderTemplate">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector">
      <summary>
        Возвращает или задаёт селектор шаблона данных, предоставляющий пользовательскую логику для выбора шаблона отображения содержимого заголовка переключателя во включенном состоянии.
      </summary>
      <value>Экземпляр селектора шаблона данных. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelectorProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" />.
      </summary>
      <param name="oldOnHeaderTemplateSelector">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" />.
      </param>
      <param name="newOnHeaderTemplateSelector">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeader">
      <summary>
        Возвращает или задаёт данные, используемые для заголовка переключателя в выключенном состоянии.
      </summary>
      <value>Объект заголовка переключателя в выключенном состоянии. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderChanged(System.Object,System.Object)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" />.
      </summary>
      <param name="oldOffHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" />.
      </param>
      <param name="newOffHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOffHeader">
      <summary>
        Возвращает значение, указывающее имеет ли заголовок переключателя в выключенном состоянии значение null в данный момент.
      </summary>
      <value>
        True, если значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> не равно null, в противном случае False. Значение по умолчанию — False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.HasOffHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOffHeaderProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOffHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" />.
      </summary>
      <param name="oldHasOffHeader">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" />.
      </param>
      <param name="newHasOffHeader">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat">
      <summary>
        Возвращает или задаёт составную строку, которая определяет форматирование заголовка переключателя в выключенном состоянии, если он отображается как строка.
      </summary>
      <value>Составная строка, которая определяет форматирование заголовка переключателя в выключенном состоянии, если он отображается как строка. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderStringFormatProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" />.
      </summary>
      <param name="oldOffHeaderStringFormat">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" />.
      </param>
      <param name="newOffHeaderStringFormat">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate">
      <summary>
        Возвращает или задаёт шаблон, используемый для отображения содержимого заголовка переключателя в выключенном состоянии.
      </summary>
      <value>Шаблон, используемый для отображения содержимого заголовка переключателя в выключенном состоянии. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" />.
      </summary>
      <param name="oldOffHeaderTemplate">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" />.
      </param>
      <param name="newOffHeaderTemplate">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector">
      <summary>
        Возвращает или задаёт селектор шаблона данных, предоставляющий пользовательскую логику для выбора шаблона отображения содержимого заголовка переключателя в выключенном состоянии.
      </summary>
      <value>Экземпляр селектора шаблона данных. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelectorProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" />.
      </summary>
      <param name="oldOffHeaderTemplateSelector">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" />.
      </param>
      <param name="newOffHeaderTemplateSelector">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" />.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.Window">
      <summary>
        Базовый класс для окон в Metro стиле.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsMainWindow">
      <summary>
        Возвращает или задаёт значение, указывающее является ли указанное окно главным. В приложении может быть только одно главное окно.
      </summary>
      <value>True, если окно является главным, иначе False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsMainWindowProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      Это свойство применимо ко всем классам, наследующихся от класса <see cref="T:System.Windows.Window">System.Windows.Window</see>.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetIsMainWindow(control);
          Window.SetIsMainWindow(control, false);
        </code>
        <code lang="XAML">
          &lt;Window metro:Window.IsMainWindow="False"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.IsMainWindowProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.IsMainWindow" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.IsMainWindow" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsMainWindow(System.Windows.Window)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsMainWindow" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Значение, указывающее является ли указанное окно главным.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsMainWindow(System.Windows.Window,System.Boolean)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsMainWindow" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Значение, указывающее является ли указанное окно главным.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.Window.Progress">
      <summary>
        Возвращает или задаёт значение, указывающее процент выполнения задачи окном.
      </summary>
      <value>Значение, указывающее процент выполнения задачи окном. Значение по умолчанию — 0d.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ProgressProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.ProgressProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.Progress" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.Progress" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnProgressChanged(System.Double,System.Double)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Window.Progress" />.
      </summary>
      <param name="oldProgress">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.Progress" />.
      </param>
      <param name="newProgress">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.Progress" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.IsBusy">
      <summary>
        Возвращает или задаёт значение, указывающее, находится ли окно в данный момент в состоянии занятости.
      </summary>
      <value>True, если окно в данный момент находится в состоянии занятости; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsBusyProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.IsBusyProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.IsBusy" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.IsBusy" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnIsBusyChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Window.IsBusy" />.
      </summary>
      <param name="oldIsBusy">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsBusy" />.
      </param>
      <param name="newIsBusy">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsBusy" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.HasDropShadow">
      <summary>
        Возвращает или задаёт значение, указывающее, имеет ли окно тень.
      </summary>
      <value>True, если окно имеет тень; иначе False. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.HasDropShadowProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
        По-умолчанию используется значение взятое из системных настроек (задаётся в стиле по-умолчанию).
        При использовании Windows версии ниже Window Vista значение свойства всегда корректируется в значение False.
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.HasDropShadowProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.HasDropShadow" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.HasDropShadow" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnHasDropShadowChanged(System.Boolean,System.Boolean)">
      <summary>
        Вызывается при изменении свойства зависимостей <see cref="P:Elysium.Controls.Window.HasDropShadow" />.
      </summary>
      <param name="oldHasDropShadow">
        Старое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.HasDropShadow" />.
      </param>
      <param name="newHasDropShadow">
        Новое значение свойства зависимостей <see cref="P:Elysium.Controls.Window.HasDropShadow" />.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.ApplicationBar">
      <summary>
        Возвращает или задаёт панель управления приложением для данного окна.
      </summary>
      <value>Панель управления приложением. Значение по умолчанию — null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ApplicationBarProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetApplicationBar(control);
          Window.SetApplicationBar(control, new ApplicationBar());
        </code>
        <code lang="XAML">
          &lt;metro:Window.ApplicationBar&gt;
            &lt;metro:ApplicationBar&gt;
                ...
            &lt;/metro:ApplicationBar&gt;
          &lt;/metro:Window.ApplicationBar&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.ApplicationBarProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.ApplicationBar" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.ApplicationBar" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetApplicationBar(System.Windows.Window)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.Window.ApplicationBar" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Панель управления приложением.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetApplicationBar(System.Windows.Window,Elysium.Controls.ApplicationBar)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.Window.ApplicationBar" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Панель управления приложением.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.Window.IsApplicationBarHost">
      <summary>
        Возвращает или задаёт значение, указывающее, является ли указанный элемент управления объектом, на котором будет размещаться панель управления приложением.
      </summary>
      <value>Указывает, является ли указанный элемент управления объектом, на котором будет размещаться панель управления приложением. Значение по умолчанию — False.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Идентификатор</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsApplicationBarHostProperty" />
            </description>
          </item>
          <item>
            <term>Метаданные</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Decorator();
          var currentValue = Window.GetIsApplicationBarHost(control);
          Window.SetIsApplicationBarHost(control, true);
        </code>
        <code lang="XAML">
          &lt;Decorator metro:Window.IsApplicationBarHost="True"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.IsApplicationBarHostProperty">
      <summary>
        Идентифицирует свойство зависимостей <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" />.
      </summary>
      <value>
        Идентификатор для свойства зависимостей <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsApplicationBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Возвращает значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого считывается значение свойства.</param>
      <returns>Указывает, является ли указанный элемент управления объектом, на котором будет размещаться панель управления приложением.</returns>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsApplicationBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Задаёт значение свойства зависимостей <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> для указанного элемента управления.
      </summary>
      <param name="obj">Элемент управления, для которого устанавливается значение свойства.</param>
      <param name="value">Указывает, является ли указанный элемент управления объектом, на котором будет размещаться панель управления приложением.</param>
      <exception cref="T:System.ArgumentNullException">
        Параметер <paramref name="obj" /> имеет значение null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.OnSourceInitialized(System.EventArgs)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Window.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Window.ShowDialog">
      <inheritdoc cref="M:System.Windows.Window.ShowDialog" />
    </member>
    <member name="T:Elysium.Controls.WindowCommands">
      <summary>
        Предоставляет несколько базовых команд для управления окном типа <see cref="T:Elysium.Controls.Window" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Minimize">
      <summary>
        Возвращает значение, содержащее команду сворачивания окна.
      </summary>
      <value>Команда сворачивания окна.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Maximize">
      <summary>
        Возвращает значение, содержащее команду разворачивания окна на весь экран.
      </summary>
      <value>Команда разворачивания окна на весь экран.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Restore">
      <summary>
        Возвращает значение, содержащее команду возвращения окна в обычное состояние.
      </summary>
      <value>Команда возвращения окна в обычное состояние.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Close">
      <summary>
        Возвращает значение, содержащее команду закрытия окна.
      </summary>
      <value>Команда закрытия окна.</value>
    </member>
    <member name="T:System.Collections.ObjectModel.IObservableDictionary`2">
      <inheritdoc cref="T:System.Collections.Generic.IDictionary`2" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Item(`0)">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Keys">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Keys" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Values">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Values" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.ContainsKey(`0)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Add(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Remove(`0)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.TryGetValue(`0,`1@)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2">
      <inheritdoc cref="T:System.Collections.Generic.Dictionary`2" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Add(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Clear">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Clear" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsKey(`0)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsValue(`1)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Remove(`0)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.TryGetValue(`0,`1@)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Count">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Count" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Item(`0)">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Keys">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Keys" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Values">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Values" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Comparer">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Comparer" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetEnumerator">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.GetEnumerator" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnDeserialization(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.BlockReentrancy">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.CheckReentrancy">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.PropertyChanged">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.CollectionChanged">
      <inheritdoc cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnPropertyChanged(System.String)">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <param name="propertyName">Имя изменённого свойства.</param>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator">
      <inheritdoc cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.Current">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.MoveNext">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableKeyValuePair`2">
      <inheritdoc cref="T:System.Collections.Generic.KeyValuePair`2" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1,System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)" />
      <param name="comparer">
        Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении ключей, или null, если для данного типа ключа должна использоваться реализация <see cref="T:System.Collections.Generic.EqualityComparer`1" /> по умолчанию.
      </param>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Key">
      <inheritdoc cref="P:System.Collections.Generic.KeyValuePair`2.Key" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Value">
      <summary>
        Получает или задаёт значение в паре "ключ-значение".
      </summary>
      <value>Значение из пары "ключ-значение".</value>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanging">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanged">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.GetHashCode">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.ToString">
      <inheritdoc />
    </member>
  </members>
</doc>