<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sw="clr-namespace:System.Windows"
                    xmlns:root="clr-namespace:Elysium"
                    xmlns:params="clr-namespace:Elysium.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <sw:CachedResourceDictionary Source="/Elysium;component/Themes/SharedResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.MiddleLightBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <!-- Temporary removed to fix bugs 1144, 1174, 1216 -->
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               StrokeThickness="0"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.HighLightBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonValuableStyle}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonStyle}}">        
        <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.AccentBrushKey}}"/>        
        <Style.Triggers>            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
            </Trigger>            
        </Style.Triggers>        
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderThumbStyle}" TargetType="{x:Type Thumb}">        
        <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.MiddleLightBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.BackgroundBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <!-- Temporary removed to fix bugs 1144, 1174, 1216 -->
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.LowLightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.LowLightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
            </Trigger>            
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=HorizontalMetroSliderTemplate}" TargetType="{x:Type Slider}">
        <Grid Background="{TemplateBinding Background}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar Grid.Row="0"
                     Fill="{TemplateBinding BorderBrush}"
                     Placement="Top"
                     Height="{TemplateBinding params:Slider.TrackSize}"
                     Visibility="Collapsed"/>
            <Rectangle x:Name="PART_SelectionRange"
                       Grid.Row="1"
                       Fill="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"
                       StrokeThickness="0"
                       Height="{TemplateBinding params:Slider.TrackSize}"
                       Visibility="Hidden"/>
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                  IsEnabled="{TemplateBinding IsEnabled}"
                                  Height="{TemplateBinding params:Slider.TrackSize}"
                                  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonValuableStyle}}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb BorderThickness="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultPaddingValue), Mode=OneWay, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=DoubleToThicknessConverter}}, ConverterParameter=Right}"
                           IsEnabled="{TemplateBinding IsEnabled}"
                           Width="{TemplateBinding params:Slider.ThumbThickness}"
                           Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight, Mode=OneWay}"
                           Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderThumbStyle}}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                  IsEnabled="{TemplateBinding IsEnabled}"
                                  Height="{TemplateBinding params:Slider.TrackSize}"
                                  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonStyle}}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Grid.Row="2"
                     Fill="{TemplateBinding BorderBrush}"
                     Placement="Bottom"
                     Height="{TemplateBinding params:Slider.TrackSize}"
                     Visibility="Collapsed"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=VerticalMetroSliderTemplate}" TargetType="{x:Type Slider}">
        <Grid Background="{TemplateBinding Background}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar Grid.Column="0"
                     Fill="{TemplateBinding BorderBrush}"
                     Placement="Top"
                     Width="{TemplateBinding params:Slider.TrackSize}"
                     Visibility="Collapsed"/>
            <Rectangle x:Name="PART_SelectionRange"
                       Grid.Column="1"
                       Fill="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"
                       StrokeThickness="0"
                       Width="{TemplateBinding params:Slider.TrackSize}"
                       Visibility="Hidden"/>
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                  IsEnabled="{TemplateBinding IsEnabled}"
                                  Width="{TemplateBinding params:Slider.TrackSize}"
                                  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonValuableStyle}}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb BorderThickness="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultPaddingValue), Mode=OneWay, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=DoubleToThicknessConverter}}, ConverterParameter=Top}"
                           IsEnabled="{TemplateBinding IsEnabled}"
                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Mode=OneWay}"
                           Height="{TemplateBinding params:Slider.ThumbThickness}"
                           Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderThumbStyle}}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                  IsEnabled="{TemplateBinding IsEnabled}"
                                  Width="{TemplateBinding params:Slider.TrackSize}"
                                  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=MetroSliderRepeatButtonStyle}}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Grid.Column="2"
                     Fill="{TemplateBinding BorderBrush}"
                     Placement="Bottom"
                     Width="{TemplateBinding params:Slider.TrackSize}"
                     Visibility="Collapsed"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.MiddleLightBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <!-- Temporary removed to fix bugs 1144, 1174, 1216 -->
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
            </Trigger>            
            <Trigger Property="Orientation" Value="Horizontal">                
                <Setter Property="MinHeight" Value="14"/>
                <Setter Property="Height" Value="18"/>
                <Setter Property="MaxHeight" Value="22"/>                
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=HorizontalMetroSliderTemplate}}"/>
            </Trigger>            
            <Trigger Property="Orientation" Value="Vertical">                
                <Setter Property="MinWidth" Value="14"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="MaxWidth" Value="22"/>                
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Slider}, ResourceId=VerticalMetroSliderTemplate}}"/>                   
            </Trigger>            
        </Style.Triggers>
    </Style>

</ResourceDictionary>