<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sw="clr-namespace:System.Windows"
                    xmlns:root="clr-namespace:Elysium"
                    xmlns:controls="clr-namespace:Elysium.Controls"
                    xmlns:primitives="clr-namespace:Elysium.Controls.Primitives"
                    xmlns:params="clr-namespace:Elysium.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <sw:CachedResourceDictionary Source="/Elysium;component/Themes/SharedResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type primitives:CommandButtonBase}" TargetType="{x:Type primitives:CommandButtonBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.BackgroundBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.LowLightBrushKey}}"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldThickness), Mode=OneWay}"/>
        <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.LowLightBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=FocusVisualStyle}}"/>
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldPadding), Mode=OneWay}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:CommandButtonBase}">
                    <Grid Background="{DynamicResource {x:Static root:Resources.TransparentBrushKey}}"
                          TextBlock.Foreground="{TemplateBinding Foreground}"
                          TextBlock.FontFamily="{TemplateBinding FontFamily}"
                          TextBlock.FontSize="{TemplateBinding FontSize}"
                          TextBlock.FontStretch="{TemplateBinding FontStretch}"
                          TextBlock.FontStyle="{TemplateBinding FontStyle}"
                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                          TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                          TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                          RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Ellipse x:Name="PART_Decor"
                                 Grid.Row="0"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=ThicknessToDoubleConverter}}}"
                                 Stretch="Fill"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"/>
                        <ContentPresenter x:Name="PART_ContentHost"
                                          Grid.Row="0"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        <ContentPresenter x:Name="PART_HeaderHost"
                                          Grid.Row="1"
                                          Content="{TemplateBinding Header}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=IsGreaterThanConverter}}, ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.ForegroundBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.MiddleLightBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.MiddleLightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static controls:ApplicationBar.CommandButtonBaseStyleKey}" TargetType="{x:Type primitives:CommandButtonBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.TransparentBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldThickness), Mode=OneWay}"/>
        <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>      
        <Setter Property="FocusVisualStyle" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=FocusVisualStyle}}"/>
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldPadding), Mode=OneWay}"/>
        <!-- Temporary removed to fix bugs 1144, 1174, 1216 -->
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:CommandButtonBase}">
                    <Grid Background="{DynamicResource {x:Static root:Resources.TransparentBrushKey}}"
                          TextBlock.Foreground="{TemplateBinding Foreground}"
                          TextBlock.FontFamily="{TemplateBinding FontFamily}"
                          TextBlock.FontSize="{TemplateBinding FontSize}"
                          TextBlock.FontStretch="{TemplateBinding FontStretch}"
                          TextBlock.FontStyle="{TemplateBinding FontStyle}"
                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                          TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                          TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                          RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Ellipse x:Name="PART_Decor"
                                 Grid.Row="0"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=ThicknessToDoubleConverter}}}"
                                 Stretch="Fill"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"/>
                        <Ellipse Grid.Row="0"
                                 Fill="{TemplateBinding params:CommandButtons.Mask}"
                                 Stroke="{DynamicResource {x:Static root:Resources.TransparentBrushKey}}"
                                 StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=ThicknessToDoubleConverter}}}"
                                 Stretch="Fill"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Width="{Binding ElementName=PART_Decor, Path=ActualWidth, Mode=OneWay}"
                                 Height="{Binding ElementName=PART_Decor, Path=ActualHeight, Mode=OneWay}">
                            <Ellipse.OpacityMask>
                                <VisualBrush AutoLayoutContent="True"
                                             AlignmentX="Center"
                                             AlignmentY="Center"
                                             Stretch="None">
                                    <VisualBrush.Visual>
                                        <ContentPresenter x:Name="PART_ContentHost"
                                                          Content="{TemplateBinding Content}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Ellipse.OpacityMask>
                        </Ellipse>
                        <ContentPresenter x:Name="PART_HeaderHost"
                                          Grid.Row="1"
                                          Content="{TemplateBinding Header}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"/>
                    </Grid>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type root:Resources}, ResourceId=IsGreaterThanConverter}}, ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.SemitransparentContrastBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.ContrastBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.AccentBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
                <Setter Property="params:CommandButtons.Mask" Value="{DynamicResource {x:Static root:Resources.DisabledBrushKey}}"/>
            </Trigger>
        </Style.Triggers>        
    </Style>

</ResourceDictionary>