<?xml version="1.0" encoding="utf-8" ?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="..\..\..\Documentation\Documentation.xsd">
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <type name="T:Elysium.Controls.Window">
      <summary>
        A base class for "Metro" style windows.
      </summary>
    </type>
    <property name="P:Elysium.Controls.Window.IsMainWindow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window is main. Application can have only one main window.
      </summary>
      <value>True, if the window is main, False otherwise.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsMainWindowProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
        This property can be applied to any class-successor of <see cref="T:System.Windows.Window">System.Windows.Window</see>.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetIsMainWindow(control);
          Window.SetIsMainWindow(control, false);
        </code>
        <code lang="XAML">
          &lt;Window metro:Window.IsMainWindow="False"/&gt;
        </code>
      </example>
    </property>
    <field name="F:Elysium.Controls.Window.IsMainWindowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.GetIsMainWindow(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A value, which corresponds to whether the specified window is main.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <method name="M:Elysium.Controls.Window.SetIsMainWindow(System.Windows.Window,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A value which corresponds to whether the specified window is main.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <property name="P:Elysium.Controls.Window.Progress">
      <summary>
        Gets or sets the value that indicates a percentage of task completing by the window.
      </summary>
      <value>The value that indicates a percentage of task completing by the window. The default value is 0d.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ProgressProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </property>
    <field name="F:Elysium.Controls.Window.ProgressProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.OnProgressChanged(System.Double,System.Double)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property changes.
      </summary>
      <param name="oldProgress">
        An old value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
      <param name="newProgress">
        A new value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
    </method>
    <property name="P:Elysium.Controls.Window.IsBusy">
      <summary>
        Gets or sets the value, that indicates whether the window is in "busy" state at the moment.
      </summary>
      <value>True, if the window is in "busy" state at the moment; False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsBusyProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </property>
    <field name="F:Elysium.Controls.Window.IsBusyProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.OnIsBusyChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property changes.
      </summary>
      <param name="oldIsBusy">
        An old value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
      <param name="newIsBusy">
        A new value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
    </method>
    <property name="P:Elysium.Controls.Window.HasDropShadow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window has a shadow.
      </summary>
      <value>True, if the window has a shadow, False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.HasDropShadowProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
        The value from system settings is used by default (it is set in default style).
        While using OS Windows versions before Windows Vista this property is always false.
      </remarks>
    </property>
    <field name="F:Elysium.Controls.Window.HasDropShadowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.OnHasDropShadowChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property changes.
      </summary>
      <param name="oldHasDropShadow">
        An old value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
      <param name="newHasDropShadow">
        A new value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
    </method>
    <property name="P:Elysium.Controls.Window.ApplicationBar">
      <summary>
        Gets or sets an application bar for the window.
      </summary>
      <value>An application bar for the window. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ApplicationBarProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetApplicationBar(control);
          Window.SetApplicationBar(control, new ApplicationBar());
        </code>
        <code lang="XAML">
          &lt;metro:Window.ApplicationBar&gt;
          &lt;metro:ApplicationBar&gt;
          ...
          &lt;/metro:ApplicationBar&gt;
          &lt;/metro:Window.ApplicationBar&gt;
        </code>
      </example>
    </property>
    <field name="F:Elysium.Controls.Window.ApplicationBarProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.GetApplicationBar(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>An application bar for the window.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <method name="M:Elysium.Controls.Window.SetApplicationBar(System.Windows.Window,Elysium.Controls.ApplicationBar)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">An application bar for the window.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <property name="P:Elysium.Controls.Window.IsApplicationBarHost">
      <summary>
        Gets or sets the value, which corresponds to whether the specified control is a host-object for the application bar.
      </summary>
      <value>Corresponds to whether the specified control is a host-object for the application bar. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsApplicationBarHostProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Decorator();
          var currentValue = Window.GetIsApplicationBarHost(control);
          Window.SetIsApplicationBarHost(control, true);
        </code>
        <code lang="XAML">
          &lt;Decorator metro:Window.IsApplicationBarHost="True"/&gt;
        </code>
      </example>
    </property>
    <field name="F:Elysium.Controls.Window.IsApplicationBarHostProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.GetIsApplicationBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Corresponds to whether the specified control is a host-object for the application bar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <method name="M:Elysium.Controls.Window.SetIsApplicationBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified item of the control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Corresponds to whether the specified control is a host-object for the application bar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <property name="P:Elysium.Controls.Window.TitleBar">
      <summary>
        Gets or sets a title bar for the window.
      </summary>
      <value>A title bar for the window. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.TitleBarProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetTitleBar(control);
          Window.SetTitleBar(control, new Grid());
        </code>
        <code lang="XAML">
          &lt;metro:Window.TitleBar&gt;
          &lt;Grid&gt;
          ...
          &lt;/Grid&gt;
          &lt;/metro:Window.TitleBar&gt;
        </code>
      </example>
    </property>
    <field name="F:Elysium.Controls.Window.TitleBarProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.GetTitleBar(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>An title bar for the window.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <method name="M:Elysium.Controls.Window.SetTitleBar(Elysium.Controls.Window,System.Windows.FrameworkElement)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">An title bar for the window.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <property name="P:Elysium.Controls.Window.IsTitleBarHost">
      <summary>
        Gets or sets the value, which corresponds to whether the specified control is a host-object for the title bar.
      </summary>
      <value>Corresponds to whether the specified control is a host-object for the title bar. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsTitleBarHostProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Decorator();
          var currentValue = Window.GetIsTitleBarHost(control);
          Window.SetIsTitleBarHost(control, true);
        </code>
        <code lang="XAML">
          &lt;Decorator metro:Window.IsTitleBarHost="True"/&gt;
        </code>
      </example>
    </property>
    <field name="F:Elysium.Controls.Window.IsTitleBarHostProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property.
      </value>
    </field>
    <method name="M:Elysium.Controls.Window.GetIsTitleBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Corresponds to whether the specified control is a host-object for the title bar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <method name="M:Elysium.Controls.Window.SetIsTitleBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property for the specified item of the control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Corresponds to whether the specified control is a host-object for the title bar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </method>
    <property name="P:Elysium.Controls.Window.DefaultCaptionButtonStyleKey">
      <summary>
        Gets the resource key for a style applied to a buttons in a main window caption by default.
      </summary>
      <value>Key for a style applied to a buttons in a main window caption by default.</value>
      <example>
        <code lang="XAML">
          &lt;metro:Window.TitleBar&gt;
          ...
          &lt;Button Style="{DynamicResource {x:Static metro:Window.DefaultCaptionButtonStyleKey}}"/&gt;
          ...
          &lt;/metro:Window.TitleBar&gt;
        </code>
      </example>
    </property>
    <property name="P:Elysium.Controls.Window.MainWindowCaptionButtonStyleKey">
      <summary>
        Gets the resource key for a style applied to a buttons in the main window caption.
      </summary>
      <value>Key for a style applied to a buttons in the main window caption.</value>
      <example>
        <code lang="XAML">
          &lt;metro:Window.TitleBar&gt;
          ...
          &lt;Button Style="{DynamicResource {x:Static metro:Window.MainWindowCaptionButtonStyleKey}}"/&gt;
          ...
          &lt;/metro:Window.TitleBar&gt;
        </code>
      </example>
    </property>
    <method name="M:Elysium.Controls.Window.OnSourceInitialized(System.EventArgs)">
      <inheritdoc />
    </method>
    <method name="M:Elysium.Controls.Window.OnApplyTemplate">
      <inheritdoc />
    </method>
    <method name="M:Elysium.Controls.Window.ShowDialog">
      <inheritdoc cref="M:System.Windows.Window.ShowDialog" />
    </method>
    <method name="M:Elysium.Controls.Window.OnClosed(System.EventArgs)">
      <inheritdoc />
    </method>
    <method name="M:Elysium.Controls.Window.Finalize">
      <inheritdoc />
    </method>
  </members>
</doc>