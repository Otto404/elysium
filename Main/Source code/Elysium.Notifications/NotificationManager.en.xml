<?xml version="1.0" encoding="utf-8" ?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="..\Documentation\Documentation.xsd">
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <type name="T:Elysium.Notifications.NotificationManager">
      <summary>
        A notification manager.
      </summary>
    </type>
    <method name="M:Elysium.Notifications.NotificationManager.BeginTryPush(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
        Returns a value, which corresponds to whether the operation succeeded.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.
        <see cref="P:System.Windows.Threading.DispatcherOperation.Result" /> is True, if the notification was displayed successfully, otherwise false.
      </returns>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/>  has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
    <method name="M:Elysium.Notifications.NotificationManager.TryPushAsync(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
        Returns a value, which corresponds to whether the operation succeeded.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> instance, which allows you manage execution task thread.
        <see cref="T:System.Threading.Tasks.Task" /> incapsulated value is True, if the notification was displayed successfully, otherwise false.
      </returns>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/>  has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
    <method name="M:Elysium.Notifications.NotificationManager.TryPush(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
        Returns a value, which corresponds to whether the operation succeeded.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <returns>True, if the notification was displayed successfully, otherwise false.</returns>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/>  has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
    <method name="M:Elysium.Notifications.NotificationManager.BeginPush(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <returns><see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/> has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <exception cref="T:Elysium.Notifications.ServerUnavailableException">
        Notification's server is inaccessible.
      </exception>
      <exception cref="T:Elysium.Notifications.PushNotificationFailedException">
        While displaying the notification an unknown error happened.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
    <method name="M:Elysium.Notifications.NotificationManager.PushAsync(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <returns><see cref="T:System.Threading.Tasks.Task" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/> has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <exception cref="T:Elysium.Notifications.ServerUnavailableException">
        Notification's server is inaccessible.
      </exception>
      <exception cref="T:Elysium.Notifications.PushNotificationFailedException">
        While displaying the notification an unknown error happened.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
    <method name="M:Elysium.Notifications.NotificationManager.Push(System.String,System.String)">
      <summary>
        Displays a notification with a specified header and a remark and returns a control flow without waiting for notification's closing.
      </summary>
      <param name="message">A header of the notification.</param>
      <param name="remark">A remark.</param>
      <exception cref="T:System.ArgumentException">
        Parameter <paramref name="message"/> has a value = null or it's an empty string or it consists of spaces.
      </exception>
      <exception cref="T:Elysium.Notifications.ServerUnavailableException">
        Notification's server is inaccessible.
      </exception>
      <exception cref="T:Elysium.Notifications.PushNotificationFailedException">
        While displaying the notification an unknown error happened.
      </exception>
      <requires exception="T:System.ArgumentException">message != null</requires>
    </method>
  </members>
</doc>
