<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <member name="T:Elysium.AccentBrushes">
      <summary>
        Contains a set of brushes with a solid filling based on one of the accent colours.
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Blue">
      <summary>
        Returns a brush with the solid fill colour of blue (#FF017BCD).
      </summary>
      <value>A brush with the solid fill colour of blue (#FF017BCD).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Brown">
      <summary>
        Returns a brush with the solid fill colour of brown (#FFA05000).
      </summary>
      <value>A brush with the solid fill colour of brown (#FFA05000).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Green">
      <summary>
        Returns a brush with the solid fill colour of green (#FF339933).
      </summary>
      <value>A brush with the solid fill colour of green (#FF339933).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Lime">
      <summary>
        Returns a brush with the solid fill colour of lime (#FF8CBF26).
      </summary>
      <value>A brush with the solid fill colour of lime (#FF8CBF26).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Magenta">
      <summary>
        Returns a brush with the solid fill colour of magenta (#FFFF0097).
      </summary>
      <value>A brush with the solid fill colour of magenta (#FFFF0097).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Mango">
      <summary>
        Returns a brush with the solid fill colour of mango (#FFF09609).
      </summary>
      <value>A brush with the solid fill colour of mango (#FFF09609).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Orange">
      <summary>
        Returns a brush with the solid fill colour of orange (#FFCB5201).
      </summary>
      <value>A brush with the solid fill colour of orange (#FFCB5201).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Pink">
      <summary>
        Returns a brush with the solid fill colour of pink (#FFE671B8).
      </summary>
      <value>A brush with the solid fill colour of pink (#FFE671B8).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Purple">
      <summary>
        Returns a brush with the solid fill colour of purple (#FF69227B).
      </summary>
      <value>A brush with the solid fill colour of purple (#FF69227B).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Red">
      <summary>
        Returns a brush with the solid fill colour of red (#FFE51400).
      </summary>
      <value>A brush with the solid fill colour of red (#FFE51400).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Rose">
      <summary>
        Returns a brush with the solid fill colour of rose (#FFD80073).
      </summary>
      <value>A brush with the solid fill colour of rose (#FFD80073).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Sky">
      <summary>
        Returns a brush with the solid fill colour of light blue (#FF1BA1E2).
      </summary>
      <value>A brush with the solid fill colour of light blue (#FF1BA1E2).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Viridian">
      <summary>
        Returns a brush with the solid fill colour of viridian (#FF00ABA9).
      </summary>
      <value>A brush with the solid fill colour of viridian (#FF00ABA9).</value>
    </member>
    <member name="P:Elysium.AccentBrushes.Violet">
      <summary>
        Returns a brush with the solid fill colour of violet (#FFA200FF).
      </summary>
      <value>A brush with the solid fill colour of violet (#FFA200FF).</value>
    </member>
    <member name="T:Elysium.Manager">
      <summary>
        Represents the class that controls theme's basic settings.
      </summary>
    </member>
    <member name="P:Elysium.Manager.DefaultTheme">
      <summary>
        Returns default theme type.
      </summary>
      <value>
        One of the values of the enumeration <see cref="T:Elysium.Theme" /></value>
    </member>
    <member name="P:Elysium.Manager.DefaultAccentBrush">
      <summary>
        Returns a brush with solid filling, which contains a default accent color.
      </summary>
      <value>A brush with solid filling.</value>
    </member>
    <member name="P:Elysium.Manager.DefaultContrastBrush">
      <summary>
        Returns a brush with solid filling, which contains a default contrast color (contrast to accent).
      </summary>
      <value>A brush with solid filling.</value>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.FrameworkElement,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Retunrs such a theme type, which is actual for the control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>A theme type for the control.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.Application,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.Application)">
      <summary>
        Returns such a theme type, which is actual for the application.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <returns>A theme type for the application.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a value of the accent color for the specified control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>An accent color for the control.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.Application)">
      <summary>
        Returns a value of the accent color for the application.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <returns>An accent color for the application.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the contrast color (contrast to accent color) for the control, using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A constrast color (contrast to accent color) for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a contrast color (contrast to accent color)  for the control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control by calling safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A contrast color (contrast to accent color) for the specified control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.Application)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <remarks>
        Calling this method is equal to calling base method "Apply" with the value "null" for the parameters "theme","accentBrush" and "contrastBrush"
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number"><item>If the parameter was set, old value will be used.</item><item>If the parameter was not set, default value will be used.</item></list>
        Calling this method is equal to calling base method "Apply" with the value "null" for the parameters "theme","accentBrush" and "contrastBrush"
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number"><item>If the parameter was set, old value will be used.</item><item>If the parameter was not set, default value will be used.</item></list>
        Calling this method is equal to calling base method "apply" with "theme" parameter = null.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number"><item>If the parameter was set, old value will be used.</item><item>If the parameter was not set, default value will be used.</item></list></remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="M:Elysium.Manager.Remove(System.Windows.Application)">
      <summary>
        Disables the theme in the specified application.
      </summary>
      <param name="application">An instance of the application, whose theme is being disabled.</param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </member>
    <member name="T:Elysium.Theme">
      <summary>
        Defines the theme type.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Dark">
      <summary>
        Items of the control use the dark coloured theme by default.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Light">
      <summary>
        Items of the control use the light coloured theme by default.
      </summary>
    </member>
    <member name="T:Elysium.InvalidStyleException">
      <summary>
        An exception, which is generated when an unsupported operation with a style is conducted.
      </summary>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor">
      <inheritdoc cref="M:System.Exception.#ctor" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String)">
      <inheritdoc cref="M:System.Exception.#ctor(System.String)" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String,System.Exception)">
      <inheritdoc cref="M:System.Exception.#ctor(System.String,System.Exception)" />
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="T:Elysium.Extensions.LogicalTreeHelperExtensions">
      <summary>
        Provides extension methods for search through logical tree of WPF elements.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Searches a parent of the specified object in the logical tree of WPF elements.
      </summary>
      <typeparam name="T">A parent type.</typeparam>
      <param name="reference">An element, whose parent will be searched.</param>
      <returns>The parent or null, if there are no object of specified type.</returns>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Searches a root element in the logical tree of WPF elements for the specified element.
      </summary>
      <param name="reference">An element, whose root element will be searched.</param>
      <returns>Root element or null, if specified object is a root element.</returns>
    </member>
    <member name="T:Elysium.Extensions.VisualTreeHelperExtensions">
      <summary>
        Provides extension methods for search through visual tree of WPF elements.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Searches a parent of the specified object in the visual tree of WPF elements.
      </summary>
      <typeparam name="T">A parent type.</typeparam>
      <param name="reference">An element, whose parent will be searched.</param>
      <returns>The parent or null, if there are no object of specified type.</returns>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Searches a root element in the visual tree of WPF elements for the specified element.
      </summary>
      <param name="reference">An element, whose root element will be searched.</param>
      <returns>Root element of the visual tree or null, if specified object is a root element.</returns>
    </member>
    <member name="T:Elysium.Parameters.Bullet">
      <summary>
        Represents a class, which manages the settings of the flag in following controls: <see cref="T:System.Windows.Controls.CheckBox" />
        and <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Bullet.DecoratorSize">
      <summary>
        Gets or sets the size of the area where the marker is located.
      </summary>
      <value>The size of the area where the marker is located. The default value is 16 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Bullet.DecoratorSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetDecoratorSize(control);
          Parameters.SetDecoratorSize(control, 16d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:Bullet.DecoratorSize="16px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Bullet.DecoratorSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetDecoratorSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the area where the marker is located.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetDecoratorSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the area, where the marker is located.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Bullet.Size">
      <summary>
        Gets or sets the size of the marker in "indeterminate" state.
      </summary>
      <value>The size of the marker when state is "indeterminate". The default value is 8px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Bullet.SizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.GetSize(control);
          Parameters.SetSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:Bullet.Size="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Bullet.SizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker when state is "indeterminate".</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker when state is "indeterminate".</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.CheckBox">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.CheckBox.CheckSize">
      <summary>
        Gets or sets the size of the marker in the "enabled" state for the control <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
      <value>The size of the marker when state = enabled. The default value is 10 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.CheckBox.CheckSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CheckBox();
          var currentValue = Parameters.CheckBox.GetCheckSize(control);
          Parameters.CheckBox.SetCheckSize(control, 10d);
        </code>
        <code lang="XAML">
          &lt;CheckBox params:CheckBox.CheckSize="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CheckBox.CheckSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.GetCheckSize(System.Windows.Controls.CheckBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker when state = enabled.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.SetCheckSize(System.Windows.Controls.CheckBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker when state = enabled.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ComboBox">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ButtonSize">
      <summary>
        Gets or sets the width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
      <value>
        The width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />. The default value is 18px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ButtonSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        The value of this property is used only when the control <see cref="T:System.Windows.Controls.ComboBox" /> is declared as "editable".
        Otherwise, the value is ignored and the button is stretched for the whole width of the control.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetButtonSize(control);
          Parameters.ComboBox.SetButtonSize(control, 18d);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ButtonSize="18px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ButtonSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetButtonSize(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetButtonSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the <see cref="T:System.Windows.Controls.ComboBox" /> control.
      </summary>
      <value>
        The size of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />. The default value is 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetArrowSize(control);
          Parameters.ComboBox.SetArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowSize(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The size of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowMargin">
      <summary>
        Gets or sets the margin of the arrow from the sides of the button in the <see cref="T:System.Windows.Controls.ComboBox" /> control.
      </summary>
      <value>
        the margin of the arrow from the sides of the button in the <see cref="T:System.Windows.Controls.ComboBox" /> control. The default value is (5,0,5,0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ComboBox.ArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        In the default style only the value of the right margin is used, all other values are ignored.
        Nevertheless, you can use the values of the other margins when you redefine the style.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.ComboBox.GetArrowMargin(control);
          Parameters.ComboBox.SetArrowMargin(control, new Thickness(5d, 0d, 5d, 0d));
        </code>
        <code lang="XAML">
          &lt;ComboBox params:ComboBox.ArrowMargin="5,0,5,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowMarginProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowMargin(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The margin of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowMargin(System.Windows.Controls.ComboBox,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The margin of the arrow in the <see cref="T:System.Windows.Controls.ComboBox" /> control .
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.CommandButtons">
      <summary>
        Represents a class that manages the settings of the styles of the command buttons.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.CommandButtons.Mask">
      <summary>
        Gets or sets the brush which is used for filling the command buttons (such classes, which are inherited from the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />.
      </summary>
      <value>A brush, used for filling the command buttons. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.CommandButtons.MaskProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        This property is set at the theme of the control locally and usually has the value, which is equal to the value of the resource MiddleLightBrush.
      </remarks>
      <example>
        <code lang="C#">
          var control = new CommandButton();
          var currentValue = Parameters.CommandButtons.GetMask(control);
          Parameters.CommandButtons.SetMask(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;CommandButton params:CommandButtons.Mask="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.CommandButtons.MaskProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.GetMask(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for filling the command buttons.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.SetMask(Elysium.Controls.Primitives.CommandButtonBase,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush, used for filling the command buttons.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Design">
      <summary>
        Represents the class that controls theme's basic settings in design-time mode.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Design.Theme">
      <summary>
        Gets or sets the value that indicates current theme type in design-time mode.
      </summary>
      <value>
        It can be either one of the values of <see cref="T:Elysium.Theme" /> or null. It might be null when the control has to use the value that has been set for the entire application. The default value is null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.ThemeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetTheme(control);
          Parameters.Design.SetTheme(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.Theme="Light"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.ThemeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current theme type for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The new theme type for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Design.AccentBrush">
      <summary>
        Gets or sets the accent colour in design-time mode.
      </summary>
      <value>The brush that contains the accent colour, or null, if the control has to use the value, which has been set for the entire application. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.AccentBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetAccentBrush(control);
          Parameters.Design.SetAccentBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.AccentBrush="{DynamicResource BlueBrush}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.AccentBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current accent colour for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The accent colour for the specified control in construtor's mode. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Design.ContrastBrush">
      <summary>
        Gets or sets the colour which is contrast to the accent colour in design-time mode.
      </summary>
      <value>The brush that contains the contrast colour, or null, if the control has to use the value, which has been set for the entire application. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Design.ContrastBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Design.GetContrastBrush(control);
          Parameters.Design.SetContrastBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:Design.ContrastBrush="White"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Design.ContrastBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Design.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current contrast colour for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Design.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The contrast colour for the specified control in construtor's mode. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.DropDown">
      <summary>
        Represents a class, which manages the settings of the style of the DropDown list (also manages a submenu with such a style).
      </summary>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsOpen">
      <summary>
        Gets or sets the value, that indicates whether the dropdown list is opened at the moment.
      </summary>
      <value>True, if the list is opened; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsOpen(control);
          Parameters.DropDown.SetIsOpen(control, true);
        </code>
        <code lang="XAML">
          &lt;Trigger Property="IsSubmenuOpen" Value="True"&gt;
          &lt;Setter TargetName="PART_Popup" Property="params:DropDown.IsOpen" Value="True"/&gt;
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsOpen(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value, that indicates whether the dropdown list is opened at the moment.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.DropDown.SetIsOpen(System.Windows.Controls.Primitives.Popup,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value, that indicates whether the dropdown list is opened at the moment.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition">
      <summary>
        Returns the value, that indicates whether the current horizontal position of the dropdown list and the default value are equal.
      </summary>
      <value>True, if the values are equal; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsDefaultHorizontalPositionProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsDefaultHorizontalPosition(control);
        </code>
        <code lang="XAML">
          &lt;Trigger SourceName="PART_Popup" Property="params:DropDown.IsDefaultHorizontalPosition" Value="True"&gt;
          ...
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultHorizontalPositionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultHorizontalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Returns the value, that indicates whether the current horizontal position of the dropdown list and the default value are equal.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition">
      <summary>
        Returns the value, that indicates whether the current vertical position of the dropdown list and the default value are equal.
      </summary>
      <value>True, if the values are equal; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.DropDown.IsDefaultVerticalPositionProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Popup();
          var currentValue = Parameters.DropDown.GetIsDefaultVerticalPosition(control);
        </code>
        <code lang="XAML">
          &lt;Trigger SourceName="PART_Popup" Property="params:DropDown.IsDefaultVerticalPosition" Value="True"&gt;
          ...
          &lt;Trigger/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultVerticalPositionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultVerticalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Returns the value, that indicates whether the current vertical position of the dropdown list and the default value are equal.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="F:Elysium.Parameters.DropDown.PopupPlacementCallback">
      <summary>
        Returns the delegate used for calculating the position of the dropdown list.
      </summary>
      <value>Returns the delegate used for calculating the position of the dropdown list.</value>
      <seealso cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
    </member>
    <member name="T:Elysium.Parameters.General">
      <summary>
        Represents a class that manages the settings of the styles of the controls.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.TitleFontSize">
      <summary>
        Gets or sets the size of the font of the window's title.
      </summary>
      <value>The size of the font of the window's title. The default value is 12 pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.TitleFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        This property influences only the next classes:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.Window" /> (title only)
            </description></item></list>
        Despite this, it can be applied to any control, because it is  inherited.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Parameters.GetTitleFontSize(control);
          Parameters.SetTitleFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Window params:General.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.TitleFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetTitleFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the window's title.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetTitleFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the window's title.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.HeaderFontSize">
      <summary>
        Gets or sets the size of the font of the control's title.
      </summary>
      <value>The size of the font of the control's title. The default value is 16pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.HeaderFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        This property influences only the next classes:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.TabItem" /> (title only)
            </description></item></list>
        Despite this, it can be applied to any control, because it is  inherited.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.GetHeaderFontSize(control);
          Parameters.SetHeaderFontSize(control, 12d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TabControl params:General.TitleFontSize="12pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.HeaderFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetHeaderFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the control's title.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetHeaderFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the control's title.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.ContentFontSize">
      <summary>
        Gets or sets the size of the font of the control's content.
      </summary>
      <value>The size of the font of the control's content. The default value is 10pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.ContentFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        This property influences only the next classes:
        <list type="bullet"><item><description><see cref="T:Elysium.Controls.ApplicationBar" /></description></item><item><description><see cref="T:System.Windows.Controls.Button" /></description></item><item><description><see cref="T:System.Windows.Controls.CheckBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ComboBox" /></description></item><item><description><see cref="T:Elysium.Controls.CommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ContextMenu" /></description></item><item><description><see cref="T:Elysium.Controls.DropDownCommandButton" /></description></item><item><description><see cref="T:System.Windows.Controls.ListBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RadioButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.RepeatButton" /></description></item><item><description><see cref="T:System.Windows.Controls.Slider" /></description></item><item><description><see cref="T:Elysium.Controls.Submenu" /></description></item><item><description><see cref="T:System.Windows.Controls.Primitives.ToggleButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleCommandButton" /></description></item><item><description><see cref="T:Elysium.Controls.ToggleSwitch" /></description></item></list>
        Despite this, it can be applied to any control, because it is  inherited.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetContentFontSize(control);
          Parameters.SetContentFontSize(control, 10d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.ContentFontSize="10pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.ContentFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetContentFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the control's content.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetContentFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the control's content.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.TextFontSize">
      <summary>
        Gets or sets the size of the font of the text.
      </summary>
      <value>The size of the font of the text. The default value is 9pt.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.TextFontSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
        This property influences only the next classes:
        <list type="bullet"><item><description><see cref="T:System.Windows.Controls.PasswordBox" /></description></item><item><description><see cref="T:System.Windows.Controls.RichTextBox" /></description></item><item><description><see cref="T:System.Windows.Controls.ScrollViewer" /></description></item><item><description><see cref="T:System.Windows.Controls.TabControl" /> (content only)
            </description></item><item><description><see cref="T:System.Windows.Controls.TextBox" /></description></item><item><description><see cref="T:Elysium.Controls.Window" /> (content only)
            </description></item></list>
        Despite this, it can be applied to any control, because it is  inherited.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TextBox();
          var currentValue = Parameters.GetTextFontSize(control);
          Parameters.SetTextFontSize(control, 9d * (96d / 72d));
        </code>
        <code lang="XAML">
          &lt;TextBox params:General.ContentFontSize="9pt"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.TextFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetTextFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the text.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetTextFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the text.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThickness">
      <summary>
        Gets or sets default thickness of the line.
      </summary>
      <value>Default thickness of the line. The default value is 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThickness(control);
          Parameters.SetDefaultThickness(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultThickness="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default thickness of the line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThickness">
      <summary>
        Gets or sets the value of the semibold line.
      </summary>
      <value>A thickness of the semibold line. The default value is 1.5 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThickness(control);
          Parameters.SetSemiBoldThickness(control, new Thickness(1.5d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldThickness="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the semibold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the semibold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThickness">
      <summary>
        Gets or sets the value of the bold line.
      </summary>
      <value>A thickness of the bold line. The default value is 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThickness(control);
          Parameters.SetBoldThickness(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldThickness="2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the bold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the bold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThicknessValue">
      <summary>
        Gets or sets default thickness of the line.
      </summary>
      <value>Default thickness of the line. The default value is 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultThicknessValue(control);
          Parameters.SetDefaultThicknessValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultThicknessValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Defalut thickness of the line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default thickness of the line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThicknessValue">
      <summary>
        Gets or sets the value of the semibold line.
      </summary>
      <value>A thickness of the semibold line. The default value is 1.5 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldThicknessValue(control);
          Parameters.SetSemiBoldThicknessValue(control, 1.5d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldThicknessValue="1.5px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the semibold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the semibold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThicknessValue">
      <summary>
        Gets or sets the value of the bold line.
      </summary>
      <value>A thickness of the bold line. The default value is 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldThicknessValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldThicknessValue(control);
          Parameters.SetBoldThicknessValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldThicknessValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the bold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the bold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPadding">
      <summary>
        Gets or sets the default value of padding.
      </summary>
      <value>Default value of the padding. The default value is 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPadding(control);
          Parameters.SetDefaultPadding(control, new Thickness(1d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultPadding="1"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default value of padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default value of padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPadding">
      <summary>
        Gets or sets the value of medium-size padding.
      </summary>
      <value>the value of medium-size padding. The default value is 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPadding(control);
          Parameters.SetSemiBoldPadding(control, new Thickness(2d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldPadding="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the medium-size padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of medium-size padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPadding">
      <summary>
        Gets or sets the value of the biggest padding.
      </summary>
      <value>The value of the biggest padding. The default value is 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldPaddingProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPadding(control);
          Parameters.SetBoldPadding(control, new Thickness(6d));
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldPadding="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the biggest padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the biggest padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPaddingValue">
      <summary>
        Gets or sets the default value of padding.
      </summary>
      <value>Default value of the padding. The default value is 1px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultPaddingValue(control);
          Parameters.SetDefaultPaddingValue(control, 1d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultPaddingValue="1px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default value of padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default value of padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPaddingValue">
      <summary>
        Gets or sets the default value of medium-size padding.
      </summary>
      <value>the value of medium-size padding. The default value is 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.SemiBoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetSemiBoldPaddingValue(control);
          Parameters.SetSemiBoldPaddingValue(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.SemiBoldPaddingValue="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the medium-size padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of medium-size padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPaddingValue">
      <summary>
        Gets or sets the value of the biggest padding.
      </summary>
      <value>The value of the biggest padding. The default value is 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.BoldPaddingValueProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />,
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" /></description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetBoldPaddingValue(control);
          Parameters.SetBoldPaddingValue(control, 6d);
        </code>
        <code lang="XAML">
          &lt;Button params:General.BoldPaddingValue="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the biggest padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the biggest padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultDuration">
      <summary>
        Gets or sets the default duration of the animation.
      </summary>
      <value>Default duration of the animation. The default value is 0 sec.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.DefaultDurationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetDefaultDuration(control);
          Parameters.SetDefaultDuration(control, new Duration(TimeSpan.FromSeconds(0d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.DefaultDuration="00:00:00.0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.MinimumDuration">
      <summary>
        Gets or sets the minimum duration of the animation.
      </summary>
      <value>Minimum duration of the animation. The default value is 0.2 sec.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.MinimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMinimumDuration(control);
          Parameters.SetMinimumDuration(control, new Duration(TimeSpan.FromSeconds(0.2d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.MinimumDuration="00:00:00.2"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.MinimumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetMinimumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Minimum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetMinimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Minimum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.OptimumDuration">
      <summary>
        Gets or sets the optimum duration of the animation.
      </summary>
      <value>Optimum duration of the animation. The default value is 0.5 sec.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.OptimumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetOptimumDuration(control);
          Parameters.SetOptimumDuration(control, new Duration(TimeSpan.FromSeconds(0.5d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.OptimumDuration="00:00:00.5"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.OptimumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetOptimumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Optimum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetOptimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Optimum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.MaximumDuration">
      <summary>
        Gets or sets the maximum duration of the animation.
      </summary>
      <value>Maximum duration of the animation. The default value is 1 sec.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.MaximumDurationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Button();
          var currentValue = Parameters.GetMaximumDuration(control);
          Parameters.SetMaximumDuration(control, new Duration(TimeSpan.FromSeconds(1d)));
        </code>
        <code lang="XAML">
          &lt;Button params:General.MaximumDuration="00:00:01"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.MaximumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetMaximumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Maximum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetMaximumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Maximum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.General.ShadowBrush">
      <summary>
        Gets or sets the brush used for shadow creation.
      </summary>
      <value>The brush used for shadow creation. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.General.ShadowBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits" />
            </description>
          </item>
        </list>
        This property is set at the theme of the control locally and usually has the value, which is equal to the value of the resource ForegroundBrush with the value of transparency = 0.3.
      </remarks>
      <example>
        <code lang="C#">
          var control = new ComboBox();
          var currentValue = Parameters.GetShadowBrush(control);
          Parameters.SetShadowBrush(control, Brushes.Black);
        </code>
        <code lang="XAML">
          &lt;ComboBox params:General.ShadowBrush="Black"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.General.ShadowBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.General.GetShadowBrush(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for shadow creation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.General.SetShadowBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush used for shadow creation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Manager">
      <summary>
        Represents a class, which grants access to dependency properties of the settings of the control's theme from XAML.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Manager.Theme">
      <summary>
        Gets or sets the value that indicates current theme type.
      </summary>
      <value>
        It can be either one of the values of <see cref="T:Elysium.Theme" /> or null. It might be null when the control has to inherit the value from the parent or use the value that has been set for the entire application. The default value is null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.ThemeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        If the parameter is inherithed from application, it's guaranteed that parameter's value will be updated when according value is updated for the application.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetTheme(control);
          Parameters.Manager.SetTheme(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:.Manager.Theme="Light"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.ThemeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current theme type for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The new theme type for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Manager.AccentBrush">
      <summary>
        Gets or sets the accent colour.
      </summary>
      <value>
        The brush that contains the accent colour, or null, if the control has to inherit the value from the parent or use the value, which has been set for the entire application. The default value is null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.AccentBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        If the parameter is inherithed from application, it's guaranteed that parameter's value will be updated when according value is updated for the application.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetAccentBrush(control);
          Parameters.Manager.SetAccentBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:.Manager.AccentBrush="{DynamicResource BlueBrush}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.AccentBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current accent colour for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The accent colour for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Manager.ContrastBrush">
      <summary>
        Gets or sets the colour which is contrast to the accent colour.
      </summary>
      <value>The brush that contains the contrast colour, or null, if the control has to inherit the value from the parent or use the value, which has been set for the entire application. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Manager.ContrastBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        If the parameter is inherithed from application, it's guaranteed that parameter's value will be updated when according value is updated for the application.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.Manager.GetContrastBrush(control);
          Parameters.Manager.SetContrastBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;TabControl params:.Manager.ContrastBrush="White"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Manager.ContrastBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current contrast colour for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The contrast colour for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.MenuBase">
      <summary>
        Represents a class that manages the settings of the style of the menu.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBackground">
      <summary>
        Gets or sets the color of the background of the submenu.
      </summary>
      <value>The color of the background of the submenu. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBackgroundProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBackground(control);
          Parameters.MenuBase.SetSubmenuBackground(control, null);
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBackground="{x:Null}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBackgroundProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the background of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the background of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush">
      <summary>
        Gets or sets the color of the border of the submenu.
      </summary>
      <value>
        The color of the border of the submenu. The default value is null.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBorderBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBorderBrush(control);
          Parameters.MenuBase.SetSubmenuBorderBrush(control, null);
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBorderBrush="{x:Null}"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the border of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the border of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness">
      <summary>
        Gets or sets the size of the border thickness of the submenu.
      </summary>
      <value>
        The size of the border thickness of the submenu. The default value is (0,0,0,0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuBase.SubmenuBorderThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Menu();
          var currentValue = Parameters.MenuBase.GetSubmenuBorderThickness(control);
          Parameters.MenuBase.SetSubmenuBorderThickness(control, new Thickness(0d));
        </code>
        <code lang="XAML">
          &lt;Menu params:MenuBase.SubmenuBorderThickness="0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the border of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the border of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.MenuItem">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.BulletSize">
      <summary>
        Gets or sets the size of the marker of <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
      <value>The size of the marker. The default value is 12 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.BulletSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
        This property influences the element of MenuItem control, which is inserted in any pulldown menu (ContextMenu or SubMenu) and no other pulldown menu is inherited from it.
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetBulletSize(control);
          Parameters.MenuItem.SetBulletSize(control, 12d);
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.BulletSize="12px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.BulletSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetBulletSize(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetBulletSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the <see cref="T:System.Windows.Controls.MenuItem" /> control .
      </summary>
      <value>
        The size of the arrow in the <see cref="T:System.Windows.Controls.MenuItem" /> control . The default value is 8px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetArrowSize(control);
          Parameters.MenuItem.SetArrowSize(control, 8d);
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.ArrowSize="8px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowSize(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The size of the arrow in the menuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the menuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowMargin">
      <summary>
        Gets or sets the size of the arrow margin in the <see cref="T:System.Windows.Controls.MenuItem" /> control .
      </summary>
      <value>
        Gets or sets the size of the arrow margin in the <see cref="T:System.Windows.Controls.MenuItem" /> control . The default value is (3,0,3,0).
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.MenuItem.ArrowMarginProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new MenuItem();
          var currentValue = Parameters.MenuItem.GetArrowMargin(control);
          Parameters.MenuItem.SetArrowMargin(control, new Thickness(3d, 0d, 3d, 0d));
        </code>
        <code lang="XAML">
          &lt;MenuItem params:MenuItem.ArrowMargin="3,0,3,0"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowMarginProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowMargin(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The margin of the arrow in the MenuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowMargin(System.Windows.Controls.MenuItem,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the MenuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Progress">
      <summary>
        Represents a class, which manages the settings of the styles of the controls, who are inherited from <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Progress.BusyElementSize">
      <summary>
        Gets or sets the default size of the indication element of a "busy" state (whose default shape is a circle) for successors of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
      <value>The default size of the indication element of a "busy" state. The default value is 4px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Progress.BusyElementSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ProgressBar();
          var currentValue = Parameters.Progress.GetBusyElementSize(control);
          Parameters.Progress.SetBusyElementSize(control, 4d);
        </code>
        <code lang="XAML">
          &lt;ProgressBar params:Progress.BusyElementSize="4px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Progress.BusyElementSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Progress.GetBusyElementSize(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The default size of the indication element of a "busy" state.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Progress.SetBusyElementSize(Elysium.Controls.Primitives.ProgressBase,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The default size of the indication element of a "busy" state.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ScrollBar">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ScrollBar.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the control <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
      <value>
        The size of the arrow. The default value is 6px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ScrollBar.ArrowSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ScrollBar();
          var currentValue = Parameters.ScrollBar.GetArrowSize(control);
          Parameters.ScrollBar.SetArrowSize(control, 6d);
        </code>
        <code lang="XAML">
          &lt;ScrollBar params:ScrollBar.ArrowSize="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ScrollBar.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.GetArrowSize(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the arrow.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.SetArrowSize(System.Windows.Controls.Primitives.ScrollBar,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the arrow.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Slider">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Slider.TrackSize">
      <summary>
        Gets or sets the width of the track in the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Lenght of the track in trackbar. The default value is 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Slider.TrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.Slider.GetTrackSize(control);
          Parameters.Slider.SetTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;Slider params:Slider.TrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Slider.TrackSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetTrackSize(System.Windows.Controls.Slider)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Length of the track of a trackbar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetTrackSize(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Length of the track of a trackbar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.Slider.ThumbThickness">
      <summary>
        Gets or sets the height of the track in the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
      <value>Height of the track in a trackbar. The default value is 6px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Slider.ThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Slider();
          var currentValue = Parameters.Slider.GetThumbThickness(control);
          Parameters.Slider.SetThumbThickness(control, 6d);
        </code>
        <code lang="XAML">
          &lt;Slider params:Slider.ThumbThickness="6px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Slider.ThumbThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetThumbThickness(System.Windows.Controls.Slider)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Heigth of the track of a trackbar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetThumbThickness(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Height of the track of a trackbar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.TabControl">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorBrush">
      <summary>
        Gets or sets the brush used for filling the current tab indicator <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>The brush used for filling the current tab indicator. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControl.IndicatorBrushProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender" />
            </description>
          </item>
        </list>
        This property is set at the theme of the control locally and usually has the value, which is equal to the value of the resource AccentBrush for the current tab and HighlightBrush for another part of the indicator.
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.TabControl.GetIndicatorBrush(control);
          Parameters.TabControl.SetIndicatorBrush(control, Brushes.LightGray);
        </code>
        <code lang="XAML">
          &lt;CommandButton params:TabControl.IndicatorBrush="LightGray"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorBrush(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for filling current tab.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <exception cref="T:System.ArgumentException">
        The parameter <paramref name="obj" /> is not any from the listed below types: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush, used for filling the current tab indicator.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <exception cref="T:System.ArgumentException">
        The parameter <paramref name="obj" /> is not any from the listed below types: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <requires exception="T:System.ArgumentException">(obj is TabControl) || (obj is TabItem)</requires>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorThickness">
      <summary>
        Gets or sets the thickness of the current tab indicator in the control <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
      <value>the thickness of the current tab indicator. The default value is 2px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.TabControl.IndicatorThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new TabControl();
          var currentValue = Parameters.TabControl.GetIndicatorThickness(control);
          Parameters.TabControl.SetIndicatorThickness(control, 2d);
        </code>
        <code lang="XAML">
          &lt;Slider params:TabControl.IndicatorThickness="2px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorThickness(System.Windows.Controls.TabControl)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>the thickness of the current tab indicator.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorThickness(System.Windows.Controls.TabControl,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The thickness of the current tab indicator </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.TabItem">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TabItem.HeaderStyle">
      <summary>
        Gets or sets the style tab header in the control <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
      <value>The style of a tab header. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.TabItem.HeaderStyleProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
        This property is usually set locally according to the style of the control.
      </remarks>
    </member>
    <member name="F:Elysium.Parameters.TabItem.HeaderStyleProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.TabItem.GetHeaderStyle(System.Windows.Controls.TabItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The style of the header of the tabItem.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Parameters.TabItem.SetHeaderStyle(System.Windows.Controls.TabItem,System.Windows.Style)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The style of the header of the tabItem </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.ToggleSwitch">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.TrackSize">
      <summary>
        Gets or sets the width of the switch in the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Width of the switch. The default value is 48px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitch.TrackSizeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.ToggleSwitch.GetTrackSize(control);
          Parameters.ToggleSwitch.SetTrackSize(control, 48d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch params:ToggleSwitch.TrackSize="48px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.TrackSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetTrackSize(Elysium.Controls.ToggleSwitch)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Width of the switch.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetTrackSize(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Width of the switch.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.ThumbThickness">
      <summary>
        Gets or sets the thickness of the switch in the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
      <value>Thickness of the switch. The default value is 10 px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.ToggleSwitch.ThumbThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new ToggleSwitch();
          var currentValue = Parameters.ToggleSwitch.GetThumbThickness(control);
          Parameters.ToggleSwitch.SetThumbThickness(control, 10d);
        </code>
        <code lang="XAML">
          &lt;ToggleSwitch params:ToggleSwitch.ThumbThickness="10px"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.ThumbThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetThumbThickness(Elysium.Controls.ToggleSwitch)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Thickness of the switch.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetThumbThickness(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Thickness of the switch.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Parameters.Window">
      <summary>
        Represents a class that manages general settings of the styles of the controls.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.ResizeBorderThickness">
      <summary>
        Gets or sets the thickness of the border, which is drawn during resizing <see cref="T:System.Windows.Window" />.
      </summary>
      <value>
        Thickness of the border, which is drawn during resizing. The default value is 3px.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Parameters.Window.ResizeBorderThicknessProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Elysium.Controls.Window();
          var currentValue = Parameters.Window.GetResizeBorderThickness(control);
          Parameters.Window.SetResizeBorderThickness(control, new Thickness(3d));
        </code>
        <code lang="XAML">
          &lt;metro:Window params:Window.ResizeBorderThickness="3"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Parameters.Window.ResizeBorderThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property.

      </value>
    </member>
    <member name="M:Elysium.Parameters.Window.GetResizeBorderThickness(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Thickness of the border, which is drawn during resizing.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Parameters.Window.SetResizeBorderThickness(Elysium.Controls.Window,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Thickness of the border, which is drawn during resizing.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="T:Elysium.Converters.AngleToCoordinateConverter">
      <summary>
        Converts a value of an angle (by which the object is situated according to the centre of the circle) to coordinates.
      </summary>
    </member>
    <member name="M:Elysium.Converters.AngleToCoordinateConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of an angle (by which the object is situated according to the centre of the circle) to coordinates.
      </summary>
      <param name="values">
        Input values. Every value except first must be of type <see cref="T:System.Double" />.
        There must be a first value. First value will be returned in case there is a fail during code executing.
        Next three values are mandatory:
        <list type="number"><item><description>
              An angle (by which the object is situated according to the centre of the circle) to coordinates.
            </description></item><item><description>Witdh of the rectangle, in which the circle is entered.</description></item><item><description>Height of the rectange, in which the circle is entered.</description></item></list>
        Next four values are mandatory:
        <list type="number"><item><description>Width of the object.</description></item><item><description>Height of the object.</description></item><item><description>X coordinate of the centre of the circle.</description></item><item><description>Y coordinate of the centre of the circle.</description></item></list></param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values:  "X", "x", "Y", "y".</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        Object coordinates. In case of failure of the method's executing,  specified for the failure value will be returned. If the parameter <paramref name="values" /> is  null or it's lenght is more than 4, a value is returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToGridLengthConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.GridLength" />.
        The results depends on the value of the following paremeter <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. A value of the parameter <paramref name="value" /> is ignored.
            </description></item><item><description>
              "*": A value is represented as a calculated part of the available space. A value of the part weight has to be set in the parameter <paramref name="value" />.
            </description></item><item><description>
              null: A value, measured in pixels, is returned A quantity of pixels has to be set in the parameter <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Double" />. Result is a value of the <see cref="P:System.Windows.GridLength.Value" /> type or
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, in case types dont match ("Auto", "*" or pixels amount) <paramref name="value" /> и <paramref name="parameter" /> or failure during method execution.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToThicknessConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom" or null. The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.Thickness" />. All sides of the border, specified in the  <paramref name="parameter" /> have a value <paramref name="value" />;
        all other sides have a value = 0; In case the parameter <paramref name="parameter" /> = null, all sides of the border have the value = <paramref name="value" />.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        An average value of specified sides or all sides if <paramref name="parameter" />  = null.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.IsGreaterThanConverter">
      <summary>
        Calculates if one number is bigger than another one.
      </summary>
    </member>
    <member name="M:Elysium.Converters.IsGreaterThanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Calculates if one number is bigger than another one with double precision.
      </summary>
      <param name="value">
        A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />."
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">
        A parameter of the converter. A second number for comparing. Has to be a string and represent a number, which can be converted to the type <see cref="T:System.Double" /></param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        True, if <paramref name="value" /> is bigger, than <paramref name="parameter" />, false otherwise.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.GridLengthToDoubleConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Double" />. Result is a value of the <see cref="P:System.Windows.GridLength.Value" /> type or
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, in case types dont match ("Auto", "*" or pixels amount) <paramref name="value" /> и <paramref name="parameter" /> or failure during method execution.
      </returns>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.GridLength" />.
        The results depends on the value of the following paremeter <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. A value of the parameter <paramref name="value" /> is ignored.
            </description></item><item><description>
              "*": A value is represented as a calculated part of the available space. A value of the part weight has to be set in the parameter <paramref name="value" />.
            </description></item><item><description>
              null: A value, measured in pixels, is returned A quantity of pixels has to be set in the parameter <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="T:Elysium.Converters.NumberPositiveToNegativeConverter">
      <summary>
        Changes number's sign to opposite.
      </summary>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes number's sign to opposite.
      </summary>
      <param name="value">
        A number. A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A number whose absolute value is equal to <paramref name="value" />, but with opposite sign.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes number's sign to opposite.
      </summary>
      <param name="value">
        A number. A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A number whose absolute value is equal to <paramref name="value" />, but with opposite sign.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.PercentToAngleConverter">
      <summary>
        Converts a percent of the full angle in a value of the angle.
      </summary>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a percent of the full angle in a value of the angle.
      </summary>
      <param name="value">
        A percent of the full angle. Has to be one of the following types: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the angle is the same type that <paramref name="value" /> is.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the angle in percent of the full angle.
      </summary>
      <param name="value">
        A value of the angle. Has to be one of the following types: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A percent of the full angle is the same type that <paramref name="value" /> is.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessConverter">
      <summary>
        Clears values of specified sides of the border
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Clears values of specified sides of the border
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to sides of the border, which have to be saved </param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, идентичное значению <paramref name="value" />, за исключением обнулённых краёв.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessPositiveToNegativeConverter">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        The value of the type <see cref="T:System.Windows.Thickness" />, which value for the any side of the border is equal to absolute <paramref name="value" />, but the sign is changed to opposite.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        The value of the type <see cref="T:System.Windows.Thickness" />, which value for the any side of the border is equal to absolute <paramref name="value" />, but the sign is changed to opposite.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessToDoubleConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.Thickness" /> into the type <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.Thickness" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        An average value of specified sides or all sides if <paramref name="parameter" />  = null.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom" or null. The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.Thickness" />. All sides of the border, specified in the  <paramref name="parameter" /> have a value <paramref name="value" />;
        all other sides have a value = 0; In case the parameter <paramref name="parameter" /> = null, all sides of the border have the value = <paramref name="value" />.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ApplicationBar" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.#ctor(Elysium.Controls.ApplicationBar)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ApplicationBar" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ApplicationBar" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ApplicationBar".
      </returns>
      <ensures>Being returned string is always "ApplicationBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns such a type of the control <see cref="T:Elysium.Controls.ApplicationBar" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>The being returned value is always AutomationControlType.Menu .</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.CommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.#ctor(Elysium.Controls.CommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.CommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.CommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "CommandButton".
      </returns>
      <ensures>Being returned string is always "CommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.CommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If a parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.Invoke">
      <summary>
        Sends a request for element's activation and initiates its only and unambiguous action.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The conrol is disabled.</exception>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer">
      <summary>
        It is a base class for providers of successors of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" /> for UI Automation technology.
      </summary>
      <invariant>"Owner" property is never equal null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.#ctor(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, for which the provider will be used.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, for which the provider will be used.
      </summary>
      <getter>
        <ensures>Value can't be null.</ensures>
      </getter>
      <value>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, for which the provider will be used.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button">AutomationControlType.Button</see>.
      </returns>
      <ensures>The being returned value is a value of AutomationControlType.Button .</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.DropDownCommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.#ctor(Elysium.Controls.DropDownCommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.DropDownCommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.DropDownCommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "DropDownCommandButton".
      </returns>
      <ensures>Being returned string is always "DropDownCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.DropDownCommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Expand">
      <summary>
        Shows the DropDown menu.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
      <exception cref="T:System.InvalidOperationException">No dropDown menu is set for this instance.</exception>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Collapse">
      <summary>
        Collapses the DropDown menu.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
      <exception cref="T:System.InvalidOperationException">No dropDown menu is set for this instance.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.ExpandCollapseState">
      <summary>Returns the state of the control (visible or collapsed).</summary>
      <summary>A state of the control (visible or collapsed).</summary>
    </member>
    <member name="T:Elysium.Controls.Automation.ProgressAutomationPeer">
      <summary>
        It is a provider for the successors of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" /> for UI Automation technology.
      </summary>
      <invariant>"Owner" property is never equal null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.#ctor(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, for which the provider will be used.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, for which the provider will be used.
      </summary>
      <getter>
        <ensures>Value can't be null.</ensures>
      </getter>
      <value>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, for which the provider will be used.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name for the successor <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ProgressBar".
      </returns>
      <ensures>Being returned string is always "ProgressBar"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">AutomationControlType.ProgressBar</see>.
      </returns>
      <ensures>The being returned value is a value of AutomationControlType.ProgressBar .</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />,
        and the state of the object-successor of the class<see cref="T:Elysium.Controls.Primitives.ProgressBase" /> is not equal <see cref="F:Elysium.Controls.ProgressState.Indeterminate" /> or <see cref="F:Elysium.Controls.ProgressState.Busy" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.IsReadOnly">
      <summary>Returns a value, which corresponds to whether the control value is read only or not </summary>
      <getter>
        <ensures>The being returned value is True.</ensures>
      </getter>
      <value>
        True, if the value is read only; False, if is not.
        "True" is always returned.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.LargeChange">
      <summary>
        Returns a value, which is added to the value of the property <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> or substracted from it, after a "big change" was done (for example, PAGE DOWN button was pressed)
      </summary>
      <getter>
        <ensures>The being returned value is Double.NAN.</ensures>
      </getter>
      <value>
        The "big change" value, which is supported by the control or<see cref="F:System.Double.NaN">Double.NaN</see>, if the control does not support this property.
        <see cref="F:System.Double.NaN">Double.NaN</see> is always returned, because the control does not support this property.
      </value>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.SmallChange">
      <summary>
        Returns a value, which is added to the value of the property <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> or substracted from it, after a "small change" was done (for example, DOWN ARROW button was pressed)
      </summary>
      <getter>
        <ensures>The being returned value is Double.NAN.</ensures>
      </getter>
      <value>
        The "small change" value, which is supported by the control or<see cref="F:System.Double.NaN">Double.NaN</see>, if the control does not support this property.
        <see cref="F:System.Double.NaN">Double.NaN</see> is always returned, because the control does not support this property.
      </value>
    </member>
    <member name="T:Elysium.Controls.Automation.SubmenuAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.Submenu" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.#ctor(Elysium.Controls.Submenu)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Submenu" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.Submenu" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "Submenu".
      </returns>
      <ensures>Being returned string is always "Submenu"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns such a type of the control <see cref="T:Elysium.Controls.Submenu" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
      <ensures>The being returned value is a value of AutomationControlType.Menu .</ensures>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ToggleCommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.#ctor(Elysium.Controls.ToggleCommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ToggleCommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ToggleCommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ToggleCommandButton".
      </returns>
      <ensures>Being returned string is always "ToggleCommandButton"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.ToggleCommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.Toggle">
      <summary>
        Toggles the state of the control.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.ToggleState">
      <summary>Returns a state of the control (from the number of states, in which the control can toggle)</summary>
      <value>
        One from the values of the enumeration <see cref="T:System.Windows.Automation.ToggleState" />.
      </value>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ToggleSwitch" /> for the UI Automation technology.
      </summary>
      <invariant>"Owner" property is never equal null.</invariant>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.#ctor(Elysium.Controls.ToggleSwitch)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ToggleSwitch" />, for which the provider will be used.
      </param>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.ToggleSwitch" />, for which the provider will be used.
      </summary>
      <getter>
        <ensures>Value can't be null.</ensures>
      </getter>
      <value>
        An instance of the control <see cref="T:Elysium.Controls.ToggleSwitch" />, for which the provider will be used.
      </value>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ToggleSwitch".
      </returns>
      <ensures>Being returned string is always "ToggleSwitch"</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the control <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider">AutomationControlType.Slider</see>.
      </returns>
      <ensures>The being returned value is a value of AutomationControlType.Slider .</ensures>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Toggle">
      <summary>
        Toggles the state of the control.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.ToggleState">
      <summary>Returns a state of the control (from the number of states, in which the control can toggle)</summary>
      <value>
        One from the values of the enumeration <see cref="T:System.Windows.Automation.ToggleState" />.
      </value>
    </member>
    <member name="T:Elysium.Controls.ApplicationBar">
      <summary>
        A control panel of the application.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.Dock">
      <summary>
        Gets or sets the algorithm of the control positioning inside the control panel of the application.
      </summary>
      <value>
        A value of the enumeration  <see cref="T:Elysium.Controls.ApplicationBarDock" />. The default value is <see cref="F:Elysium.Controls.ApplicationBarDock.Left" />ApplicationBarDock.Left
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.DockProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new CommandButton();
          var currentValue = ApplicationBar.GetDock(control);
          ApplicationBar.SetDock(control, ApplicationBarDock.Left);
        </code>
        <code lang="XAML">
          &lt;CommandButton metro:ApplicationBar.Dock="Left"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.DockProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property.
      </summary>
      <value>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetDock(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A docking algorithm.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetDock(System.Windows.UIElement,Elysium.Controls.ApplicationBarDock)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A docking algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.IsOpen">
      <summary>
        Gets or sets the value, that indicates whether the control panel is opened at the moment. The control panel is opened by mouse right-button click by default.
      </summary>
      <value>True, if the control panel is opened; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.IsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.IsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property changes.
      </summary>
      <param name="oldIsOpen">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </param>
      <param name="newIsOpen">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opening">
      <summary>
        The event is fired before the control panel is opened.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.OpeningEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnOpening(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Tunneling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpeningEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpening(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Opening" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closing">
      <summary>
        The event is fired before the control panel is closed.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.ClosingEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnClosing(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Tunneling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosingEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosing(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Closing" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opened">
      <summary>
        The event is fired after the control panel is opened.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.OpenedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnOpened(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpenedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Opened" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closed">
      <summary>
        The event is fired after the control panel is closed.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.ClosedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ApplicationBar.OnClosed(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Closed" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.StaysOpen">
      <summary>
        Gets or sets the value, which corresponds to whether the control panel of the application is closed due to the lost of the focus.
      </summary>
      <value>
        True, if the control panel is closed when the user presses the right mouse button again;
        False, if the control panel is closed due to the event of the mouse or the keyboard outside the control panel focus.
        The default value is True.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.StaysOpenProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.StaysOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnStaysOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property changes.
      </summary>
      <param name="oldStaysOpen">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </param>
      <param name="newStaysOpen">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.PreventsOpen">
      <summary>
        Gets or sets the value, which is corresponds to whether the control panel of the application can be opened after click of the right mouse button above the specified control.
      </summary>
      <value>
        True, if the control panel can be called by right-click on the specified control; False otherwise. The default value is True.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.PreventsOpenProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Grid();
          var currentValue = ApplicationBar.GetPreventsOpen(control);
          ApplicationBar.SetPreventsOpen(control, true);
        </code>
        <code lang="XAML">
          &lt;Grid metro:ApplicationBar.PreventsOpen="True"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.PreventsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetPreventsOpen(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A docking algorithm.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
      <ensures>The being returned value is positive.</ensures>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetPreventsOpen(System.Windows.UIElement,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A docking algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.TransitionMode">
      <summary>
        Gets or sets the value, which corresponds to such an animation, which is used when the control panel is closing/opening.
      </summary>
      <value>
        A value of the enumeration  <see cref="T:Elysium.Controls.ApplicationBarTransitionMode" />. The default value is <see cref="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">ApplicationBarTransitionMode.Slide</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ApplicationBar.TransitionModeProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.TransitionModeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnTransitionModeChanged(Elysium.Controls.ApplicationBarTransitionMode,Elysium.Controls.ApplicationBarTransitionMode)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property changes.
      </summary>
      <param name="oldTransitionMode">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </param>
      <param name="newTransitionMode">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.IsItemItsOwnContainerOverride(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetContainerForItemOverride">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ApplicationBarDock">
      <summary>
        Defines the position of the element inside the control <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Left">
      <summary>
        The control is docked to the left.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Right">
      <summary>
        The control is docked to the right.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarPanel">
      <summary>
        A panel, where childs of the class <see cref="T:Elysium.Controls.ApplicationBar" /> are placed.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ApplicationBarTransitionMode">
      <summary>
        Defines the animation of appearing and disappearing of the control <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.None">
      <summary>
        The animation is absent.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Fade">
      <summary>
        The control <see cref="T:Elysium.Controls.ApplicationBar" /> changes it's opacity from 0% to 100%.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">
      <summary>
        The control <see cref="T:Elysium.Controls.ApplicationBar" /> slowly appears out of the lowest side of the window.
      </summary>
    </member>
    <member name="T:Elysium.Controls.CommandButton">
      <summary>
        A command button.
      </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.DropDownCommandButton">
      <summary>
        A button with dropdown menu.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.Submenu">
      <summary>
        Gets or sets the dropdown menu.
      </summary>
      <value>Menu. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.SubmenuProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.SubmenuProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnSubmenuChanged(Elysium.Controls.Submenu,Elysium.Controls.Submenu)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property changes.
      </summary>
      <param name="oldSubmenu">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </param>
      <param name="newSubmenu">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.HasSubmenu">
      <summary>
        Returns a value, which corresponds to whether the dropdown is null.
      </summary>
      <value>
        True, if the value of the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property is not equal null, False otherwise. The default value is False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.HasSubmenuProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.HasSubmenuProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnHasSubmenuChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property changes.
      </summary>
      <param name="oldHasSubmenu">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </param>
      <param name="newHasSubmenu">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen">
      <summary>
        Gets or sets the value, that indicates whether the dropdown menu is opened at the moment.
      </summary>
      <value>True, if the menu is opened; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.IsDropDownOpenProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.IsDropDownOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnIsDropDownOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property changes.
      </summary>
      <param name="oldIsDropDownOpen">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </param>
      <param name="newIsDropDownOpen">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownOpened">
      <summary>
        An event is fired when the dropdown menu is opened.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownOpened(System.EventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownOpened" /> routed event raises.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownClosed">
      <summary>
        An event is fired when the dropdown menu is closed.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownClosed(System.EventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownClosed" /> routed event raises.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.DropDownDirection">
      <summary>
        Gets or sets the direction of dropdown menu.
      </summary>
      <value>
        A value of the enumeration  <see cref="T:Elysium.Controls.DropDownDirection" />. The default value is <see cref="F:Elysium.Controls.DropDownDirection.Up">DropDownDirection.Up</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.DropDownDirectionProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.DropDownDirectionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.DropDownDirection" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.DropDownCommandButton.DropDownDirection" /> dependency property.
      </value>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight">
      <summary>
        Gets or sets the maximum size of dropdown menu.
      </summary>
      <value>A maximum size of a dropdown menu. The default value is 300px.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.DropDownCommandButton.MaxDropDownHeightProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.MaxDropDownHeightProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.DropDownDirection">
      <summary>
        Defines, on the which side of the <see cref="T:Elysium.Controls.DropDownCommandButton" /> the dropDown menu is located.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Up">
      <summary>
        A dropDown menu is on the top.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Down">
      <summary>
        A dropDown menu is at the bottom.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ToggleCommandButton">
      <summary>
        A command button with three possible states: "checked", "unchecked", "indeterminate".
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsChecked">
      <summary>
        Gets or sets the value, which corresponds to whether the command button is checked.
      </summary>
      <value>True, if the button is checked; False, if the button is unchecked; null otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIsCheckedChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property changes.
      </summary>
      <param name="oldIsChecked">
        An old value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </param>
      <param name="newIsChecked">
        A new value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Checked">
      <summary>
        An event is fired when the button changes its state to "checked".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.CheckedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.CheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Unchecked">
      <summary>
        An event is fired when the button changes its state to "unchecked".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Indeterminate">
      <summary>
        An event is fired when the button changes its state to "indeterminate".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsThreeState">
      <summary>
        Gets or sets the value, which corresponds to the number of supported states (2 or 3).
      </summary>
      <value>True, if the button supports 3 states, False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIsThreeStateChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property changes.
      </summary>
      <param name="oldIsThreeState">
        An old value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property.
      </param>
      <param name="newIsThreeState">
        A new value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnClick">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnToggle">
      <inheritdoc cref="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle" />
    </member>
    <member name="T:Elysium.Controls.Primitives.CommandButtonBase">
      <summary>
        A base class for the command buttons.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.Header">
      <summary>
        Gets or sets the data for the header of the control.
      </summary>
      <value>Header's object. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property changes.
      </summary>
      <param name="oldHeader">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </param>
      <param name="newHeader">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader">
      <summary>
        Returns a value, which corresponds to whether the header is null.
      </summary>
      <value>
        True, if the value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property is not equal null, False otherwise. The default value is True.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHasHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property changes.
      </summary>
      <param name="oldHasHeader">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </param>
      <param name="newHasHeader">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat">
      <summary>
        Gets or sets combined string, which defines formatting of the header, if the header is displayed as a string.
      </summary>
      <value>Combined string, which defines formatting of the header, if the header is displayed as a string. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </param>
      <param name="newHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate">
      <summary>
        Gets or sets such a template, which is used for displaying the content of the header of the control.
      </summary>
      <value>A template, which is used for displaying the content of the header of the control. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </param>
      <param name="newHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header.
      </summary>
      <value>An instance of the selector template. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressBar">
      <summary>
        A progress bar.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ProgressBar.Orientation">
      <summary>
        Gets or sets the value that indicates the orientation of the progress bar.
      </summary>
      <value>
        A value of the enumeration <see cref="T:System.Windows.Controls.Orientation" />. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal">Orientation.Horizontal</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ProgressBar.OrientationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ProgressBar.OrientationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property changes.
      </summary>
      <param name="oldOrientation">
        An old value of the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </param>
      <param name="newOrientation">
        A new value of the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressRing">
      <summary>
        A progress ring.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ProgressRing.Angle">
      <summary>
        Gets or sets the value of the angle for the child elements of the indicator.
      </summary>
      <value>
        A value of the angle for the child elements of the indicator or -1d, if the child element is outside the circle. The default value is -1d.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ProgressRing.AngleProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Ellipse();
          var currentValue = ProgressRing.GetAngle(control);
          ProgressRing.SetAngle(control, 180d);
        </code>
        <code lang="XAML">
          &lt;Ellipse metro:ProgressRing.Angle="180"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.ProgressRing.AngleProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.GetAngle(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the angle for the child element of the control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.SetAngle(System.Windows.UIElement,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the angle for the child element of the control.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.MeasureOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ProgressRing.ArrangeOverride(System.Windows.Size)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ProgressRing.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ProgressState">
      <summary>
        Defines the state of the progressBar (one of the controls, which was inherited from <see cref="T:Elysium.Controls.Primitives.ProgressBase" />).
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Normal">
      <summary>
        Normal state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Indeterminate">
      <summary>
        Indeterminate state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Busy">
      <summary>
        Busy state.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Primitives.ProgressBase">
      <summary>
        A base class for progress bars.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.Percent">
      <summary>
        Returns a value, which corresponds to the percentage of progress bar completion.
      </summary>
      <value>
        A percentage of the progress bar completion, or <see cref="F:System.Double.NaN">Double.NaN</see>, if the progress bar is in "indeterminate" state or busy. The default value is 0.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.PercentProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.PercentProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnPercentChanged(System.Double,System.Double)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property changes.
      </summary>
      <param name="oldPercent">
        An old value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </param>
      <param name="newPercent">
        A new value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnValueChanged(System.Double,System.Double)">
      <inheritdoc />
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.State">
      <summary>
        Gets or sets the value that indicates current state of the progress bar.
      </summary>
      <value>
        A value of the enumeration <see cref="T:Elysium.Controls.ProgressState" />. The default value is <see cref="F:Elysium.Controls.ProgressState.Normal">ProgressState.Normal</see>.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.StateProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.StateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnStateChanged(Elysium.Controls.ProgressState,Elysium.Controls.ProgressState)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property changes.
      </summary>
      <param name="oldState">
        An old value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </param>
      <param name="newState">
        A new value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation">
      <summary>
        Gets or sets the value, which is an animation storyboard during the "indeterminate" state.
      </summary>
      <value>Animation storyboard. The default value is an instance of the defalut animation storyboard.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation" /> dependency property.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning">
      <summary>
        Gets or sets (only for inheritors) the value, which corresponds to whether the animation of the "indeterminate" state is started.
      </summary>
      <value>True, if the animation of the "indeterminate" state is started; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" /> dependency property.
      </value>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningPropertyKey">
      <summary>
        Identifies a read-only dependency property <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </summary>
      <value>
        Identifier for the dependency property with special access rights for writing <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation">
      <summary>
        Gets or sets the value, which is an animation storyboard during the "busy" state.
      </summary>
      <value>Animation storyboard. The default value is an instance of the defalut animation storyboard.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.BusyAnimationProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.BusyAnimationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation" /> dependency property.
      </value>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning">
      <summary>
        Gets or sets  the value, which corresponds to whether the animation of the "busy" state is started.
      </summary>
      <value>True, if the animation of the "busy" state is started; otherwise False. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" /> dependency property.
      </value>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningPropertyKey">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" /> dependency property.
      </summary>
      <value>
        Identifier for the dependency property with special access rights for writing <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" />.
      </value>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating">
      <summary>
        An event is fired before the procedure of updating animation states is started.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatingEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdating(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Tunneling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatingEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated">
      <summary>
        An event is fired after the procedure of updating animation states is finished.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdated(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdated(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.Submenu">
      <summary>
        A sub menu.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Submenu.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.ToggleSwitch">
      <summary>
        A toggle switch.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsChecked">
      <summary>
        Gets or sets the value, which corresponds to whether the toggle switch is checked.
      </summary>
      <value>True, if the toggle switch is checked; False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.IsCheckedProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsCheckedProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsCheckedChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property changes.
      </summary>
      <param name="oldIsChecked">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </param>
      <param name="newIsChecked">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Checked">
      <summary>
        An event is fired when the toggle switch changes its state to "checked".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.CheckedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnChecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.CheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.Checked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Unchecked">
      <summary>
        An event is fired when the toggle switch changes its state to "unchecked".
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.UncheckedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnUnchecked(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.UncheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsSwitching">
      <summary>
        Returns a value, which corresponds to whether the toggle switch is changing it's value at the moment.
      </summary>
      <value>True, if the toggle switch is changing it's value at the moment; False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.IsSwitchingProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsSwitchingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsSwitchingChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property changes.
      </summary>
      <param name="oldIsSwitching">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </param>
      <param name="newIsSwitching">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchStarted">
      <summary>
        An event is fired before the switch changes it's state.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.SwitchStartedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnSwitchStarted(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchStartedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchStarted(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchCompleted">
      <summary>
        An event is fired after the switch changed it's state.
      </summary>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.SwitchCompletedEvent" />
            </description>
          </item>
          <item>
            <term>Associated method</term>
            <description>
              <see cref="M:Elysium.Controls.ToggleSwitch.OnSwitchCompleted(System.Windows.RoutedEventArgs)" />
            </description>
          </item>
          <item>
            <term>Routing strategy</term>
            <description>Bubbling</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchCompletedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </summary>
      <value>
        An identifier of the routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchCompleted(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeader">
      <summary>
        Gets or sets data used to fill the header of switch when it is in "checked" state.
      </summary>
      <value>A header's object of the switch in "checked" state. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property changes.
      </summary>
      <param name="oldOnHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </param>
      <param name="newOnHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOnHeader">
      <summary>
        Returns a value, which corresponds to whether the header during "checked" state of the switch is null.
      </summary>
      <value>
        True, if the value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property is not equal null, False otherwise. The default value is False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.HasOnHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOnHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOnHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property changes.
      </summary>
      <param name="oldHasOnHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </param>
      <param name="newHasOnHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat">
      <summary>
        Gets or sets a combined string, which defines formatting of the header when the switch is in "checked" state, if the header is displayed as a string.
      </summary>
      <value>a combined string, which defines formatting of the header when the switch is in "checked" state, if the header is displayed as a string. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </param>
      <param name="newOnHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate">
      <summary>
        Gets or sets the template used to displaying the header of the switch when it is in "checked" state.
      </summary>
      <value>A template used to displaying the header of the switch when it is in "checked" state. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </param>
      <param name="newOnHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header if the switch is in "checked" state.
      </summary>
      <value>An instance of the selector template. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newOnHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeader">
      <summary>
        Gets or sets data used to fill the header of switch when it is in "unchecked" state.
      </summary>
      <value>A header's object of the switch in "unchecked" state. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property changes.
      </summary>
      <param name="oldOffHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </param>
      <param name="newOffHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOffHeader">
      <summary>
        Returns a value, which corresponds to whether the header during "unchecked" state of the switch is null.
      </summary>
      <value>
        True, if the value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property is not equal null, False otherwise. The default value is False.
      </value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.HasOffHeaderProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOffHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOffHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property changes.
      </summary>
      <param name="oldHasOffHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </param>
      <param name="newHasOffHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat">
      <summary>
        Gets or sets a combined string, which defines formatting of the header when the switch is in "unchecked" state, if the header is displayed as a string.
      </summary>
      <value>a combined string, which defines formatting of the header when the switch is in "unchecked" state, if the header is displayed as a string. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderStringFormatProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </param>
      <param name="newOffHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate">
      <summary>
        Gets or sets the template used to displaying the header of the switch when it is in "unchecked" state.
      </summary>
      <value>A template used to displaying the header of the switch when it is in "uchecked" state. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </param>
      <param name="newOffHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header if the switch is in "unchecked" state.
      </summary>
      <value>An instance of the selector template. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelectorProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" />
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newOffHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnCreateAutomationPeer">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="T:Elysium.Controls.Window">
      <summary>
        A base class for "Metro" style windows.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsMainWindow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window is main. Application can have only one main window.
      </summary>
      <value>True, if the window is main, False otherwise.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsMainWindowProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
        This property can be applied to any class-successor of <see cref="T:System.Windows.Window">System.Windows.Window</see>.
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetIsMainWindow(control);
          Window.SetIsMainWindow(control, false);
        </code>
        <code lang="XAML">
          &lt;Window metro:Window.IsMainWindow="False"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.IsMainWindowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsMainWindow(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A value, which corresponds to whether the specified window is main.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsMainWindow(System.Windows.Window,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A value which corresponds to whether the specified window is main.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.Window.Progress">
      <summary>
        Gets or sets the value that indicates a percentage of task completing by the window.
      </summary>
      <value>The value that indicates a percentage of task completing by the window. The default value is 0d.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ProgressProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.ProgressProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnProgressChanged(System.Double,System.Double)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property changes.
      </summary>
      <param name="oldProgress">
        An old value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
      <param name="newProgress">
        A new value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.IsBusy">
      <summary>
        Gets or sets the value, that indicates whether the window is in "busy" state at the moment.
      </summary>
      <value>True, if the window is in "busy" state at the moment; False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsBusyProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.IsBusyProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnIsBusyChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property changes.
      </summary>
      <param name="oldIsBusy">
        An old value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
      <param name="newIsBusy">
        A new value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.HasDropShadow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window has a shadow.
      </summary>
      <value>True, if the window has a shadow, False otherwise. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.HasDropShadowProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault" />
            </description>
          </item>
        </list>
        The value from system settings is used by default (it is set in default style).
        While using OS Windows versions before Windows Vista this property is always false.
      </remarks>
    </member>
    <member name="F:Elysium.Controls.Window.HasDropShadowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.OnHasDropShadowChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property changes.
      </summary>
      <param name="oldHasDropShadow">
        An old value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
      <param name="newHasDropShadow">
        A new value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.Window.ApplicationBar">
      <summary>
        Gets or sets an application bar for the window.
      </summary>
      <value>An application bar for the window. The default value is null.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.ApplicationBarProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Window();
          var currentValue = Window.GetApplicationBar(control);
          Window.SetApplicationBar(control, new ApplicationBar());
        </code>
        <code lang="XAML">
          &lt;metro:Window.ApplicationBar&gt;
          &lt;metro:ApplicationBar&gt;
          ...
          &lt;/metro:ApplicationBar&gt;
          &lt;/metro:Window.ApplicationBar&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.ApplicationBarProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetApplicationBar(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>An application bar for the window.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetApplicationBar(System.Windows.Window,Elysium.Controls.ApplicationBar)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">An application bar for the window.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="P:Elysium.Controls.Window.IsApplicationBarHost">
      <summary>
        Gets or sets the value, which corresponds to whether the specified control is a host-object for the application bar.
      </summary>
      <value>Corresponds to whether the specified control is a host-object for the application bar. The default value is false.</value>
      <remarks>
        <list type="table">
          <item>
            <term>Identifier field</term>
            <description>
              <see cref="F:Elysium.Controls.Window.IsApplicationBarHostProperty" />
            </description>
          </item>
          <item>
            <term>Metadata</term>
            <description>
              <see cref="F:System.Windows.FrameworkPropertyMetadataOptions.None" />
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="C#">
          var control = new Decorator();
          var currentValue = Window.GetIsApplicationBarHost(control);
          Window.SetIsApplicationBarHost(control, true);
        </code>
        <code lang="XAML">
          &lt;Decorator metro:Window.IsApplicationBarHost="True"/&gt;
        </code>
      </example>
    </member>
    <member name="F:Elysium.Controls.Window.IsApplicationBarHostProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property.
      </summary>
      <value>
        Identifier for the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property.
      </value>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsApplicationBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Corresponds to whether the specified control is a host-object for the application bar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsApplicationBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified item of the control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Corresponds to whether the specified control is a host-object for the application bar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <requires exception="T:System.ArgumentNullException">obj != null</requires>
    </member>
    <member name="M:Elysium.Controls.Window.OnSourceInitialized(System.EventArgs)">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Window.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:Elysium.Controls.Window.ShowDialog">
      <inheritdoc cref="M:System.Windows.Window.ShowDialog" />
    </member>
    <member name="T:Elysium.Controls.WindowCommands">
      <summary>
        Contains several basic functions for managint a window of the type <see cref="T:Elysium.Controls.Window" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Minimize">
      <summary>
        Returns a value, which contains the command for minimizing the window.
      </summary>
      <value>A command for minimizing the window.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Maximize">
      <summary>
        Returns a value, which contains the command for maximizing the window.
      </summary>
      <value>A command for maximizing the window.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Restore">
      <summary>
        Returns a value, which contains the command for returning the window into normal state.
      </summary>
      <value>A command for returning the window into normal state.</value>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Close">
      <summary>
        Returns a value, which contains the command for closing the window.
      </summary>
      <value>A command for closing the window.</value>
    </member>
    <member name="T:System.Collections.ObjectModel.IObservableDictionary`2">
      <inheritdoc cref="T:System.Collections.Generic.IDictionary`2" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Item(`0)">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Keys">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Keys" />
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Values">
      <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Values" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.ContainsKey(`0)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Add(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Remove(`0)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.TryGetValue(`0,`1@)">
      <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2">
      <inheritdoc cref="T:System.Collections.Generic.Dictionary`2" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Add(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Clear">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Clear" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsKey(`0)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsValue(`1)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Remove(`0)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.TryGetValue(`0,`1@)">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Count">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Count" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Item(`0)">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Keys">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Keys" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Values">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Values" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Comparer">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Comparer" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetEnumerator">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.GetEnumerator" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnDeserialization(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.BlockReentrancy">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.CheckReentrancy">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.PropertyChanged">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.CollectionChanged">
      <inheritdoc cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnPropertyChanged(System.String)">
      <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <param name="propertyName">A name of the property, which was changed.</param>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator">
      <inheritdoc cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.Current">
      <inheritdoc cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.MoveNext">
      <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableKeyValuePair`2">
      <inheritdoc cref="T:System.Collections.Generic.KeyValuePair`2" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1)">
      <inheritdoc cref="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1,System.Collections.Generic.IEqualityComparer{`0})">
      <inheritdoc cref="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)" />
      <param name="comparer">
        An implemetion <see cref="T:System.Collections.Generic.IEqualityComparer`1" />,
        which should be used while comparing keys, or null,
        if for the current key type default implemention <see cref="T:System.Collections.Generic.EqualityComparer`1" />
        has to be used.
      </param>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Key">
      <inheritdoc cref="P:System.Collections.Generic.KeyValuePair`2.Key" />
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Value">
      <summary>
        Gets or sets a value in key-value pair.
      </summary>
      <value>A value from a key-value pair.</value>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanging">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanged">
      <inheritdoc cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.GetHashCode">
      <inheritdoc />
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.ToString">
      <inheritdoc />
    </member>
  </members>
</doc>