<?xml version="1.0" encoding="utf-8" ?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="..\Documentation\Documentation.xsd">
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <type name="T:Elysium.Manager">
      <summary>
        Represents the class that controls theme's basic settings.
      </summary>
    </type>
    <property name="P:Elysium.Manager.DefaultTheme">
      <summary>
        Returns default theme type.
      </summary>
      <value>
        One of the values of the enumeration <see cref="T:Elysium.Theme"/>
      </value>
    </property>
    <property name="P:Elysium.Manager.DefaultAccentBrush">
      <summary>
        Returns a brush with solid filling, which contains a default accent color.
      </summary>
      <value>A brush with solid filling.</value>
    </property>
    <property name="P:Elysium.Manager.DefaultContrastBrush">
      <summary>
        Returns a brush with solid filling, which contains a default contrast color (contrast to accent).
      </summary>
      <value>A brush with solid filling.</value>
    </property>
    <method name="M:Elysium.Manager.TryGetTheme(System.Windows.FrameworkElement,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Retunrs such a theme type, which is actual for the control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>A theme type for the control.</returns>
    </method>
    <method name="M:Elysium.Manager.TryGetTheme(System.Windows.Application,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetTheme(System.Windows.Application)">
      <summary>
        Returns such a theme type, which is actual for the application.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <returns>A theme type for the application.</returns>
    </method>
    <method name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a value of the accent color for the specified control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>An accent color for the control.</returns>
    </method>
    <method name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetAccentBrush(System.Windows.Application)">
      <summary>
        Returns a value of the accent color for the application.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <returns>An accent color for the application.</returns>
    </method>
    <method name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the contrast color (contrast to accent color) for the control, using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A constrast color (contrast to accent color) for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a contrast color (contrast to accent color)  for the control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </method>
    <method name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control by calling safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A contrast color (contrast to accent color) for the specified control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </method>
    <method name="M:Elysium.Manager.GetContrastBrush(System.Windows.Application)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </method>
    <method name="M:Elysium.Manager.Apply(System.Windows.Application)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <remarks>
        Calling this method is equal to calling base method "Apply" with the value "null" for the parameters "theme","accentBrush" and "contrastBrush"
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application"/> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </method>
    <method name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme"/>, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number">
          <item>If the parameter was set, old value will be used.</item>
          <item>If the parameter was not set, default value will be used.</item>
        </list>
        Calling this method is equal to calling base method "Apply" with the value "null" for the parameters "theme","accentBrush" and "contrastBrush"
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application"/> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </method>
    <method name="M:Elysium.Manager.Apply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number">
          <item>If the parameter was set, old value will be used.</item>
          <item>If the parameter was not set, default value will be used.</item>
        </list>
        Calling this method is equal to calling base method "apply" with "theme" parameter = null.
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application"/> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </method>
    <method name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme"/>, or null.
      </param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <remarks>
        If the parameter is null:
        <list type="number">
          <item>If the parameter was set, old value will be used.</item>
          <item>If the parameter was not set, default value will be used.</item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application"/> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </method>
    <method name="M:Elysium.Manager.Remove(System.Windows.Application)">
      <summary>
        Disables the theme in the specified application.
      </summary>
      <param name="application">An instance of the application, whose theme is being disabled.</param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application"/> is null.
      </exception>
      <requires exception="T:System.ArgumentNullException">application != null</requires>
    </method>
  </members>
</doc>